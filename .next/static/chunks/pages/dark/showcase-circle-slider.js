/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/dark/showcase-circle-slider"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fahmed%2FOthers%2FPledge-Grow%2Fsrc%2Fpages%2Fdark%2Fshowcase-circle-slider%2Findex.jsx&page=%2Fdark%2Fshowcase-circle-slider!":
/*!*******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fahmed%2FOthers%2FPledge-Grow%2Fsrc%2Fpages%2Fdark%2Fshowcase-circle-slider%2Findex.jsx&page=%2Fdark%2Fshowcase-circle-slider! ***!
  \*******************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/dark/showcase-circle-slider\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/dark/showcase-circle-slider/index.jsx */ \"./src/pages/dark/showcase-circle-slider/index.jsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/dark/showcase-circle-slider\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZob21lJTJGYWhtZWQlMkZPdGhlcnMlMkZQbGVkZ2UtR3JvdyUyRnNyYyUyRnBhZ2VzJTJGZGFyayUyRnNob3djYXNlLWNpcmNsZS1zbGlkZXIlMkZpbmRleC5qc3gmcGFnZT0lMkZkYXJrJTJGc2hvd2Nhc2UtY2lyY2xlLXNsaWRlciEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyw0R0FBbUQ7QUFDMUU7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzBkZWIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9kYXJrL3Nob3djYXNlLWNpcmNsZS1zbGlkZXJcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCIuL3NyYy9wYWdlcy9kYXJrL3Nob3djYXNlLWNpcmNsZS1zbGlkZXIvaW5kZXguanN4XCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9kYXJrL3Nob3djYXNlLWNpcmNsZS1zbGlkZXJcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fahmed%2FOthers%2FPledge-Grow%2Fsrc%2Fpages%2Fdark%2Fshowcase-circle-slider%2Findex.jsx&page=%2Fdark%2Fshowcase-circle-slider!\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    PrefetchKind: function() {\n        return PrefetchKind;\n    },\n    ACTION_REFRESH: function() {\n        return ACTION_REFRESH;\n    },\n    ACTION_NAVIGATE: function() {\n        return ACTION_NAVIGATE;\n    },\n    ACTION_RESTORE: function() {\n        return ACTION_RESTORE;\n    },\n    ACTION_SERVER_PATCH: function() {\n        return ACTION_SERVER_PATCH;\n    },\n    ACTION_PREFETCH: function() {\n        return ACTION_PREFETCH;\n    },\n    ACTION_FAST_REFRESH: function() {\n        return ACTION_FAST_REFRESH;\n    },\n    ACTION_SERVER_ACTION: function() {\n        return ACTION_SERVER_ACTION;\n    }\n});\nconst ACTION_REFRESH = \"refresh\";\nconst ACTION_NAVIGATE = \"navigate\";\nconst ACTION_RESTORE = \"restore\";\nconst ACTION_SERVER_PATCH = \"server-patch\";\nconst ACTION_PREFETCH = \"prefetch\";\nconst ACTION_FAST_REFRESH = \"fast-refresh\";\nconst ACTION_SERVER_ACTION = \"server-action\";\nvar PrefetchKind;\n(function(PrefetchKind) {\n    PrefetchKind[\"AUTO\"] = \"auto\";\n    PrefetchKind[\"FULL\"] = \"full\";\n    PrefetchKind[\"TEMPORARY\"] = \"temporary\";\n})(PrefetchKind || (PrefetchKind = {}));\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=router-reducer-types.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JvdXRlci1yZWR1Y2VyL3JvdXRlci1yZWR1Y2VyLXR5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FTTjtBQUNBLFNBQVNTLFFBQVFDLE1BQU0sRUFBRUMsR0FBRyxFQUFFO0lBQzFCLElBQUksSUFBSUMsUUFBUUQsSUFBSWYsT0FBT0MsY0FBYyxDQUFDYSxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZLElBQUk7UUFDaEJDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFYLFNBQVM7SUFDYkcsY0FBYyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQUMsZ0JBQWdCLFdBQVc7UUFDdkIsT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUIsV0FBVztRQUN4QixPQUFPQTtJQUNYO0lBQ0FDLGdCQUFnQixXQUFXO1FBQ3ZCLE9BQU9BO0lBQ1g7SUFDQUMscUJBQXFCLFdBQVc7UUFDNUIsT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUIsV0FBVztRQUN4QixPQUFPQTtJQUNYO0lBQ0FDLHFCQUFxQixXQUFXO1FBQzVCLE9BQU9BO0lBQ1g7SUFDQUMsc0JBQXNCLFdBQVc7UUFDN0IsT0FBT0E7SUFDWDtBQUNKO0FBQ0EsTUFBTU4saUJBQWlCO0FBQ3ZCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxpQkFBaUI7QUFDdkIsTUFBTUMsc0JBQXNCO0FBQzVCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxzQkFBc0I7QUFDNUIsTUFBTUMsdUJBQXVCO0FBQzdCLElBQUlQO0FBQ0gsVUFBU0EsWUFBWSxFQUFFO0lBQ3BCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0lBQ3ZCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0lBQ3ZCQSxZQUFZLENBQUMsWUFBWSxHQUFHO0FBQ2hDLEdBQUdBLGdCQUFpQkEsQ0FBQUEsZUFBZSxDQUFDO0FBRXBDLElBQUksQ0FBQyxPQUFPSCxRQUFRaUIsT0FBTyxLQUFLLGNBQWUsT0FBT2pCLFFBQVFpQixPQUFPLEtBQUssWUFBWWpCLFFBQVFpQixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9qQixRQUFRaUIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS3BCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUWlCLE9BQU8sRUFBRSxjQUFjO1FBQUVoQixPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT3FCLE1BQU0sQ0FBQ25CLFFBQVFpQixPQUFPLEVBQUVqQjtJQUMvQkUsT0FBT0YsT0FBTyxHQUFHQSxRQUFRaUIsT0FBTztBQUNsQyxDQUFDLENBRUQsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcm91dGVyLXJlZHVjZXIvcm91dGVyLXJlZHVjZXItdHlwZXMuanM/NjU3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIFByZWZldGNoS2luZDogbnVsbCxcbiAgICBBQ1RJT05fUkVGUkVTSDogbnVsbCxcbiAgICBBQ1RJT05fTkFWSUdBVEU6IG51bGwsXG4gICAgQUNUSU9OX1JFU1RPUkU6IG51bGwsXG4gICAgQUNUSU9OX1NFUlZFUl9QQVRDSDogbnVsbCxcbiAgICBBQ1RJT05fUFJFRkVUQ0g6IG51bGwsXG4gICAgQUNUSU9OX0ZBU1RfUkVGUkVTSDogbnVsbCxcbiAgICBBQ1RJT05fU0VSVkVSX0FDVElPTjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBQcmVmZXRjaEtpbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUHJlZmV0Y2hLaW5kO1xuICAgIH0sXG4gICAgQUNUSU9OX1JFRlJFU0g6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQUNUSU9OX1JFRlJFU0g7XG4gICAgfSxcbiAgICBBQ1RJT05fTkFWSUdBVEU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQUNUSU9OX05BVklHQVRFO1xuICAgIH0sXG4gICAgQUNUSU9OX1JFU1RPUkU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQUNUSU9OX1JFU1RPUkU7XG4gICAgfSxcbiAgICBBQ1RJT05fU0VSVkVSX1BBVENIOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEFDVElPTl9TRVJWRVJfUEFUQ0g7XG4gICAgfSxcbiAgICBBQ1RJT05fUFJFRkVUQ0g6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQUNUSU9OX1BSRUZFVENIO1xuICAgIH0sXG4gICAgQUNUSU9OX0ZBU1RfUkVGUkVTSDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBBQ1RJT05fRkFTVF9SRUZSRVNIO1xuICAgIH0sXG4gICAgQUNUSU9OX1NFUlZFUl9BQ1RJT046IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQUNUSU9OX1NFUlZFUl9BQ1RJT047XG4gICAgfVxufSk7XG5jb25zdCBBQ1RJT05fUkVGUkVTSCA9IFwicmVmcmVzaFwiO1xuY29uc3QgQUNUSU9OX05BVklHQVRFID0gXCJuYXZpZ2F0ZVwiO1xuY29uc3QgQUNUSU9OX1JFU1RPUkUgPSBcInJlc3RvcmVcIjtcbmNvbnN0IEFDVElPTl9TRVJWRVJfUEFUQ0ggPSBcInNlcnZlci1wYXRjaFwiO1xuY29uc3QgQUNUSU9OX1BSRUZFVENIID0gXCJwcmVmZXRjaFwiO1xuY29uc3QgQUNUSU9OX0ZBU1RfUkVGUkVTSCA9IFwiZmFzdC1yZWZyZXNoXCI7XG5jb25zdCBBQ1RJT05fU0VSVkVSX0FDVElPTiA9IFwic2VydmVyLWFjdGlvblwiO1xudmFyIFByZWZldGNoS2luZDtcbihmdW5jdGlvbihQcmVmZXRjaEtpbmQpIHtcbiAgICBQcmVmZXRjaEtpbmRbXCJBVVRPXCJdID0gXCJhdXRvXCI7XG4gICAgUHJlZmV0Y2hLaW5kW1wiRlVMTFwiXSA9IFwiZnVsbFwiO1xuICAgIFByZWZldGNoS2luZFtcIlRFTVBPUkFSWVwiXSA9IFwidGVtcG9yYXJ5XCI7XG59KShQcmVmZXRjaEtpbmQgfHwgKFByZWZldGNoS2luZCA9IHt9KSk7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci1yZWR1Y2VyLXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsIlByZWZldGNoS2luZCIsIkFDVElPTl9SRUZSRVNIIiwiQUNUSU9OX05BVklHQVRFIiwiQUNUSU9OX1JFU1RPUkUiLCJBQ1RJT05fU0VSVkVSX1BBVENIIiwiQUNUSU9OX1BSRUZFVENIIiwiQUNUSU9OX0ZBU1RfUkVGUkVTSCIsIkFDVElPTl9TRVJWRVJfQUNUSU9OIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getDomainLocale\", ({\n    enumerable: true,\n    get: function() {\n        return getDomainLocale;\n    }\n}));\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGSCxtREFBa0Q7SUFDOUNJLFlBQVksSUFBSTtJQUNoQkMsS0FBSyxXQUFXO1FBQ1osT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLFdBQVdDLE1BQWtDLElBQUk7QUFDdkQsU0FBU0YsZ0JBQWdCSyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxhQUFhLEVBQUU7SUFDM0QsSUFBSU4sS0FBK0IsRUFBRSxFQVdwQyxNQUFNO1FBQ0gsT0FBTyxLQUFLO0lBQ2hCLENBQUM7QUFDTDtBQUVBLElBQUksQ0FBQyxPQUFPTixRQUFReUIsT0FBTyxLQUFLLGNBQWUsT0FBT3pCLFFBQVF5QixPQUFPLEtBQUssWUFBWXpCLFFBQVF5QixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU96QixRQUFReUIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNySzVCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUXlCLE9BQU8sRUFBRSxjQUFjO1FBQUV4QixPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBTzZCLE1BQU0sQ0FBQzNCLFFBQVF5QixPQUFPLEVBQUV6QjtJQUMvQjRCLE9BQU81QixPQUFPLEdBQUdBLFFBQVF5QixPQUFPO0FBQ2xDLENBQUMsQ0FFRCw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvZ2V0LWRvbWFpbi1sb2NhbGUuanM/NWMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldERvbWFpbkxvY2FsZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0RG9tYWluTG9jYWxlO1xuICAgIH1cbn0pO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8IFwiXCI7XG5mdW5jdGlvbiBnZXREb21haW5Mb2NhbGUocGF0aCwgbG9jYWxlLCBsb2NhbGVzLCBkb21haW5Mb2NhbGVzKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplTG9jYWxlUGF0aCA9IHJlcXVpcmUoXCIuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aFwiKS5ub3JtYWxpemVMb2NhbGVQYXRoO1xuICAgICAgICBjb25zdCBkZXRlY3REb21haW5Mb2NhbGUgPSByZXF1aXJlKFwiLi9kZXRlY3QtZG9tYWluLWxvY2FsZVwiKS5kZXRlY3REb21haW5Mb2NhbGU7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGxvY2FsZSB8fCBub3JtYWxpemVMb2NhbGVQYXRoKHBhdGgsIGxvY2FsZXMpLmRldGVjdGVkTG9jYWxlO1xuICAgICAgICBjb25zdCBkb21haW4gPSBkZXRlY3REb21haW5Mb2NhbGUoZG9tYWluTG9jYWxlcywgdW5kZWZpbmVkLCB0YXJnZXQpO1xuICAgICAgICBpZiAoZG9tYWluKSB7XG4gICAgICAgICAgICBjb25zdCBwcm90byA9IFwiaHR0cFwiICsgKGRvbWFpbi5odHRwID8gXCJcIiA6IFwic1wiKSArIFwiOi8vXCI7XG4gICAgICAgICAgICBjb25zdCBmaW5hbExvY2FsZSA9IHRhcmdldCA9PT0gZG9tYWluLmRlZmF1bHRMb2NhbGUgPyBcIlwiIDogXCIvXCIgKyB0YXJnZXQ7XG4gICAgICAgICAgICByZXR1cm4gXCJcIiArIHByb3RvICsgZG9tYWluLmRvbWFpbiArIGJhc2VQYXRoICsgZmluYWxMb2NhbGUgKyBwYXRoO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0RG9tYWluTG9jYWxlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJsb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVxdWlyZSIsImRldGVjdERvbWFpbkxvY2FsZSIsInRhcmdldCIsImRldGVjdGVkTG9jYWxlIiwiZG9tYWluIiwidW5kZWZpbmVkIiwicHJvdG8iLCJodHRwIiwiZmluYWxMb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/get-domain-locale.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nconst _resolvehref = __webpack_require__(/*! ../shared/lib/router/utils/resolve-href */ \"./node_modules/next/dist/shared/lib/router/utils/resolve-href.js\");\nconst _islocalurl = __webpack_require__(/*! ../shared/lib/router/utils/is-local-url */ \"./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _formaturl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _utils = __webpack_require__(/*! ../shared/lib/utils */ \"./node_modules/next/dist/shared/lib/utils.js\");\nconst _addlocale = __webpack_require__(/*! ./add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nconst _routercontext = __webpack_require__(/*! ../shared/lib/router-context */ \"./node_modules/next/dist/shared/lib/router-context.js\");\nconst _approutercontext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"./node_modules/next/dist/shared/lib/app-router-context.js\");\nconst _useintersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nconst _getdomainlocale = __webpack_require__(/*! ./get-domain-locale */ \"./node_modules/next/dist/client/get-domain-locale.js\");\nconst _addbasepath = __webpack_require__(/*! ./add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\nconst _routerreducertypes = __webpack_require__(/*! ./components/router-reducer/router-reducer-types */ \"./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options, appOptions, isAppRouter) {\n    if (false) {}\n    // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    if (!isAppRouter && !(0, _islocalurl.isLocalURL)(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    const prefetchPromise = isAppRouter ? router.prefetch(href, appOptions) : router.prefetch(href, as, options);\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(prefetchPromise).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute(\"target\");\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    !isAppRouter && !(0, _islocalurl.isLocalURL)(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _s(_react.default.forwardRef(_c = _s(function LinkComponent(props, forwardedRef) {\n    _s();\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp = null , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter: onMouseEnterProp , onTouchStart: onTouchStartProp , legacyBehavior =true === false , ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const prefetchEnabled = prefetchProp !== false;\n    /**\n     * The possible states for prefetch are:\n     * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n     * - false: we will not prefetch if in the viewport at all\n     */ const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n    const pagesRouter = _react.default.useContext(_routercontext.RouterContext);\n    const appRouter = _react.default.useContext(_approutercontext.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    if (true) {\n        function createPropError(args) {\n            return new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current && !isAppRouter) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\");\n                }\n            }\n        }\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _resolvehref.resolveHref)(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\");\n                }\n                throw new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0));\n            }\n        } else {}\n    } else {\n        if (true) {\n            if ((children == null ? void 0 : children.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        }, {\n            kind: appPrefetchKind\n        }, isAppRouter);\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router,\n        isAppRouter,\n        appPrefetchKind\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, {\n                kind: appPrefetchKind\n            }, isAppRouter);\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, {\n                kind: appPrefetchKind\n            }, isAppRouter);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", {\n        ...restProps,\n        ...childProps\n    }, children);\n}, \"iGdYZW22TllPihoUFJYL0qIKigo=\")), \"iGdYZW22TllPihoUFJYL0qIKigo=\");\n_c1 = Link;\nconst _default = Link;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Link$_react.default.forwardRef\");\n$RefreshReg$(_c1, \"Link\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUNhOztBQURiO0FBRUFBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZILDJDQUEwQztJQUN0Q0ksWUFBWSxJQUFJO0lBQ2hCQyxLQUFLLFdBQVc7UUFDWixPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyw0R0FBeUM7QUFDbEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLHlCQUF5QkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyw0Q0FBTztBQUN2RSxNQUFNRyxlQUFlSCxtQkFBT0EsQ0FBQyxpSEFBeUM7QUFDdEUsTUFBTUksY0FBY0osbUJBQU9BLENBQUMsaUhBQXlDO0FBQ3JFLE1BQU1LLGFBQWFMLG1CQUFPQSxDQUFDLDZHQUF1QztBQUNsRSxNQUFNTSxTQUFTTixtQkFBT0EsQ0FBQyx5RUFBcUI7QUFDNUMsTUFBTU8sYUFBYVAsbUJBQU9BLENBQUMsbUVBQWM7QUFDekMsTUFBTVEsaUJBQWlCUixtQkFBT0EsQ0FBQywyRkFBOEI7QUFDN0QsTUFBTVMsb0JBQW9CVCxtQkFBT0EsQ0FBQyxtR0FBa0M7QUFDcEUsTUFBTVUsbUJBQW1CVixtQkFBT0EsQ0FBQywrRUFBb0I7QUFDckQsTUFBTVcsbUJBQW1CWCxtQkFBT0EsQ0FBQyxpRkFBcUI7QUFDdEQsTUFBTVksZUFBZVosbUJBQU9BLENBQUMseUVBQWlCO0FBQzlDLE1BQU1hLHNCQUFzQmIsbUJBQU9BLENBQUMsMklBQWtEO0FBRXRGLE1BQU1jLGFBQWEsSUFBSUM7QUFDdkIsU0FBU0MsU0FBU0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEVBQUUsRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLFdBQVcsRUFBRTtJQUNsRSxJQUFJLEtBQTZCLEVBQUUsRUFFbEM7SUFDRCxnSkFBZ0o7SUFDaEosSUFBSSxDQUFDQSxlQUFlLENB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R0FBRyxLQUFLLElBQUlBLFlBQVk2RCxhQUFhO1FBQ3JQVCxXQUFXNUgsSUFBSSxHQUFHaUksZ0JBQWdCLENBQUMsR0FBR3ZJLGFBQWE0SSxXQUFXLEVBQUUsQ0FBQyxHQUFHakosV0FBV2tKLFNBQVMsRUFBRXRJLElBQUkrSCxXQUFXeEQsZUFBZSxJQUFJLEdBQUcsS0FBSyxJQUFJQSxZQUFZZ0UsYUFBYTtJQUNySyxDQUFDO0lBQ0QsT0FBT3pFLGlCQUFpQixXQUFXLEdBQUdoRixPQUFPMkQsT0FBTyxDQUFDK0YsWUFBWSxDQUFDN0IsT0FBT2dCLGNBQWMsV0FBVyxHQUFHN0ksT0FBTzJELE9BQU8sQ0FBQ3lCLGFBQWEsQ0FBQyxLQUFLO1FBQ25JLEdBQUdELFNBQVM7UUFDWixHQUFHMEQsVUFBVTtJQUNqQixHQUFHeEUsU0FBUztBQUNoQjs7QUFDQSxNQUFNeEUsV0FBV21FO0FBRWpCLElBQUksQ0FBQyxPQUFPdkUsUUFBUWtFLE9BQU8sS0FBSyxjQUFlLE9BQU9sRSxRQUFRa0UsT0FBTyxLQUFLLFlBQVlsRSxRQUFRa0UsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPbEUsUUFBUWtFLE9BQU8sQ0FBQ2dHLFVBQVUsS0FBSyxhQUFhO0lBQ3JLcEssT0FBT0MsY0FBYyxDQUFDQyxRQUFRa0UsT0FBTyxFQUFFLGNBQWM7UUFBRWpFLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPcUssTUFBTSxDQUFDbkssUUFBUWtFLE9BQU8sRUFBRWxFO0lBQy9Cb0ssT0FBT3BLLE9BQU8sR0FBR0EsUUFBUWtFLE9BQU87QUFDbEMsQ0FBQyxDQUVELGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9saW5rLmpzP2U0ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9kZWZhdWx0O1xuICAgIH1cbn0pO1xuY29uc3QgX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0ID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9fL19pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdFwiKTtcbmNvbnN0IF9yZWFjdCA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0Ll8ocmVxdWlyZShcInJlYWN0XCIpKTtcbmNvbnN0IF9yZXNvbHZlaHJlZiA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZXNvbHZlLWhyZWZcIik7XG5jb25zdCBfaXNsb2NhbHVybCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pcy1sb2NhbC11cmxcIik7XG5jb25zdCBfZm9ybWF0dXJsID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC11cmxcIik7XG5jb25zdCBfdXRpbHMgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi91dGlsc1wiKTtcbmNvbnN0IF9hZGRsb2NhbGUgPSByZXF1aXJlKFwiLi9hZGQtbG9jYWxlXCIpO1xuY29uc3QgX3JvdXRlcmNvbnRleHQgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dFwiKTtcbmNvbnN0IF9hcHByb3V0ZXJjb250ZXh0ID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvYXBwLXJvdXRlci1jb250ZXh0XCIpO1xuY29uc3QgX3VzZWludGVyc2VjdGlvbiA9IHJlcXVpcmUoXCIuL3VzZS1pbnRlcnNlY3Rpb25cIik7XG5jb25zdCBfZ2V0ZG9tYWlubG9jYWxlID0gcmVxdWlyZShcIi4vZ2V0LWRvbWFpbi1sb2NhbGVcIik7XG5jb25zdCBfYWRkYmFzZXBhdGggPSByZXF1aXJlKFwiLi9hZGQtYmFzZS1wYXRoXCIpO1xuY29uc3QgX3JvdXRlcnJlZHVjZXJ0eXBlcyA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvcm91dGVyLXJlZHVjZXIvcm91dGVyLXJlZHVjZXItdHlwZXNcIik7XG5cbmNvbnN0IHByZWZldGNoZWQgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCBvcHRpb25zLCBhcHBPcHRpb25zLCBpc0FwcFJvdXRlcikge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gYXBwLXJvdXRlciBzdXBwb3J0cyBleHRlcm5hbCB1cmxzIG91dCBvZiB0aGUgYm94IHNvIGl0IHNob3VsZG4ndCBzaG9ydC1jaXJjdWl0IGhlcmUgYXMgc3VwcG9ydCBmb3IgZS5nLiBgcmVwbGFjZWAgaXMgYWRkZWQgaW4gdGhlIGFwcC1yb3V0ZXIuXG4gICAgaWYgKCFpc0FwcFJvdXRlciAmJiAhKDAsIF9pc2xvY2FsdXJsLmlzTG9jYWxVUkwpKGhyZWYpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gV2Ugc2hvdWxkIG9ubHkgZGVkdXBlIHJlcXVlc3RzIHdoZW4gZXhwZXJpbWVudGFsLm9wdGltaXN0aWNDbGllbnRDYWNoZSBpc1xuICAgIC8vIGRpc2FibGVkLlxuICAgIGlmICghb3B0aW9ucy5ieXBhc3NQcmVmZXRjaGVkQ2hlY2spIHtcbiAgICAgICAgY29uc3QgbG9jYWxlID0gLy8gTGV0IHRoZSBsaW5rJ3MgbG9jYWxlIHByb3Agb3ZlcnJpZGUgdGhlIGRlZmF1bHQgcm91dGVyIGxvY2FsZS5cbiAgICAgICAgdHlwZW9mIG9wdGlvbnMubG9jYWxlICE9PSBcInVuZGVmaW5lZFwiID8gb3B0aW9ucy5sb2NhbGUgOiBcImxvY2FsZVwiIGluIHJvdXRlciA/IHJvdXRlci5sb2NhbGUgOiB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IHByZWZldGNoZWRLZXkgPSBocmVmICsgXCIlXCIgKyBhcyArIFwiJVwiICsgbG9jYWxlO1xuICAgICAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGZldGNoZWQgdGhlIGtleSwgdGhlbiBkb24ndCBwcmVmZXRjaCBpdCBhZ2FpbiFcbiAgICAgICAgaWYgKHByZWZldGNoZWQuaGFzKHByZWZldGNoZWRLZXkpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gTWFyayB0aGlzIFVSTCBhcyBwcmVmZXRjaGVkLlxuICAgICAgICBwcmVmZXRjaGVkLmFkZChwcmVmZXRjaGVkS2V5KTtcbiAgICB9XG4gICAgY29uc3QgcHJlZmV0Y2hQcm9taXNlID0gaXNBcHBSb3V0ZXIgPyByb3V0ZXIucHJlZmV0Y2goaHJlZiwgYXBwT3B0aW9ucykgOiByb3V0ZXIucHJlZmV0Y2goaHJlZiwgYXMsIG9wdGlvbnMpO1xuICAgIC8vIFByZWZldGNoIHRoZSBKU09OIHBhZ2UgaWYgYXNrZWQgKG9ubHkgaW4gdGhlIGNsaWVudClcbiAgICAvLyBXZSBuZWVkIHRvIGhhbmRsZSBhIHByZWZldGNoIGVycm9yIGhlcmUgc2luY2Ugd2UgbWF5IGJlXG4gICAgLy8gbG9hZGluZyB3aXRoIHByaW9yaXR5IHdoaWNoIGNhbiByZWplY3QgYnV0IHdlIGRvbid0XG4gICAgLy8gd2FudCB0byBmb3JjZSBuYXZpZ2F0aW9uIHNpbmNlIHRoaXMgaXMgb25seSBhIHByZWZldGNoXG4gICAgUHJvbWlzZS5yZXNvbHZlKHByZWZldGNoUHJvbWlzZSkuY2F0Y2goKGVycik9PntcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgLy8gcmV0aHJvdyB0byBzaG93IGludmFsaWQgVVJMIGVycm9yc1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgICBjb25zdCBldmVudFRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwidGFyZ2V0XCIpO1xuICAgIHJldHVybiB0YXJnZXQgJiYgdGFyZ2V0ICE9PSBcIl9zZWxmXCIgfHwgZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5IHx8IGV2ZW50LmFsdEtleSB8fCAvLyB0cmlnZ2VycyByZXNvdXJjZSBkb3dubG9hZFxuICAgIGV2ZW50Lm5hdGl2ZUV2ZW50ICYmIGV2ZW50Lm5hdGl2ZUV2ZW50LndoaWNoID09PSAyO1xufVxuZnVuY3Rpb24gbGlua0NsaWNrZWQoZSwgcm91dGVyLCBocmVmLCBhcywgcmVwbGFjZSwgc2hhbGxvdywgc2Nyb2xsLCBsb2NhbGUsIGlzQXBwUm91dGVyLCBwcmVmZXRjaEVuYWJsZWQpIHtcbiAgICBjb25zdCB7IG5vZGVOYW1lICB9ID0gZS5jdXJyZW50VGFyZ2V0O1xuICAgIC8vIGFuY2hvcnMgaW5zaWRlIGFuIHN2ZyBoYXZlIGEgbG93ZXJjYXNlIG5vZGVOYW1lXG4gICAgY29uc3QgaXNBbmNob3JOb2RlTmFtZSA9IG5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgPT09IFwiQVwiO1xuICAgIGlmIChpc0FuY2hvck5vZGVOYW1lICYmIChpc01vZGlmaWVkRXZlbnQoZSkgfHwgLy8gYXBwLXJvdXRlciBzdXBwb3J0cyBleHRlcm5hbCB1cmxzIG91dCBvZiB0aGUgYm94IHNvIGl0IHNob3VsZG4ndCBzaG9ydC1jaXJjdWl0IGhlcmUgYXMgc3VwcG9ydCBmb3IgZS5nLiBgcmVwbGFjZWAgaXMgYWRkZWQgaW4gdGhlIGFwcC1yb3V0ZXIuXG4gICAgIWlzQXBwUm91dGVyICYmICEoMCwgX2lzbG9jYWx1cmwuaXNMb2NhbFVSTCkoaHJlZikpKSB7XG4gICAgICAgIC8vIGlnbm9yZSBjbGljayBmb3IgYnJvd3NlcuKAmXMgZGVmYXVsdCBiZWhhdmlvclxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBuYXZpZ2F0ZSA9ICgpPT57XG4gICAgICAgIC8vIElmIHRoZSByb3V0ZXIgaXMgYW4gTmV4dFJvdXRlciBpbnN0YW5jZSBpdCB3aWxsIGhhdmUgYGJlZm9yZVBvcFN0YXRlYFxuICAgICAgICBpZiAoXCJiZWZvcmVQb3BTdGF0ZVwiIGluIHJvdXRlcikge1xuICAgICAgICAgICAgcm91dGVyW3JlcGxhY2UgPyBcInJlcGxhY2VcIiA6IFwicHVzaFwiXShocmVmLCBhcywge1xuICAgICAgICAgICAgICAgIHNoYWxsb3csXG4gICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgIHNjcm9sbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByb3V0ZXJbcmVwbGFjZSA/IFwicmVwbGFjZVwiIDogXCJwdXNoXCJdKGFzIHx8IGhyZWYsIHtcbiAgICAgICAgICAgICAgICBmb3JjZU9wdGltaXN0aWNOYXZpZ2F0aW9uOiAhcHJlZmV0Y2hFbmFibGVkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKGlzQXBwUm91dGVyKSB7XG4gICAgICAgIF9yZWFjdC5kZWZhdWx0LnN0YXJ0VHJhbnNpdGlvbihuYXZpZ2F0ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbmF2aWdhdGUoKTtcbiAgICB9XG59XG5mdW5jdGlvbiBmb3JtYXRTdHJpbmdPclVybCh1cmxPYmpPclN0cmluZykge1xuICAgIGlmICh0eXBlb2YgdXJsT2JqT3JTdHJpbmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHVybE9iak9yU3RyaW5nO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIF9mb3JtYXR1cmwuZm9ybWF0VXJsKSh1cmxPYmpPclN0cmluZyk7XG59XG4vKipcbiAqIFJlYWN0IENvbXBvbmVudCB0aGF0IGVuYWJsZXMgY2xpZW50LXNpZGUgdHJhbnNpdGlvbnMgYmV0d2VlbiByb3V0ZXMuXG4gKi8gY29uc3QgTGluayA9IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuZm9yd2FyZFJlZihmdW5jdGlvbiBMaW5rQ29tcG9uZW50KHByb3BzLCBmb3J3YXJkZWRSZWYpIHtcbiAgICBsZXQgY2hpbGRyZW47XG4gICAgY29uc3QgeyBocmVmOiBocmVmUHJvcCAsIGFzOiBhc1Byb3AgLCBjaGlsZHJlbjogY2hpbGRyZW5Qcm9wICwgcHJlZmV0Y2g6IHByZWZldGNoUHJvcCA9IG51bGwgLCBwYXNzSHJlZiAsIHJlcGxhY2UgLCBzaGFsbG93ICwgc2Nyb2xsICwgbG9jYWxlICwgb25DbGljayAsIG9uTW91c2VFbnRlcjogb25Nb3VzZUVudGVyUHJvcCAsIG9uVG91Y2hTdGFydDogb25Ub3VjaFN0YXJ0UHJvcCAsIC8vIEB0cy1leHBlY3QtZXJyb3IgdGhpcyBpcyBpbmxpbmVkIGFzIGEgbGl0ZXJhbCBib29sZWFuIG5vdCBhIHN0cmluZ1xuICAgIGxlZ2FjeUJlaGF2aW9yID1wcm9jZXNzLmVudi5fX05FWFRfTkVXX0xJTktfQkVIQVZJT1IgPT09IGZhbHNlICwgLi4ucmVzdFByb3BzIH0gPSBwcm9wcztcbiAgICBjaGlsZHJlbiA9IGNoaWxkcmVuUHJvcDtcbiAgICBpZiAobGVnYWN5QmVoYXZpb3IgJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJzdHJpbmdcIiB8fCB0eXBlb2YgY2hpbGRyZW4gPT09IFwibnVtYmVyXCIpKSB7XG4gICAgICAgIGNoaWxkcmVuID0gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBudWxsLCBjaGlsZHJlbik7XG4gICAgfVxuICAgIGNvbnN0IHByZWZldGNoRW5hYmxlZCA9IHByZWZldGNoUHJvcCAhPT0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogVGhlIHBvc3NpYmxlIHN0YXRlcyBmb3IgcHJlZmV0Y2ggYXJlOlxuICAgICAqIC0gbnVsbDogdGhpcyBpcyB0aGUgZGVmYXVsdCBcImF1dG9cIiBtb2RlLCB3aGVyZSB3ZSB3aWxsIHByZWZldGNoIHBhcnRpYWxseSBpZiB0aGUgbGluayBpcyBpbiB0aGUgdmlld3BvcnRcbiAgICAgKiAtIHRydWU6IHdlIHdpbGwgcHJlZmV0Y2ggaWYgdGhlIGxpbmsgaXMgdmlzaWJsZSBhbmQgcHJlZmV0Y2ggdGhlIGZ1bGwgcGFnZSwgbm90IGp1c3QgcGFydGlhbGx5XG4gICAgICogLSBmYWxzZTogd2Ugd2lsbCBub3QgcHJlZmV0Y2ggaWYgaW4gdGhlIHZpZXdwb3J0IGF0IGFsbFxuICAgICAqLyBjb25zdCBhcHBQcmVmZXRjaEtpbmQgPSBwcmVmZXRjaFByb3AgPT09IG51bGwgPyBfcm91dGVycmVkdWNlcnR5cGVzLlByZWZldGNoS2luZC5BVVRPIDogX3JvdXRlcnJlZHVjZXJ0eXBlcy5QcmVmZXRjaEtpbmQuRlVMTDtcbiAgICBjb25zdCBwYWdlc1JvdXRlciA9IF9yZWFjdC5kZWZhdWx0LnVzZUNvbnRleHQoX3JvdXRlcmNvbnRleHQuUm91dGVyQ29udGV4dCk7XG4gICAgY29uc3QgYXBwUm91dGVyID0gX3JlYWN0LmRlZmF1bHQudXNlQ29udGV4dChfYXBwcm91dGVyY29udGV4dC5BcHBSb3V0ZXJDb250ZXh0KTtcbiAgICBjb25zdCByb3V0ZXIgPSBwYWdlc1JvdXRlciAhPSBudWxsID8gcGFnZXNSb3V0ZXIgOiBhcHBSb3V0ZXI7XG4gICAgLy8gV2UncmUgaW4gdGhlIGFwcCBkaXJlY3RvcnkgaWYgdGhlcmUgaXMgbm8gcGFnZXMgcm91dGVyLlxuICAgIGNvbnN0IGlzQXBwUm91dGVyID0gIXBhZ2VzUm91dGVyO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlUHJvcEVycm9yKGFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJGYWlsZWQgcHJvcCB0eXBlOiBUaGUgcHJvcCBgXCIgKyBhcmdzLmtleSArIFwiYCBleHBlY3RzIGEgXCIgKyBhcmdzLmV4cGVjdGVkICsgXCIgaW4gYDxMaW5rPmAsIGJ1dCBnb3QgYFwiICsgYXJncy5hY3R1YWwgKyBcImAgaW5zdGVhZC5cIiArICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gXCJcXG5PcGVuIHlvdXIgYnJvd3NlcidzIGNvbnNvbGUgdG8gdmlldyB0aGUgQ29tcG9uZW50IHN0YWNrIHRyYWNlLlwiIDogXCJcIikpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkUHJvcHNHdWFyZCA9IHtcbiAgICAgICAgICAgIGhyZWY6IHRydWVcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcmVxdWlyZWRQcm9wcyA9IE9iamVjdC5rZXlzKHJlcXVpcmVkUHJvcHNHdWFyZCk7XG4gICAgICAgIHJlcXVpcmVkUHJvcHMuZm9yRWFjaCgoa2V5KT0+e1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJocmVmXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSA9PSBudWxsIHx8IHR5cGVvZiBwcm9wc1trZXldICE9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBwcm9wc1trZXldICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogXCJgc3RyaW5nYCBvciBgb2JqZWN0YFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiBwcm9wc1trZXldID09PSBudWxsID8gXCJudWxsXCIgOiB0eXBlb2YgcHJvcHNba2V5XVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICAgICAgICAgIGNvbnN0IF8gPSBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICBjb25zdCBvcHRpb25hbFByb3BzR3VhcmQgPSB7XG4gICAgICAgICAgICBhczogdHJ1ZSxcbiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgICAgICBzY3JvbGw6IHRydWUsXG4gICAgICAgICAgICBzaGFsbG93OiB0cnVlLFxuICAgICAgICAgICAgcGFzc0hyZWY6IHRydWUsXG4gICAgICAgICAgICBwcmVmZXRjaDogdHJ1ZSxcbiAgICAgICAgICAgIGxvY2FsZTogdHJ1ZSxcbiAgICAgICAgICAgIG9uQ2xpY2s6IHRydWUsXG4gICAgICAgICAgICBvbk1vdXNlRW50ZXI6IHRydWUsXG4gICAgICAgICAgICBvblRvdWNoU3RhcnQ6IHRydWUsXG4gICAgICAgICAgICBsZWdhY3lCZWhhdmlvcjogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvcHRpb25hbFByb3BzID0gT2JqZWN0LmtleXMob3B0aW9uYWxQcm9wc0d1YXJkKTtcbiAgICAgICAgb3B0aW9uYWxQcm9wcy5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgICAgICBjb25zdCB2YWxUeXBlID0gdHlwZW9mIHByb3BzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcImFzXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSBcInN0cmluZ1wiICYmIHZhbFR5cGUgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiBcImBzdHJpbmdgIG9yIGBvYmplY3RgXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IFwibG9jYWxlXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogXCJgc3RyaW5nYFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiB2YWxUeXBlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcIm9uQ2xpY2tcIiB8fCBrZXkgPT09IFwib25Nb3VzZUVudGVyXCIgfHwga2V5ID09PSBcIm9uVG91Y2hTdGFydFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gJiYgdmFsVHlwZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogXCJgZnVuY3Rpb25gXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IFwicmVwbGFjZVwiIHx8IGtleSA9PT0gXCJzY3JvbGxcIiB8fCBrZXkgPT09IFwic2hhbGxvd1wiIHx8IGtleSA9PT0gXCJwYXNzSHJlZlwiIHx8IGtleSA9PT0gXCJwcmVmZXRjaFwiIHx8IGtleSA9PT0gXCJsZWdhY3lCZWhhdmlvclwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gIT0gbnVsbCAmJiB2YWxUeXBlICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVQcm9wRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6IFwiYGJvb2xlYW5gXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICAgICAgICAgICAgICBjb25zdCBfID0ga2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gVGhpcyBob29rIGlzIGluIGEgY29uZGl0aW9uYWwgYnV0IHRoYXQgaXMgb2sgYmVjYXVzZSBgcHJvY2Vzcy5lbnYuTk9ERV9FTlZgIG5ldmVyIGNoYW5nZXNcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgICAgIGNvbnN0IGhhc1dhcm5lZCA9IF9yZWFjdC5kZWZhdWx0LnVzZVJlZihmYWxzZSk7XG4gICAgICAgIGlmIChwcm9wcy5wcmVmZXRjaCAmJiAhaGFzV2FybmVkLmN1cnJlbnQgJiYgIWlzQXBwUm91dGVyKSB7XG4gICAgICAgICAgICBoYXNXYXJuZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJOZXh0LmpzIGF1dG8tcHJlZmV0Y2hlcyBhdXRvbWF0aWNhbGx5IGJhc2VkIG9uIHZpZXdwb3J0LiBUaGUgcHJlZmV0Y2ggYXR0cmlidXRlIGlzIG5vIGxvbmdlciBuZWVkZWQuIE1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3ByZWZldGNoLXRydWUtZGVwcmVjYXRlZFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgIGlmIChpc0FwcFJvdXRlciAmJiAhYXNQcm9wKSB7XG4gICAgICAgICAgICBsZXQgaHJlZjtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaHJlZlByb3AgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBocmVmID0gaHJlZlByb3A7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBocmVmUHJvcCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgaHJlZlByb3AucGF0aG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBocmVmID0gaHJlZlByb3AucGF0aG5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaHJlZikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc0R5bmFtaWNTZWdtZW50ID0gaHJlZi5zcGxpdChcIi9cIikuc29tZSgoc2VnbWVudCk9PnNlZ21lbnQuc3RhcnRzV2l0aChcIltcIikgJiYgc2VnbWVudC5lbmRzV2l0aChcIl1cIikpO1xuICAgICAgICAgICAgICAgIGlmIChoYXNEeW5hbWljU2VnbWVudCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEeW5hbWljIGhyZWYgYFwiICsgaHJlZiArIFwiYCBmb3VuZCBpbiA8TGluaz4gd2hpbGUgdXNpbmcgdGhlIGAvYXBwYCByb3V0ZXIsIHRoaXMgaXMgbm90IHN1cHBvcnRlZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9hcHAtZGlyLWR5bmFtaWMtaHJlZlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgeyBocmVmICwgYXMgIH0gPSBfcmVhY3QuZGVmYXVsdC51c2VNZW1vKCgpPT57XG4gICAgICAgIGlmICghcGFnZXNSb3V0ZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc29sdmVkSHJlZiA9IGZvcm1hdFN0cmluZ09yVXJsKGhyZWZQcm9wKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaHJlZjogcmVzb2x2ZWRIcmVmLFxuICAgICAgICAgICAgICAgIGFzOiBhc1Byb3AgPyBmb3JtYXRTdHJpbmdPclVybChhc1Byb3ApIDogcmVzb2x2ZWRIcmVmXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFtyZXNvbHZlZEhyZWYsIHJlc29sdmVkQXNdID0gKDAsIF9yZXNvbHZlaHJlZi5yZXNvbHZlSHJlZikocGFnZXNSb3V0ZXIsIGhyZWZQcm9wLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhyZWY6IHJlc29sdmVkSHJlZixcbiAgICAgICAgICAgIGFzOiBhc1Byb3AgPyAoMCwgX3Jlc29sdmVocmVmLnJlc29sdmVIcmVmKShwYWdlc1JvdXRlciwgYXNQcm9wKSA6IHJlc29sdmVkQXMgfHwgcmVzb2x2ZWRIcmVmXG4gICAgICAgIH07XG4gICAgfSwgW1xuICAgICAgICBwYWdlc1JvdXRlcixcbiAgICAgICAgaHJlZlByb3AsXG4gICAgICAgIGFzUHJvcFxuICAgIF0pO1xuICAgIGNvbnN0IHByZXZpb3VzSHJlZiA9IF9yZWFjdC5kZWZhdWx0LnVzZVJlZihocmVmKTtcbiAgICBjb25zdCBwcmV2aW91c0FzID0gX3JlYWN0LmRlZmF1bHQudXNlUmVmKGFzKTtcbiAgICAvLyBUaGlzIHdpbGwgcmV0dXJuIHRoZSBmaXJzdCBjaGlsZCwgaWYgbXVsdGlwbGUgYXJlIHByb3ZpZGVkIGl0IHdpbGwgdGhyb3cgYW4gZXJyb3JcbiAgICBsZXQgY2hpbGQ7XG4gICAgaWYgKGxlZ2FjeUJlaGF2aW9yKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XG4gICAgICAgICAgICBpZiAob25DbGljaykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignXCJvbkNsaWNrXCIgd2FzIHBhc3NlZCB0byA8TGluaz4gd2l0aCBgaHJlZmAgb2YgYCcgKyBocmVmUHJvcCArICdgIGJ1dCBcImxlZ2FjeUJlaGF2aW9yXCIgd2FzIHNldC4gVGhlIGxlZ2FjeSBiZWhhdmlvciByZXF1aXJlcyBvbkNsaWNrIGJlIHNldCBvbiB0aGUgY2hpbGQgb2YgbmV4dC9saW5rJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob25Nb3VzZUVudGVyUHJvcCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignXCJvbk1vdXNlRW50ZXJcIiB3YXMgcGFzc2VkIHRvIDxMaW5rPiB3aXRoIGBocmVmYCBvZiBgJyArIGhyZWZQcm9wICsgJ2AgYnV0IFwibGVnYWN5QmVoYXZpb3JcIiB3YXMgc2V0LiBUaGUgbGVnYWN5IGJlaGF2aW9yIHJlcXVpcmVzIG9uTW91c2VFbnRlciBiZSBzZXQgb24gdGhlIGNoaWxkIG9mIG5leHQvbGluaycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBjaGlsZHJlbiB3ZXJlIHBhc3NlZCB0byA8TGluaz4gd2l0aCBgaHJlZmAgb2YgYFwiICsgaHJlZlByb3AgKyBcImAgYnV0IG9uZSBjaGlsZCBpcyByZXF1aXJlZCBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9saW5rLW5vLWNoaWxkcmVuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNdWx0aXBsZSBjaGlsZHJlbiB3ZXJlIHBhc3NlZCB0byA8TGluaz4gd2l0aCBgaHJlZmAgb2YgYFwiICsgaHJlZlByb3AgKyBcImAgYnV0IG9ubHkgb25lIGNoaWxkIGlzIHN1cHBvcnRlZCBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9saW5rLW11bHRpcGxlLWNoaWxkcmVuXCIgKyAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IFwiIFxcbk9wZW4geW91ciBicm93c2VyJ3MgY29uc29sZSB0byB2aWV3IHRoZSBDb21wb25lbnQgc3RhY2sgdHJhY2UuXCIgOiBcIlwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjaGlsZCA9IF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIpIHtcbiAgICAgICAgICAgIGlmICgoY2hpbGRyZW4gPT0gbnVsbCA/IHZvaWQgMCA6IGNoaWxkcmVuLnR5cGUpID09PSBcImFcIikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgPExpbms+IHdpdGggPGE+IGNoaWxkLiBQbGVhc2UgcmVtb3ZlIDxhPiBvciB1c2UgPExpbmsgbGVnYWN5QmVoYXZpb3I+LlxcbkxlYXJuIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2ludmFsaWQtbmV3LWxpbmstd2l0aC1leHRyYS1hbmNob3JcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgY2hpbGRSZWYgPSBsZWdhY3lCZWhhdmlvciA/IGNoaWxkICYmIHR5cGVvZiBjaGlsZCA9PT0gXCJvYmplY3RcIiAmJiBjaGlsZC5yZWYgOiBmb3J3YXJkZWRSZWY7XG4gICAgY29uc3QgW3NldEludGVyc2VjdGlvblJlZiwgaXNWaXNpYmxlLCByZXNldFZpc2libGVdID0gKDAsIF91c2VpbnRlcnNlY3Rpb24udXNlSW50ZXJzZWN0aW9uKSh7XG4gICAgICAgIHJvb3RNYXJnaW46IFwiMjAwcHhcIlxuICAgIH0pO1xuICAgIGNvbnN0IHNldFJlZiA9IF9yZWFjdC5kZWZhdWx0LnVzZUNhbGxiYWNrKChlbCk9PntcbiAgICAgICAgLy8gQmVmb3JlIHRoZSBsaW5rIGdldHRpbmcgb2JzZXJ2ZWQsIGNoZWNrIGlmIHZpc2libGUgc3RhdGUgbmVlZCB0byBiZSByZXNldFxuICAgICAgICBpZiAocHJldmlvdXNBcy5jdXJyZW50ICE9PSBhcyB8fCBwcmV2aW91c0hyZWYuY3VycmVudCAhPT0gaHJlZikge1xuICAgICAgICAgICAgcmVzZXRWaXNpYmxlKCk7XG4gICAgICAgICAgICBwcmV2aW91c0FzLmN1cnJlbnQgPSBhcztcbiAgICAgICAgICAgIHByZXZpb3VzSHJlZi5jdXJyZW50ID0gaHJlZjtcbiAgICAgICAgfVxuICAgICAgICBzZXRJbnRlcnNlY3Rpb25SZWYoZWwpO1xuICAgICAgICBpZiAoY2hpbGRSZWYpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY2hpbGRSZWYgPT09IFwiZnVuY3Rpb25cIikgY2hpbGRSZWYoZWwpO1xuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNoaWxkUmVmID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRSZWYuY3VycmVudCA9IGVsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW1xuICAgICAgICBhcyxcbiAgICAgICAgY2hpbGRSZWYsXG4gICAgICAgIGhyZWYsXG4gICAgICAgIHJlc2V0VmlzaWJsZSxcbiAgICAgICAgc2V0SW50ZXJzZWN0aW9uUmVmXG4gICAgXSk7XG4gICAgLy8gUHJlZmV0Y2ggdGhlIFVSTCBpZiB3ZSBoYXZlbid0IGFscmVhZHkgYW5kIGl0J3MgdmlzaWJsZS5cbiAgICBfcmVhY3QuZGVmYXVsdC51c2VFZmZlY3QoKCk9PntcbiAgICAgICAgLy8gaW4gZGV2LCB3ZSBvbmx5IHByZWZldGNoIG9uIGhvdmVyIHRvIGF2b2lkIHdhc3RpbmcgcmVzb3VyY2VzIGFzIHRoZSBwcmVmZXRjaCB3aWxsIHRyaWdnZXIgY29tcGlsaW5nIHRoZSBwYWdlLlxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFyb3V0ZXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB3ZSBkb24ndCBuZWVkIHRvIHByZWZldGNoIHRoZSBVUkwsIGRvbid0IGRvIHByZWZldGNoLlxuICAgICAgICBpZiAoIWlzVmlzaWJsZSB8fCAhcHJlZmV0Y2hFbmFibGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gUHJlZmV0Y2ggdGhlIFVSTC5cbiAgICAgICAgcHJlZmV0Y2gocm91dGVyLCBocmVmLCBhcywge1xuICAgICAgICAgICAgbG9jYWxlXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGtpbmQ6IGFwcFByZWZldGNoS2luZFxuICAgICAgICB9LCBpc0FwcFJvdXRlcik7XG4gICAgfSwgW1xuICAgICAgICBhcyxcbiAgICAgICAgaHJlZixcbiAgICAgICAgaXNWaXNpYmxlLFxuICAgICAgICBsb2NhbGUsXG4gICAgICAgIHByZWZldGNoRW5hYmxlZCxcbiAgICAgICAgcGFnZXNSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2VzUm91dGVyLmxvY2FsZSxcbiAgICAgICAgcm91dGVyLFxuICAgICAgICBpc0FwcFJvdXRlcixcbiAgICAgICAgYXBwUHJlZmV0Y2hLaW5kXG4gICAgXSk7XG4gICAgY29uc3QgY2hpbGRQcm9wcyA9IHtcbiAgICAgICAgcmVmOiBzZXRSZWYsXG4gICAgICAgIG9uQ2xpY2sgKGUpIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21wb25lbnQgcmVuZGVyZWQgaW5zaWRlIG5leHQvbGluayBoYXMgdG8gcGFzcyBjbGljayBldmVudCB0byBcIm9uQ2xpY2tcIiBwcm9wLicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghbGVnYWN5QmVoYXZpb3IgJiYgdHlwZW9mIG9uQ2xpY2sgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2soZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobGVnYWN5QmVoYXZpb3IgJiYgY2hpbGQucHJvcHMgJiYgdHlwZW9mIGNoaWxkLnByb3BzLm9uQ2xpY2sgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uQ2xpY2soZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXJvdXRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlLmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaW5rQ2xpY2tlZChlLCByb3V0ZXIsIGhyZWYsIGFzLCByZXBsYWNlLCBzaGFsbG93LCBzY3JvbGwsIGxvY2FsZSwgaXNBcHBSb3V0ZXIsIHByZWZldGNoRW5hYmxlZCk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uTW91c2VFbnRlciAoZSkge1xuICAgICAgICAgICAgaWYgKCFsZWdhY3lCZWhhdmlvciAmJiB0eXBlb2Ygb25Nb3VzZUVudGVyUHJvcCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyUHJvcChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsZWdhY3lCZWhhdmlvciAmJiBjaGlsZC5wcm9wcyAmJiB0eXBlb2YgY2hpbGQucHJvcHMub25Nb3VzZUVudGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjaGlsZC5wcm9wcy5vbk1vdXNlRW50ZXIoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXJvdXRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghcHJlZmV0Y2hFbmFibGVkICYmIGlzQXBwUm91dGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHJlZmV0Y2gocm91dGVyLCBocmVmLCBhcywge1xuICAgICAgICAgICAgICAgIGxvY2FsZSxcbiAgICAgICAgICAgICAgICBwcmlvcml0eTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAvLyBAc2VlIHtodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvZGlzY3Vzc2lvbnMvNDAyNjg/c29ydD10b3AjZGlzY3Vzc2lvbmNvbW1lbnQtMzU3MjY0Mn1cbiAgICAgICAgICAgICAgICBieXBhc3NQcmVmZXRjaGVkQ2hlY2s6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBraW5kOiBhcHBQcmVmZXRjaEtpbmRcbiAgICAgICAgICAgIH0sIGlzQXBwUm91dGVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Ub3VjaFN0YXJ0IChlKSB7XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvblRvdWNoU3RhcnRQcm9wID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBvblRvdWNoU3RhcnRQcm9wKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZ2FjeUJlaGF2aW9yICYmIGNoaWxkLnByb3BzICYmIHR5cGVvZiBjaGlsZC5wcm9wcy5vblRvdWNoU3RhcnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uVG91Y2hTdGFydChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghcm91dGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFwcmVmZXRjaEVuYWJsZWQgJiYgaXNBcHBSb3V0ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCB7XG4gICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgIHByaW9yaXR5OiB0cnVlLFxuICAgICAgICAgICAgICAgIC8vIEBzZWUge2h0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9kaXNjdXNzaW9ucy80MDI2OD9zb3J0PXRvcCNkaXNjdXNzaW9uY29tbWVudC0zNTcyNjQyfVxuICAgICAgICAgICAgICAgIGJ5cGFzc1ByZWZldGNoZWRDaGVjazogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGtpbmQ6IGFwcFByZWZldGNoS2luZFxuICAgICAgICAgICAgfSwgaXNBcHBSb3V0ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBJZiBjaGlsZCBpcyBhbiA8YT4gdGFnIGFuZCBkb2Vzbid0IGhhdmUgYSBocmVmIGF0dHJpYnV0ZSwgb3IgaWYgdGhlICdwYXNzSHJlZicgcHJvcGVydHkgaXNcbiAgICAvLyBkZWZpbmVkLCB3ZSBzcGVjaWZ5IHRoZSBjdXJyZW50ICdocmVmJywgc28gdGhhdCByZXBldGl0aW9uIGlzIG5vdCBuZWVkZWQgYnkgdGhlIHVzZXIuXG4gICAgLy8gSWYgdGhlIHVybCBpcyBhYnNvbHV0ZSwgd2UgY2FuIGJ5cGFzcyB0aGUgbG9naWMgdG8gcHJlcGVuZCB0aGUgZG9tYWluIGFuZCBsb2NhbGUuXG4gICAgaWYgKCgwLCBfdXRpbHMuaXNBYnNvbHV0ZVVybCkoYXMpKSB7XG4gICAgICAgIGNoaWxkUHJvcHMuaHJlZiA9IGFzO1xuICAgIH0gZWxzZSBpZiAoIWxlZ2FjeUJlaGF2aW9yIHx8IHBhc3NIcmVmIHx8IGNoaWxkLnR5cGUgPT09IFwiYVwiICYmICEoXCJocmVmXCIgaW4gY2hpbGQucHJvcHMpKSB7XG4gICAgICAgIGNvbnN0IGN1ckxvY2FsZSA9IHR5cGVvZiBsb2NhbGUgIT09IFwidW5kZWZpbmVkXCIgPyBsb2NhbGUgOiBwYWdlc1JvdXRlciA9PSBudWxsID8gdm9pZCAwIDogcGFnZXNSb3V0ZXIubG9jYWxlO1xuICAgICAgICAvLyB3ZSBvbmx5IHJlbmRlciBkb21haW4gbG9jYWxlcyBpZiB3ZSBhcmUgY3VycmVudGx5IG9uIGEgZG9tYWluIGxvY2FsZVxuICAgICAgICAvLyBzbyB0aGF0IGxvY2FsZSBsaW5rcyBhcmUgc3RpbGwgdmlzaXRhYmxlIGluIGRldmVsb3BtZW50L3ByZXZpZXcgZW52c1xuICAgICAgICBjb25zdCBsb2NhbGVEb21haW4gPSAocGFnZXNSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2VzUm91dGVyLmlzTG9jYWxlRG9tYWluKSAmJiAoMCwgX2dldGRvbWFpbmxvY2FsZS5nZXREb21haW5Mb2NhbGUpKGFzLCBjdXJMb2NhbGUsIHBhZ2VzUm91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYWdlc1JvdXRlci5sb2NhbGVzLCBwYWdlc1JvdXRlciA9PSBudWxsID8gdm9pZCAwIDogcGFnZXNSb3V0ZXIuZG9tYWluTG9jYWxlcyk7XG4gICAgICAgIGNoaWxkUHJvcHMuaHJlZiA9IGxvY2FsZURvbWFpbiB8fCAoMCwgX2FkZGJhc2VwYXRoLmFkZEJhc2VQYXRoKSgoMCwgX2FkZGxvY2FsZS5hZGRMb2NhbGUpKGFzLCBjdXJMb2NhbGUsIHBhZ2VzUm91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYWdlc1JvdXRlci5kZWZhdWx0TG9jYWxlKSk7XG4gICAgfVxuICAgIHJldHVybiBsZWdhY3lCZWhhdmlvciA/IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY2xvbmVFbGVtZW50KGNoaWxkLCBjaGlsZFByb3BzKSA6IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgICAgICAuLi5yZXN0UHJvcHMsXG4gICAgICAgIC4uLmNoaWxkUHJvcHNcbiAgICB9LCBjaGlsZHJlbik7XG59KTtcbmNvbnN0IF9kZWZhdWx0ID0gTGluaztcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX2RlZmF1bHQiLCJfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiXyIsIl9yZXNvbHZlaHJlZiIsIl9pc2xvY2FsdXJsIiwiX2Zvcm1hdHVybCIsIl91dGlscyIsIl9hZGRsb2NhbGUiLCJfcm91dGVyY29udGV4dCIsIl9hcHByb3V0ZXJjb250ZXh0IiwiX3VzZWludGVyc2VjdGlvbiIsIl9nZXRkb21haW5sb2NhbGUiLCJfYWRkYmFzZXBhdGgiLCJfcm91dGVycmVkdWNlcnR5cGVzIiwicHJlZmV0Y2hlZCIsIlNldCIsInByZWZldGNoIiwicm91dGVyIiwiaHJlZiIsImFzIiwib3B0aW9ucyIsImFwcE9wdGlvbnMiLCJpc0FwcFJvdXRlciIsImlzTG9jYWxVUkwiLCJieXBhc3NQcmVmZXRjaGVkQ2hlY2siLCJsb2NhbGUiLCJ1bmRlZmluZWQiLCJwcmVmZXRjaGVkS2V5IiwiaGFzIiwiYWRkIiwicHJlZmV0Y2hQcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJjYXRjaCIsImVyciIsInByb2Nlc3MiLCJpc01vZGlmaWVkRXZlbnQiLCJldmVudCIsImV2ZW50VGFyZ2V0IiwiY3VycmVudFRhcmdldCIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsIm1ldGFLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJuYXRpdmVFdmVudCIsIndoaWNoIiwibGlua0NsaWNrZWQiLCJlIiwicmVwbGFjZSIsInNoYWxsb3ciLCJzY3JvbGwiLCJwcmVmZXRjaEVuYWJsZWQiLCJub2RlTmFtZSIsImlzQW5jaG9yTm9kZU5hbWUiLCJ0b1VwcGVyQ2FzZSIsInByZXZlbnREZWZhdWx0IiwibmF2aWdhdGUiLCJmb3JjZU9wdGltaXN0aWNOYXZpZ2F0aW9uIiwiZGVmYXVsdCIsInN0YXJ0VHJhbnNpdGlvbiIsImZvcm1hdFN0cmluZ09yVXJsIiwidXJsT2JqT3JTdHJpbmciLCJmb3JtYXRVcmwiLCJMaW5rIiwiZm9yd2FyZFJlZiIsIkxpbmtDb21wb25lbnQiLCJwcm9wcyIsImZvcndhcmRlZFJlZiIsImNoaWxkcmVuIiwiaHJlZlByb3AiLCJhc1Byb3AiLCJjaGlsZHJlblByb3AiLCJwcmVmZXRjaFByb3AiLCJwYXNzSHJlZiIsIm9uQ2xpY2siLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlRW50ZXJQcm9wIiwib25Ub3VjaFN0YXJ0Iiwib25Ub3VjaFN0YXJ0UHJvcCIsImxlZ2FjeUJlaGF2aW9yIiwiZW52IiwiX19ORVhUX05FV19MSU5LX0JFSEFWSU9SIiwicmVzdFByb3BzIiwiY3JlYXRlRWxlbWVudCIsImFwcFByZWZldGNoS2luZCIsIlByZWZldGNoS2luZCIsIkFVVE8iLCJGVUxMIiwicGFnZXNSb3V0ZXIiLCJ1c2VDb250ZXh0IiwiUm91dGVyQ29udGV4dCIsImFwcFJvdXRlciIsIkFwcFJvdXRlckNvbnRleHQiLCJjcmVhdGVQcm9wRXJyb3IiLCJhcmdzIiwiRXJyb3IiLCJrZXkiLCJleHBlY3RlZCIsImFjdHVhbCIsInJlcXVpcmVkUHJvcHNHdWFyZCIsInJlcXVpcmVkUHJvcHMiLCJrZXlzIiwiZm9yRWFjaCIsIm9wdGlvbmFsUHJvcHNHdWFyZCIsIm9wdGlvbmFsUHJvcHMiLCJ2YWxUeXBlIiwiaGFzV2FybmVkIiwidXNlUmVmIiwiY3VycmVudCIsImNvbnNvbGUiLCJ3YXJuIiwicGF0aG5hbWUiLCJoYXNEeW5hbWljU2VnbWVudCIsInNwbGl0Iiwic29tZSIsInNlZ21lbnQiLCJzdGFydHNXaXRoIiwiZW5kc1dpdGgiLCJ1c2VNZW1vIiwicmVzb2x2ZWRIcmVmIiwicmVzb2x2ZWRBcyIsInJlc29sdmVIcmVmIiwicHJldmlvdXNIcmVmIiwicHJldmlvdXNBcyIsImNoaWxkIiwiQ2hpbGRyZW4iLCJvbmx5IiwidHlwZSIsImNoaWxkUmVmIiwicmVmIiwic2V0SW50ZXJzZWN0aW9uUmVmIiwiaXNWaXNpYmxlIiwicmVzZXRWaXNpYmxlIiwidXNlSW50ZXJzZWN0aW9uIiwicm9vdE1hcmdpbiIsInNldFJlZiIsInVzZUNhbGxiYWNrIiwiZWwiLCJ1c2VFZmZlY3QiLCJraW5kIiwiY2hpbGRQcm9wcyIsImRlZmF1bHRQcmV2ZW50ZWQiLCJwcmlvcml0eSIsImlzQWJzb2x1dGVVcmwiLCJjdXJMb2NhbGUiLCJsb2NhbGVEb21haW4iLCJpc0xvY2FsZURvbWFpbiIsImdldERvbWFpbkxvY2FsZSIsImxvY2FsZXMiLCJkb21haW5Mb2NhbGVzIiwiYWRkQmFzZVBhdGgiLCJhZGRMb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiY2xvbmVFbGVtZW50IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useIntersection\", ({\n    enumerable: true,\n    get: function() {\n        return useIntersection;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nconst _requestidlecallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef , rootMargin , disabled  } = param;\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react.useState)(false);\n    const elementRef = (0, _react.useRef)(null);\n    const setElement = (0, _react.useCallback)((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react.useEffect)(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestidlecallback.requestIdleCallback)(()=>setVisible(true));\n                return ()=>(0, _requestidlecallback.cancelIdleCallback)(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react.useCallback)(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC91c2UtaW50ZXJzZWN0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZILG1EQUFrRDtJQUM5Q0ksWUFBWSxJQUFJO0lBQ2hCQyxLQUFLLFdBQVc7UUFDWixPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMsNENBQU87QUFDOUIsTUFBTUMsdUJBQXVCRCxtQkFBT0EsQ0FBQyx5RkFBeUI7QUFDOUQsTUFBTUUsMEJBQTBCLE9BQU9DLHlCQUF5QjtBQUNoRSxNQUFNQyxZQUFZLElBQUlDO0FBQ3RCLE1BQU1DLFNBQVMsRUFBRTtBQUNqQixTQUFTQyxlQUFlQyxPQUFPLEVBQUU7SUFDN0IsTUFBTUMsS0FBSztRQUNQQyxNQUFNRixRQUFRRSxJQUFJLElBQUksSUFBSTtRQUMxQkMsUUFBUUgsUUFBUUksVUFBVSxJQUFJO0lBQ2xDO0lBQ0EsTUFBTUMsV0FBV1AsT0FBT1EsSUFBSSxDQUFDLENBQUNDLE1BQU1BLElBQUlMLElBQUksS0FBS0QsR0FBR0MsSUFBSSxJQUFJSyxJQUFJSixNQUFNLEtBQUtGLEdBQUdFLE1BQU07SUFDcEYsSUFBSUs7SUFDSixJQUFJSCxVQUFVO1FBQ1ZHLFdBQVdaLFVBQVVQLEdBQUcsQ0FBQ2dCO1FBQ3pCLElBQUlHLFVBQVU7WUFDVixPQUFPQTtRQUNYLENBQUM7SUFDTCxDQUFDO0lBQ0QsTUFBTUMsV0FBVyxJQUFJWjtJQUNyQixNQUFNYSxXQUFXLElBQUlmLHFCQUFxQixDQUFDZ0IsVUFBVTtRQUNqREEsUUFBUUMsT0FBTyxDQUFDLENBQUNDLFFBQVE7WUFDckIsTUFBTUMsV0FBV0wsU0FBU3BCLEdBQUcsQ0FBQ3dCLE1BQU1FLE1BQU07WUFDMUMsTUFBTUMsWUFBWUgsTUFBTUksY0FBYyxJQUFJSixNQUFNSyxpQkFBaUIsR0FBRztZQUNwRSxJ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RCxPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLakUsT0FBT0MsY0FBYyxDQUFDQyxRQUFROEQsT0FBTyxFQUFFLGNBQWM7UUFBRTdELE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPa0UsTUFBTSxDQUFDaEUsUUFBUThELE9BQU8sRUFBRTlEO0lBQy9CaUUsT0FBT2pFLE9BQU8sR0FBR0EsUUFBUThELE9BQU87QUFDbEMsQ0FBQyxDQUVELDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC91c2UtaW50ZXJzZWN0aW9uLmpzP2ZkOTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ1c2VJbnRlcnNlY3Rpb25cIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHVzZUludGVyc2VjdGlvbjtcbiAgICB9XG59KTtcbmNvbnN0IF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IF9yZXF1ZXN0aWRsZWNhbGxiYWNrID0gcmVxdWlyZShcIi4vcmVxdWVzdC1pZGxlLWNhbGxiYWNrXCIpO1xuY29uc3QgaGFzSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPSB0eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIjtcbmNvbnN0IG9ic2VydmVycyA9IG5ldyBNYXAoKTtcbmNvbnN0IGlkTGlzdCA9IFtdO1xuZnVuY3Rpb24gY3JlYXRlT2JzZXJ2ZXIob3B0aW9ucykge1xuICAgIGNvbnN0IGlkID0ge1xuICAgICAgICByb290OiBvcHRpb25zLnJvb3QgfHwgbnVsbCxcbiAgICAgICAgbWFyZ2luOiBvcHRpb25zLnJvb3RNYXJnaW4gfHwgXCJcIlxuICAgIH07XG4gICAgY29uc3QgZXhpc3RpbmcgPSBpZExpc3QuZmluZCgob2JqKT0+b2JqLnJvb3QgPT09IGlkLnJvb3QgJiYgb2JqLm1hcmdpbiA9PT0gaWQubWFyZ2luKTtcbiAgICBsZXQgaW5zdGFuY2U7XG4gICAgaWYgKGV4aXN0aW5nKSB7XG4gICAgICAgIGluc3RhbmNlID0gb2JzZXJ2ZXJzLmdldChleGlzdGluZyk7XG4gICAgICAgIGlmIChpbnN0YW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGVsZW1lbnRzID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzKT0+e1xuICAgICAgICBlbnRyaWVzLmZvckVhY2goKGVudHJ5KT0+e1xuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSBlbGVtZW50cy5nZXQoZW50cnkudGFyZ2V0KTtcbiAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGVudHJ5LmlzSW50ZXJzZWN0aW5nIHx8IGVudHJ5LmludGVyc2VjdGlvblJhdGlvID4gMDtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjayAmJiBpc1Zpc2libGUpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhpc1Zpc2libGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCBvcHRpb25zKTtcbiAgICBpbnN0YW5jZSA9IHtcbiAgICAgICAgaWQsXG4gICAgICAgIG9ic2VydmVyLFxuICAgICAgICBlbGVtZW50c1xuICAgIH07XG4gICAgaWRMaXN0LnB1c2goaWQpO1xuICAgIG9ic2VydmVycy5zZXQoaWQsIGluc3RhbmNlKTtcbiAgICByZXR1cm4gaW5zdGFuY2U7XG59XG5mdW5jdGlvbiBvYnNlcnZlKGVsZW1lbnQsIGNhbGxiYWNrLCBvcHRpb25zKSB7XG4gICAgY29uc3QgeyBpZCAsIG9ic2VydmVyICwgZWxlbWVudHMgIH0gPSBjcmVhdGVPYnNlcnZlcihvcHRpb25zKTtcbiAgICBlbGVtZW50cy5zZXQoZWxlbWVudCwgY2FsbGJhY2spO1xuICAgIG9ic2VydmVyLm9ic2VydmUoZWxlbWVudCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVub2JzZXJ2ZSgpIHtcbiAgICAgICAgZWxlbWVudHMuZGVsZXRlKGVsZW1lbnQpO1xuICAgICAgICBvYnNlcnZlci51bm9ic2VydmUoZWxlbWVudCk7XG4gICAgICAgIC8vIERlc3Ryb3kgb2JzZXJ2ZXIgd2hlbiB0aGVyZSdzIG5vdGhpbmcgbGVmdCB0byB3YXRjaDpcbiAgICAgICAgaWYgKGVsZW1lbnRzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIG9ic2VydmVycy5kZWxldGUoaWQpO1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBpZExpc3QuZmluZEluZGV4KChvYmopPT5vYmoucm9vdCA9PT0gaWQucm9vdCAmJiBvYmoubWFyZ2luID09PSBpZC5tYXJnaW4pO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICBpZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG5mdW5jdGlvbiB1c2VJbnRlcnNlY3Rpb24ocGFyYW0pIHtcbiAgICBsZXQgeyByb290UmVmICwgcm9vdE1hcmdpbiAsIGRpc2FibGVkICB9ID0gcGFyYW07XG4gICAgY29uc3QgaXNEaXNhYmxlZCA9IGRpc2FibGVkIHx8ICFoYXNJbnRlcnNlY3Rpb25PYnNlcnZlcjtcbiAgICBjb25zdCBbdmlzaWJsZSwgc2V0VmlzaWJsZV0gPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShmYWxzZSk7XG4gICAgY29uc3QgZWxlbWVudFJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShudWxsKTtcbiAgICBjb25zdCBzZXRFbGVtZW50ID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoKGVsZW1lbnQpPT57XG4gICAgICAgIGVsZW1lbnRSZWYuY3VycmVudCA9IGVsZW1lbnQ7XG4gICAgfSwgW10pO1xuICAgICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKT0+e1xuICAgICAgICBpZiAoaGFzSW50ZXJzZWN0aW9uT2JzZXJ2ZXIpIHtcbiAgICAgICAgICAgIGlmIChpc0Rpc2FibGVkIHx8IHZpc2libGUpIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBlbGVtZW50UmVmLmN1cnJlbnQ7XG4gICAgICAgICAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50LnRhZ05hbWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bm9ic2VydmUgPSBvYnNlcnZlKGVsZW1lbnQsIChpc1Zpc2libGUpPT5pc1Zpc2libGUgJiYgc2V0VmlzaWJsZShpc1Zpc2libGUpLCB7XG4gICAgICAgICAgICAgICAgICAgIHJvb3Q6IHJvb3RSZWYgPT0gbnVsbCA/IHZvaWQgMCA6IHJvb3RSZWYuY3VycmVudCxcbiAgICAgICAgICAgICAgICAgICAgcm9vdE1hcmdpblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB1bm9ic2VydmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoIXZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZGxlQ2FsbGJhY2sgPSAoMCwgX3JlcXVlc3RpZGxlY2FsbGJhY2sucmVxdWVzdElkbGVDYWxsYmFjaykoKCk9PnNldFZpc2libGUodHJ1ZSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKT0+KDAsIF9yZXF1ZXN0aWRsZWNhbGxiYWNrLmNhbmNlbElkbGVDYWxsYmFjaykoaWRsZUNhbGxiYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB9LCBbXG4gICAgICAgIGlzRGlzYWJsZWQsXG4gICAgICAgIHJvb3RNYXJnaW4sXG4gICAgICAgIHJvb3RSZWYsXG4gICAgICAgIHZpc2libGUsXG4gICAgICAgIGVsZW1lbnRSZWYuY3VycmVudFxuICAgIF0pO1xuICAgIGNvbnN0IHJlc2V0VmlzaWJsZSA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKCgpPT57XG4gICAgICAgIHNldFZpc2libGUoZmFsc2UpO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBzZXRFbGVtZW50LFxuICAgICAgICB2aXNpYmxlLFxuICAgICAgICByZXNldFZpc2libGVcbiAgICBdO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2UtaW50ZXJzZWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJ1c2VJbnRlcnNlY3Rpb24iLCJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlcXVlc3RpZGxlY2FsbGJhY2siLCJoYXNJbnRlcnNlY3Rpb25PYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwib2JzZXJ2ZXJzIiwiTWFwIiwiaWRMaXN0IiwiY3JlYXRlT2JzZXJ2ZXIiLCJvcHRpb25zIiwiaWQiLCJyb290IiwibWFyZ2luIiwicm9vdE1hcmdpbiIsImV4aXN0aW5nIiwiZmluZCIsIm9iaiIsImluc3RhbmNlIiwiZWxlbWVudHMiLCJvYnNlcnZlciIsImVudHJpZXMiLCJmb3JFYWNoIiwiZW50cnkiLCJjYWxsYmFjayIsInRhcmdldCIsImlzVmlzaWJsZSIsImlzSW50ZXJzZWN0aW5nIiwiaW50ZXJzZWN0aW9uUmF0aW8iLCJwdXNoIiwic2V0Iiwib2JzZXJ2ZSIsImVsZW1lbnQiLCJ1bm9ic2VydmUiLCJkZWxldGUiLCJzaXplIiwiZGlzY29ubmVjdCIsImluZGV4IiwiZmluZEluZGV4Iiwic3BsaWNlIiwicGFyYW0iLCJyb290UmVmIiwiZGlzYWJsZWQiLCJpc0Rpc2FibGVkIiwidmlzaWJsZSIsInNldFZpc2libGUiLCJ1c2VTdGF0ZSIsImVsZW1lbnRSZWYiLCJ1c2VSZWYiLCJzZXRFbGVtZW50IiwidXNlQ2FsbGJhY2siLCJjdXJyZW50IiwidXNlRWZmZWN0IiwidGFnTmFtZSIsImlkbGVDYWxsYmFjayIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJyZXNldFZpc2libGUiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n"));

/***/ }),

/***/ "./src/common/correctStylesheetsOrder.js":
/*!***********************************************!*\
  !*** ./src/common/correctStylesheetsOrder.js ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ correctStylesheetsOrder; }\n/* harmony export */ });\nfunction correctStylesheetsOrder(param) {\n    let { preview , lightMode  } = param;\n    let previewStylesheet = document.querySelector('link[href=\"/landing-preview/css/preview-style.css\"]');\n    let globalDarkStylesheet = document.querySelector('link[href=\"/dark/assets/css/style.css\"]');\n    let globalLightStylesheet = document.querySelector('link[href=\"/light/assets/css/style.css\"]');\n    let pluginsDarkStylesheet = document.querySelector('link[href=\"/dark/assets/css/plugins.css\"]');\n    let pluginsLightStylesheet = document.querySelector('link[href=\"/light/assets/css/plugins.css\"]');\n    if (lightMode && !preview) {\n        document.querySelector(\"noscript\").before(pluginsLightStylesheet);\n        document.querySelector(\"noscript\").before(globalLightStylesheet);\n        let pluginsStylesheets = document.querySelectorAll('link[href=\"/light/assets/css/plugins.css\"]');\n        if (pluginsStylesheets.length > 1) {\n            pluginsStylesheets[0].remove();\n        }\n        let globalStylesheets = document.querySelectorAll('link[href=\"/light/assets/css/style.css\"]');\n        if (globalStylesheets.length > 1) {\n            globalStylesheets[0].remove();\n        }\n    }\n    if (!lightMode && !preview) {\n        document.querySelector(\"noscript\").before(pluginsDarkStylesheet);\n        document.querySelector(\"noscript\").before(globalDarkStylesheet);\n        let pluginsStylesheets = document.querySelectorAll('link[href=\"/dark/assets/css/plugins.css\"]');\n        if (pluginsStylesheets.length > 1) {\n            pluginsStylesheets[0].remove();\n        }\n        let globalStylesheets = document.querySelectorAll('link[href=\"/dark/assets/css/style.css\"]');\n        if (globalStylesheets.length > 1) {\n            globalStylesheets[0].remove();\n        }\n    }\n    if (preview && previewStylesheet) {\n        document.head.append(previewStylesheet);\n        if (globalLightStylesheet) globalLightStylesheet.remove();\n        if (pluginsLightStylesheet) pluginsLightStylesheet.remove();\n    } else if (!preview && previewStylesheet) {\n        previewStylesheet.remove();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL2NvcnJlY3RTdHlsZXNoZWV0c09yZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxTQUFTQSx3QkFBd0IsS0FBc0IsRUFBRTtRQUF4QixFQUFFQyxRQUFPLEVBQUVDLFVBQVMsRUFBRSxHQUF0QjtJQUM5QyxJQUFJQyxvQkFBb0JDLFNBQVNDLGFBQWEsQ0FBRTtJQUNoRCxJQUFJQyx1QkFBdUJGLFNBQVNDLGFBQWEsQ0FBRTtJQUNuRCxJQUFJRSx3QkFBd0JILFNBQVNDLGFBQWEsQ0FBRTtJQUNwRCxJQUFJRyx3QkFBd0JKLFNBQVNDLGFBQWEsQ0FBRTtJQUNwRCxJQUFJSSx5QkFBeUJMLFNBQVNDLGFBQWEsQ0FBRTtJQUVyRCxJQUFJSCxhQUFhLENBQUNELFNBQVM7UUFDekJHLFNBQVNDLGFBQWEsQ0FBRSxZQUFXSyxNQUFNLENBQUNEO1FBQzFDTCxTQUFTQyxhQUFhLENBQUUsWUFBV0ssTUFBTSxDQUFDSDtRQUUxQyxJQUFJSSxxQkFBcUJQLFNBQVNRLGdCQUFnQixDQUFFO1FBQ3BELElBQUlELG1CQUFtQkUsTUFBTSxHQUFHLEdBQUc7WUFDakNGLGtCQUFrQixDQUFDLEVBQUUsQ0FBQ0csTUFBTTtRQUM5QixDQUFDO1FBRUQsSUFBSUMsb0JBQW9CWCxTQUFTUSxnQkFBZ0IsQ0FBRTtRQUNuRCxJQUFJRyxrQkFBa0JGLE1BQU0sR0FBRyxHQUFHO1lBQ2hDRSxpQkFBaUIsQ0FBQyxFQUFFLENBQUNELE1BQU07UUFDN0IsQ0FBQztJQUNILENBQUM7SUFDRCxJQUFJLENBQUNaLGFBQWEsQ0FBQ0QsU0FBUztRQUMxQkcsU0FBU0MsYUFBYSxDQUFFLFlBQVdLLE1BQU0sQ0FBQ0Y7UUFDMUNKLFNBQVNDLGFBQWEsQ0FBRSxZQUFXSyxNQUFNLENBQUNKO1FBRTFDLElBQUlLLHFCQUFxQlAsU0FBU1EsZ0JBQWdCLENBQUU7UUFDcEQsSUFBSUQsbUJBQW1CRSxNQUFNLEdBQUcsR0FBRztZQUNqQ0Ysa0JBQWtCLENBQUMsRUFBRSxDQUFDRyxNQUFNO1FBQzlCLENBQUM7UUFFRCxJQUFJQyxvQkFBb0JYLFNBQVNRLGdCQUFnQixDQUFFO1FBQ25ELElBQUlHLGtCQUFrQkYsTUFBTSxHQUFHLEdBQUc7WUFDaENFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQ0QsTUFBTTtRQUM3QixDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUliLFdBQVdFLG1CQUFtQjtRQUNoQ0MsU0FBU1ksSUFBSSxDQUFDQyxNQUFNLENBQUNkO1FBQ3JCLElBQUlJLHVCQUF1QkEsc0JBQXNCTyxNQUFNO1FBQ3ZELElBQUlMLHdCQUF3QkEsdUJBQXVCSyxNQUFNO0lBQzNELE9BQU8sSUFBSSxDQUFDYixXQUFXRSxtQkFBbUI7UUFDeENBLGtCQUFrQlcsTUFBTTtJQUMxQixDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tbW9uL2NvcnJlY3RTdHlsZXNoZWV0c09yZGVyLmpzPzJiNjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ycmVjdFN0eWxlc2hlZXRzT3JkZXIoeyBwcmV2aWV3LCBsaWdodE1vZGUgfSkge1xuICBsZXQgcHJldmlld1N0eWxlc2hlZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBsaW5rW2hyZWY9XCIvbGFuZGluZy1wcmV2aWV3L2Nzcy9wcmV2aWV3LXN0eWxlLmNzc1wiXWApO1xuICBsZXQgZ2xvYmFsRGFya1N0eWxlc2hlZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBsaW5rW2hyZWY9XCIvZGFyay9hc3NldHMvY3NzL3N0eWxlLmNzc1wiXWApO1xuICBsZXQgZ2xvYmFsTGlnaHRTdHlsZXNoZWV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgbGlua1tocmVmPVwiL2xpZ2h0L2Fzc2V0cy9jc3Mvc3R5bGUuY3NzXCJdYCk7XG4gIGxldCBwbHVnaW5zRGFya1N0eWxlc2hlZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBsaW5rW2hyZWY9XCIvZGFyay9hc3NldHMvY3NzL3BsdWdpbnMuY3NzXCJdYCk7XG4gIGxldCBwbHVnaW5zTGlnaHRTdHlsZXNoZWV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgbGlua1tocmVmPVwiL2xpZ2h0L2Fzc2V0cy9jc3MvcGx1Z2lucy5jc3NcIl1gKTtcblxuICBpZiAobGlnaHRNb2RlICYmICFwcmV2aWV3KSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihgbm9zY3JpcHRgKS5iZWZvcmUocGx1Z2luc0xpZ2h0U3R5bGVzaGVldCk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihgbm9zY3JpcHRgKS5iZWZvcmUoZ2xvYmFsTGlnaHRTdHlsZXNoZWV0KTtcblxuICAgIGxldCBwbHVnaW5zU3R5bGVzaGVldHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGBsaW5rW2hyZWY9XCIvbGlnaHQvYXNzZXRzL2Nzcy9wbHVnaW5zLmNzc1wiXWApO1xuICAgIGlmIChwbHVnaW5zU3R5bGVzaGVldHMubGVuZ3RoID4gMSkge1xuICAgICAgcGx1Z2luc1N0eWxlc2hlZXRzWzBdLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIGxldCBnbG9iYWxTdHlsZXNoZWV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYGxpbmtbaHJlZj1cIi9saWdodC9hc3NldHMvY3NzL3N0eWxlLmNzc1wiXWApO1xuICAgIGlmIChnbG9iYWxTdHlsZXNoZWV0cy5sZW5ndGggPiAxKSB7XG4gICAgICBnbG9iYWxTdHlsZXNoZWV0c1swXS5yZW1vdmUoKTtcbiAgICB9XG4gIH1cbiAgaWYgKCFsaWdodE1vZGUgJiYgIXByZXZpZXcpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBub3NjcmlwdGApLmJlZm9yZShwbHVnaW5zRGFya1N0eWxlc2hlZXQpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYG5vc2NyaXB0YCkuYmVmb3JlKGdsb2JhbERhcmtTdHlsZXNoZWV0KTtcblxuICAgIGxldCBwbHVnaW5zU3R5bGVzaGVldHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGBsaW5rW2hyZWY9XCIvZGFyay9hc3NldHMvY3NzL3BsdWdpbnMuY3NzXCJdYCk7XG4gICAgaWYgKHBsdWdpbnNTdHlsZXNoZWV0cy5sZW5ndGggPiAxKSB7XG4gICAgICBwbHVnaW5zU3R5bGVzaGVldHNbMF0ucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgbGV0IGdsb2JhbFN0eWxlc2hlZXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgbGlua1tocmVmPVwiL2RhcmsvYXNzZXRzL2Nzcy9zdHlsZS5jc3NcIl1gKTtcbiAgICBpZiAoZ2xvYmFsU3R5bGVzaGVldHMubGVuZ3RoID4gMSkge1xuICAgICAgZ2xvYmFsU3R5bGVzaGVldHNbMF0ucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHByZXZpZXcgJiYgcHJldmlld1N0eWxlc2hlZXQpIHtcbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZChwcmV2aWV3U3R5bGVzaGVldCk7XG4gICAgaWYgKGdsb2JhbExpZ2h0U3R5bGVzaGVldCkgZ2xvYmFsTGlnaHRTdHlsZXNoZWV0LnJlbW92ZSgpO1xuICAgIGlmIChwbHVnaW5zTGlnaHRTdHlsZXNoZWV0KSBwbHVnaW5zTGlnaHRTdHlsZXNoZWV0LnJlbW92ZSgpO1xuICB9IGVsc2UgaWYgKCFwcmV2aWV3ICYmIHByZXZpZXdTdHlsZXNoZWV0KSB7XG4gICAgcHJldmlld1N0eWxlc2hlZXQucmVtb3ZlKCk7XG4gIH1cbn0iXSwibmFtZXMiOlsiY29ycmVjdFN0eWxlc2hlZXRzT3JkZXIiLCJwcmV2aWV3IiwibGlnaHRNb2RlIiwicHJldmlld1N0eWxlc2hlZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJnbG9iYWxEYXJrU3R5bGVzaGVldCIsImdsb2JhbExpZ2h0U3R5bGVzaGVldCIsInBsdWdpbnNEYXJrU3R5bGVzaGVldCIsInBsdWdpbnNMaWdodFN0eWxlc2hlZXQiLCJiZWZvcmUiLCJwbHVnaW5zU3R5bGVzaGVldHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwicmVtb3ZlIiwiZ2xvYmFsU3R5bGVzaGVldHMiLCJoZWFkIiwiYXBwZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/common/correctStylesheetsOrder.js\n"));

/***/ }),

/***/ "./src/common/loadBackgroudImages.js":
/*!*******************************************!*\
  !*** ./src/common/loadBackgroudImages.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ loadBackgroudImages; }\n/* harmony export */ });\nfunction loadBackgroudImages() {\n    let backgroudImages = document.querySelectorAll(\"[data-background]\");\n    if (backgroudImages.length > 0) {\n        backgroudImages.forEach((element)=>{\n            let image = element.dataset.background;\n            element.style.backgroundImage = \"url('\".concat(image, \"')\");\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL2xvYWRCYWNrZ3JvdWRJbWFnZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLHNCQUFzQjtJQUM1QyxJQUFJQyxrQkFBa0JDLFNBQVNDLGdCQUFnQixDQUFDO0lBRWhELElBQUlGLGdCQUFnQkcsTUFBTSxHQUFHLEdBQUc7UUFDOUJILGdCQUFnQkksT0FBTyxDQUFDQyxDQUFBQSxVQUFXO1lBQ2pDLElBQUlDLFFBQVFELFFBQVFFLE9BQU8sQ0FBQ0MsVUFBVTtZQUN0Q0gsUUFBUUksS0FBSyxDQUFDQyxlQUFlLEdBQUcsUUFBYyxPQUFOSixPQUFNO1FBQ2hEO0lBQ0YsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbW1vbi9sb2FkQmFja2dyb3VkSW1hZ2VzLmpzPzFjNzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9hZEJhY2tncm91ZEltYWdlcygpIHtcbiAgbGV0IGJhY2tncm91ZEltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1iYWNrZ3JvdW5kXVwiKTtcblxuICBpZiAoYmFja2dyb3VkSW1hZ2VzLmxlbmd0aCA+IDApIHtcbiAgICBiYWNrZ3JvdWRJbWFnZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIGxldCBpbWFnZSA9IGVsZW1lbnQuZGF0YXNldC5iYWNrZ3JvdW5kO1xuICAgICAgZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCcke2ltYWdlfScpYDtcbiAgICB9KVxuICB9XG59Il0sIm5hbWVzIjpbImxvYWRCYWNrZ3JvdWRJbWFnZXMiLCJiYWNrZ3JvdWRJbWFnZXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJmb3JFYWNoIiwiZWxlbWVudCIsImltYWdlIiwiZGF0YXNldCIsImJhY2tncm91bmQiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/common/loadBackgroudImages.js\n"));

/***/ }),

/***/ "./src/common/marketing-agency-customjs.js":
/*!*************************************************!*\
  !*** ./src/common/marketing-agency-customjs.js ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ customScript; }\n/* harmony export */ });\nfunction customScript() {\n    document.documentElement.className = \"js\";\n    var supportsCssVars = function() {\n        var e, t = document.createElement(\"style\");\n        return t.innerHTML = \"root: { --tmp-var: bold; }\", document.head.appendChild(t), e = !!(window.CSS && window.CSS.supports && window.CSS.supports(\"font-weight\", \"var(--tmp-var)\")), t.parentNode.removeChild(t), e;\n    };\n    supportsCssVars() || alert(\"Please view this demo in a modern browser that supports CSS Variables.\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL21hcmtldGluZy1hZ2VuY3ktY3VzdG9tanMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLGVBQWU7SUFDckNDLFNBQVNDLGVBQWUsQ0FBQ0MsU0FBUyxHQUFHO0lBQ3JDLElBQUlDLGtCQUFrQixXQUFZO1FBQ2hDLElBQUlDLEdBQUdDLElBQUlMLFNBQVNNLGFBQWEsQ0FBQztRQUNsQyxPQUFPRCxFQUFFRSxTQUFTLEdBQUcsOEJBQ25CUCxTQUFTUSxJQUFJLENBQUNDLFdBQVcsQ0FBQ0osSUFDMUJELElBQUksQ0FBQyxDQUFFTSxDQUFBQSxPQUFPQyxHQUFHLElBQUlELE9BQU9DLEdBQUcsQ0FBQ0MsUUFBUSxJQUFJRixPQUFPQyxHQUFHLENBQUNDLFFBQVEsQ0FBQyxlQUFlLGlCQUFnQixHQUMvRlAsRUFBRVEsVUFBVSxDQUFDQyxXQUFXLENBQUNULElBQUlELENBQUM7SUFDbEM7SUFDQUQscUJBQXFCWSxNQUFNO0FBQzdCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbW1vbi9tYXJrZXRpbmctYWdlbmN5LWN1c3RvbWpzLmpzP2JmOTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3VzdG9tU2NyaXB0KCkge1xuICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gXCJqc1wiO1xuICB2YXIgc3VwcG9ydHNDc3NWYXJzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBlLCB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgIHJldHVybiB0LmlubmVySFRNTCA9IFwicm9vdDogeyAtLXRtcC12YXI6IGJvbGQ7IH1cIixcbiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodCksXG4gICAgICBlID0gISEod2luZG93LkNTUyAmJiB3aW5kb3cuQ1NTLnN1cHBvcnRzICYmIHdpbmRvdy5DU1Muc3VwcG9ydHMoXCJmb250LXdlaWdodFwiLCBcInZhcigtLXRtcC12YXIpXCIpKSxcbiAgICAgIHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KSwgZVxuICB9O1xuICBzdXBwb3J0c0Nzc1ZhcnMoKSB8fCBhbGVydChcIlBsZWFzZSB2aWV3IHRoaXMgZGVtbyBpbiBhIG1vZGVybiBicm93c2VyIHRoYXQgc3VwcG9ydHMgQ1NTIFZhcmlhYmxlcy5cIik7XG59Il0sIm5hbWVzIjpbImN1c3RvbVNjcmlwdCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xhc3NOYW1lIiwic3VwcG9ydHNDc3NWYXJzIiwiZSIsInQiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiaGVhZCIsImFwcGVuZENoaWxkIiwid2luZG93IiwiQ1NTIiwic3VwcG9ydHMiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJhbGVydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/common/marketing-agency-customjs.js\n"));

/***/ }),

/***/ "./src/common/scrollToTop.js":
/*!***********************************!*\
  !*** ./src/common/scrollToTop.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst scrollToTop = ()=>{\n    let offset = 150;\n    let progressWrap = document.querySelector(\".progress-wrap\");\n    let progressPath = document.querySelector(\".progress-wrap path\");\n    let pathLength = progressPath.getTotalLength();\n    const updateProgress = ()=>{\n        let scroll = window.pageYOffset;\n        let height = document.documentElement.scrollHeight - window.innerHeight;\n        let progress = pathLength - scroll * pathLength / height;\n        progressPath.style.strokeDashoffset = progress;\n    };\n    if (progressWrap) {\n        progressPath.style.transition = progressPath.style.WebkitTransition = \"none\";\n        progressPath.style.strokeDasharray = pathLength + \" \" + pathLength;\n        progressPath.style.strokeDashoffset = pathLength;\n        progressPath.getBoundingClientRect();\n        progressPath.style.transition = progressPath.style.WebkitTransition = \"stroke-dashoffset 10ms linear\";\n        updateProgress();\n        window.addEventListener(\"scroll\", updateProgress);\n        window.addEventListener(\"scroll\", function() {\n            if (window.pageYOffset > offset) {\n                progressWrap.classList.add(\"active-progress\");\n            } else {\n                document.querySelector(\".progress-wrap\").classList.remove(\"active-progress\");\n            }\n        });\n        progressWrap.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            });\n            return false;\n        });\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (scrollToTop);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL3Njcm9sbFRvVG9wLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxjQUFjLElBQU07SUFDeEIsSUFBSUMsU0FBUztJQUNiLElBQUlDLGVBQWVDLFNBQVNDLGFBQWEsQ0FBQztJQUMxQyxJQUFJQyxlQUFlRixTQUFTQyxhQUFhLENBQUM7SUFDMUMsSUFBSUUsYUFBYUQsYUFBYUUsY0FBYztJQUM1QyxNQUFNQyxpQkFBaUIsSUFBTTtRQUMzQixJQUFJQyxTQUFTQyxPQUFPQyxXQUFXO1FBQy9CLElBQUlDLFNBQVNULFNBQVNVLGVBQWUsQ0FBQ0MsWUFBWSxHQUFHSixPQUFPSyxXQUFXO1FBQ3ZFLElBQUlDLFdBQVdWLGFBQWEsU0FBVUEsYUFBY007UUFDcERQLGFBQWFZLEtBQUssQ0FBQ0MsZ0JBQWdCLEdBQUdGO0lBQ3hDO0lBQ0EsSUFBSWQsY0FBYztRQUNoQkcsYUFBYVksS0FBSyxDQUFDRSxVQUFVLEdBQUdkLGFBQWFZLEtBQUssQ0FBQ0csZ0JBQWdCLEdBQ2pFO1FBQ0ZmLGFBQWFZLEtBQUssQ0FBQ0ksZUFBZSxHQUFHZixhQUFhLE1BQU1BO1FBQ3hERCxhQUFhWSxLQUFLLENBQUNDLGdCQUFnQixHQUFHWjtRQUN0Q0QsYUFBYWlCLHFCQUFxQjtRQUNsQ2pCLGFBQWFZLEtBQUssQ0FBQ0UsVUFBVSxHQUFHZCxhQUFhWSxLQUFLLENBQUNHLGdCQUFnQixHQUNqRTtRQUVGWjtRQUNBRSxPQUFPYSxnQkFBZ0IsQ0FBQyxVQUFVZjtRQUNsQ0UsT0FBT2EsZ0JBQWdCLENBQUMsVUFBVSxXQUFZO1lBQzVDLElBQUliLE9BQU9DLFdBQVcsR0FBR1YsUUFBUTtnQkFDL0JDLGFBQWFzQixTQUFTLENBQUNDLEdBQUcsQ0FBQztZQUM3QixPQUFPO2dCQUNMdEIsU0FDR0MsYUFBYSxDQUFDLGtCQUNkb0IsU0FBUyxDQUFDRSxNQUFNLENBQUM7WUFDdEIsQ0FBQztRQUNIO1FBQ0F4QixhQUFhcUIsZ0JBQWdCLENBQUMsU0FBUyxTQUFVSSxLQUFLLEVBQUU7WUFDdERBLE1BQU1DLGNBQWM7WUFDcEJsQixPQUFPbUIsUUFBUSxDQUFDO2dCQUFFQyxLQUFLO2dCQUFHQyxVQUFVO1lBQVM7WUFDN0MsT0FBTyxLQUFLO1FBQ2Q7SUFDRixDQUFDO0FBQ0g7QUFFQSwrREFBZS9CLFdBQVdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbW1vbi9zY3JvbGxUb1RvcC5qcz84NTBlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNjcm9sbFRvVG9wID0gKCkgPT4ge1xuICBsZXQgb2Zmc2V0ID0gMTUwO1xuICBsZXQgcHJvZ3Jlc3NXcmFwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9ncmVzcy13cmFwXCIpO1xuICBsZXQgcHJvZ3Jlc3NQYXRoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9ncmVzcy13cmFwIHBhdGhcIik7XG4gIGxldCBwYXRoTGVuZ3RoID0gcHJvZ3Jlc3NQYXRoLmdldFRvdGFsTGVuZ3RoKCk7XG4gIGNvbnN0IHVwZGF0ZVByb2dyZXNzID0gKCkgPT4ge1xuICAgIGxldCBzY3JvbGwgPSB3aW5kb3cucGFnZVlPZmZzZXQ7XG4gICAgbGV0IGhlaWdodCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQgLSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgbGV0IHByb2dyZXNzID0gcGF0aExlbmd0aCAtIChzY3JvbGwgKiBwYXRoTGVuZ3RoKSAvIGhlaWdodDtcbiAgICBwcm9ncmVzc1BhdGguc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IHByb2dyZXNzO1xuICB9O1xuICBpZiAocHJvZ3Jlc3NXcmFwKSB7XG4gICAgcHJvZ3Jlc3NQYXRoLnN0eWxlLnRyYW5zaXRpb24gPSBwcm9ncmVzc1BhdGguc3R5bGUuV2Via2l0VHJhbnNpdGlvbiA9XG4gICAgICBcIm5vbmVcIjtcbiAgICBwcm9ncmVzc1BhdGguc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gcGF0aExlbmd0aCArIFwiIFwiICsgcGF0aExlbmd0aDtcbiAgICBwcm9ncmVzc1BhdGguc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IHBhdGhMZW5ndGg7XG4gICAgcHJvZ3Jlc3NQYXRoLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHByb2dyZXNzUGF0aC5zdHlsZS50cmFuc2l0aW9uID0gcHJvZ3Jlc3NQYXRoLnN0eWxlLldlYmtpdFRyYW5zaXRpb24gPVxuICAgICAgXCJzdHJva2UtZGFzaG9mZnNldCAxMG1zIGxpbmVhclwiO1xuXG4gICAgdXBkYXRlUHJvZ3Jlc3MoKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCB1cGRhdGVQcm9ncmVzcyk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHdpbmRvdy5wYWdlWU9mZnNldCA+IG9mZnNldCkge1xuICAgICAgICBwcm9ncmVzc1dyYXAuY2xhc3NMaXN0LmFkZChcImFjdGl2ZS1wcm9ncmVzc1wiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZ3Jlc3Mtd3JhcFwiKVxuICAgICAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlLXByb2dyZXNzXCIpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHByb2dyZXNzV3JhcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiAwLCBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgc2Nyb2xsVG9Ub3A7XG4iXSwibmFtZXMiOlsic2Nyb2xsVG9Ub3AiLCJvZmZzZXQiLCJwcm9ncmVzc1dyYXAiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9ncmVzc1BhdGgiLCJwYXRoTGVuZ3RoIiwiZ2V0VG90YWxMZW5ndGgiLCJ1cGRhdGVQcm9ncmVzcyIsInNjcm9sbCIsIndpbmRvdyIsInBhZ2VZT2Zmc2V0IiwiaGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsSGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJwcm9ncmVzcyIsInN0eWxlIiwic3Ryb2tlRGFzaG9mZnNldCIsInRyYW5zaXRpb24iLCJXZWJraXRUcmFuc2l0aW9uIiwic3Ryb2tlRGFzaGFycmF5IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzY3JvbGxUbyIsInRvcCIsImJlaGF2aW9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/common/scrollToTop.js\n"));

/***/ }),

/***/ "./src/common/showcase-script.js":
/*!***************************************!*\
  !*** ./src/common/showcase-script.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst scripts = {\n    demo () {\n        function debounce(func, wait, immediate) {\n            var timeout;\n            return function() {\n                var context = this, args = arguments;\n                var later = function() {\n                    timeout = null;\n                    if (!immediate) func.apply(context, args);\n                };\n                var callNow = immediate && !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n                if (callNow) func.apply(context, args);\n            };\n        }\n        ;\n        class Slideshow {\n            init() {\n                this.DOM.slides = Array.from(this.DOM.el.querySelectorAll(\".slides--images > .slide\"));\n                this.slidesTotal = this.DOM.slides.length;\n                this.DOM.nav = this.DOM.el.querySelector(\".slidenav\");\n                this.DOM.titles = this.DOM.el.querySelector(\".slides--titles\");\n                this.DOM.titlesSlides = Array.from(this.DOM.titles.querySelectorAll(\".slide\"));\n                this.DOM.nextCtrl = this.DOM.nav.querySelector(\".slidenav__item--next\");\n                this.DOM.prevCtrl = this.DOM.nav.querySelector(\".slidenav__item--prev\");\n                this.current = 0;\n                this.createFrame();\n                this.initEvents();\n            }\n            createFrame() {\n                this.rect = this.DOM.el.getBoundingClientRect();\n                this.frameSize = this.rect.width / 12;\n                this.paths = {\n                    initial: this.calculatePath(\"initial\"),\n                    final: this.calculatePath(\"final\")\n                };\n                this.DOM.svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n                this.DOM.svg.setAttribute(\"class\", \"shape\");\n                this.DOM.svg.setAttribute(\"width\", \"100%\");\n                this.DOM.svg.setAttribute(\"height\", \"100%\");\n                this.DOM.svg.setAttribute(\"viewbox\", \"0 0 \".concat(this.rect.width, \" \").concat(this.rect.height));\n                this.DOM.svg.innerHTML = '\\n            <defs>\\n            <linearGradient id=\"gradient1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\\n                <stop offset=\"0%\" stop-color=\"#1a1a1a\"/>\\n                <stop offset=\"100%\" stop-color=\"#1a1a1a\"/>\\n            </linearGradient>\\n            </defs>\\n            <path fill=\"'.concat(this.settings.frameFill, '\" d=\"').concat(this.paths.initial, '\"/>');\n                this.DOM.el.insertBefore(this.DOM.svg, this.DOM.titles);\n                this.DOM.shape = this.DOM.svg.querySelector(\"path\");\n            }\n            updateFrame() {\n                this.paths.initial = this.calculatePath(\"initial\");\n                this.paths.final = this.calculatePath(\"final\");\n                this.DOM.svg.setAttribute(\"viewbox\", \"0 0 \".concat(this.rect.width, \" \").concat(this.rect.height));\n                this.DOM.shape.setAttribute(\"d\", this.isAnimating ? this.paths.final : this.paths.initial);\n            }\n            calculatePath() {\n                let path = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"initial\";\n                if (path === \"initial\") {\n                    return \"M 0,0 0,\".concat(this.rect.height, \" \").concat(this.rect.width, \",\").concat(this.rect.height, \" \").concat(this.rect.width, \",0 0,0 Z M 0,0 \").concat(this.rect.width, \",0 \").concat(this.rect.width, \",\").concat(this.rect.height, \" 0,\").concat(this.rect.height, \" Z\");\n                } else {\n                    const point1 = {\n                        x: this.rect.width / 4 - 50,\n                        y: this.rect.height / 4 + 50\n                    };\n                    const point2 = {\n                        x: this.rect.width / 4 + 50,\n                        y: this.rect.height / 4 - 50\n                    };\n                    const point3 = {\n                        x: this.rect.width - point2.x,\n                        y: this.rect.height - point2.y\n                    };\n                    const point4 = {\n                        x: this.rect.width - point1.x,\n                        y: this.rect.height - point1.y\n                    };\n                    return \"M 0,0 0,\".concat(this.rect.height, \" \").concat(this.rect.width, \",\").concat(this.rect.height, \" \").concat(this.rect.width, \",0 0,0 Z M \").concat(point1.x, \",\").concat(point1.y, \" \").concat(point2.x, \",\").concat(point2.y, \" \").concat(point4.x, \",\").concat(point4.y, \" \").concat(point3.x, \",\").concat(point3.y, \" Z\");\n                }\n            }\n            initEvents() {\n                this.DOM.nextCtrl.addEventListener(\"click\", ()=>this.navigate(\"next\"));\n                this.DOM.prevCtrl.addEventListener(\"click\", ()=>this.navigate(\"prev\"));\n                window.addEventListener(\"resize\", debounce(()=>{\n                    this.rect = this.DOM.el.getBoundingClientRect();\n                    this.updateFrame();\n                }, 20));\n                document.addEventListener(\"keydown\", (ev)=>{\n                    const keyCode = ev.keyCode || ev.which;\n                    if (keyCode === 37) {\n                        this.navigate(\"prev\");\n                    } else if (keyCode === 39) {\n                        this.navigate(\"next\");\n                    }\n                });\n            }\n            navigate() {\n                let dir = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"next\";\n                if (this.isAnimating) return false;\n                this.isAnimating = true;\n                const animateShapeIn = anime({\n                    targets: this.DOM.shape,\n                    duration: this.settings.animation.shape.duration,\n                    easing: this.settings.animation.shape.easing.in,\n                    d: this.paths.final\n                });\n                const animateSlides = ()=>{\n                    return new Promise((resolve, reject)=>{\n                        const currentSlide = this.DOM.slides[this.current];\n                        anime({\n                            targets: currentSlide,\n                            duration: this.settings.animation.slides.duration,\n                            easing: this.settings.animation.slides.easing,\n                            translateY: dir === \"next\" ? this.rect.height : -1 * this.rect.height,\n                            complete: ()=>{\n                                currentSlide.classList.remove(\"slide--current\");\n                                resolve();\n                            }\n                        });\n                        const currentTitleSlide = this.DOM.titlesSlides[this.current];\n                        anime({\n                            targets: currentTitleSlide.children,\n                            duration: this.settings.animation.slides.duration,\n                            easing: this.settings.animation.slides.easing,\n                            delay: (t, i, total)=>dir === \"next\" ? i * 100 : (total - i - 1) * 100,\n                            translateY: [\n                                0,\n                                dir === \"next\" ? 100 : -100\n                            ],\n                            opacity: [\n                                1,\n                                0\n                            ],\n                            complete: ()=>{\n                                currentTitleSlide.classList.remove(\"slide--current\");\n                                resolve();\n                            }\n                        });\n                        this.current = dir === \"next\" ? this.current < this.slidesTotal - 1 ? this.current + 1 : 0 : this.current > 0 ? this.current - 1 : this.slidesTotal - 1;\n                        const newSlide = this.DOM.slides[this.current];\n                        newSlide.classList.add(\"slide--current\");\n                        anime({\n                            targets: newSlide,\n                            duration: this.settings.animation.slides.duration,\n                            easing: this.settings.animation.slides.easing,\n                            translateY: [\n                                dir === \"next\" ? -1 * this.rect.height : this.rect.height,\n                                0\n                            ]\n                        });\n                        const newSlideImg = newSlide.querySelector(\".slide__img\");\n                        anime.remove(newSlideImg);\n                        anime({\n                            targets: newSlideImg,\n                            duration: this.settings.animation.slides.duration * 3,\n                            easing: this.settings.animation.slides.easing,\n                            translateY: [\n                                dir === \"next\" ? -100 : 100,\n                                0\n                            ],\n                            scale: [\n                                0.2,\n                                1\n                            ]\n                        });\n                        const newTitleSlide = this.DOM.titlesSlides[this.current];\n                        newTitleSlide.classList.add(\"slide--current\");\n                        anime({\n                            targets: newTitleSlide.children,\n                            duration: this.settings.animation.slides.duration * 1.5,\n                            easing: this.settings.animation.slides.easing,\n                            delay: (t, i, total)=>dir === \"next\" ? i * 100 + 100 : (total - i - 1) * 100 + 100,\n                            translateY: [\n                                dir === \"next\" ? -100 : 100,\n                                0\n                            ],\n                            opacity: [\n                                0,\n                                1\n                            ]\n                        });\n                    });\n                };\n                const animateShapeOut = ()=>{\n                    anime({\n                        targets: this.DOM.shape,\n                        duration: this.settings.animation.shape.duration,\n                        easing: this.settings.animation.shape.easing.out,\n                        d: this.paths.initial,\n                        complete: ()=>this.isAnimating = false\n                    });\n                };\n                animateShapeIn.finished.then(animateSlides).then(animateShapeOut);\n            }\n            constructor(el){\n                this.DOM = {};\n                this.DOM.el = el;\n                this.settings = {\n                    animation: {\n                        slides: {\n                            duration: 500,\n                            easing: \"easeOutQuint\"\n                        },\n                        shape: {\n                            duration: 300,\n                            easing: {\n                                in: \"easeOutQuint\",\n                                out: \"easeOutQuad\"\n                            }\n                        }\n                    },\n                    frameFill: \"url(#gradient1)\"\n                };\n                this.init();\n            }\n        }\n        ;\n        new Slideshow(document.querySelector(\".slideshow\"));\n        imagesLoaded(\".slide__img\", {\n            background: true\n        }, ()=>document.body.classList.remove(\"loading\"));\n    },\n    showcase1 () {\n        var parcelRequire = function(modules, cache, entry, globalName) {\n            // Save the require from previous bundle to this closure if any\n            var previousRequire = typeof parcelRequire === \"function\" && parcelRequire;\n            var nodeRequire = undefined;\n            function newRequire(name, jumped) {\n                if (!cache[name]) {\n                    if (!modules[name]) {\n                        // if we cannot find the module within our internal map or\n                        // cache jump to the current global require ie. the last bundle\n                        // that was added to the page.\n                        var currentRequire = typeof parcelRequire === \"function\" && parcelRequire;\n                        if (!jumped && currentRequire) {\n                            return currentRequire(name, true);\n                        }\n                        // If there are other bundles on this page the require from the\n                        // previous one is saved to 'previousRequire'. Repeat this as\n                        // many times as there are bundles until the module is found or\n                        // we exhaust the require chain.\n                        if (previousRequire) {\n                            return previousRequire(name, true);\n                        }\n                        // Try the node require function if it exists.\n                        if ( true && typeof name === \"string\") {\n                            return __webpack_require__(\"./src/common sync recursive\")(name);\n                        }\n                        var err = new Error(\"Cannot find module '\" + name + \"'\");\n                        err.code = \"MODULE_NOT_FOUND\";\n                        throw err;\n                    }\n                    localRequire.resolve = resolve;\n                    localRequire.cache = {};\n                    module = cache[name] = new newRequire.Module(name);\n                    modules[name][0].call(module.exports, localRequire, module, module.exports, this);\n                }\n                return cache[name].exports;\n                function localRequire(x) {\n                    return newRequire(localRequire.resolve(x));\n                }\n                function resolve(x) {\n                    return modules[name][1][x] || x;\n                }\n            }\n            function Module(moduleName) {\n                this.id = moduleName;\n                this.bundle = newRequire;\n                this.exports = {};\n            }\n            newRequire.isParcelRequire = true;\n            newRequire.Module = Module;\n            newRequire.modules = modules;\n            newRequire.cache = cache;\n            newRequire.parent = previousRequire;\n            newRequire.register = function(id, exports1) {\n                modules[id] = [\n                    function(require1, module1) {\n                        module1.exports = exports1;\n                    },\n                    {}\n                ];\n            };\n            var error;\n            for(var i = 0; i < entry.length; i++){\n                try {\n                    newRequire(entry[i]);\n                } catch (e) {\n                    // Save first error but execute all entries\n                    if (!error) {\n                        error = e;\n                    }\n                }\n            }\n            if (entry.length) {\n                // Expose entry point to Node, AMD or browser globals\n                // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n                var mainExports = newRequire(entry[entry.length - 1]);\n                // CommonJS\n                if (true) {\n                    module.exports = mainExports;\n                // RequireJS\n                } else {}\n            }\n            // Override the current require with this new one\n            parcelRequire = newRequire;\n            if (error) {\n                // throw error from earlier, _after updating parcelRequire_\n                throw error;\n            }\n            return newRequire;\n        }({\n            \"BQvw\": [\n                function(require1, module1, exports1) {\n                    var define1;\n                    var global = arguments[3];\n                    /**\n         * EvEmitter v1.1.0\n         * Lil' event emitter\n         * MIT License\n         */ /* jshint unused: true, undef: true, strict: true */ (function(global, factory) {\n                        // universal module definition\n                        /* jshint strict: false */ /* globals define, module, window */ if (typeof define1 == \"function\" && define1.amd) {\n                            // AMD - RequireJS\n                            define1(factory);\n                        } else if (typeof module1 == \"object\" && module1.exports) {\n                            // CommonJS - Browserify, Webpack\n                            module1.exports = factory();\n                        } else {\n                            // Browser globals\n                            global.EvEmitter = factory();\n                        }\n                    })( true ? window : 0, function() {\n                        \"use strict\";\n                        function EvEmitter() {}\n                        var proto = EvEmitter.prototype;\n                        proto.on = function(eventName, listener) {\n                            if (!eventName || !listener) {\n                                return;\n                            }\n                            // set events hash\n                            var events = this._events = this._events || {};\n                            // set listeners array\n                            var listeners = events[eventName] = events[eventName] || [];\n                            // only add once\n                            if (listeners.indexOf(listener) == -1) {\n                                listeners.push(listener);\n                            }\n                            return this;\n                        };\n                        proto.once = function(eventName, listener) {\n                            if (!eventName || !listener) {\n                                return;\n                            }\n                            // add event\n                            this.on(eventName, listener);\n                            // set once flag\n                            // set onceEvents hash\n                            var onceEvents = this._onceEvents = this._onceEvents || {};\n                            // set onceListeners object\n                            var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n                            // set flag\n                            onceListeners[listener] = true;\n                            return this;\n                        };\n                        proto.off = function(eventName, listener) {\n                            var listeners = this._events && this._events[eventName];\n                            if (!listeners || !listeners.length) {\n                                return;\n                            }\n                            var index = listeners.indexOf(listener);\n                            if (index != -1) {\n                                listeners.splice(index, 1);\n                            }\n                            return this;\n                        };\n                        proto.emitEvent = function(eventName, args) {\n                            var listeners = this._events && this._events[eventName];\n                            if (!listeners || !listeners.length) {\n                                return;\n                            }\n                            // copy over to avoid interference if .off() in listener\n                            listeners = listeners.slice(0);\n                            args = args || [];\n                            // once stuff\n                            var onceListeners = this._onceEvents && this._onceEvents[eventName];\n                            for(var i = 0; i < listeners.length; i++){\n                                var listener = listeners[i];\n                                var isOnce = onceListeners && onceListeners[listener];\n                                if (isOnce) {\n                                    // remove listener\n                                    // remove before trigger to prevent recursion\n                                    this.off(eventName, listener);\n                                    // unset once flag\n                                    delete onceListeners[listener];\n                                }\n                                // trigger listener\n                                listener.apply(this, args);\n                            }\n                            return this;\n                        };\n                        proto.allOff = function() {\n                            delete this._events;\n                            delete this._onceEvents;\n                        };\n                        return EvEmitter;\n                    });\n                },\n                {}\n            ],\n            \"lc7f\": [\n                function(require1, module1, exports1) {\n                    var define1;\n                    /*!\n         * imagesLoaded v4.1.4\n         * JavaScript is all like \"You images are done yet or what?\"\n         * MIT License\n         */ (function(window1, factory) {\n                        \"use strict\";\n                        // universal module definition\n                        /*global define: false, module: false, require: false */ if (typeof define1 == \"function\" && define1.amd) {\n                            // AMD\n                            define1([\n                                \"ev-emitter/ev-emitter\"\n                            ], function(EvEmitter) {\n                                return factory(window1, EvEmitter);\n                            });\n                        } else if (typeof module1 == \"object\" && module1.exports) {\n                            // CommonJS\n                            module1.exports = factory(window1, require1(\"ev-emitter\"));\n                        } else {\n                            // browser global\n                            window1.imagesLoaded = factory(window1, window1.EvEmitter);\n                        }\n                    })( true ? window : 0, // --------------------------  factory -------------------------- //\n                    function factory(window1, EvEmitter) {\n                        \"use strict\";\n                        var $ = window1.jQuery;\n                        var console1 = window1.console;\n                        // -------------------------- helpers -------------------------- //\n                        // extend objects\n                        function extend(a, b) {\n                            for(var prop in b){\n                                a[prop] = b[prop];\n                            }\n                            return a;\n                        }\n                        var arraySlice = Array.prototype.slice;\n                        // turn element or nodeList into an array\n                        function makeArray(obj) {\n                            if (Array.isArray(obj)) {\n                                // use object if already an array\n                                return obj;\n                            }\n                            var isArrayLike = typeof obj == \"object\" && typeof obj.length == \"number\";\n                            if (isArrayLike) {\n                                // convert nodeList to array\n                                return arraySlice.call(obj);\n                            }\n                            // array of single index\n                            return [\n                                obj\n                            ];\n                        }\n                        // -------------------------- imagesLoaded -------------------------- //\n                        /**\n             * @param {Array, Element, NodeList, String} elem\n             * @param {Object or Function} options - if function, use as callback\n             * @param {Function} onAlways - callback function\n             */ function ImagesLoaded(elem, options, onAlways) {\n                            // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n                            if (!(this instanceof ImagesLoaded)) {\n                                return new ImagesLoaded(elem, options, onAlways);\n                            }\n                            // use elem as selector string\n                            var queryElem = elem;\n                            if (typeof elem == \"string\") {\n                                queryElem = document.querySelectorAll(elem);\n                            }\n                            // bail if bad element\n                            if (!queryElem) {\n                                console1.error(\"Bad element for imagesLoaded \" + (queryElem || elem));\n                                return;\n                            }\n                            this.elements = makeArray(queryElem);\n                            this.options = extend({}, this.options);\n                            // shift arguments if no options set\n                            if (typeof options == \"function\") {\n                                onAlways = options;\n                            } else {\n                                extend(this.options, options);\n                            }\n                            if (onAlways) {\n                                this.on(\"always\", onAlways);\n                            }\n                            this.getImages();\n                            if ($) {\n                                // add jQuery Deferred object\n                                this.jqDeferred = new $.Deferred();\n                            }\n                            // HACK check async to allow time to bind listeners\n                            setTimeout(this.check.bind(this));\n                        }\n                        ImagesLoaded.prototype = Object.create(EvEmitter.prototype);\n                        ImagesLoaded.prototype.options = {};\n                        ImagesLoaded.prototype.getImages = function() {\n                            this.images = [];\n                            // filter & find items if we have an item selector\n                            this.elements.forEach(this.addElementImages, this);\n                        };\n                        /**\n             * @param {Node} element\n             */ ImagesLoaded.prototype.addElementImages = function(elem) {\n                            // filter siblings\n                            if (elem.nodeName == \"IMG\") {\n                                this.addImage(elem);\n                            }\n                            // get background image on element\n                            if (this.options.background === true) {\n                                this.addElementBackgroundImages(elem);\n                            }\n                            // find children\n                            // no non-element nodes, #143\n                            var nodeType = elem.nodeType;\n                            if (!nodeType || !elementNodeTypes[nodeType]) {\n                                return;\n                            }\n                            var childImgs = elem.querySelectorAll(\"img\");\n                            // concat childElems to filterFound array\n                            for(var i = 0; i < childImgs.length; i++){\n                                var img = childImgs[i];\n                                this.addImage(img);\n                            }\n                            // get child background images\n                            if (typeof this.options.background == \"string\") {\n                                var children = elem.querySelectorAll(this.options.background);\n                                for(i = 0; i < children.length; i++){\n                                    var child = children[i];\n                                    this.addElementBackgroundImages(child);\n                                }\n                            }\n                        };\n                        var elementNodeTypes = {\n                            1: true,\n                            9: true,\n                            11: true\n                        };\n                        ImagesLoaded.prototype.addElementBackgroundImages = function(elem) {\n                            var style = getComputedStyle(elem);\n                            if (!style) {\n                                // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n                                return;\n                            }\n                            // get url inside url(\"...\")\n                            var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n                            var matches = reURL.exec(style.backgroundImage);\n                            while(matches !== null){\n                                var url = matches && matches[2];\n                                if (url) {\n                                    this.addBackground(url, elem);\n                                }\n                                matches = reURL.exec(style.backgroundImage);\n                            }\n                        };\n                        /**\n             * @param {Image} img\n             */ ImagesLoaded.prototype.addImage = function(img) {\n                            var loadingImage = new LoadingImage(img);\n                            this.images.push(loadingImage);\n                        };\n                        ImagesLoaded.prototype.addBackground = function(url, elem) {\n                            var background = new Background(url, elem);\n                            this.images.push(background);\n                        };\n                        ImagesLoaded.prototype.check = function() {\n                            var _this = this;\n                            this.progressedCount = 0;\n                            this.hasAnyBroken = false;\n                            // complete if no images\n                            if (!this.images.length) {\n                                this.complete();\n                                return;\n                            }\n                            function onProgress(image, elem, message) {\n                                // HACK - Chrome triggers event before object properties have changed. #83\n                                setTimeout(function() {\n                                    _this.progress(image, elem, message);\n                                });\n                            }\n                            this.images.forEach(function(loadingImage) {\n                                loadingImage.once(\"progress\", onProgress);\n                                loadingImage.check();\n                            });\n                        };\n                        ImagesLoaded.prototype.progress = function(image, elem, message) {\n                            this.progressedCount++;\n                            this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n                            // progress event\n                            this.emitEvent(\"progress\", [\n                                this,\n                                image,\n                                elem\n                            ]);\n                            if (this.jqDeferred && this.jqDeferred.notify) {\n                                this.jqDeferred.notify(this, image);\n                            }\n                            // check if completed\n                            if (this.progressedCount == this.images.length) {\n                                this.complete();\n                            }\n                            if (this.options.debug && console1) {\n                                /* eslint-disable */ console1.log(...oo_oo(\"548879088_677_16_677_64_4\", \"progress: \" + message, image, elem));\n                            }\n                        };\n                        ImagesLoaded.prototype.complete = function() {\n                            var eventName = this.hasAnyBroken ? \"fail\" : \"done\";\n                            this.isComplete = true;\n                            this.emitEvent(eventName, [\n                                this\n                            ]);\n                            this.emitEvent(\"always\", [\n                                this\n                            ]);\n                            if (this.jqDeferred) {\n                                var jqMethod = this.hasAnyBroken ? \"reject\" : \"resolve\";\n                                this.jqDeferred[jqMethod](this);\n                            }\n                        };\n                        // --------------------------  -------------------------- //\n                        function LoadingImage(img) {\n                            this.img = img;\n                        }\n                        LoadingImage.prototype = Object.create(EvEmitter.prototype);\n                        LoadingImage.prototype.check = function() {\n                            // If complete is true and browser supports natural sizes,\n                            // try to check for image status manually.\n                            var isComplete = this.getIsImageComplete();\n                            if (isComplete) {\n                                // report based on naturalWidth\n                                this.confirm(this.img.naturalWidth !== 0, \"naturalWidth\");\n                                return;\n                            }\n                            // If none of the checks above matched, simulate loading on detached element.\n                            this.proxyImage = new Image();\n                            this.proxyImage.addEventListener(\"load\", this);\n                            this.proxyImage.addEventListener(\"error\", this);\n                            // bind to image as well for Firefox. #191\n                            this.img.addEventListener(\"load\", this);\n                            this.img.addEventListener(\"error\", this);\n                            this.proxyImage.src = this.img.src;\n                        };\n                        LoadingImage.prototype.getIsImageComplete = function() {\n                            // check for non-zero, non-undefined naturalWidth\n                            // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671\n                            return this.img.complete && this.img.naturalWidth;\n                        };\n                        LoadingImage.prototype.confirm = function(isLoaded, message) {\n                            this.isLoaded = isLoaded;\n                            this.emitEvent(\"progress\", [\n                                this,\n                                this.img,\n                                message\n                            ]);\n                        };\n                        // ----- events ----- //\n                        // trigger specified handler for event type\n                        LoadingImage.prototype.handleEvent = function(event) {\n                            var method = \"on\" + event.type;\n                            if (this[method]) {\n                                this[method](event);\n                            }\n                        };\n                        LoadingImage.prototype.onload = function() {\n                            this.confirm(true, \"onload\");\n                            this.unbindEvents();\n                        };\n                        LoadingImage.prototype.onerror = function() {\n                            this.confirm(false, \"onerror\");\n                            this.unbindEvents();\n                        };\n                        LoadingImage.prototype.unbindEvents = function() {\n                            this.proxyImage.removeEventListener(\"load\", this);\n                            this.proxyImage.removeEventListener(\"error\", this);\n                            this.img.removeEventListener(\"load\", this);\n                            this.img.removeEventListener(\"error\", this);\n                        };\n                        // -------------------------- Background -------------------------- //\n                        function Background(url, element) {\n                            this.url = url;\n                            this.element = element;\n                            this.img = new Image();\n                        }\n                        // inherit LoadingImage prototype\n                        Background.prototype = Object.create(LoadingImage.prototype);\n                        Background.prototype.check = function() {\n                            this.img.addEventListener(\"load\", this);\n                            this.img.addEventListener(\"error\", this);\n                            this.img.src = this.url;\n                            // check if image is already complete\n                            var isComplete = this.getIsImageComplete();\n                            if (isComplete) {\n                                this.confirm(this.img.naturalWidth !== 0, \"naturalWidth\");\n                                this.unbindEvents();\n                            }\n                        };\n                        Background.prototype.unbindEvents = function() {\n                            this.img.removeEventListener(\"load\", this);\n                            this.img.removeEventListener(\"error\", this);\n                        };\n                        Background.prototype.confirm = function(isLoaded, message) {\n                            this.isLoaded = isLoaded;\n                            this.emitEvent(\"progress\", [\n                                this,\n                                this.element,\n                                message\n                            ]);\n                        };\n                        // -------------------------- jQuery -------------------------- //\n                        ImagesLoaded.makeJQueryPlugin = function(jQuery) {\n                            jQuery = jQuery || window1.jQuery;\n                            if (!jQuery) {\n                                return;\n                            }\n                            // set local variable\n                            $ = jQuery;\n                            // $().imagesLoaded()\n                            $.fn.imagesLoaded = function(options, callback) {\n                                var instance = new ImagesLoaded(this, options, callback);\n                                return instance.jqDeferred.promise($(this));\n                            };\n                        };\n                        // try making plugin\n                        ImagesLoaded.makeJQueryPlugin();\n                        // --------------------------  -------------------------- //\n                        return ImagesLoaded;\n                    });\n                },\n                {\n                    \"ev-emitter\": \"BQvw\"\n                }\n            ],\n            \"8MgT\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    exports1.preloadImages = void 0;\n                    var imagesLoaded1 = require1(\"imagesloaded\"); // Preload images\n                    var preloadImages = function preloadImages() {\n                        var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"img\";\n                        return new Promise(function(resolve) {\n                            imagesLoaded1(document.querySelectorAll(selector), {\n                                background: true\n                            }, resolve);\n                        });\n                    };\n                    exports1.preloadImages = preloadImages;\n                },\n                {\n                    \"imagesloaded\": \"lc7f\"\n                }\n            ],\n            \"qr+2\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    exports1.Navigation = void 0;\n                    function _classCallCheck(instance, Constructor) {\n                        if (!(instance instanceof Constructor)) {\n                            throw new TypeError(\"Cannot call a class as a function\");\n                        }\n                    }\n                    function _defineProperties(target, props) {\n                        for(var i = 0; i < props.length; i++){\n                            var descriptor = props[i];\n                            descriptor.enumerable = descriptor.enumerable || false;\n                            descriptor.configurable = true;\n                            if (\"value\" in descriptor) descriptor.writable = true;\n                            Object.defineProperty(target, descriptor.key, descriptor);\n                        }\n                    }\n                    function _createClass(Constructor, protoProps, staticProps) {\n                        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                        if (staticProps) _defineProperties(Constructor, staticProps);\n                        return Constructor;\n                    }\n                    var Navigation = /*#__PURE__*/ function() {\n                        function Navigation(el) {\n                            _classCallCheck(this, Navigation);\n                            this.DOM = {\n                                el: el\n                            };\n                            this.DOM.ctrls = {\n                                next: this.DOM.el.querySelector(\".slides-nav__button--next\"),\n                                prev: this.DOM.el.querySelector(\".slides-nav__button--prev\")\n                            };\n                            this.DOM.current = this.DOM.el.querySelector(\".slides-nav__index-current\");\n                            this.DOM.total = this.DOM.el.querySelector(\".slides-nav__index-total\");\n                        } // updates the current value\n                        _createClass(Navigation, [\n                            {\n                                key: \"updateCurrent\",\n                                value: function updateCurrent(position) {\n                                    this.DOM.current.innerHTML = position < 10 ? \"0\".concat(position + 1) : position;\n                                }\n                            }\n                        ]);\n                        return Navigation;\n                    }();\n                    exports1.Navigation = Navigation;\n                },\n                {}\n            ],\n            \"Drnq\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    exports1.Slide = void 0;\n                    function _classCallCheck(instance, Constructor) {\n                        if (!(instance instanceof Constructor)) {\n                            throw new TypeError(\"Cannot call a class as a function\");\n                        }\n                    }\n                    var Slide = function Slide(el) {\n                        _classCallCheck(this, Slide);\n                        this.DOM = {\n                            el: el\n                        };\n                        this.DOM.imgWrap = this.DOM.el.querySelector(\".slide__img-wrap\");\n                        this.DOM.img = this.DOM.imgWrap.querySelector(\".slide__img\");\n                        this.DOM.headline = this.DOM.el.querySelector(\".slides__caption-headline\");\n                        this.DOM.text = this.DOM.headline.querySelectorAll(\".text-row > span\");\n                        this.DOM.link = this.DOM.el.querySelector(\".slides__caption-link\");\n                    };\n                    exports1.Slide = Slide;\n                },\n                {}\n            ],\n            \"FRpO\": [\n                function(require1, module1, exports1) {\n                    // Copyright Joyent, Inc. and other Node contributors.\n                    //\n                    // Permission is hereby granted, free of charge, to any person obtaining a\n                    // copy of this software and associated documentation files (the\n                    // \"Software\"), to deal in the Software without restriction, including\n                    // without limitation the rights to use, copy, modify, merge, publish,\n                    // distribute, sublicense, and/or sell copies of the Software, and to permit\n                    // persons to whom the Software is furnished to do so, subject to the\n                    // following conditions:\n                    //\n                    // The above copyright notice and this permission notice shall be included\n                    // in all copies or substantial portions of the Software.\n                    //\n                    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                    \"use strict\";\n                    var R = typeof Reflect === \"object\" ? Reflect : null;\n                    var ReflectApply = R && typeof R.apply === \"function\" ? R.apply : function ReflectApply(target, receiver, args) {\n                        return Function.prototype.apply.call(target, receiver, args);\n                    };\n                    var ReflectOwnKeys;\n                    if (R && typeof R.ownKeys === \"function\") {\n                        ReflectOwnKeys = R.ownKeys;\n                    } else if (Object.getOwnPropertySymbols) {\n                        ReflectOwnKeys = function ReflectOwnKeys(target) {\n                            return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n                        };\n                    } else {\n                        ReflectOwnKeys = function ReflectOwnKeys(target) {\n                            return Object.getOwnPropertyNames(target);\n                        };\n                    }\n                    function ProcessEmitWarning(warning) {\n                        if (console && console.warn) console.warn(warning);\n                    }\n                    var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n                        return value !== value;\n                    };\n                    function EventEmitter() {\n                        EventEmitter.init.call(this);\n                    }\n                    module1.exports = EventEmitter;\n                    module1.exports.once = once; // Backwards-compat with node 0.10.x\n                    EventEmitter.EventEmitter = EventEmitter;\n                    EventEmitter.prototype._events = undefined;\n                    EventEmitter.prototype._eventsCount = 0;\n                    EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n                    // added to it. This is a useful default which helps finding memory leaks.\n                    var defaultMaxListeners = 10;\n                    function checkListener(listener) {\n                        if (typeof listener !== \"function\") {\n                            throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n                        }\n                    }\n                    Object.defineProperty(EventEmitter, \"defaultMaxListeners\", {\n                        enumerable: true,\n                        get: function() {\n                            return defaultMaxListeners;\n                        },\n                        set: function(arg) {\n                            if (typeof arg !== \"number\" || arg < 0 || NumberIsNaN(arg)) {\n                                throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + \".\");\n                            }\n                            defaultMaxListeners = arg;\n                        }\n                    });\n                    EventEmitter.init = function() {\n                        if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n                            this._events = Object.create(null);\n                            this._eventsCount = 0;\n                        }\n                        this._maxListeners = this._maxListeners || undefined;\n                    }; // Obviously not all Emitters should be limited to 10. This function allows\n                    // that to be increased. Set to zero for unlimited.\n                    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n                        if (typeof n !== \"number\" || n < 0 || NumberIsNaN(n)) {\n                            throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + \".\");\n                        }\n                        this._maxListeners = n;\n                        return this;\n                    };\n                    function _getMaxListeners(that) {\n                        if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n                        return that._maxListeners;\n                    }\n                    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n                        return _getMaxListeners(this);\n                    };\n                    EventEmitter.prototype.emit = function emit(type) {\n                        var args = [];\n                        for(var i = 1; i < arguments.length; i++)args.push(arguments[i]);\n                        var doError = type === \"error\";\n                        var events = this._events;\n                        if (events !== undefined) doError = doError && events.error === undefined;\n                        else if (!doError) return false; // If there is no 'error' event listener then throw.\n                        if (doError) {\n                            var er;\n                            if (args.length > 0) er = args[0];\n                            if (er instanceof Error) {\n                                // Note: The comments on the `throw` lines are intentional, they show\n                                // up in Node's output if this results in an unhandled exception.\n                                throw er; // Unhandled 'error' event\n                            } // At least give some kind of context to the user\n                            var err = new Error(\"Unhandled error.\" + (er ? \" (\" + er.message + \")\" : \"\"));\n                            err.context = er;\n                            throw err; // Unhandled 'error' event\n                        }\n                        var handler = events[type];\n                        if (handler === undefined) return false;\n                        if (typeof handler === \"function\") {\n                            ReflectApply(handler, this, args);\n                        } else {\n                            var len = handler.length;\n                            var listeners = arrayClone(handler, len);\n                            for(var i = 0; i < len; ++i)ReflectApply(listeners[i], this, args);\n                        }\n                        return true;\n                    };\n                    function _addListener(target, type, listener, prepend) {\n                        var m;\n                        var events;\n                        var existing;\n                        checkListener(listener);\n                        events = target._events;\n                        if (events === undefined) {\n                            events = target._events = Object.create(null);\n                            target._eventsCount = 0;\n                        } else {\n                            // To avoid recursion in the case that type === \"newListener\"! Before\n                            // adding it to the listeners, first emit \"newListener\".\n                            if (events.newListener !== undefined) {\n                                target.emit(\"newListener\", type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n                                // this._events to be assigned to a new object\n                                events = target._events;\n                            }\n                            existing = events[type];\n                        }\n                        if (existing === undefined) {\n                            // Optimize the case of one listener. Don't need the extra array object.\n                            existing = events[type] = listener;\n                            ++target._eventsCount;\n                        } else {\n                            if (typeof existing === \"function\") {\n                                // Adding the second element, need to change to array.\n                                existing = events[type] = prepend ? [\n                                    listener,\n                                    existing\n                                ] : [\n                                    existing,\n                                    listener\n                                ]; // If we've already got an array, just append.\n                            } else if (prepend) {\n                                existing.unshift(listener);\n                            } else {\n                                existing.push(listener);\n                            } // Check for listener leak\n                            m = _getMaxListeners(target);\n                            if (m > 0 && existing.length > m && !existing.warned) {\n                                existing.warned = true; // No error code for this since it is a Warning\n                                // eslint-disable-next-line no-restricted-syntax\n                                var w = new Error(\"Possible EventEmitter memory leak detected. \" + existing.length + \" \" + String(type) + \" listeners \" + \"added. Use emitter.setMaxListeners() to \" + \"increase limit\");\n                                w.name = \"MaxListenersExceededWarning\";\n                                w.emitter = target;\n                                w.type = type;\n                                w.count = existing.length;\n                                ProcessEmitWarning(w);\n                            }\n                        }\n                        return target;\n                    }\n                    EventEmitter.prototype.addListener = function addListener(type, listener) {\n                        return _addListener(this, type, listener, false);\n                    };\n                    EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n                    EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n                        return _addListener(this, type, listener, true);\n                    };\n                    function onceWrapper() {\n                        if (!this.fired) {\n                            this.target.removeListener(this.type, this.wrapFn);\n                            this.fired = true;\n                            if (arguments.length === 0) return this.listener.call(this.target);\n                            return this.listener.apply(this.target, arguments);\n                        }\n                    }\n                    function _onceWrap(target, type, listener) {\n                        var state = {\n                            fired: false,\n                            wrapFn: undefined,\n                            target: target,\n                            type: type,\n                            listener: listener\n                        };\n                        var wrapped = onceWrapper.bind(state);\n                        wrapped.listener = listener;\n                        state.wrapFn = wrapped;\n                        return wrapped;\n                    }\n                    EventEmitter.prototype.once = function once(type, listener) {\n                        checkListener(listener);\n                        this.on(type, _onceWrap(this, type, listener));\n                        return this;\n                    };\n                    EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n                        checkListener(listener);\n                        this.prependListener(type, _onceWrap(this, type, listener));\n                        return this;\n                    }; // Emits a 'removeListener' event if and only if the listener was removed.\n                    EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n                        var list, events, position, i, originalListener;\n                        checkListener(listener);\n                        events = this._events;\n                        if (events === undefined) return this;\n                        list = events[type];\n                        if (list === undefined) return this;\n                        if (list === listener || list.listener === listener) {\n                            if (--this._eventsCount === 0) this._events = Object.create(null);\n                            else {\n                                delete events[type];\n                                if (events.removeListener) this.emit(\"removeListener\", type, list.listener || listener);\n                            }\n                        } else if (typeof list !== \"function\") {\n                            position = -1;\n                            for(i = list.length - 1; i >= 0; i--){\n                                if (list[i] === listener || list[i].listener === listener) {\n                                    originalListener = list[i].listener;\n                                    position = i;\n                                    break;\n                                }\n                            }\n                            if (position < 0) return this;\n                            if (position === 0) list.shift();\n                            else {\n                                spliceOne(list, position);\n                            }\n                            if (list.length === 1) events[type] = list[0];\n                            if (events.removeListener !== undefined) this.emit(\"removeListener\", type, originalListener || listener);\n                        }\n                        return this;\n                    };\n                    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n                    EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n                        var listeners, events, i;\n                        events = this._events;\n                        if (events === undefined) return this; // not listening for removeListener, no need to emit\n                        if (events.removeListener === undefined) {\n                            if (arguments.length === 0) {\n                                this._events = Object.create(null);\n                                this._eventsCount = 0;\n                            } else if (events[type] !== undefined) {\n                                if (--this._eventsCount === 0) this._events = Object.create(null);\n                                else delete events[type];\n                            }\n                            return this;\n                        } // emit removeListener for all listeners on all events\n                        if (arguments.length === 0) {\n                            var keys = Object.keys(events);\n                            var key;\n                            for(i = 0; i < keys.length; ++i){\n                                key = keys[i];\n                                if (key === \"removeListener\") continue;\n                                this.removeAllListeners(key);\n                            }\n                            this.removeAllListeners(\"removeListener\");\n                            this._events = Object.create(null);\n                            this._eventsCount = 0;\n                            return this;\n                        }\n                        listeners = events[type];\n                        if (typeof listeners === \"function\") {\n                            this.removeListener(type, listeners);\n                        } else if (listeners !== undefined) {\n                            // LIFO order\n                            for(i = listeners.length - 1; i >= 0; i--){\n                                this.removeListener(type, listeners[i]);\n                            }\n                        }\n                        return this;\n                    };\n                    function _listeners(target, type, unwrap) {\n                        var events = target._events;\n                        if (events === undefined) return [];\n                        var evlistener = events[type];\n                        if (evlistener === undefined) return [];\n                        if (typeof evlistener === \"function\") return unwrap ? [\n                            evlistener.listener || evlistener\n                        ] : [\n                            evlistener\n                        ];\n                        return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n                    }\n                    EventEmitter.prototype.listeners = function listeners(type) {\n                        return _listeners(this, type, true);\n                    };\n                    EventEmitter.prototype.rawListeners = function rawListeners(type) {\n                        return _listeners(this, type, false);\n                    };\n                    EventEmitter.listenerCount = function(emitter, type) {\n                        if (typeof emitter.listenerCount === \"function\") {\n                            return emitter.listenerCount(type);\n                        } else {\n                            return listenerCount.call(emitter, type);\n                        }\n                    };\n                    EventEmitter.prototype.listenerCount = listenerCount;\n                    function listenerCount(type) {\n                        var events = this._events;\n                        if (events !== undefined) {\n                            var evlistener = events[type];\n                            if (typeof evlistener === \"function\") {\n                                return 1;\n                            } else if (evlistener !== undefined) {\n                                return evlistener.length;\n                            }\n                        }\n                        return 0;\n                    }\n                    EventEmitter.prototype.eventNames = function eventNames() {\n                        return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n                    };\n                    function arrayClone(arr, n) {\n                        var copy = new Array(n);\n                        for(var i = 0; i < n; ++i)copy[i] = arr[i];\n                        return copy;\n                    }\n                    function spliceOne(list, index) {\n                        for(; index + 1 < list.length; index++)list[index] = list[index + 1];\n                        list.pop();\n                    }\n                    function unwrapListeners(arr) {\n                        var ret = new Array(arr.length);\n                        for(var i = 0; i < ret.length; ++i){\n                            ret[i] = arr[i].listener || arr[i];\n                        }\n                        return ret;\n                    }\n                    function once(emitter, name) {\n                        return new Promise(function(resolve, reject) {\n                            function errorListener(err) {\n                                emitter.removeListener(name, resolver);\n                                reject(err);\n                            }\n                            function resolver() {\n                                if (typeof emitter.removeListener === \"function\") {\n                                    emitter.removeListener(\"error\", errorListener);\n                                }\n                                resolve([].slice.call(arguments));\n                            }\n                            ;\n                            eventTargetAgnosticAddListener(emitter, name, resolver, {\n                                once: true\n                            });\n                            if (name !== \"error\") {\n                                addErrorHandlerIfEventEmitter(emitter, errorListener, {\n                                    once: true\n                                });\n                            }\n                        });\n                    }\n                    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n                        if (typeof emitter.on === \"function\") {\n                            eventTargetAgnosticAddListener(emitter, \"error\", handler, flags);\n                        }\n                    }\n                    function eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n                        if (typeof emitter.on === \"function\") {\n                            if (flags.once) {\n                                emitter.once(name, listener);\n                            } else {\n                                emitter.on(name, listener);\n                            }\n                        } else if (typeof emitter.addEventListener === \"function\") {\n                            // EventTarget does not have `error` event semantics like Node\n                            // EventEmitters, we do not listen for `error` events here.\n                            emitter.addEventListener(name, function wrapListener(arg) {\n                                // IE does not have builtin `{ once: true }` support so we\n                                // have to do it manually.\n                                if (flags.once) {\n                                    emitter.removeEventListener(name, wrapListener);\n                                }\n                                listener(arg);\n                            });\n                        } else {\n                            throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n                        }\n                    }\n                },\n                {}\n            ],\n            \"TNS6\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    exports1._getCache = exports1._getSetter = exports1._missingPlugin = exports1._round = exports1._roundModifier = exports1._config = exports1._ticker = exports1._plugins = exports1._checkPlugin = exports1._replaceRandom = exports1._colorStringFilter = exports1._sortPropTweensByPriority = exports1._forEachName = exports1._removeLinkedListItem = exports1._setDefaults = exports1._relExp = exports1._renderComplexString = exports1._isUndefined = exports1._isString = exports1._numWithUnitExp = exports1._numExp = exports1._getProperty = exports1.shuffle = exports1.interpolate = exports1.unitize = exports1.pipe = exports1.mapRange = exports1.toArray = exports1.splitColor = exports1.clamp = exports1.getUnit = exports1.normalize = exports1.snap = exports1.random = exports1.distribute = exports1.wrapYoyo = exports1.wrap = exports1.Circ = exports1.Expo = exports1.Sine = exports1.Bounce = exports1.SteppedEase = exports1.Back = exports1.Elastic = exports1.Strong = exports1.Quint = exports1.Quart = exports1.Cubic = exports1.Quad = exports1.Linear = exports1.Power4 = exports1.Power3 = exports1.Power2 = exports1.Power1 = exports1.Power0 = exports1.default = exports1.gsap = exports1.PropTween = exports1.TweenLite = exports1.TweenMax = exports1.Tween = exports1.TimelineLite = exports1.TimelineMax = exports1.Timeline = exports1.Animation = exports1.GSCache = void 0;\n                    function _assertThisInitialized(self) {\n                        if (self === void 0) {\n                            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                        }\n                        return self;\n                    }\n                    function _inheritsLoose(subClass, superClass) {\n                        subClass.prototype = Object.create(superClass.prototype);\n                        subClass.prototype.constructor = subClass;\n                        subClass.__proto__ = superClass;\n                    }\n                    /*!\n         * GSAP 3.6.0\n         * https://greensock.com\n         *\n         * @license Copyright 2008-2021, GreenSock. All rights reserved.\n         * Subject to the terms at https://greensock.com/standard-license or for\n         * Club GreenSock members, the agreement issued with that membership.\n         * @author: Jack Doyle, jack@greensock.com\n        */ /* eslint-disable */ var _config = {\n                        autoSleep: 120,\n                        force3D: \"auto\",\n                        nullTargetWarn: 1,\n                        units: {\n                            lineHeight: \"\"\n                        }\n                    }, _defaults = {\n                        duration: .5,\n                        overwrite: false,\n                        delay: 0\n                    }, _suppressOverwrites, _bigNum = 1e8, _tinyNum = 1 / _bigNum, _2PI = Math.PI * 2, _HALF_PI = _2PI / 4, _gsID = 0, _sqrt = Math.sqrt, _cos = Math.cos, _sin = Math.sin, _isString = function _isString(value) {\n                        return typeof value === \"string\";\n                    }, _isFunction = function _isFunction(value) {\n                        return typeof value === \"function\";\n                    }, _isNumber = function _isNumber(value) {\n                        return typeof value === \"number\";\n                    }, _isUndefined = function _isUndefined(value) {\n                        return typeof value === \"undefined\";\n                    }, _isObject = function _isObject(value) {\n                        return typeof value === \"object\";\n                    }, _isNotFalse = function _isNotFalse(value) {\n                        return value !== false;\n                    }, _windowExists = function _windowExists() {\n                        return \"object\" !== \"undefined\";\n                    }, _isFuncOrString = function _isFuncOrString(value) {\n                        return _isFunction(value) || _isString(value);\n                    }, _isTypedArray = typeof ArrayBuffer === \"function\" && ArrayBuffer.isView || function() {}, // note: IE10 has ArrayBuffer, but NOT ArrayBuffer.isView().\n                    _isArray = Array.isArray, _strictNumExp = /(?:-?\\.?\\d|\\.)+/gi, //only numbers (including negatives and decimals) but NOT relative values.\n                    _numExp = /[-+=.]*\\d+[.e\\-+]*\\d*[e\\-+]*\\d*/g, //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.\n                    _numWithUnitExp = /[-+=.]*\\d+[.e-]*\\d*[a-z%]*/g, _complexStringNumExp = /[-+=.]*\\d+\\.?\\d*(?:e-|e\\+)?\\d*/gi, //duplicate so that while we're looping through matches from exec(), it doesn't contaminate the lastIndex of _numExp which we use to search for colors too.\n                    _relExp = /[+-]=-?[.\\d]+/, _delimitedValueExp = /[#\\-+.]*\\b[a-z\\d-=+%.]+/gi, _unitExp = /[\\d.+\\-=]+(?:e[-+]\\d*)*/i, _globalTimeline, _win, _coreInitted, _doc, _globals = {}, _installScope = {}, _coreReady, _install = function _install(scope) {\n                        return (_installScope = _merge(scope, _globals)) && gsap;\n                    }, _missingPlugin = function _missingPlugin(property, value) {\n                        return console.warn(\"Invalid property\", property, \"set to\", value, \"Missing plugin? gsap.registerPlugin()\");\n                    }, _warn = function _warn(message, suppress) {\n                        return !suppress && console.warn(message);\n                    }, _addGlobal = function _addGlobal(name, obj) {\n                        return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;\n                    }, _emptyFunc = function _emptyFunc() {\n                        return 0;\n                    }, _reservedProps = {}, _lazyTweens = [], _lazyLookup = {}, _lastRenderedFrame, _plugins = {}, _effects = {}, _nextGCFrame = 30, _harnessPlugins = [], _callbackNames = \"\", _harness = function _harness(targets) {\n                        var target = targets[0], harnessPlugin, i;\n                        _isObject(target) || _isFunction(target) || (targets = [\n                            targets\n                        ]);\n                        if (!(harnessPlugin = (target._gsap || {}).harness)) {\n                            // find the first target with a harness. We assume targets passed into an animation will be of similar type, meaning the same kind of harness can be used for them all (performance optimization)\n                            i = _harnessPlugins.length;\n                            while(i-- && !_harnessPlugins[i].targetTest(target)){}\n                            harnessPlugin = _harnessPlugins[i];\n                        }\n                        i = targets.length;\n                        while(i--){\n                            targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);\n                        }\n                        return targets;\n                    }, _getCache = function _getCache(target) {\n                        return target._gsap || _harness(toArray(target))[0]._gsap;\n                    }, _getProperty = function _getProperty(target, property, v) {\n                        return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;\n                    }, _forEachName = function _forEachName(names, func) {\n                        return (names = names.split(\",\")).forEach(func) || names;\n                    }, //split a comma-delimited list of names into an array, then run a forEach() function and return the split array (this is just a way to consolidate/shorten some code).\n                    _round = function _round(value) {\n                        return Math.round(value * 100000) / 100000 || 0;\n                    }, _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {\n                        //searches one array to find matches for any of the items in the toFind array. As soon as one is found, it returns true. It does NOT return all the matches; it's simply a boolean search.\n                        var l = toFind.length, i = 0;\n                        for(; toSearch.indexOf(toFind[i]) < 0 && ++i < l;){}\n                        return i < l;\n                    }, _parseVars = function _parseVars(params, type, parent) {\n                        //reads the arguments passed to one of the key methods and figures out if the user is defining things with the OLD/legacy syntax where the duration is the 2nd parameter, and then it adjusts things accordingly and spits back the corrected vars object (with the duration added if necessary, as well as runBackwards or startAt or immediateRender). type 0 = to()/staggerTo(), 1 = from()/staggerFrom(), 2 = fromTo()/staggerFromTo()\n                        var isLegacy = _isNumber(params[1]), varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1), vars = params[varsIndex], irVars;\n                        isLegacy && (vars.duration = params[1]);\n                        vars.parent = parent;\n                        if (type) {\n                            irVars = vars;\n                            while(parent && !(\"immediateRender\" in irVars)){\n                                // inheritance hasn't happened yet, but someone may have set a default in an ancestor timeline. We could do vars.immediateRender = _isNotFalse(_inheritDefaults(vars).immediateRender) but that'd exact a slight performance penalty because _inheritDefaults() also runs in the Tween constructor. We're paying a small kb price here to gain speed.\n                                irVars = parent.vars.defaults || {};\n                                parent = _isNotFalse(parent.vars.inherit) && parent.parent;\n                            }\n                            vars.immediateRender = _isNotFalse(irVars.immediateRender);\n                            type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1]; // \"from\" vars\n                        }\n                        return vars;\n                    }, _lazyRender = function _lazyRender() {\n                        var l = _lazyTweens.length, a = _lazyTweens.slice(0), i, tween;\n                        _lazyLookup = {};\n                        _lazyTweens.length = 0;\n                        for(i = 0; i < l; i++){\n                            tween = a[i];\n                            tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);\n                        }\n                    }, _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {\n                        _lazyTweens.length && _lazyRender();\n                        animation.render(time, suppressEvents, force);\n                        _lazyTweens.length && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.\n                    }, _numericIfPossible = function _numericIfPossible(value) {\n                        var n = parseFloat(value);\n                        return (n || n === 0) && (value + \"\").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;\n                    }, _passThrough = function _passThrough(p) {\n                        return p;\n                    }, _setDefaults = function _setDefaults(obj, defaults) {\n                        for(var p in defaults){\n                            p in obj || (obj[p] = defaults[p]);\n                        }\n                        return obj;\n                    }, _setKeyframeDefaults = function _setKeyframeDefaults(obj, defaults) {\n                        for(var p in defaults){\n                            p in obj || p === \"duration\" || p === \"ease\" || (obj[p] = defaults[p]);\n                        }\n                    }, _merge = function _merge(base, toMerge) {\n                        for(var p in toMerge){\n                            base[p] = toMerge[p];\n                        }\n                        return base;\n                    }, _mergeDeep = function _mergeDeep(base, toMerge) {\n                        for(var p in toMerge){\n                            p !== \"__proto__\" && p !== \"constructor\" && p !== \"prototype\" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);\n                        }\n                        return base;\n                    }, _copyExcluding = function _copyExcluding(obj, excluding) {\n                        var copy = {}, p;\n                        for(p in obj){\n                            p in excluding || (copy[p] = obj[p]);\n                        }\n                        return copy;\n                    }, _inheritDefaults = function _inheritDefaults(vars) {\n                        var parent = vars.parent || _globalTimeline, func = vars.keyframes ? _setKeyframeDefaults : _setDefaults;\n                        if (_isNotFalse(vars.inherit)) {\n                            while(parent){\n                                func(vars, parent.vars.defaults);\n                                parent = parent.parent || parent._dp;\n                            }\n                        }\n                        return vars;\n                    }, _arraysMatch = function _arraysMatch(a1, a2) {\n                        var i = a1.length, match = i === a2.length;\n                        while(match && i-- && a1[i] === a2[i]){}\n                        return i < 0;\n                    }, _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {\n                        if (firstProp === void 0) {\n                            firstProp = \"_first\";\n                        }\n                        if (lastProp === void 0) {\n                            lastProp = \"_last\";\n                        }\n                        var prev = parent[lastProp], t;\n                        if (sortBy) {\n                            t = child[sortBy];\n                            while(prev && prev[sortBy] > t){\n                                prev = prev._prev;\n                            }\n                        }\n                        if (prev) {\n                            child._next = prev._next;\n                            prev._next = child;\n                        } else {\n                            child._next = parent[firstProp];\n                            parent[firstProp] = child;\n                        }\n                        if (child._next) {\n                            child._next._prev = child;\n                        } else {\n                            parent[lastProp] = child;\n                        }\n                        child._prev = prev;\n                        child.parent = child._dp = parent;\n                        return child;\n                    }, _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {\n                        if (firstProp === void 0) {\n                            firstProp = \"_first\";\n                        }\n                        if (lastProp === void 0) {\n                            lastProp = \"_last\";\n                        }\n                        var prev = child._prev, next = child._next;\n                        if (prev) {\n                            prev._next = next;\n                        } else if (parent[firstProp] === child) {\n                            parent[firstProp] = next;\n                        }\n                        if (next) {\n                            next._prev = prev;\n                        } else if (parent[lastProp] === child) {\n                            parent[lastProp] = prev;\n                        }\n                        child._next = child._prev = child.parent = null; // don't delete the _dp just so we can revert if necessary. But parent should be null to indicate the item isn't in a linked list.\n                    }, _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {\n                        child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove(child);\n                        child._act = 0;\n                    }, _uncache = function _uncache(animation, child) {\n                        if (animation && (!child || child._end > animation._dur || child._start < 0)) {\n                            // performance optimization: if a child animation is passed in we should only uncache if that child EXTENDS the animation (its end time is beyond the end)\n                            var a = animation;\n                            while(a){\n                                a._dirty = 1;\n                                a = a.parent;\n                            }\n                        }\n                        return animation;\n                    }, _recacheAncestors = function _recacheAncestors(animation) {\n                        var parent = animation.parent;\n                        while(parent && parent.parent){\n                            //sometimes we must force a re-sort of all children and update the duration/totalDuration of all ancestor timelines immediately in case, for example, in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.\n                            parent._dirty = 1;\n                            parent.totalDuration();\n                            parent = parent.parent;\n                        }\n                        return animation;\n                    }, _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {\n                        return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);\n                    }, _elapsedCycleDuration = function _elapsedCycleDuration(animation) {\n                        return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;\n                    }, // feed in the totalTime and cycleDuration and it'll return the cycle (iteration minus 1) and if the playhead is exactly at the very END, it will NOT bump up to the next cycle.\n                    _animationCycle = function _animationCycle(tTime, cycleDuration) {\n                        var whole = Math.floor(tTime /= cycleDuration);\n                        return tTime && whole === tTime ? whole - 1 : whole;\n                    }, _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {\n                        return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);\n                    }, _setEnd = function _setEnd(animation) {\n                        return animation._end = _round(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));\n                    }, _alignPlayhead = function _alignPlayhead(animation, totalTime) {\n                        // adjusts the animation's _start and _end according to the provided totalTime (only if the parent's smoothChildTiming is true and the animation isn't paused). It doesn't do any rendering or forcing things back into parent timelines, etc. - that's what totalTime() is for.\n                        var parent = animation._dp;\n                        if (parent && parent.smoothChildTiming && animation._ts) {\n                            animation._start = _round(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));\n                            _setEnd(animation);\n                            parent._dirty || _uncache(parent, animation); //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.\n                        }\n                        return animation;\n                    }, /*\n          _totalTimeToTime = (clampedTotalTime, duration, repeat, repeatDelay, yoyo) => {\n            let cycleDuration = duration + repeatDelay,\n              time = _round(clampedTotalTime % cycleDuration);\n            if (time > duration) {\n              time = duration;\n            }\n            return (yoyo && (~~(clampedTotalTime / cycleDuration) & 1)) ? duration - time : time;\n          },\n          */ _postAddChecks = function _postAddChecks(timeline, child) {\n                        var t;\n                        if (child._time || child._initted && !child._dur) {\n                            //in case, for example, the _start is moved on a tween that has already rendered. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning.\n                            t = _parentToChildTotalTime(timeline.rawTime(), child);\n                            if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {\n                                child.render(t, true);\n                            }\n                        } //if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.\n                        if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {\n                            //in case any of the ancestors had completed but should now be enabled...\n                            if (timeline._dur < timeline.duration()) {\n                                t = timeline;\n                                while(t._dp){\n                                    t.rawTime() >= 0 && t.totalTime(t._tTime); //moves the timeline (shifts its startTime) if necessary, and also enables it. If it's currently zero, though, it may not be scheduled to render until later so there's no need to force it to align with the current playhead position. Only move to catch up with the playhead.\n                                    t = t._dp;\n                                }\n                            }\n                            timeline._zTime = -_tinyNum; // helps ensure that the next render() will be forced (crossingStart = true in render()), even if the duration hasn't changed (we're adding a child which would need to get rendered). Definitely an edge case. Note: we MUST do this AFTER the loop above where the totalTime() might trigger a render() because this _addToTimeline() method gets called from the Animation constructor, BEFORE tweens even record their targets, etc. so we wouldn't want things to get triggered in the wrong order.\n                        }\n                    }, _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {\n                        child.parent && _removeFromParent(child);\n                        child._start = _round(position + child._delay);\n                        child._end = _round(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));\n                        _addLinkedListItem(timeline, child, \"_first\", \"_last\", timeline._sort ? \"_start\" : 0);\n                        timeline._recent = child;\n                        skipChecks || _postAddChecks(timeline, child);\n                        return timeline;\n                    }, _scrollTrigger = function _scrollTrigger(animation, trigger) {\n                        return (_globals.ScrollTrigger || _missingPlugin(\"scrollTrigger\", trigger)) && _globals.ScrollTrigger.create(trigger, animation);\n                    }, _attemptInitTween = function _attemptInitTween(tween, totalTime, force, suppressEvents) {\n                        _initTween(tween, totalTime);\n                        if (!tween._initted) {\n                            return 1;\n                        }\n                        if (!force && tween._pt && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {\n                            _lazyTweens.push(tween);\n                            tween._lazy = [\n                                totalTime,\n                                suppressEvents\n                            ];\n                            return 1;\n                        }\n                    }, _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {\n                        var parent = _ref.parent;\n                        return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));\n                    }, // check parent's _lock because when a timeline repeats/yoyos and does its artificial wrapping, we shouldn't force the ratio back to 0\n                    _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {\n                        var prevRatio = tween.ratio, ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) || (tween._ts < 0 || tween._dp._ts < 0) && tween.data !== \"isFromStart\" && tween.data !== \"isStart\") ? 0 : 1, // if the tween or its parent is reversed and the totalTime is 0, we should go to a ratio of 0.\n                        repeatDelay = tween._rDelay, tTime = 0, pt, iteration, prevIteration;\n                        if (repeatDelay && tween._repeat) {\n                            // in case there's a zero-duration tween that has a repeat with a repeatDelay\n                            tTime = _clamp(0, tween._tDur, totalTime);\n                            iteration = _animationCycle(tTime, repeatDelay);\n                            prevIteration = _animationCycle(tween._tTime, repeatDelay);\n                            tween._yoyo && iteration & 1 && (ratio = 1 - ratio);\n                            if (iteration !== prevIteration) {\n                                prevRatio = 1 - ratio;\n                                tween.vars.repeatRefresh && tween._initted && tween.invalidate();\n                            }\n                        }\n                        if (ratio !== prevRatio || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {\n                            if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents)) {\n                                // if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n                                return;\n                            }\n                            prevIteration = tween._zTime;\n                            tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0); // when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.\n                            suppressEvents || (suppressEvents = totalTime && !prevIteration); // if it was rendered previously at exactly 0 (_zTime) and now the playhead is moving away, DON'T fire callbacks otherwise they'll seem like duplicates.\n                            tween.ratio = ratio;\n                            tween._from && (ratio = 1 - ratio);\n                            tween._time = 0;\n                            tween._tTime = tTime;\n                            suppressEvents || _callback(tween, \"onStart\");\n                            pt = tween._pt;\n                            while(pt){\n                                pt.r(ratio, pt.d);\n                                pt = pt._next;\n                            }\n                            tween._startAt && totalTime < 0 && tween._startAt.render(totalTime, true, true);\n                            tween._onUpdate && !suppressEvents && _callback(tween, \"onUpdate\");\n                            tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, \"onRepeat\");\n                            if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {\n                                ratio && _removeFromParent(tween, 1);\n                                if (!suppressEvents) {\n                                    _callback(tween, ratio ? \"onComplete\" : \"onReverseComplete\", true);\n                                    tween._prom && tween._prom();\n                                }\n                            }\n                        } else if (!tween._zTime) {\n                            tween._zTime = totalTime;\n                        }\n                    }, _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {\n                        var child;\n                        if (time > prevTime) {\n                            child = animation._first;\n                            while(child && child._start <= time){\n                                if (!child._dur && child.data === \"isPause\" && child._start > prevTime) {\n                                    return child;\n                                }\n                                child = child._next;\n                            }\n                        } else {\n                            child = animation._last;\n                            while(child && child._start >= time){\n                                if (!child._dur && child.data === \"isPause\" && child._start < prevTime) {\n                                    return child;\n                                }\n                                child = child._prev;\n                            }\n                        }\n                    }, _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {\n                        var repeat = animation._repeat, dur = _round(duration) || 0, totalProgress = animation._tTime / animation._tDur;\n                        totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);\n                        animation._dur = dur;\n                        animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _round(dur * (repeat + 1) + animation._rDelay * repeat);\n                        totalProgress && !leavePlayhead ? _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress) : animation.parent && _setEnd(animation);\n                        skipUncache || _uncache(animation.parent, animation);\n                        return animation;\n                    }, _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {\n                        return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);\n                    }, _zeroPosition = {\n                        _start: 0,\n                        endTime: _emptyFunc\n                    }, _parsePosition = function _parsePosition(animation, position) {\n                        var labels = animation.labels, recent = animation._recent || _zeroPosition, clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur, //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.\n                        i, offset;\n                        if (_isString(position) && (isNaN(position) || position in labels)) {\n                            //if the string is a number like \"1\", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).\n                            i = position.charAt(0);\n                            if (i === \"<\" || i === \">\") {\n                                return (i === \"<\" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0);\n                            }\n                            i = position.indexOf(\"=\");\n                            if (i < 0) {\n                                position in labels || (labels[position] = clippedDuration);\n                                return labels[position];\n                            }\n                            offset = +(position.charAt(i - 1) + position.substr(i + 1));\n                            return i > 1 ? _parsePosition(animation, position.substr(0, i - 1)) + offset : clippedDuration + offset;\n                        }\n                        return position == null ? clippedDuration : +position;\n                    }, _conditionalReturn = function _conditionalReturn(value, func) {\n                        return value || value === 0 ? func(value) : func;\n                    }, _clamp = function _clamp(min, max, value) {\n                        return value < min ? min : value > max ? max : value;\n                    }, getUnit = function getUnit(value) {\n                        if (typeof value !== \"string\") {\n                            return \"\";\n                        }\n                        var v = _unitExp.exec(value);\n                        return v ? value.substr(v.index + v[0].length) : \"\";\n                    }, // note: protect against padded numbers as strings, like \"100.100\". That shouldn't return \"00\" as the unit. If it's numeric, return no unit.\n                    clamp = function clamp(min, max, value) {\n                        return _conditionalReturn(value, function(v) {\n                            return _clamp(min, max, v);\n                        });\n                    }, _slice = [].slice, _isArrayLike = function _isArrayLike(value, nonEmpty) {\n                        return value && _isObject(value) && \"length\" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;\n                    }, _flatten = function _flatten(ar, leaveStrings, accumulator) {\n                        if (accumulator === void 0) {\n                            accumulator = [];\n                        }\n                        return ar.forEach(function(value) {\n                            var _accumulator;\n                            return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);\n                        }) || accumulator;\n                    }, //takes any value and returns an array. If it's a string (and leaveStrings isn't true), it'll use document.querySelectorAll() and convert that to an array. It'll also accept iterables like jQuery objects.\n                    toArray = function toArray(value, leaveStrings) {\n                        return _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call(_doc.querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [\n                            value\n                        ] : [];\n                    }, shuffle = function shuffle(a) {\n                        return a.sort(function() {\n                            return .5 - Math.random();\n                        });\n                    }, // alternative that's a bit faster and more reliably diverse but bigger:   for (let j, v, i = a.length; i; j = Math.floor(Math.random() * i), v = a[--i], a[i] = a[j], a[j] = v); return a;\n                    //for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following\n                    distribute = function distribute(v) {\n                        if (_isFunction(v)) {\n                            return v;\n                        }\n                        var vars = _isObject(v) ? v : {\n                            each: v\n                        }, //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total \"amount\" that's chunked out among them all.\n                        ease = _parseEase(vars.ease), from = vars.from || 0, base = parseFloat(vars.base) || 0, cache = {}, isDecimal = from > 0 && from < 1, ratios = isNaN(from) || isDecimal, axis = vars.axis, ratioX = from, ratioY = from;\n                        if (_isString(from)) {\n                            ratioX = ratioY = ({\n                                center: .5,\n                                edges: .5,\n                                end: 1\n                            })[from] || 0;\n                        } else if (!isDecimal && ratios) {\n                            ratioX = from[0];\n                            ratioY = from[1];\n                        }\n                        return function(i, target, a) {\n                            var l = (a || vars).length, distances = cache[l], originX, originY, x, y, d, j, max, min, wrapAt;\n                            if (!distances) {\n                                wrapAt = vars.grid === \"auto\" ? 0 : (vars.grid || [\n                                    1,\n                                    _bigNum\n                                ])[1];\n                                if (!wrapAt) {\n                                    max = -_bigNum;\n                                    while(max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l){}\n                                    wrapAt--;\n                                }\n                                distances = cache[l] = [];\n                                originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;\n                                originY = ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;\n                                max = 0;\n                                min = _bigNum;\n                                for(j = 0; j < l; j++){\n                                    x = j % wrapAt - originX;\n                                    y = originY - (j / wrapAt | 0);\n                                    distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === \"y\" ? y : x);\n                                    d > max && (max = d);\n                                    d < min && (min = d);\n                                }\n                                from === \"random\" && shuffle(distances);\n                                distances.max = max - min;\n                                distances.min = min;\n                                distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === \"y\" ? l / wrapAt : wrapAt) || 0) * (from === \"edges\" ? -1 : 1);\n                                distances.b = l < 0 ? base - l : base;\n                                distances.u = getUnit(vars.amount || vars.each) || 0; //unit\n                                ease = ease && l < 0 ? _invertEase(ease) : ease;\n                            }\n                            l = (distances[i] - distances.min) / distances.max || 0;\n                            return _round(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u; //round in order to work around floating point errors\n                        };\n                    }, _roundModifier = function _roundModifier(v) {\n                        //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.\n                        var p = v < 1 ? Math.pow(10, (v + \"\").length - 2) : 1; //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed()\n                        return function(raw) {\n                            var n = Math.round(parseFloat(raw) / v) * v * p;\n                            return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw)); // n - n % 1 replaces Math.floor() in order to handle negative values properly. For example, Math.floor(-150.00000000000003) is 151!\n                        };\n                    }, snap = function snap(snapTo, value) {\n                        var isArray = _isArray(snapTo), radius, is2D;\n                        if (!isArray && _isObject(snapTo)) {\n                            radius = isArray = snapTo.radius || _bigNum;\n                            if (snapTo.values) {\n                                snapTo = toArray(snapTo.values);\n                                if (is2D = !_isNumber(snapTo[0])) {\n                                    radius *= radius; //performance optimization so we don't have to Math.sqrt() in the loop.\n                                }\n                            } else {\n                                snapTo = _roundModifier(snapTo.increment);\n                            }\n                        }\n                        return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function(raw) {\n                            is2D = snapTo(raw);\n                            return Math.abs(is2D - raw) <= radius ? is2D : raw;\n                        } : function(raw) {\n                            var x = parseFloat(is2D ? raw.x : raw), y = parseFloat(is2D ? raw.y : 0), min = _bigNum, closest = 0, i = snapTo.length, dx, dy;\n                            while(i--){\n                                if (is2D) {\n                                    dx = snapTo[i].x - x;\n                                    dy = snapTo[i].y - y;\n                                    dx = dx * dx + dy * dy;\n                                } else {\n                                    dx = Math.abs(snapTo[i] - x);\n                                }\n                                if (dx < min) {\n                                    min = dx;\n                                    closest = i;\n                                }\n                            }\n                            closest = !radius || min <= radius ? snapTo[closest] : raw;\n                            return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);\n                        });\n                    }, random = function random(min, max, roundingIncrement, returnFunction) {\n                        return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function() {\n                            return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + \"\").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;\n                        });\n                    }, pipe = function pipe() {\n                        for(var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++){\n                            functions[_key] = arguments[_key];\n                        }\n                        return function(value) {\n                            return functions.reduce(function(v, f) {\n                                return f(v);\n                            }, value);\n                        };\n                    }, unitize = function unitize(func, unit) {\n                        return function(value) {\n                            return func(parseFloat(value)) + (unit || getUnit(value));\n                        };\n                    }, normalize = function normalize(min, max, value) {\n                        return mapRange(min, max, 0, 1, value);\n                    }, _wrapArray = function _wrapArray(a, wrapper, value) {\n                        return _conditionalReturn(value, function(index) {\n                            return a[~~wrapper(index)];\n                        });\n                    }, wrap = function wrap(min, max, value) {\n                        // NOTE: wrap() CANNOT be an arrow function! A very odd compiling bug causes problems (unrelated to GSAP).\n                        var range = max - min;\n                        return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function(value) {\n                            return (range + (value - min) % range) % range + min;\n                        });\n                    }, wrapYoyo = function wrapYoyo(min, max, value) {\n                        var range = max - min, total = range * 2;\n                        return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function(value) {\n                            value = (total + (value - min) % total) % total || 0;\n                            return min + (value > range ? total - value : value);\n                        });\n                    }, _replaceRandom = function _replaceRandom(value) {\n                        //replaces all occurrences of random(...) in a string with the calculated random value. can be a range like random(-100, 100, 5) or an array like random([0, 100, 500])\n                        var prev = 0, s = \"\", i, nums, end, isArray;\n                        while(~(i = value.indexOf(\"random(\", prev))){\n                            end = value.indexOf(\")\", i);\n                            isArray = value.charAt(i + 7) === \"[\";\n                            nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);\n                            s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);\n                            prev = end + 1;\n                        }\n                        return s + value.substr(prev, value.length - prev);\n                    }, mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {\n                        var inRange = inMax - inMin, outRange = outMax - outMin;\n                        return _conditionalReturn(value, function(value) {\n                            return outMin + ((value - inMin) / inRange * outRange || 0);\n                        });\n                    }, interpolate = function interpolate(start, end, progress, mutate) {\n                        var func = isNaN(start + end) ? 0 : function(p) {\n                            return (1 - p) * start + p * end;\n                        };\n                        if (!func) {\n                            var isString = _isString(start), master = {}, p, i, interpolators, l, il;\n                            progress === true && (mutate = 1) && (progress = null);\n                            if (isString) {\n                                start = {\n                                    p: start\n                                };\n                                end = {\n                                    p: end\n                                };\n                            } else if (_isArray(start) && !_isArray(end)) {\n                                interpolators = [];\n                                l = start.length;\n                                il = l - 2;\n                                for(i = 1; i < l; i++){\n                                    interpolators.push(interpolate(start[i - 1], start[i])); //build the interpolators up front as a performance optimization so that when the function is called many times, it can just reuse them.\n                                }\n                                l--;\n                                func = function func(p) {\n                                    p *= l;\n                                    var i = Math.min(il, ~~p);\n                                    return interpolators[i](p - i);\n                                };\n                                progress = end;\n                            } else if (!mutate) {\n                                start = _merge(_isArray(start) ? [] : {}, start);\n                            }\n                            if (!interpolators) {\n                                for(p in end){\n                                    _addPropTween.call(master, start, p, \"get\", end[p]);\n                                }\n                                func = function func(p) {\n                                    return _renderPropTweens(p, master) || (isString ? start.p : start);\n                                };\n                            }\n                        }\n                        return _conditionalReturn(progress, func);\n                    }, _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {\n                        //used for nextLabel() and previousLabel()\n                        var labels = timeline.labels, min = _bigNum, p, distance, label;\n                        for(p in labels){\n                            distance = labels[p] - fromTime;\n                            if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {\n                                label = p;\n                                min = distance;\n                            }\n                        }\n                        return label;\n                    }, _callback = function _callback(animation, type, executeLazyFirst) {\n                        var v = animation.vars, callback = v[type], params, scope;\n                        if (!callback) {\n                            return;\n                        }\n                        params = v[type + \"Params\"];\n                        scope = v.callbackScope || animation;\n                        executeLazyFirst && _lazyTweens.length && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.\n                        return params ? callback.apply(scope, params) : callback.call(scope);\n                    }, _interrupt = function _interrupt(animation) {\n                        _removeFromParent(animation);\n                        animation.progress() < 1 && _callback(animation, \"onInterrupt\");\n                        return animation;\n                    }, _quickTween, _createPlugin = function _createPlugin(config) {\n                        config = !config.name && config[\"default\"] || config; //UMD packaging wraps things oddly, so for example MotionPathHelper becomes {MotionPathHelper:MotionPathHelper, default:MotionPathHelper}.\n                        var name = config.name, isFunc = _isFunction(config), Plugin = name && !isFunc && config.init ? function() {\n                            this._props = [];\n                        } : config, //in case someone passes in an object that's not a plugin, like CustomEase\n                        instanceDefaults = {\n                            init: _emptyFunc,\n                            render: _renderPropTweens,\n                            add: _addPropTween,\n                            kill: _killPropTweensOf,\n                            modifier: _addPluginModifier,\n                            rawVars: 0\n                        }, statics = {\n                            targetTest: 0,\n                            get: 0,\n                            getSetter: _getSetter,\n                            aliases: {},\n                            register: 0\n                        };\n                        _wake();\n                        if (config !== Plugin) {\n                            if (_plugins[name]) {\n                                return;\n                            }\n                            _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics)); //static methods\n                            _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics))); //instance methods\n                            _plugins[Plugin.prop = name] = Plugin;\n                            if (config.targetTest) {\n                                _harnessPlugins.push(Plugin);\n                                _reservedProps[name] = 1;\n                            }\n                            name = (name === \"css\" ? \"CSS\" : name.charAt(0).toUpperCase() + name.substr(1)) + \"Plugin\"; //for the global name. \"motionPath\" should become MotionPathPlugin\n                        }\n                        _addGlobal(name, Plugin);\n                        config.register && config.register(gsap, Plugin, PropTween);\n                    }, /*\n           * --------------------------------------------------------------------------------------\n           * COLORS\n           * --------------------------------------------------------------------------------------\n           */ _255 = 255, _colorLookup = {\n                        aqua: [\n                            0,\n                            _255,\n                            _255\n                        ],\n                        lime: [\n                            0,\n                            _255,\n                            0\n                        ],\n                        silver: [\n                            192,\n                            192,\n                            192\n                        ],\n                        black: [\n                            0,\n                            0,\n                            0\n                        ],\n                        maroon: [\n                            128,\n                            0,\n                            0\n                        ],\n                        teal: [\n                            0,\n                            128,\n                            128\n                        ],\n                        blue: [\n                            0,\n                            0,\n                            _255\n                        ],\n                        navy: [\n                            0,\n                            0,\n                            128\n                        ],\n                        white: [\n                            _255,\n                            _255,\n                            _255\n                        ],\n                        olive: [\n                            128,\n                            128,\n                            0\n                        ],\n                        yellow: [\n                            _255,\n                            _255,\n                            0\n                        ],\n                        orange: [\n                            _255,\n                            165,\n                            0\n                        ],\n                        gray: [\n                            128,\n                            128,\n                            128\n                        ],\n                        purple: [\n                            128,\n                            0,\n                            128\n                        ],\n                        green: [\n                            0,\n                            128,\n                            0\n                        ],\n                        red: [\n                            _255,\n                            0,\n                            0\n                        ],\n                        pink: [\n                            _255,\n                            192,\n                            203\n                        ],\n                        cyan: [\n                            0,\n                            _255,\n                            _255\n                        ],\n                        transparent: [\n                            _255,\n                            _255,\n                            _255,\n                            0\n                        ]\n                    }, _hue = function _hue(h, m1, m2) {\n                        h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n                        return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;\n                    }, splitColor = function splitColor(v, toHSL, forceAlpha) {\n                        var a = !v ? _colorLookup.black : _isNumber(v) ? [\n                            v >> 16,\n                            v >> 8 & _255,\n                            v & _255\n                        ] : 0, r, g, b, h, s, l, max, min, d, wasHSL;\n                        if (!a) {\n                            if (v.substr(-1) === \",\") {\n                                v = v.substr(0, v.length - 1);\n                            }\n                            if (_colorLookup[v]) {\n                                a = _colorLookup[v];\n                            } else if (v.charAt(0) === \"#\") {\n                                if (v.length < 6) {\n                                    r = v.charAt(1);\n                                    g = v.charAt(2);\n                                    b = v.charAt(3);\n                                    v = \"#\" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : \"\");\n                                }\n                                if (v.length === 9) {\n                                    a = parseInt(v.substr(1, 6), 16);\n                                    return [\n                                        a >> 16,\n                                        a >> 8 & _255,\n                                        a & _255,\n                                        parseInt(v.substr(7), 16) / 255\n                                    ];\n                                }\n                                v = parseInt(v.substr(1), 16);\n                                a = [\n                                    v >> 16,\n                                    v >> 8 & _255,\n                                    v & _255\n                                ];\n                            } else if (v.substr(0, 3) === \"hsl\") {\n                                a = wasHSL = v.match(_strictNumExp);\n                                if (!toHSL) {\n                                    h = +a[0] % 360 / 360;\n                                    s = +a[1] / 100;\n                                    l = +a[2] / 100;\n                                    g = l <= .5 ? l * (s + 1) : l + s - l * s;\n                                    r = l * 2 - g;\n                                    a.length > 3 && (a[3] *= 1); //cast as number\n                                    a[0] = _hue(h + 1 / 3, r, g);\n                                    a[1] = _hue(h, r, g);\n                                    a[2] = _hue(h - 1 / 3, r, g);\n                                } else if (~v.indexOf(\"=\")) {\n                                    //if relative values are found, just return the raw strings with the relative prefixes in place.\n                                    a = v.match(_numExp);\n                                    forceAlpha && a.length < 4 && (a[3] = 1);\n                                    return a;\n                                }\n                            } else {\n                                a = v.match(_strictNumExp) || _colorLookup.transparent;\n                            }\n                            a = a.map(Number);\n                        }\n                        if (toHSL && !wasHSL) {\n                            r = a[0] / _255;\n                            g = a[1] / _255;\n                            b = a[2] / _255;\n                            max = Math.max(r, g, b);\n                            min = Math.min(r, g, b);\n                            l = (max + min) / 2;\n                            if (max === min) {\n                                h = s = 0;\n                            } else {\n                                d = max - min;\n                                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                                h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n                                h *= 60;\n                            }\n                            a[0] = ~~(h + .5);\n                            a[1] = ~~(s * 100 + .5);\n                            a[2] = ~~(l * 100 + .5);\n                        }\n                        forceAlpha && a.length < 4 && (a[3] = 1);\n                        return a;\n                    }, _colorOrderData = function _colorOrderData(v) {\n                        var values = [], c = [], i = -1;\n                        v.split(_colorExp).forEach(function(v) {\n                            var a = v.match(_numWithUnitExp) || [];\n                            values.push.apply(values, a);\n                            c.push(i += a.length + 1);\n                        });\n                        values.c = c;\n                        return values;\n                    }, _formatColors = function _formatColors(s, toHSL, orderMatchData) {\n                        var result = \"\", colors = (s + result).match(_colorExp), type = toHSL ? \"hsla(\" : \"rgba(\", i = 0, c, shell, d, l;\n                        if (!colors) {\n                            return s;\n                        }\n                        colors = colors.map(function(color) {\n                            return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : color.join(\",\")) + \")\";\n                        });\n                        if (orderMatchData) {\n                            d = _colorOrderData(s);\n                            c = orderMatchData.c;\n                            if (c.join(result) !== d.c.join(result)) {\n                                shell = s.replace(_colorExp, \"1\").split(_numWithUnitExp);\n                                l = shell.length - 1;\n                                for(; i < l; i++){\n                                    result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + \"0,0,0,0)\" : (d.length ? d : colors.length ? colors : orderMatchData).shift());\n                                }\n                            }\n                        }\n                        if (!shell) {\n                            shell = s.split(_colorExp);\n                            l = shell.length - 1;\n                            for(; i < l; i++){\n                                result += shell[i] + colors[i];\n                            }\n                        }\n                        return result + shell[l];\n                    }, _colorExp = function() {\n                        var s = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3,4}){1,2}\\\\b\", //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.,\n                        p;\n                        for(p in _colorLookup){\n                            s += \"|\" + p + \"\\\\b\";\n                        }\n                        return new RegExp(s + \")\", \"gi\");\n                    }(), _hslExp = /hsl[a]?\\(/, _colorStringFilter = function _colorStringFilter(a) {\n                        var combined = a.join(\" \"), toHSL;\n                        _colorExp.lastIndex = 0;\n                        if (_colorExp.test(combined)) {\n                            toHSL = _hslExp.test(combined);\n                            a[1] = _formatColors(a[1], toHSL);\n                            a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1])); // make sure the order of numbers/colors match with the END value.\n                            return true;\n                        }\n                    }, /*\n           * --------------------------------------------------------------------------------------\n           * TICKER\n           * --------------------------------------------------------------------------------------\n           */ _tickerActive, _ticker = function() {\n                        var _getTime = Date.now, _lagThreshold = 500, _adjustedLag = 33, _startTime = _getTime(), _lastUpdate = _startTime, _gap = 1000 / 240, _nextTime = _gap, _listeners = [], _id, _req, _raf, _self, _delta, _i, _tick = function _tick(v) {\n                            var elapsed = _getTime() - _lastUpdate, manual = v === true, overlap, dispatch, time, frame;\n                            elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);\n                            _lastUpdate += elapsed;\n                            time = _lastUpdate - _startTime;\n                            overlap = time - _nextTime;\n                            if (overlap > 0 || manual) {\n                                frame = ++_self.frame;\n                                _delta = time - _self.time * 1000;\n                                _self.time = time = time / 1000;\n                                _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);\n                                dispatch = 1;\n                            }\n                            manual || (_id = _req(_tick)); //make sure the request is made before we dispatch the \"tick\" event so that timing is maintained. Otherwise, if processing the \"tick\" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.\n                            if (dispatch) {\n                                for(_i = 0; _i < _listeners.length; _i++){\n                                    // use _i and check _listeners.length instead of a variable because a listener could get removed during the loop, and if that happens to an element less than the current index, it'd throw things off in the loop.\n                                    _listeners[_i](time, _delta, frame, v);\n                                }\n                            }\n                        };\n                        _self = {\n                            time: 0,\n                            frame: 0,\n                            tick: function tick() {\n                                _tick(true);\n                            },\n                            deltaRatio: function deltaRatio(fps) {\n                                return _delta / (1000 / (fps || 60));\n                            },\n                            wake: function wake() {\n                                if (_coreReady) {\n                                    if (!_coreInitted && _windowExists()) {\n                                        _win = _coreInitted = window;\n                                        _doc = _win.document || {};\n                                        _globals.gsap = gsap;\n                                        (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);\n                                        _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});\n                                        _raf = _win.requestAnimationFrame;\n                                    }\n                                    _id && _self.sleep();\n                                    _req = _raf || function(f) {\n                                        return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);\n                                    };\n                                    _tickerActive = 1;\n                                    _tick(2);\n                                }\n                            },\n                            sleep: function sleep() {\n                                (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id);\n                                _tickerActive = 0;\n                                _req = _emptyFunc;\n                            },\n                            lagSmoothing: function lagSmoothing(threshold, adjustedLag) {\n                                _lagThreshold = threshold || 1 / _tinyNum; //zero should be interpreted as basically unlimited\n                                _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n                            },\n                            fps: function fps(_fps) {\n                                _gap = 1000 / (_fps || 240);\n                                _nextTime = _self.time * 1000 + _gap;\n                            },\n                            add: function add(callback) {\n                                _listeners.indexOf(callback) < 0 && _listeners.push(callback);\n                                _wake();\n                            },\n                            remove: function remove(callback) {\n                                var i;\n                                ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;\n                            },\n                            _listeners: _listeners\n                        };\n                        return _self;\n                    }(), _wake = function _wake() {\n                        return !_tickerActive && _ticker.wake();\n                    }, //also ensures the core classes are initialized.\n                    /*\n          * -------------------------------------------------\n          * EASING\n          * -------------------------------------------------\n          */ _easeMap = {}, _customEaseExp = /^[\\d.\\-M][\\d.\\-,\\s]/, _quotesExp = /[\"']/g, _parseObjectInString = function _parseObjectInString(value) {\n                        //takes a string like \"{wiggles:10, type:anticipate})\" and turns it into a real object. Notice it ends in \")\" and includes the {} wrappers. This is because we only use this function for parsing ease configs and prioritized optimization rather than reusability.\n                        var obj = {}, split = value.substr(1, value.length - 3).split(\":\"), key = split[0], i = 1, l = split.length, index, val, parsedVal;\n                        for(; i < l; i++){\n                            val = split[i];\n                            index = i !== l - 1 ? val.lastIndexOf(\",\") : val.length;\n                            parsedVal = val.substr(0, index);\n                            obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, \"\").trim() : +parsedVal;\n                            key = val.substr(index + 1).trim();\n                        }\n                        return obj;\n                    }, _valueInParentheses = function _valueInParentheses(value) {\n                        var open = value.indexOf(\"(\") + 1, close = value.indexOf(\")\"), nested = value.indexOf(\"(\", open);\n                        return value.substring(open, ~nested && nested < close ? value.indexOf(\")\", close + 1) : close);\n                    }, _configEaseFromString = function _configEaseFromString(name) {\n                        //name can be a string like \"elastic.out(1,0.5)\", and pass in _easeMap as obj and it'll parse it out and call the actual function like _easeMap.Elastic.easeOut.config(1,0.5). It will also parse custom ease strings as long as CustomEase is loaded and registered (internally as _easeMap._CE).\n                        var split = (name + \"\").split(\"(\"), ease = _easeMap[split[0]];\n                        return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf(\"{\") ? [\n                            _parseObjectInString(split[1])\n                        ] : _valueInParentheses(name).split(\",\").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE(\"\", name) : ease;\n                    }, _invertEase = function _invertEase(ease) {\n                        return function(p) {\n                            return 1 - ease(1 - p);\n                        };\n                    }, // allow yoyoEase to be set in children and have those affected when the parent/ancestor timeline yoyos.\n                    _propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {\n                        var child = timeline._first, ease;\n                        while(child){\n                            if (child instanceof Timeline) {\n                                _propagateYoyoEase(child, isYoyo);\n                            } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {\n                                if (child.timeline) {\n                                    _propagateYoyoEase(child.timeline, isYoyo);\n                                } else {\n                                    ease = child._ease;\n                                    child._ease = child._yEase;\n                                    child._yEase = ease;\n                                    child._yoyo = isYoyo;\n                                }\n                            }\n                            child = child._next;\n                        }\n                    }, _parseEase = function _parseEase(ease, defaultEase) {\n                        return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;\n                    }, _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {\n                        if (easeOut === void 0) {\n                            easeOut = function easeOut(p) {\n                                return 1 - easeIn(1 - p);\n                            };\n                        }\n                        if (easeInOut === void 0) {\n                            easeInOut = function easeInOut(p) {\n                                return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;\n                            };\n                        }\n                        var ease = {\n                            easeIn: easeIn,\n                            easeOut: easeOut,\n                            easeInOut: easeInOut\n                        }, lowercaseName;\n                        _forEachName(names, function(name) {\n                            _easeMap[name] = _globals[name] = ease;\n                            _easeMap[lowercaseName = name.toLowerCase()] = easeOut;\n                            for(var p in ease){\n                                _easeMap[lowercaseName + (p === \"easeIn\" ? \".in\" : p === \"easeOut\" ? \".out\" : \".inOut\")] = _easeMap[name + \".\" + p] = ease[p];\n                            }\n                        });\n                        return ease;\n                    }, _easeInOutFromOut = function _easeInOutFromOut(easeOut) {\n                        return function(p) {\n                            return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;\n                        };\n                    }, _configElastic = function _configElastic(type, amplitude, period) {\n                        var p1 = amplitude >= 1 ? amplitude : 1, //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.\n                        p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1), p3 = p2 / _2PI * (Math.asin(1 / p1) || 0), easeOut = function easeOut(p) {\n                            return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;\n                        }, ease = type === \"out\" ? easeOut : type === \"in\" ? function(p) {\n                            return 1 - easeOut(1 - p);\n                        } : _easeInOutFromOut(easeOut);\n                        p2 = _2PI / p2; //precalculate to optimize\n                        ease.config = function(amplitude, period) {\n                            return _configElastic(type, amplitude, period);\n                        };\n                        return ease;\n                    }, _configBack = function _configBack(type, overshoot) {\n                        if (overshoot === void 0) {\n                            overshoot = 1.70158;\n                        }\n                        var easeOut = function easeOut(p) {\n                            return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;\n                        }, ease = type === \"out\" ? easeOut : type === \"in\" ? function(p) {\n                            return 1 - easeOut(1 - p);\n                        } : _easeInOutFromOut(easeOut);\n                        ease.config = function(overshoot) {\n                            return _configBack(type, overshoot);\n                        };\n                        return ease;\n                    }; // a cheaper (kb and cpu) but more mild way to get a parameterized weighted ease by feeding in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.\n                    // _weightedEase = ratio => {\n                    // \tlet y = 0.5 + ratio / 2;\n                    // \treturn p => (2 * (1 - p) * p * y + p * p);\n                    // },\n                    // a stronger (but more expensive kb/cpu) parameterized weighted ease that lets you feed in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.\n                    // _weightedEaseStrong = ratio => {\n                    // \tratio = .5 + ratio / 2;\n                    // \tlet o = 1 / 3 * (ratio < .5 ? ratio : 1 - ratio),\n                    // \t\tb = ratio - o,\n                    // \t\tc = ratio + o;\n                    // \treturn p => p === 1 ? p : 3 * b * (1 - p) * (1 - p) * p + 3 * c * (1 - p) * p * p + p * p * p;\n                    // };\n                    exports1._ticker = _ticker;\n                    exports1._colorStringFilter = _colorStringFilter;\n                    exports1.splitColor = splitColor;\n                    exports1.interpolate = interpolate;\n                    exports1.mapRange = mapRange;\n                    exports1._replaceRandom = _replaceRandom;\n                    exports1.wrapYoyo = wrapYoyo;\n                    exports1.wrap = wrap;\n                    exports1.normalize = normalize;\n                    exports1.unitize = unitize;\n                    exports1.pipe = pipe;\n                    exports1.random = random;\n                    exports1.snap = snap;\n                    exports1._roundModifier = _roundModifier;\n                    exports1.distribute = distribute;\n                    exports1.shuffle = shuffle;\n                    exports1.toArray = toArray;\n                    exports1.clamp = clamp;\n                    exports1.getUnit = getUnit;\n                    exports1._removeLinkedListItem = _removeLinkedListItem;\n                    exports1._setDefaults = _setDefaults;\n                    exports1._round = _round;\n                    exports1._forEachName = _forEachName;\n                    exports1._getProperty = _getProperty;\n                    exports1._getCache = _getCache;\n                    exports1._plugins = _plugins;\n                    exports1._missingPlugin = _missingPlugin;\n                    exports1._relExp = _relExp;\n                    exports1._numWithUnitExp = _numWithUnitExp;\n                    exports1._numExp = _numExp;\n                    exports1._isUndefined = _isUndefined;\n                    exports1._isString = _isString;\n                    exports1._config = _config;\n                    _forEachName(\"Linear,Quad,Cubic,Quart,Quint,Strong\", function(name, i) {\n                        var power = i < 5 ? i + 1 : i;\n                        _insertEase(name + \",Power\" + (power - 1), i ? function(p) {\n                            return Math.pow(p, power);\n                        } : function(p) {\n                            return p;\n                        }, function(p) {\n                            return 1 - Math.pow(1 - p, power);\n                        }, function(p) {\n                            return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;\n                        });\n                    });\n                    _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;\n                    _insertEase(\"Elastic\", _configElastic(\"in\"), _configElastic(\"out\"), _configElastic());\n                    (function(n, c) {\n                        var n1 = 1 / c, n2 = 2 * n1, n3 = 2.5 * n1, easeOut = function easeOut(p) {\n                            return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;\n                        };\n                        _insertEase(\"Bounce\", function(p) {\n                            return 1 - easeOut(1 - p);\n                        }, easeOut);\n                    })(7.5625, 2.75);\n                    _insertEase(\"Expo\", function(p) {\n                        return p ? Math.pow(2, 10 * (p - 1)) : 0;\n                    });\n                    _insertEase(\"Circ\", function(p) {\n                        return -(_sqrt(1 - p * p) - 1);\n                    });\n                    _insertEase(\"Sine\", function(p) {\n                        return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;\n                    });\n                    _insertEase(\"Back\", _configBack(\"in\"), _configBack(\"out\"), _configBack());\n                    _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {\n                        config: function config(steps, immediateStart) {\n                            if (steps === void 0) {\n                                steps = 1;\n                            }\n                            var p1 = 1 / steps, p2 = steps + (immediateStart ? 0 : 1), p3 = immediateStart ? 1 : 0, max = 1 - _tinyNum;\n                            return function(p) {\n                                return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;\n                            };\n                        }\n                    };\n                    _defaults.ease = _easeMap[\"quad.out\"];\n                    _forEachName(\"onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt\", function(name) {\n                        return _callbackNames += name + \",\" + name + \"Params,\";\n                    });\n                    /*\n         * --------------------------------------------------------------------------------------\n         * CACHE\n         * --------------------------------------------------------------------------------------\n         */ var GSCache = function GSCache(target, harness) {\n                        this.id = _gsID++;\n                        target._gsap = this;\n                        this.target = target;\n                        this.harness = harness;\n                        this.get = harness ? harness.get : _getProperty;\n                        this.set = harness ? harness.getSetter : _getSetter;\n                    };\n                    /*\n         * --------------------------------------------------------------------------------------\n         * ANIMATION\n         * --------------------------------------------------------------------------------------\n         */ exports1.GSCache = GSCache;\n                    var Animation = /*#__PURE__*/ function() {\n                        function Animation(vars, time) {\n                            var parent = vars.parent || _globalTimeline;\n                            this.vars = vars;\n                            this._delay = +vars.delay || 0;\n                            if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {\n                                // TODO: repeat: Infinity on a timeline's children must flag that timeline internally and affect its totalDuration, otherwise it'll stop in the negative direction when reaching the start.\n                                this._rDelay = vars.repeatDelay || 0;\n                                this._yoyo = !!vars.yoyo || !!vars.yoyoEase;\n                            }\n                            this._ts = 1;\n                            _setDuration(this, +vars.duration, 1, 1);\n                            this.data = vars.data;\n                            _tickerActive || _ticker.wake();\n                            parent && _addToTimeline(parent, this, time || time === 0 ? time : parent._time, 1);\n                            vars.reversed && this.reverse();\n                            vars.paused && this.paused(true);\n                        }\n                        var _proto = Animation.prototype;\n                        _proto.delay = function delay(value) {\n                            if (value || value === 0) {\n                                this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);\n                                this._delay = value;\n                                return this;\n                            }\n                            return this._delay;\n                        };\n                        _proto.duration = function duration(value) {\n                            return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;\n                        };\n                        _proto.totalDuration = function totalDuration(value) {\n                            if (!arguments.length) {\n                                return this._tDur;\n                            }\n                            this._dirty = 0;\n                            return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));\n                        };\n                        _proto.totalTime = function totalTime(_totalTime, suppressEvents) {\n                            _wake();\n                            if (!arguments.length) {\n                                return this._tTime;\n                            }\n                            var parent = this._dp;\n                            if (parent && parent.smoothChildTiming && this._ts) {\n                                _alignPlayhead(this, _totalTime);\n                                !parent._dp || parent.parent || _postAddChecks(parent, this); // edge case: if this is a child of a timeline that already completed, for example, we must re-activate the parent.\n                                //in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The start of that child would get pushed out, but one of the ancestors may have completed.\n                                while(parent.parent){\n                                    if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {\n                                        parent.totalTime(parent._tTime, true);\n                                    }\n                                    parent = parent.parent;\n                                }\n                                if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {\n                                    //if the animation doesn't have a parent, put it back into its last parent (recorded as _dp for exactly cases like this). Limit to parents with autoRemoveChildren (like globalTimeline) so that if the user manually removes an animation from a timeline and then alters its playhead, it doesn't get added back in.\n                                    _addToTimeline(this._dp, this, this._start - this._delay);\n                                }\n                            }\n                            if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {\n                                // check for _ptLookup on a Tween instance to ensure it has actually finished being instantiated, otherwise if this.reverse() gets called in the Animation constructor, it could trigger a render() here even though the _targets weren't populated, thus when _init() is called there won't be any PropTweens (it'll act like the tween is non-functional)\n                                this._ts || (this._pTime = _totalTime); // otherwise, if an animation is paused, then the playhead is moved back to zero, then resumed, it'd revert back to the original time at the pause\n                                //if (!this._lock) { // avoid endless recursion (not sure we need this yet or if it's worth the performance hit)\n                                //   this._lock = 1;\n                                _lazySafeRender(this, _totalTime, suppressEvents); //   this._lock = 0;\n                            //}\n                            }\n                            return this;\n                        };\n                        _proto.time = function time(value, suppressEvents) {\n                            return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % this._dur || (value ? this._dur : 0), suppressEvents) : this._time; // note: if the modulus results in 0, the playhead could be exactly at the end or the beginning, and we always defer to the END with a non-zero value, otherwise if you set the time() to the very end (duration()), it would render at the START!\n                        };\n                        _proto.totalProgress = function totalProgress(value, suppressEvents) {\n                            return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;\n                        };\n                        _proto.progress = function progress(value, suppressEvents) {\n                            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;\n                        };\n                        _proto.iteration = function iteration(value, suppressEvents) {\n                            var cycleDuration = this.duration() + this._rDelay;\n                            return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;\n                        } // potential future addition:\n                        ;\n                        _proto.timeScale = function timeScale(value) {\n                            if (!arguments.length) {\n                                return this._rts === -_tinyNum ? 0 : this._rts; // recorded timeScale. Special case: if someone calls reverse() on an animation with timeScale of 0, we assign it -_tinyNum to remember it's reversed.\n                            }\n                            if (this._rts === value) {\n                                return this;\n                            }\n                            var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime; // make sure to do the parentToChildTotalTime() BEFORE setting the new _ts because the old one must be used in that calculation.\n                            // prioritize rendering where the parent's playhead lines up instead of this._tTime because there could be a tween that's animating another tween's timeScale in the same rendering loop (same parent), thus if the timeScale tween renders first, it would alter _start BEFORE _tTime was set on that tick (in the rendering loop), effectively freezing it until the timeScale tween finishes.\n                            this._rts = +value || 0;\n                            this._ts = this._ps || value === -_tinyNum ? 0 : this._rts; // _ts is the functional timeScale which would be 0 if the animation is paused.\n                            return _recacheAncestors(this.totalTime(_clamp(-this._delay, this._tDur, tTime), true));\n                        };\n                        _proto.paused = function paused(value) {\n                            if (!arguments.length) {\n                                return this._ps;\n                            }\n                            if (this._ps !== value) {\n                                this._ps = value;\n                                if (value) {\n                                    this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()); // if the pause occurs during the delay phase, make sure that's factored in when resuming.\n                                    this._ts = this._act = 0; // _ts is the functional timeScale, so a paused tween would effectively have a timeScale of 0. We record the \"real\" timeScale as _rts (recorded time scale)\n                                } else {\n                                    _wake();\n                                    this._ts = this._rts; //only defer to _pTime (pauseTime) if tTime is zero. Remember, someone could pause() an animation, then scrub the playhead and resume(). If the parent doesn't have smoothChildTiming, we render at the rawTime() because the startTime won't get updated.\n                                    this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && (this._tTime -= _tinyNum) && Math.abs(this._zTime) !== _tinyNum); // edge case: animation.progress(1).pause().play() wouldn't render again because the playhead is already at the end, but the call to totalTime() below will add it back to its parent...and not remove it again (since removing only happens upon rendering at a new time). Offsetting the _tTime slightly is done simply to cause the final render in totalTime() that'll pop it off its timeline (if autoRemoveChildren is true, of course). Check to make sure _zTime isn't -_tinyNum to avoid an edge case where the playhead is pushed to the end but INSIDE a tween/callback, the timeline itself is paused thus halting rendering and leaving a few unrendered. When resuming, it wouldn't render those otherwise.\n                                }\n                            }\n                            return this;\n                        };\n                        _proto.startTime = function startTime(value) {\n                            if (arguments.length) {\n                                this._start = value;\n                                var parent = this.parent || this._dp;\n                                parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);\n                                return this;\n                            }\n                            return this._start;\n                        };\n                        _proto.endTime = function endTime(includeRepeats) {\n                            return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts);\n                        };\n                        _proto.rawTime = function rawTime(wrapRepeats) {\n                            var parent = this.parent || this._dp; // _dp = detatched parent\n                            return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);\n                        };\n                        _proto.globalTime = function globalTime(rawTime) {\n                            var animation = this, time = arguments.length ? rawTime : animation.rawTime();\n                            while(animation){\n                                time = animation._start + time / (animation._ts || 1);\n                                animation = animation._dp;\n                            }\n                            return time;\n                        };\n                        _proto.repeat = function repeat(value) {\n                            if (arguments.length) {\n                                this._repeat = value === Infinity ? -2 : value;\n                                return _onUpdateTotalDuration(this);\n                            }\n                            return this._repeat === -2 ? Infinity : this._repeat;\n                        };\n                        _proto.repeatDelay = function repeatDelay(value) {\n                            if (arguments.length) {\n                                this._rDelay = value;\n                                return _onUpdateTotalDuration(this);\n                            }\n                            return this._rDelay;\n                        };\n                        _proto.yoyo = function yoyo(value) {\n                            if (arguments.length) {\n                                this._yoyo = value;\n                                return this;\n                            }\n                            return this._yoyo;\n                        };\n                        _proto.seek = function seek(position, suppressEvents) {\n                            return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));\n                        };\n                        _proto.restart = function restart(includeDelay, suppressEvents) {\n                            return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));\n                        };\n                        _proto.play = function play(from, suppressEvents) {\n                            from != null && this.seek(from, suppressEvents);\n                            return this.reversed(false).paused(false);\n                        };\n                        _proto.reverse = function reverse(from, suppressEvents) {\n                            from != null && this.seek(from || this.totalDuration(), suppressEvents);\n                            return this.reversed(true).paused(false);\n                        };\n                        _proto.pause = function pause(atTime, suppressEvents) {\n                            atTime != null && this.seek(atTime, suppressEvents);\n                            return this.paused(true);\n                        };\n                        _proto.resume = function resume() {\n                            return this.paused(false);\n                        };\n                        _proto.reversed = function reversed(value) {\n                            if (arguments.length) {\n                                !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0)); // in case timeScale is zero, reversing would have no effect so we use _tinyNum.\n                                return this;\n                            }\n                            return this._rts < 0;\n                        };\n                        _proto.invalidate = function invalidate() {\n                            this._initted = this._act = 0;\n                            this._zTime = -_tinyNum;\n                            return this;\n                        };\n                        _proto.isActive = function isActive() {\n                            var parent = this.parent || this._dp, start = this._start, rawTime;\n                            return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);\n                        };\n                        _proto.eventCallback = function eventCallback(type, callback, params) {\n                            var vars = this.vars;\n                            if (arguments.length > 1) {\n                                if (!callback) {\n                                    delete vars[type];\n                                } else {\n                                    vars[type] = callback;\n                                    params && (vars[type + \"Params\"] = params);\n                                    type === \"onUpdate\" && (this._onUpdate = callback);\n                                }\n                                return this;\n                            }\n                            return vars[type];\n                        };\n                        _proto.then = function then(onFulfilled) {\n                            var self = this;\n                            return new Promise(function(resolve) {\n                                var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough, _resolve = function _resolve() {\n                                    var _then = self.then;\n                                    self.then = null; // temporarily null the then() method to avoid an infinite loop (see https://github.com/greensock/GSAP/issues/322)\n                                    _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);\n                                    resolve(f);\n                                    self.then = _then;\n                                };\n                                if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {\n                                    _resolve();\n                                } else {\n                                    self._prom = _resolve;\n                                }\n                            });\n                        };\n                        _proto.kill = function kill() {\n                            _interrupt(this);\n                        };\n                        return Animation;\n                    }();\n                    exports1.Animation = Animation;\n                    _setDefaults(Animation.prototype, {\n                        _time: 0,\n                        _start: 0,\n                        _end: 0,\n                        _tTime: 0,\n                        _tDur: 0,\n                        _dirty: 0,\n                        _repeat: 0,\n                        _yoyo: false,\n                        parent: null,\n                        _initted: false,\n                        _rDelay: 0,\n                        _ts: 1,\n                        _dp: 0,\n                        ratio: 0,\n                        _zTime: -_tinyNum,\n                        _prom: 0,\n                        _ps: false,\n                        _rts: 1\n                    });\n                    /*\n         * -------------------------------------------------\n         * TIMELINE\n         * -------------------------------------------------\n         */ var Timeline = /*#__PURE__*/ function(_Animation) {\n                        _inheritsLoose(Timeline, _Animation);\n                        function Timeline(vars, time) {\n                            var _this;\n                            if (vars === void 0) {\n                                vars = {};\n                            }\n                            _this = _Animation.call(this, vars, time) || this;\n                            _this.labels = {};\n                            _this.smoothChildTiming = !!vars.smoothChildTiming;\n                            _this.autoRemoveChildren = !!vars.autoRemoveChildren;\n                            _this._sort = _isNotFalse(vars.sortChildren);\n                            _this.parent && _postAddChecks(_this.parent, _assertThisInitialized(_this));\n                            vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);\n                            return _this;\n                        }\n                        var _proto2 = Timeline.prototype;\n                        _proto2.to = function to(targets, vars, position) {\n                            new Tween(targets, _parseVars(arguments, 0, this), _parsePosition(this, _isNumber(vars) ? arguments[3] : position));\n                            return this;\n                        };\n                        _proto2.from = function from(targets, vars, position) {\n                            new Tween(targets, _parseVars(arguments, 1, this), _parsePosition(this, _isNumber(vars) ? arguments[3] : position));\n                            return this;\n                        };\n                        _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {\n                            new Tween(targets, _parseVars(arguments, 2, this), _parsePosition(this, _isNumber(fromVars) ? arguments[4] : position));\n                            return this;\n                        };\n                        _proto2.set = function set(targets, vars, position) {\n                            vars.duration = 0;\n                            vars.parent = this;\n                            _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);\n                            vars.immediateRender = !!vars.immediateRender;\n                            new Tween(targets, vars, _parsePosition(this, position), 1);\n                            return this;\n                        };\n                        _proto2.call = function call(callback, params, position) {\n                            return _addToTimeline(this, Tween.delayedCall(0, callback, params), _parsePosition(this, position));\n                        } //ONLY for backward compatibility! Maybe delete?\n                        ;\n                        _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {\n                            vars.duration = duration;\n                            vars.stagger = vars.stagger || stagger;\n                            vars.onComplete = onCompleteAll;\n                            vars.onCompleteParams = onCompleteAllParams;\n                            vars.parent = this;\n                            new Tween(targets, vars, _parsePosition(this, position));\n                            return this;\n                        };\n                        _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {\n                            vars.runBackwards = 1;\n                            _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);\n                            return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);\n                        };\n                        _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {\n                            toVars.startAt = fromVars;\n                            _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);\n                            return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);\n                        };\n                        _proto2.render = function render(totalTime, suppressEvents, force) {\n                            var prevTime = this._time, tDur = this._dirty ? this.totalDuration() : this._tDur, dur = this._dur, tTime = this !== _globalTimeline && totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime, crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur), time, child, next, iteration, cycleDuration, prevPaused, pauseTween, timeScale, prevStart, prevIteration, yoyo, isYoyo;\n                            if (tTime !== this._tTime || force || crossingStart) {\n                                if (prevTime !== this._time && dur) {\n                                    //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).\n                                    tTime += this._time - prevTime;\n                                    totalTime += this._time - prevTime;\n                                }\n                                time = tTime;\n                                prevStart = this._start;\n                                timeScale = this._ts;\n                                prevPaused = !timeScale;\n                                if (crossingStart) {\n                                    dur || (prevTime = this._zTime); //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.\n                                    (totalTime || !suppressEvents) && (this._zTime = totalTime);\n                                }\n                                if (this._repeat) {\n                                    //adjust the time for repeats and yoyos\n                                    yoyo = this._yoyo;\n                                    cycleDuration = dur + this._rDelay;\n                                    if (this._repeat < -1 && totalTime < 0) {\n                                        return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);\n                                    }\n                                    time = _round(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)\n                                    if (tTime === tDur) {\n                                        // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)\n                                        iteration = this._repeat;\n                                        time = dur;\n                                    } else {\n                                        iteration = ~~(tTime / cycleDuration);\n                                        if (iteration && iteration === tTime / cycleDuration) {\n                                            time = dur;\n                                            iteration--;\n                                        }\n                                        time > dur && (time = dur);\n                                    }\n                                    prevIteration = _animationCycle(this._tTime, cycleDuration);\n                                    !prevTime && this._tTime && prevIteration !== iteration && (prevIteration = iteration); // edge case - if someone does addPause() at the very beginning of a repeating timeline, that pause is technically at the same spot as the end which causes this._time to get set to 0 when the totalTime would normally place the playhead at the end. See https://greensock.com/forums/topic/23823-closing-nav-animation-not-working-on-ie-and-iphone-6-maybe-other-older-browser/?tab=comments#comment-113005\n                                    if (yoyo && iteration & 1) {\n                                        time = dur - time;\n                                        isYoyo = 1;\n                                    }\n                                    /*\n                  make sure children at the end/beginning of the timeline are rendered properly. If, for example,\n                  a 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which\n                  would get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there\n                  could be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So\n                  we need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must\n                  ensure that zero-duration tweens at the very beginning or end of the Timeline work.\n                  */ if (iteration !== prevIteration && !this._lock) {\n                                        var rewinding = yoyo && prevIteration & 1, doesWrap = rewinding === (yoyo && iteration & 1);\n                                        iteration < prevIteration && (rewinding = !rewinding);\n                                        prevTime = rewinding ? 0 : dur;\n                                        this._lock = 1;\n                                        this.render(prevTime || (isYoyo ? 0 : _round(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;\n                                        !suppressEvents && this.parent && _callback(this, \"onRepeat\");\n                                        this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);\n                                        if (prevTime !== this._time || prevPaused !== !this._ts) {\n                                            return this;\n                                        }\n                                        dur = this._dur; // in case the duration changed in the onRepeat\n                                        tDur = this._tDur;\n                                        if (doesWrap) {\n                                            this._lock = 2;\n                                            prevTime = rewinding ? dur : -0.0001;\n                                            this.render(prevTime, true);\n                                            this.vars.repeatRefresh && !isYoyo && this.invalidate();\n                                        }\n                                        this._lock = 0;\n                                        if (!this._ts && !prevPaused) {\n                                            return this;\n                                        } //in order for yoyoEase to work properly when there's a stagger, we must swap out the ease in each sub-tween.\n                                        _propagateYoyoEase(this, isYoyo);\n                                    }\n                                }\n                                if (this._hasPause && !this._forcing && this._lock < 2) {\n                                    pauseTween = _findNextPauseTween(this, _round(prevTime), _round(time));\n                                    if (pauseTween) {\n                                        tTime -= time - (time = pauseTween._start);\n                                    }\n                                }\n                                this._tTime = tTime;\n                                this._time = time;\n                                this._act = !timeScale; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.\n                                if (!this._initted) {\n                                    this._onUpdate = this.vars.onUpdate;\n                                    this._initted = 1;\n                                    this._zTime = totalTime;\n                                    prevTime = 0; // upon init, the playhead should always go forward; someone could invalidate() a completed timeline and then if they restart(), that would make child tweens render in reverse order which could lock in the wrong starting values if they build on each other, like tl.to(obj, {x: 100}).to(obj, {x: 0}).\n                                }\n                                !prevTime && (time || !dur && totalTime >= 0) && !suppressEvents && _callback(this, \"onStart\");\n                                if (time >= prevTime && totalTime >= 0) {\n                                    child = this._first;\n                                    while(child){\n                                        next = child._next;\n                                        if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {\n                                            if (child.parent !== this) {\n                                                // an extreme edge case - the child's render could do something like kill() the \"next\" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.\n                                                return this.render(totalTime, suppressEvents, force);\n                                            }\n                                            child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);\n                                            if (time !== this._time || !this._ts && !prevPaused) {\n                                                //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n                                                pauseTween = 0;\n                                                next && (tTime += this._zTime = -_tinyNum); // it didn't finish rendering, so flag zTime as negative so that so that the next time render() is called it'll be forced (to render any remaining children)\n                                                break;\n                                            }\n                                        }\n                                        child = next;\n                                    }\n                                } else {\n                                    child = this._last;\n                                    var adjustedTime = totalTime < 0 ? totalTime : time; //when the playhead goes backward beyond the start of this timeline, we must pass that information down to the child animations so that zero-duration tweens know whether to render their starting or ending values.\n                                    while(child){\n                                        next = child._prev;\n                                        if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {\n                                            if (child.parent !== this) {\n                                                // an extreme edge case - the child's render could do something like kill() the \"next\" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.\n                                                return this.render(totalTime, suppressEvents, force);\n                                            }\n                                            child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force);\n                                            if (time !== this._time || !this._ts && !prevPaused) {\n                                                //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n                                                pauseTween = 0;\n                                                next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum); // it didn't finish rendering, so adjust zTime so that so that the next time render() is called it'll be forced (to render any remaining children)\n                                                break;\n                                            }\n                                        }\n                                        child = next;\n                                    }\n                                }\n                                if (pauseTween && !suppressEvents) {\n                                    this.pause();\n                                    pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;\n                                    if (this._ts) {\n                                        //the callback resumed playback! So since we may have held back the playhead due to where the pause is positioned, go ahead and jump to where it's SUPPOSED to be (if no pause happened).\n                                        this._start = prevStart; //if the pause was at an earlier time and the user resumed in the callback, it could reposition the timeline (changing its startTime), throwing things off slightly, so we make sure the _start doesn't shift.\n                                        _setEnd(this);\n                                        return this.render(totalTime, suppressEvents, force);\n                                    }\n                                }\n                                this._onUpdate && !suppressEvents && _callback(this, \"onUpdate\", true);\n                                if (tTime === tDur && tDur >= this.totalDuration() || !tTime && prevTime) {\n                                    if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) {\n                                        if (!this._lock) {\n                                            (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.\n                                            if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime)) {\n                                                _callback(this, tTime === tDur ? \"onComplete\" : \"onReverseComplete\", true);\n                                                this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            return this;\n                        };\n                        _proto2.add = function add(child, position) {\n                            var _this2 = this;\n                            _isNumber(position) || (position = _parsePosition(this, position));\n                            if (!(child instanceof Animation)) {\n                                if (_isArray(child)) {\n                                    child.forEach(function(obj) {\n                                        return _this2.add(obj, position);\n                                    });\n                                    return this;\n                                }\n                                if (_isString(child)) {\n                                    return this.addLabel(child, position);\n                                }\n                                if (_isFunction(child)) {\n                                    child = Tween.delayedCall(0, child);\n                                } else {\n                                    return this;\n                                }\n                            }\n                            return this !== child ? _addToTimeline(this, child, position) : this; //don't allow a timeline to be added to itself as a child!\n                        };\n                        _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {\n                            if (nested === void 0) {\n                                nested = true;\n                            }\n                            if (tweens === void 0) {\n                                tweens = true;\n                            }\n                            if (timelines === void 0) {\n                                timelines = true;\n                            }\n                            if (ignoreBeforeTime === void 0) {\n                                ignoreBeforeTime = -_bigNum;\n                            }\n                            var a = [], child = this._first;\n                            while(child){\n                                if (child._start >= ignoreBeforeTime) {\n                                    if (child instanceof Tween) {\n                                        tweens && a.push(child);\n                                    } else {\n                                        timelines && a.push(child);\n                                        nested && a.push.apply(a, child.getChildren(true, tweens, timelines));\n                                    }\n                                }\n                                child = child._next;\n                            }\n                            return a;\n                        };\n                        _proto2.getById = function getById(id) {\n                            var animations = this.getChildren(1, 1, 1), i = animations.length;\n                            while(i--){\n                                if (animations[i].vars.id === id) {\n                                    return animations[i];\n                                }\n                            }\n                        };\n                        _proto2.remove = function remove(child) {\n                            if (_isString(child)) {\n                                return this.removeLabel(child);\n                            }\n                            if (_isFunction(child)) {\n                                return this.killTweensOf(child);\n                            }\n                            _removeLinkedListItem(this, child);\n                            if (child === this._recent) {\n                                this._recent = this._last;\n                            }\n                            return _uncache(this);\n                        };\n                        _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {\n                            if (!arguments.length) {\n                                return this._tTime;\n                            }\n                            this._forcing = 1;\n                            if (!this._dp && this._ts) {\n                                //special case for the global timeline (or any other that has no parent or detached parent).\n                                this._start = _round(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));\n                            }\n                            _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);\n                            this._forcing = 0;\n                            return this;\n                        };\n                        _proto2.addLabel = function addLabel(label, position) {\n                            this.labels[label] = _parsePosition(this, position);\n                            return this;\n                        };\n                        _proto2.removeLabel = function removeLabel(label) {\n                            delete this.labels[label];\n                            return this;\n                        };\n                        _proto2.addPause = function addPause(position, callback, params) {\n                            var t = Tween.delayedCall(0, callback || _emptyFunc, params);\n                            t.data = \"isPause\";\n                            this._hasPause = 1;\n                            return _addToTimeline(this, t, _parsePosition(this, position));\n                        };\n                        _proto2.removePause = function removePause(position) {\n                            var child = this._first;\n                            position = _parsePosition(this, position);\n                            while(child){\n                                if (child._start === position && child.data === \"isPause\") {\n                                    _removeFromParent(child);\n                                }\n                                child = child._next;\n                            }\n                        };\n                        _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {\n                            var tweens = this.getTweensOf(targets, onlyActive), i = tweens.length;\n                            while(i--){\n                                _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);\n                            }\n                            return this;\n                        };\n                        _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {\n                            var a = [], parsedTargets = toArray(targets), child = this._first, isGlobalTime = _isNumber(onlyActive), // a number is interpreted as a global time. If the animation spans\n                            children;\n                            while(child){\n                                if (child instanceof Tween) {\n                                    if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {\n                                        // note: if this is for overwriting, it should only be for tweens that aren't paused and are initted.\n                                        a.push(child);\n                                    }\n                                } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {\n                                    a.push.apply(a, children);\n                                }\n                                child = child._next;\n                            }\n                            return a;\n                        } // potential future feature - targets() on timelines\n                        ;\n                        _proto2.tweenTo = function tweenTo(position, vars) {\n                            vars = vars || {};\n                            var tl = this, endTime = _parsePosition(tl, position), _vars = vars, startAt = _vars.startAt, _onStart = _vars.onStart, onStartParams = _vars.onStartParams, immediateRender = _vars.immediateRender, tween = Tween.to(tl, _setDefaults({\n                                ease: \"none\",\n                                lazy: false,\n                                immediateRender: false,\n                                time: endTime,\n                                overwrite: \"auto\",\n                                duration: vars.duration || Math.abs((endTime - (startAt && \"time\" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,\n                                onStart: function onStart() {\n                                    tl.pause();\n                                    var duration = vars.duration || Math.abs((endTime - tl._time) / tl.timeScale());\n                                    tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);\n                                    _onStart && _onStart.apply(tween, onStartParams || []); //in case the user had an onStart in the vars - we don't want to overwrite it.\n                                }\n                            }, vars));\n                            return immediateRender ? tween.render(0) : tween;\n                        };\n                        _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {\n                            return this.tweenTo(toPosition, _setDefaults({\n                                startAt: {\n                                    time: _parsePosition(this, fromPosition)\n                                }\n                            }, vars));\n                        };\n                        _proto2.recent = function recent() {\n                            return this._recent;\n                        };\n                        _proto2.nextLabel = function nextLabel(afterTime) {\n                            if (afterTime === void 0) {\n                                afterTime = this._time;\n                            }\n                            return _getLabelInDirection(this, _parsePosition(this, afterTime));\n                        };\n                        _proto2.previousLabel = function previousLabel(beforeTime) {\n                            if (beforeTime === void 0) {\n                                beforeTime = this._time;\n                            }\n                            return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);\n                        };\n                        _proto2.currentLabel = function currentLabel(value) {\n                            return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);\n                        };\n                        _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {\n                            if (ignoreBeforeTime === void 0) {\n                                ignoreBeforeTime = 0;\n                            }\n                            var child = this._first, labels = this.labels, p;\n                            while(child){\n                                if (child._start >= ignoreBeforeTime) {\n                                    child._start += amount;\n                                    child._end += amount;\n                                }\n                                child = child._next;\n                            }\n                            if (adjustLabels) {\n                                for(p in labels){\n                                    if (labels[p] >= ignoreBeforeTime) {\n                                        labels[p] += amount;\n                                    }\n                                }\n                            }\n                            return _uncache(this);\n                        };\n                        _proto2.invalidate = function invalidate() {\n                            var child = this._first;\n                            this._lock = 0;\n                            while(child){\n                                child.invalidate();\n                                child = child._next;\n                            }\n                            return _Animation.prototype.invalidate.call(this);\n                        };\n                        _proto2.clear = function clear(includeLabels) {\n                            if (includeLabels === void 0) {\n                                includeLabels = true;\n                            }\n                            var child = this._first, next;\n                            while(child){\n                                next = child._next;\n                                this.remove(child);\n                                child = next;\n                            }\n                            this._dp && (this._time = this._tTime = this._pTime = 0);\n                            includeLabels && (this.labels = {});\n                            return _uncache(this);\n                        };\n                        _proto2.totalDuration = function totalDuration(value) {\n                            var max = 0, self = this, child = self._last, prevStart = _bigNum, prev, start, parent;\n                            if (arguments.length) {\n                                return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));\n                            }\n                            if (self._dirty) {\n                                parent = self.parent;\n                                while(child){\n                                    prev = child._prev; //record it here in case the tween changes position in the sequence...\n                                    child._dirty && child.totalDuration(); //could change the tween._startTime, so make sure the animation's cache is clean before analyzing it.\n                                    start = child._start;\n                                    if (start > prevStart && self._sort && child._ts && !self._lock) {\n                                        //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence\n                                        self._lock = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add().\n                                        _addToTimeline(self, child, start - child._delay, 1)._lock = 0;\n                                    } else {\n                                        prevStart = start;\n                                    }\n                                    if (start < 0 && child._ts) {\n                                        //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.\n                                        max -= start;\n                                        if (!parent && !self._dp || parent && parent.smoothChildTiming) {\n                                            self._start += start / self._ts;\n                                            self._time -= start;\n                                            self._tTime -= start;\n                                        }\n                                        self.shiftChildren(-start, false, -Infinity);\n                                        prevStart = 0;\n                                    }\n                                    child._end > max && child._ts && (max = child._end);\n                                    child = prev;\n                                }\n                                _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);\n                                self._dirty = 0;\n                            }\n                            return self._tDur;\n                        };\n                        Timeline.updateRoot = function updateRoot(time) {\n                            if (_globalTimeline._ts) {\n                                _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));\n                                _lastRenderedFrame = _ticker.frame;\n                            }\n                            if (_ticker.frame >= _nextGCFrame) {\n                                _nextGCFrame += _config.autoSleep || 120;\n                                var child = _globalTimeline._first;\n                                if (!child || !child._ts) {\n                                    if (_config.autoSleep && _ticker._listeners.length < 2) {\n                                        while(child && !child._ts){\n                                            child = child._next;\n                                        }\n                                        child || _ticker.sleep();\n                                    }\n                                }\n                            }\n                        };\n                        return Timeline;\n                    }(Animation);\n                    exports1.TimelineLite = exports1.TimelineMax = exports1.Timeline = Timeline;\n                    _setDefaults(Timeline.prototype, {\n                        _lock: 0,\n                        _hasPause: 0,\n                        _forcing: 0\n                    });\n                    var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {\n                        //note: we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus \"this\" would refer to the plugin.\n                        var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter), index = 0, matchIndex = 0, result, startNums, color, endNum, chunk, startNum, hasRandom, a;\n                        pt.b = start;\n                        pt.e = end;\n                        start += \"\"; //ensure values are strings\n                        end += \"\";\n                        if (hasRandom = ~end.indexOf(\"random(\")) {\n                            end = _replaceRandom(end);\n                        }\n                        if (stringFilter) {\n                            a = [\n                                start,\n                                end\n                            ];\n                            stringFilter(a, target, prop); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.\n                            start = a[0];\n                            end = a[1];\n                        }\n                        startNums = start.match(_complexStringNumExp) || [];\n                        while(result = _complexStringNumExp.exec(end)){\n                            endNum = result[0];\n                            chunk = end.substring(index, result.index);\n                            if (color) {\n                                color = (color + 1) % 5;\n                            } else if (chunk.substr(-5) === \"rgba(\") {\n                                color = 1;\n                            }\n                            if (endNum !== startNums[matchIndex++]) {\n                                startNum = parseFloat(startNums[matchIndex - 1]) || 0; //these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.\n                                pt._pt = {\n                                    _next: pt._pt,\n                                    p: chunk || matchIndex === 1 ? chunk : \",\",\n                                    //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n                                    s: startNum,\n                                    c: endNum.charAt(1) === \"=\" ? parseFloat(endNum.substr(2)) * (endNum.charAt(0) === \"-\" ? -1 : 1) : parseFloat(endNum) - startNum,\n                                    m: color && color < 4 ? Math.round : 0\n                                };\n                                index = _complexStringNumExp.lastIndex;\n                            }\n                        }\n                        pt.c = index < end.length ? end.substring(index, end.length) : \"\"; //we use the \"c\" of the PropTween to store the final part of the string (after the last number)\n                        pt.fp = funcParam;\n                        if (_relExp.test(end) || hasRandom) {\n                            pt.e = 0; //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).\n                        }\n                        this._pt = pt; //start the linked list with this new PropTween. Remember, we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus \"this\" would refer to the plugin.\n                        return pt;\n                    }, _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam) {\n                        _isFunction(end) && (end = end(index || 0, target, targets));\n                        var currentValue = target[prop], parsedStart = start !== \"get\" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf(\"set\") || !_isFunction(target[\"get\" + prop.substr(3)]) ? prop : \"get\" + prop.substr(3)](funcParam) : target[prop](), setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc, pt;\n                        if (_isString(end)) {\n                            if (~end.indexOf(\"random(\")) {\n                                end = _replaceRandom(end);\n                            }\n                            if (end.charAt(1) === \"=\") {\n                                end = parseFloat(parsedStart) + parseFloat(end.substr(2)) * (end.charAt(0) === \"-\" ? -1 : 1) + (getUnit(parsedStart) || 0);\n                            }\n                        }\n                        if (parsedStart !== end) {\n                            if (!isNaN(parsedStart * end)) {\n                                pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === \"boolean\" ? _renderBoolean : _renderPlain, 0, setter);\n                                funcParam && (pt.fp = funcParam);\n                                modifier && pt.modifier(modifier, this, target);\n                                return this._pt = pt;\n                            }\n                            !currentValue && !(prop in target) && _missingPlugin(prop, end);\n                            return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);\n                        }\n                    }, //creates a copy of the vars object and processes any function-based values (putting the resulting values directly into the copy) as well as strings with \"random()\" in them. It does NOT process relative values.\n                    _processVars = function _processVars(vars, index, target, targets, tween) {\n                        _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));\n                        if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {\n                            return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;\n                        }\n                        var copy = {}, p;\n                        for(p in vars){\n                            copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);\n                        }\n                        return copy;\n                    }, _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {\n                        var plugin, pt, ptLookup, i;\n                        if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {\n                            tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);\n                            if (tween !== _quickTween) {\n                                ptLookup = tween._ptLookup[tween._targets.indexOf(target)]; //note: we can't use tween._ptLookup[index] because for staggered tweens, the index from the fullTargets array won't match what it is in each individual tween that spawns from the stagger.\n                                i = plugin._props.length;\n                                while(i--){\n                                    ptLookup[plugin._props[i]] = pt;\n                                }\n                            }\n                        }\n                        return plugin;\n                    }, _overwritingTween, //store a reference temporarily so we can avoid overwriting itself.\n                    _initTween = function _initTween(tween, time) {\n                        var vars = tween.vars, ease = vars.ease, startAt = vars.startAt, immediateRender = vars.immediateRender, lazy = vars.lazy, onUpdate = vars.onUpdate, onUpdateParams = vars.onUpdateParams, callbackScope = vars.callbackScope, runBackwards = vars.runBackwards, yoyoEase = vars.yoyoEase, keyframes = vars.keyframes, autoRevert = vars.autoRevert, dur = tween._dur, prevStartAt = tween._startAt, targets = tween._targets, parent = tween.parent, fullTargets = parent && parent.data === \"nested\" ? parent.parent._targets : targets, autoOverwrite = tween._overwrite === \"auto\" && !_suppressOverwrites, tl = tween.timeline, cleanVars, i, p, pt, target, hasPriority, gsData, harness, plugin, ptLookup, index, harnessVars, overwritten;\n                        tl && (!keyframes || !ease) && (ease = \"none\");\n                        tween._ease = _parseEase(ease, _defaults.ease);\n                        tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;\n                        if (yoyoEase && tween._yoyo && !tween._repeat) {\n                            //there must have been a parent timeline with yoyo:true that is currently in its yoyo phase, so flip the eases.\n                            yoyoEase = tween._yEase;\n                            tween._yEase = tween._ease;\n                            tween._ease = yoyoEase;\n                        }\n                        if (!tl) {\n                            //if there's an internal timeline, skip all the parsing because we passed that task down the chain.\n                            harness = targets[0] ? _getCache(targets[0]).harness : 0;\n                            harnessVars = harness && vars[harness.prop]; //someone may need to specify CSS-specific values AND non-CSS values, like if the element has an \"x\" property plus it's a standard DOM element. We allow people to distinguish by wrapping plugin-specific stuff in a css:{} object for example.\n                            cleanVars = _copyExcluding(vars, _reservedProps);\n                            prevStartAt && prevStartAt.render(-1, true).kill();\n                            if (startAt) {\n                                _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({\n                                    data: \"isStart\",\n                                    overwrite: false,\n                                    parent: parent,\n                                    immediateRender: true,\n                                    lazy: _isNotFalse(lazy),\n                                    startAt: null,\n                                    delay: 0,\n                                    onUpdate: onUpdate,\n                                    onUpdateParams: onUpdateParams,\n                                    callbackScope: callbackScope,\n                                    stagger: 0\n                                }, startAt))); //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, from, to).fromTo(e, to, from);\n                                if (immediateRender) {\n                                    if (time > 0) {\n                                        autoRevert || (tween._startAt = 0); //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in Timeline instances where immediateRender was false or when autoRevert is explicitly set to true.\n                                    } else if (dur && !(time < 0 && prevStartAt)) {\n                                        time && (tween._zTime = time);\n                                        return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a Timeline, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.\n                                    }\n                                }\n                            } else if (runBackwards && dur) {\n                                //from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)\n                                if (prevStartAt) {\n                                    !autoRevert && (tween._startAt = 0);\n                                } else {\n                                    time && (immediateRender = false); //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0\n                                    p = _setDefaults({\n                                        overwrite: false,\n                                        data: \"isFromStart\",\n                                        //we tag the tween with as \"isFromStart\" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a \"from()\" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.\n                                        lazy: immediateRender && _isNotFalse(lazy),\n                                        immediateRender: immediateRender,\n                                        //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)\n                                        stagger: 0,\n                                        parent: parent //ensures that nested tweens that had a stagger are handled properly, like gsap.from(\".class\", {y:gsap.utils.wrap([-100,100])})\n                                    }, cleanVars);\n                                    harnessVars && (p[harness.prop] = harnessVars); // in case someone does something like .from(..., {css:{}})\n                                    _removeFromParent(tween._startAt = Tween.set(targets, p));\n                                    if (!immediateRender) {\n                                        _initTween(tween._startAt, _tinyNum); //ensures that the initial values are recorded\n                                    } else if (!time) {\n                                        return;\n                                    }\n                                }\n                            }\n                            tween._pt = 0;\n                            lazy = dur && _isNotFalse(lazy) || lazy && !dur;\n                            for(i = 0; i < targets.length; i++){\n                                target = targets[i];\n                                gsData = target._gsap || _harness(targets)[i]._gsap;\n                                tween._ptLookup[i] = ptLookup = {};\n                                _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)\n                                index = fullTargets === targets ? i : fullTargets.indexOf(target);\n                                if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {\n                                    tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);\n                                    plugin._props.forEach(function(name) {\n                                        ptLookup[name] = pt;\n                                    });\n                                    plugin.priority && (hasPriority = 1);\n                                }\n                                if (!harness || harnessVars) {\n                                    for(p in cleanVars){\n                                        if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {\n                                            plugin.priority && (hasPriority = 1);\n                                        } else {\n                                            ptLookup[p] = pt = _addPropTween.call(tween, target, p, \"get\", cleanVars[p], index, fullTargets, 0, vars.stringFilter);\n                                        }\n                                    }\n                                }\n                                tween._op && tween._op[i] && tween.kill(target, tween._op[i]);\n                                if (autoOverwrite && tween._pt) {\n                                    _overwritingTween = tween;\n                                    _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(0)); //Also make sure the overwriting doesn't overwrite THIS tween!!!\n                                    overwritten = !tween.parent;\n                                    _overwritingTween = 0;\n                                }\n                                tween._pt && lazy && (_lazyLookup[gsData.id] = 1);\n                            }\n                            hasPriority && _sortPropTweensByPriority(tween);\n                            tween._onInit && tween._onInit(tween); //plugins like RoundProps must wait until ALL of the PropTweens are instantiated. In the plugin's init() function, it sets the _onInit on the tween instance. May not be pretty/intuitive, but it's fast and keeps file size down.\n                        }\n                        tween._from = !tl && !!vars.runBackwards; //nested timelines should never run backwards - the backwards-ness is in the child tweens.\n                        tween._onUpdate = onUpdate;\n                        tween._initted = (!tween._op || tween._pt) && !overwritten; // if overwrittenProps resulted in the entire tween being killed, do NOT flag it as initted or else it may render for one tick.\n                    }, _addAliasesToVars = function _addAliasesToVars(targets, vars) {\n                        var harness = targets[0] ? _getCache(targets[0]).harness : 0, propertyAliases = harness && harness.aliases, copy, p, i, aliases;\n                        if (!propertyAliases) {\n                            return vars;\n                        }\n                        copy = _merge({}, vars);\n                        for(p in propertyAliases){\n                            if (p in copy) {\n                                aliases = propertyAliases[p].split(\",\");\n                                i = aliases.length;\n                                while(i--){\n                                    copy[aliases[i]] = copy[p];\n                                }\n                            }\n                        }\n                        return copy;\n                    }, _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {\n                        return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf(\"random(\") ? _replaceRandom(value) : value;\n                    }, _staggerTweenProps = _callbackNames + \"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase\", _staggerPropsToSkip = (_staggerTweenProps + \",id,stagger,delay,duration,paused,scrollTrigger\").split(\",\");\n                    /*\n         * --------------------------------------------------------------------------------------\n         * TWEEN\n         * --------------------------------------------------------------------------------------\n         */ exports1._checkPlugin = _checkPlugin;\n                    var Tween = /*#__PURE__*/ function(_Animation2) {\n                        _inheritsLoose(Tween, _Animation2);\n                        function Tween(targets, vars, time, skipInherit) {\n                            var _this3;\n                            if (typeof vars === \"number\") {\n                                time.duration = vars;\n                                vars = time;\n                                time = null;\n                            }\n                            _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars), time) || this;\n                            var _this3$vars = _this3.vars, duration = _this3$vars.duration, delay = _this3$vars.delay, immediateRender = _this3$vars.immediateRender, stagger = _this3$vars.stagger, overwrite = _this3$vars.overwrite, keyframes = _this3$vars.keyframes, defaults = _this3$vars.defaults, scrollTrigger = _this3$vars.scrollTrigger, yoyoEase = _this3$vars.yoyoEase, parent = _this3.parent, parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : \"length\" in vars) ? [\n                                targets\n                            ] : toArray(targets), tl, i, copy, l, p, curTarget, staggerFunc, staggerVarsToMerge;\n                            _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn(\"GSAP target \" + targets + \" not found. https://greensock.com\", !_config.nullTargetWarn) || [];\n                            _this3._ptLookup = []; //PropTween lookup. An array containing an object for each target, having keys for each tweening property\n                            _this3._overwrite = overwrite;\n                            if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {\n                                vars = _this3.vars;\n                                tl = _this3.timeline = new Timeline({\n                                    data: \"nested\",\n                                    defaults: defaults || {}\n                                });\n                                tl.kill();\n                                tl.parent = tl._dp = _assertThisInitialized(_this3);\n                                tl._start = 0;\n                                if (keyframes) {\n                                    _setDefaults(tl.vars.defaults, {\n                                        ease: \"none\"\n                                    });\n                                    keyframes.forEach(function(frame) {\n                                        return tl.to(parsedTargets, frame, \">\");\n                                    });\n                                } else {\n                                    l = parsedTargets.length;\n                                    staggerFunc = stagger ? distribute(stagger) : _emptyFunc;\n                                    if (_isObject(stagger)) {\n                                        //users can pass in callbacks like onStart/onComplete in the stagger object. These should fire with each individual tween.\n                                        for(p in stagger){\n                                            if (~_staggerTweenProps.indexOf(p)) {\n                                                staggerVarsToMerge || (staggerVarsToMerge = {});\n                                                staggerVarsToMerge[p] = stagger[p];\n                                            }\n                                        }\n                                    }\n                                    for(i = 0; i < l; i++){\n                                        copy = {};\n                                        for(p in vars){\n                                            if (_staggerPropsToSkip.indexOf(p) < 0) {\n                                                copy[p] = vars[p];\n                                            }\n                                        }\n                                        copy.stagger = 0;\n                                        yoyoEase && (copy.yoyoEase = yoyoEase);\n                                        staggerVarsToMerge && _merge(copy, staggerVarsToMerge);\n                                        curTarget = parsedTargets[i]; //don't just copy duration or delay because if they're a string or function, we'd end up in an infinite loop because _isFuncOrString() would evaluate as true in the child tweens, entering this loop, etc. So we parse the value straight from vars and default to 0.\n                                        copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);\n                                        copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;\n                                        if (!stagger && l === 1 && copy.delay) {\n                                            // if someone does delay:\"random(1, 5)\", repeat:-1, for example, the delay shouldn't be inside the repeat.\n                                            _this3._delay = delay = copy.delay;\n                                            _this3._start += delay;\n                                            copy.delay = 0;\n                                        }\n                                        tl.to(curTarget, copy, staggerFunc(i, curTarget, parsedTargets));\n                                    }\n                                    tl.duration() ? duration = delay = 0 : _this3.timeline = 0; // if the timeline's duration is 0, we don't need a timeline internally!\n                                }\n                                duration || _this3.duration(duration = tl.duration());\n                            } else {\n                                _this3.timeline = 0; //speed optimization, faster lookups (no going up the prototype chain)\n                            }\n                            if (overwrite === true && !_suppressOverwrites) {\n                                _overwritingTween = _assertThisInitialized(_this3);\n                                _globalTimeline.killTweensOf(parsedTargets);\n                                _overwritingTween = 0;\n                            }\n                            parent && _postAddChecks(parent, _assertThisInitialized(_this3));\n                            if (immediateRender || !duration && !keyframes && _this3._start === _round(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== \"nested\") {\n                                _this3._tTime = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n                                _this3.render(Math.max(0, -delay)); //in case delay is negative\n                            }\n                            scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);\n                            return _this3;\n                        }\n                        var _proto3 = Tween.prototype;\n                        _proto3.render = function render(totalTime, suppressEvents, force) {\n                            var prevTime = this._time, tDur = this._tDur, dur = this._dur, tTime = totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime, time, pt, iteration, cycleDuration, prevIteration, isYoyo, ratio, timeline, yoyoEase;\n                            if (!dur) {\n                                _renderZeroDurationTween(this, totalTime, suppressEvents, force);\n                            } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== totalTime < 0) {\n                                //this senses if we're crossing over the start time, in which case we must record _zTime and force the render, but we do it in this lengthy conditional way for performance reasons (usually we can skip the calculations): this._initted && (this._zTime < 0) !== (totalTime < 0)\n                                time = tTime;\n                                timeline = this.timeline;\n                                if (this._repeat) {\n                                    //adjust the time for repeats and yoyos\n                                    cycleDuration = dur + this._rDelay;\n                                    if (this._repeat < -1 && totalTime < 0) {\n                                        return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);\n                                    }\n                                    time = _round(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)\n                                    if (tTime === tDur) {\n                                        // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)\n                                        iteration = this._repeat;\n                                        time = dur;\n                                    } else {\n                                        iteration = ~~(tTime / cycleDuration);\n                                        if (iteration && iteration === tTime / cycleDuration) {\n                                            time = dur;\n                                            iteration--;\n                                        }\n                                        time > dur && (time = dur);\n                                    }\n                                    isYoyo = this._yoyo && iteration & 1;\n                                    if (isYoyo) {\n                                        yoyoEase = this._yEase;\n                                        time = dur - time;\n                                    }\n                                    prevIteration = _animationCycle(this._tTime, cycleDuration);\n                                    if (time === prevTime && !force && this._initted) {\n                                        //could be during the repeatDelay part. No need to render and fire callbacks.\n                                        return this;\n                                    }\n                                    if (iteration !== prevIteration) {\n                                        timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo); //repeatRefresh functionality\n                                        if (this.vars.repeatRefresh && !isYoyo && !this._lock) {\n                                            this._lock = force = 1; //force, otherwise if lazy is true, the _attemptInitTween() will return and we'll jump out and get caught bouncing on each tick.\n                                            this.render(_round(cycleDuration * iteration), true).invalidate()._lock = 0;\n                                        }\n                                    }\n                                }\n                                if (!this._initted) {\n                                    if (_attemptInitTween(this, totalTime < 0 ? totalTime : time, force, suppressEvents)) {\n                                        this._tTime = 0; // in constructor if immediateRender is true, we set _tTime to -_tinyNum to have the playhead cross the starting point but we can't leave _tTime as a negative number.\n                                        return this;\n                                    }\n                                    if (dur !== this._dur) {\n                                        // while initting, a plugin like InertiaPlugin might alter the duration, so rerun from the start to ensure everything renders as it should.\n                                        return this.render(totalTime, suppressEvents, force);\n                                    }\n                                }\n                                this._tTime = tTime;\n                                this._time = time;\n                                if (!this._act && this._ts) {\n                                    this._act = 1; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.\n                                    this._lazy = 0;\n                                }\n                                this.ratio = ratio = (yoyoEase || this._ease)(time / dur);\n                                if (this._from) {\n                                    this.ratio = ratio = 1 - ratio;\n                                }\n                                time && !prevTime && !suppressEvents && _callback(this, \"onStart\");\n                                pt = this._pt;\n                                while(pt){\n                                    pt.r(ratio, pt.d);\n                                    pt = pt._next;\n                                }\n                                timeline && timeline.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline._dur * ratio, suppressEvents, force) || this._startAt && (this._zTime = totalTime);\n                                if (this._onUpdate && !suppressEvents) {\n                                    totalTime < 0 && this._startAt && this._startAt.render(totalTime, true, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n                                    _callback(this, \"onUpdate\");\n                                }\n                                this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, \"onRepeat\");\n                                if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {\n                                    totalTime < 0 && this._startAt && !this._onUpdate && this._startAt.render(totalTime, true, true);\n                                    (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if we're rendering at exactly a time of 0, as there could be autoRevert values that should get set on the next tick (if the playhead goes backward beyond the startTime, negative totalTime). Don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.\n                                    if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime)) {\n                                        // if prevTime and tTime are zero, we shouldn't fire the onReverseComplete. This could happen if you gsap.to(... {paused:true}).play();\n                                        _callback(this, tTime === tDur ? \"onComplete\" : \"onReverseComplete\", true);\n                                        this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();\n                                    }\n                                }\n                            }\n                            return this;\n                        };\n                        _proto3.targets = function targets() {\n                            return this._targets;\n                        };\n                        _proto3.invalidate = function invalidate() {\n                            this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0;\n                            this._ptLookup = [];\n                            this.timeline && this.timeline.invalidate();\n                            return _Animation2.prototype.invalidate.call(this);\n                        };\n                        _proto3.kill = function kill(targets, vars) {\n                            if (vars === void 0) {\n                                vars = \"all\";\n                            }\n                            if (!targets && (!vars || vars === \"all\")) {\n                                this._lazy = this._pt = 0;\n                                return this.parent ? _interrupt(this) : this;\n                            }\n                            if (this.timeline) {\n                                var tDur = this.timeline.totalDuration();\n                                this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this); // if nothing is left tweening, interrupt.\n                                this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1); // if a nested tween is killed that changes the duration, it should affect this tween's duration. We must use the ratio, though, because sometimes the internal timeline is stretched like for keyframes where they don't all add up to whatever the parent tween's duration was set to.\n                                return this;\n                            }\n                            var parsedTargets = this._targets, killingTargets = targets ? toArray(targets) : parsedTargets, propTweenLookup = this._ptLookup, firstPT = this._pt, overwrittenProps, curLookup, curOverwriteProps, props, p, pt, i;\n                            if ((!vars || vars === \"all\") && _arraysMatch(parsedTargets, killingTargets)) {\n                                vars === \"all\" && (this._pt = 0);\n                                return _interrupt(this);\n                            }\n                            overwrittenProps = this._op = this._op || [];\n                            if (vars !== \"all\") {\n                                //so people can pass in a comma-delimited list of property names\n                                if (_isString(vars)) {\n                                    p = {};\n                                    _forEachName(vars, function(name) {\n                                        return p[name] = 1;\n                                    });\n                                    vars = p;\n                                }\n                                vars = _addAliasesToVars(parsedTargets, vars);\n                            }\n                            i = parsedTargets.length;\n                            while(i--){\n                                if (~killingTargets.indexOf(parsedTargets[i])) {\n                                    curLookup = propTweenLookup[i];\n                                    if (vars === \"all\") {\n                                        overwrittenProps[i] = vars;\n                                        props = curLookup;\n                                        curOverwriteProps = {};\n                                    } else {\n                                        curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};\n                                        props = vars;\n                                    }\n                                    for(p in props){\n                                        pt = curLookup && curLookup[p];\n                                        if (pt) {\n                                            if (!(\"kill\" in pt.d) || pt.d.kill(p) === true) {\n                                                _removeLinkedListItem(this, pt, \"_pt\");\n                                            }\n                                            delete curLookup[p];\n                                        }\n                                        if (curOverwriteProps !== \"all\") {\n                                            curOverwriteProps[p] = 1;\n                                        }\n                                    }\n                                }\n                            }\n                            this._initted && !this._pt && firstPT && _interrupt(this); //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.\n                            return this;\n                        };\n                        Tween.to = function to(targets, vars) {\n                            return new Tween(targets, vars, arguments[2]);\n                        };\n                        Tween.from = function from(targets, vars) {\n                            return new Tween(targets, _parseVars(arguments, 1));\n                        };\n                        Tween.delayedCall = function delayedCall(delay, callback, params, scope) {\n                            return new Tween(callback, 0, {\n                                immediateRender: false,\n                                lazy: false,\n                                overwrite: false,\n                                delay: delay,\n                                onComplete: callback,\n                                onReverseComplete: callback,\n                                onCompleteParams: params,\n                                onReverseCompleteParams: params,\n                                callbackScope: scope\n                            });\n                        };\n                        Tween.fromTo = function fromTo(targets, fromVars, toVars) {\n                            return new Tween(targets, _parseVars(arguments, 2));\n                        };\n                        Tween.set = function set(targets, vars) {\n                            vars.duration = 0;\n                            vars.repeatDelay || (vars.repeat = 0);\n                            return new Tween(targets, vars);\n                        };\n                        Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {\n                            return _globalTimeline.killTweensOf(targets, props, onlyActive);\n                        };\n                        return Tween;\n                    }(Animation);\n                    exports1.TweenLite = exports1.TweenMax = exports1.Tween = Tween;\n                    _setDefaults(Tween.prototype, {\n                        _targets: [],\n                        _lazy: 0,\n                        _startAt: 0,\n                        _op: 0,\n                        _onInit: 0\n                    }); //add the pertinent timeline methods to Tween instances so that users can chain conveniently and create a timeline automatically. (removed due to concerns that it'd ultimately add to more confusion especially for beginners)\n                    // _forEachName(\"to,from,fromTo,set,call,add,addLabel,addPause\", name => {\n                    // \tTween.prototype[name] = function() {\n                    // \t\tlet tl = new Timeline();\n                    // \t\treturn _addToTimeline(tl, this)[name].apply(tl, toArray(arguments));\n                    // \t}\n                    // });\n                    //for backward compatibility. Leverage the timeline calls.\n                    _forEachName(\"staggerTo,staggerFrom,staggerFromTo\", function(name) {\n                        Tween[name] = function() {\n                            var tl = new Timeline(), params = _slice.call(arguments, 0);\n                            params.splice(name === \"staggerFromTo\" ? 5 : 4, 0, 0);\n                            return tl[name].apply(tl, params);\n                        };\n                    });\n                    /*\n         * --------------------------------------------------------------------------------------\n         * PROPTWEEN\n         * --------------------------------------------------------------------------------------\n         */ var _setterPlain = function _setterPlain(target, property, value) {\n                        return target[property] = value;\n                    }, _setterFunc = function _setterFunc(target, property, value) {\n                        return target[property](value);\n                    }, _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {\n                        return target[property](data.fp, value);\n                    }, _setterAttribute = function _setterAttribute(target, property, value) {\n                        return target.setAttribute(property, value);\n                    }, _getSetter = function _getSetter(target, property) {\n                        return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;\n                    }, _renderPlain = function _renderPlain(ratio, data) {\n                        return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000, data);\n                    }, _renderBoolean = function _renderBoolean(ratio, data) {\n                        return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);\n                    }, _renderComplexString = function _renderComplexString(ratio, data) {\n                        var pt = data._pt, s = \"\";\n                        if (!ratio && data.b) {\n                            //b = beginning string\n                            s = data.b;\n                        } else if (ratio === 1 && data.e) {\n                            //e = ending string\n                            s = data.e;\n                        } else {\n                            while(pt){\n                                s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s; //we use the \"p\" property for the text inbetween (like a suffix). And in the context of a complex string, the modifier (m) is typically just Math.round(), like for RGB colors.\n                                pt = pt._next;\n                            }\n                            s += data.c; //we use the \"c\" of the PropTween to store the final chunk of non-numeric text.\n                        }\n                        data.set(data.t, data.p, s, data);\n                    }, _renderPropTweens = function _renderPropTweens(ratio, data) {\n                        var pt = data._pt;\n                        while(pt){\n                            pt.r(ratio, pt.d);\n                            pt = pt._next;\n                        }\n                    }, _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {\n                        var pt = this._pt, next;\n                        while(pt){\n                            next = pt._next;\n                            pt.p === property && pt.modifier(modifier, tween, target);\n                            pt = next;\n                        }\n                    }, _killPropTweensOf = function _killPropTweensOf(property) {\n                        var pt = this._pt, hasNonDependentRemaining, next;\n                        while(pt){\n                            next = pt._next;\n                            if (pt.p === property && !pt.op || pt.op === property) {\n                                _removeLinkedListItem(this, pt, \"_pt\");\n                            } else if (!pt.dep) {\n                                hasNonDependentRemaining = 1;\n                            }\n                            pt = next;\n                        }\n                        return !hasNonDependentRemaining;\n                    }, _setterWithModifier = function _setterWithModifier(target, property, value, data) {\n                        data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);\n                    }, _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {\n                        var pt = parent._pt, next, pt2, first, last; //sorts the PropTween linked list in order of priority because some plugins need to do their work after ALL of the PropTweens were created (like RoundPropsPlugin and ModifiersPlugin)\n                        while(pt){\n                            next = pt._next;\n                            pt2 = first;\n                            while(pt2 && pt2.pr > pt.pr){\n                                pt2 = pt2._next;\n                            }\n                            if (pt._prev = pt2 ? pt2._prev : last) {\n                                pt._prev._next = pt;\n                            } else {\n                                first = pt;\n                            }\n                            if (pt._next = pt2) {\n                                pt2._prev = pt;\n                            } else {\n                                last = pt;\n                            }\n                            pt = next;\n                        }\n                        parent._pt = first;\n                    }; //PropTween key: t = target, p = prop, r = renderer, d = data, s = start, c = change, op = overwriteProperty (ONLY populated when it's different than p), pr = priority, _next/_prev for the linked list siblings, set = setter, m = modifier, mSet = modifierSetter (the original setter, before a modifier was added)\n                    exports1._sortPropTweensByPriority = _sortPropTweensByPriority;\n                    exports1._renderComplexString = _renderComplexString;\n                    exports1._getSetter = _getSetter;\n                    var PropTween = /*#__PURE__*/ function() {\n                        function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {\n                            this.t = target;\n                            this.s = start;\n                            this.c = change;\n                            this.p = prop;\n                            this.r = renderer || _renderPlain;\n                            this.d = data || this;\n                            this.set = setter || _setterPlain;\n                            this.pr = priority || 0;\n                            this._next = next;\n                            if (next) {\n                                next._prev = this;\n                            }\n                        }\n                        var _proto4 = PropTween.prototype;\n                        _proto4.modifier = function modifier(func, tween, target) {\n                            this.mSet = this.mSet || this.set; //in case it was already set (a PropTween can only have one modifier)\n                            this.set = _setterWithModifier;\n                            this.m = func;\n                            this.mt = target; //modifier target\n                            this.tween = tween;\n                        };\n                        return PropTween;\n                    }(); //Initialization tasks\n                    exports1.PropTween = PropTween;\n                    _forEachName(_callbackNames + \"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger\", function(name) {\n                        return _reservedProps[name] = 1;\n                    });\n                    _globals.TweenMax = _globals.TweenLite = Tween;\n                    _globals.TimelineLite = _globals.TimelineMax = Timeline;\n                    _globalTimeline = new Timeline({\n                        sortChildren: false,\n                        defaults: _defaults,\n                        autoRemoveChildren: true,\n                        id: \"root\",\n                        smoothChildTiming: true\n                    });\n                    _config.stringFilter = _colorStringFilter;\n                    /*\n         * --------------------------------------------------------------------------------------\n         * GSAP\n         * --------------------------------------------------------------------------------------\n         */ var _gsap = {\n                        registerPlugin: function registerPlugin() {\n                            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                                args[_key2] = arguments[_key2];\n                            }\n                            args.forEach(function(config) {\n                                return _createPlugin(config);\n                            });\n                        },\n                        timeline: function timeline(vars) {\n                            return new Timeline(vars);\n                        },\n                        getTweensOf: function getTweensOf(targets, onlyActive) {\n                            return _globalTimeline.getTweensOf(targets, onlyActive);\n                        },\n                        getProperty: function getProperty(target, property, unit, uncache) {\n                            _isString(target) && (target = toArray(target)[0]); //in case selector text or an array is passed in\n                            var getter = _getCache(target || {}).get, format = unit ? _passThrough : _numericIfPossible;\n                            unit === \"native\" && (unit = \"\");\n                            return !target ? target : !property ? function(property, unit, uncache) {\n                                return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));\n                            } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));\n                        },\n                        quickSetter: function quickSetter(target, property, unit) {\n                            target = toArray(target);\n                            if (target.length > 1) {\n                                var setters = target.map(function(t) {\n                                    return gsap.quickSetter(t, property, unit);\n                                }), l = setters.length;\n                                return function(value) {\n                                    var i = l;\n                                    while(i--){\n                                        setters[i](value);\n                                    }\n                                };\n                            }\n                            target = target[0] || {};\n                            var Plugin = _plugins[property], cache = _getCache(target), p = cache.harness && (cache.harness.aliases || {})[property] || property, // in case it's an alias, like \"rotate\" for \"rotation\".\n                            setter = Plugin ? function(value) {\n                                var p = new Plugin();\n                                _quickTween._pt = 0;\n                                p.init(target, unit ? value + unit : value, _quickTween, 0, [\n                                    target\n                                ]);\n                                p.render(1, p);\n                                _quickTween._pt && _renderPropTweens(1, _quickTween);\n                            } : cache.set(target, p);\n                            return Plugin ? setter : function(value) {\n                                return setter(target, p, unit ? value + unit : value, cache, 1);\n                            };\n                        },\n                        isTweening: function isTweening(targets) {\n                            return _globalTimeline.getTweensOf(targets, true).length > 0;\n                        },\n                        defaults: function defaults(value) {\n                            value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));\n                            return _mergeDeep(_defaults, value || {});\n                        },\n                        config: function config(value) {\n                            return _mergeDeep(_config, value || {});\n                        },\n                        registerEffect: function registerEffect(_ref2) {\n                            var name = _ref2.name, effect = _ref2.effect, plugins = _ref2.plugins, defaults = _ref2.defaults, extendTimeline = _ref2.extendTimeline;\n                            (plugins || \"\").split(\",\").forEach(function(pluginName) {\n                                return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + \" effect requires \" + pluginName + \" plugin.\");\n                            });\n                            _effects[name] = function(targets, vars, tl) {\n                                return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);\n                            };\n                            if (extendTimeline) {\n                                Timeline.prototype[name] = function(targets, vars, position) {\n                                    return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);\n                                };\n                            }\n                        },\n                        registerEase: function registerEase(name, ease) {\n                            _easeMap[name] = _parseEase(ease);\n                        },\n                        parseEase: function parseEase(ease, defaultEase) {\n                            return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;\n                        },\n                        getById: function getById(id) {\n                            return _globalTimeline.getById(id);\n                        },\n                        exportRoot: function exportRoot(vars, includeDelayedCalls) {\n                            if (vars === void 0) {\n                                vars = {};\n                            }\n                            var tl = new Timeline(vars), child, next;\n                            tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);\n                            _globalTimeline.remove(tl);\n                            tl._dp = 0; //otherwise it'll get re-activated when adding children and be re-introduced into _globalTimeline's linked list (then added to itself).\n                            tl._time = tl._tTime = _globalTimeline._time;\n                            child = _globalTimeline._first;\n                            while(child){\n                                next = child._next;\n                                if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {\n                                    _addToTimeline(tl, child, child._start - child._delay);\n                                }\n                                child = next;\n                            }\n                            _addToTimeline(_globalTimeline, tl, 0);\n                            return tl;\n                        },\n                        utils: {\n                            wrap: wrap,\n                            wrapYoyo: wrapYoyo,\n                            distribute: distribute,\n                            random: random,\n                            snap: snap,\n                            normalize: normalize,\n                            getUnit: getUnit,\n                            clamp: clamp,\n                            splitColor: splitColor,\n                            toArray: toArray,\n                            mapRange: mapRange,\n                            pipe: pipe,\n                            unitize: unitize,\n                            interpolate: interpolate,\n                            shuffle: shuffle\n                        },\n                        install: _install,\n                        effects: _effects,\n                        ticker: _ticker,\n                        updateRoot: Timeline.updateRoot,\n                        plugins: _plugins,\n                        globalTimeline: _globalTimeline,\n                        core: {\n                            PropTween: PropTween,\n                            globals: _addGlobal,\n                            Tween: Tween,\n                            Timeline: Timeline,\n                            Animation: Animation,\n                            getCache: _getCache,\n                            _removeLinkedListItem: _removeLinkedListItem,\n                            suppressOverwrites: function suppressOverwrites(value) {\n                                return _suppressOverwrites = value;\n                            }\n                        }\n                    };\n                    _forEachName(\"to,from,fromTo,delayedCall,set,killTweensOf\", function(name) {\n                        return _gsap[name] = Tween[name];\n                    });\n                    _ticker.add(Timeline.updateRoot);\n                    _quickTween = _gsap.to({}, {\n                        duration: 0\n                    }); // ---- EXTRA PLUGINS --------------------------------------------------------\n                    var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {\n                        var pt = plugin._pt;\n                        while(pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop){\n                            pt = pt._next;\n                        }\n                        return pt;\n                    }, _addModifiers = function _addModifiers(tween, modifiers) {\n                        var targets = tween._targets, p, i, pt;\n                        for(p in modifiers){\n                            i = targets.length;\n                            while(i--){\n                                pt = tween._ptLookup[i][p];\n                                if (pt && (pt = pt.d)) {\n                                    if (pt._pt) {\n                                        // is a plugin\n                                        pt = _getPluginPropTween(pt, p);\n                                    }\n                                    pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);\n                                }\n                            }\n                        }\n                    }, _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {\n                        return {\n                            name: name,\n                            rawVars: 1,\n                            //don't pre-process function-based values or \"random()\" strings.\n                            init: function init(target, vars, tween) {\n                                tween._onInit = function(tween) {\n                                    var temp, p;\n                                    if (_isString(vars)) {\n                                        temp = {};\n                                        _forEachName(vars, function(name) {\n                                            return temp[name] = 1;\n                                        }); //if the user passes in a comma-delimited list of property names to roundProps, like \"x,y\", we round to whole numbers.\n                                        vars = temp;\n                                    }\n                                    if (modifier) {\n                                        temp = {};\n                                        for(p in vars){\n                                            temp[p] = modifier(vars[p]);\n                                        }\n                                        vars = temp;\n                                    }\n                                    _addModifiers(tween, vars);\n                                };\n                            }\n                        };\n                    }; //register core plugins\n                    var gsap = _gsap.registerPlugin({\n                        name: \"attr\",\n                        init: function init(target, vars, tween, index, targets) {\n                            var p, pt;\n                            for(p in vars){\n                                pt = this.add(target, \"setAttribute\", (target.getAttribute(p) || 0) + \"\", vars[p], index, targets, 0, 0, p);\n                                pt && (pt.op = p);\n                                this._props.push(p);\n                            }\n                        }\n                    }, {\n                        name: \"endArray\",\n                        init: function init(target, value) {\n                            var i = value.length;\n                            while(i--){\n                                this.add(target, i, target[i] || 0, value[i]);\n                            }\n                        }\n                    }, _buildModifierPlugin(\"roundProps\", _roundModifier), _buildModifierPlugin(\"modifiers\"), _buildModifierPlugin(\"snap\", snap)) || _gsap; //to prevent the core plugins from being dropped via aggressive tree shaking, we must include them in the variable declaration in this way.\n                    exports1.default = exports1.gsap = gsap;\n                    Tween.version = Timeline.version = gsap.version = \"3.6.0\";\n                    _coreReady = 1;\n                    if (_windowExists()) {\n                        _wake();\n                    }\n                    var Power0 = _easeMap.Power0, Power1 = _easeMap.Power1, Power2 = _easeMap.Power2, Power3 = _easeMap.Power3, Power4 = _easeMap.Power4, Linear = _easeMap.Linear, Quad = _easeMap.Quad, Cubic = _easeMap.Cubic, Quart = _easeMap.Quart, Quint = _easeMap.Quint, Strong = _easeMap.Strong, Elastic = _easeMap.Elastic, Back = _easeMap.Back, SteppedEase = _easeMap.SteppedEase, Bounce = _easeMap.Bounce, Sine = _easeMap.Sine, Expo = _easeMap.Expo, Circ = _easeMap.Circ;\n                    exports1.Circ = Circ;\n                    exports1.Expo = Expo;\n                    exports1.Sine = Sine;\n                    exports1.Bounce = Bounce;\n                    exports1.SteppedEase = SteppedEase;\n                    exports1.Back = Back;\n                    exports1.Elastic = Elastic;\n                    exports1.Strong = Strong;\n                    exports1.Quint = Quint;\n                    exports1.Quart = Quart;\n                    exports1.Cubic = Cubic;\n                    exports1.Quad = Quad;\n                    exports1.Linear = Linear;\n                    exports1.Power4 = Power4;\n                    exports1.Power3 = Power3;\n                    exports1.Power2 = Power2;\n                    exports1.Power1 = Power1;\n                    exports1.Power0 = Power0;\n                },\n                {}\n            ],\n            \"bp4Z\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    exports1.checkPrefix = exports1._createElement = exports1._getBBox = exports1.default = exports1.CSSPlugin = void 0;\n                    var _gsapCore = require1(\"./gsap-core.js\");\n                    /*!\n         * CSSPlugin 3.6.0\n         * https://greensock.com\n         *\n         * Copyright 2008-2021, GreenSock. All rights reserved.\n         * Subject to the terms at https://greensock.com/standard-license or for\n         * Club GreenSock members, the agreement issued with that membership.\n         * @author: Jack Doyle, jack@greensock.com\n        */ /* eslint-disable */ var _win, _doc, _docElement, _pluginInitted, _tempDiv, _tempDivStyler, _recentSetterPlugin, _windowExists = function _windowExists() {\n                        return \"object\" !== \"undefined\";\n                    }, _transformProps = {}, _RAD2DEG = 180 / Math.PI, _DEG2RAD = Math.PI / 180, _atan2 = Math.atan2, _bigNum = 1e8, _capsExp = /([A-Z])/g, _horizontalExp = /(?:left|right|width|margin|padding|x)/i, _complexExp = /[\\s,\\(]\\S/, _propertyAliases = {\n                        autoAlpha: \"opacity,visibility\",\n                        scale: \"scaleX,scaleY\",\n                        alpha: \"opacity\"\n                    }, _renderCSSProp = function _renderCSSProp(ratio, data) {\n                        return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);\n                    }, _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {\n                        return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);\n                    }, _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {\n                        return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);\n                    }, //if units change, we need a way to render the original unit/value when the tween goes all the way back to the beginning (ratio:0)\n                    _renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {\n                        var value = data.s + data.c * ratio;\n                        data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);\n                    }, _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {\n                        return data.set(data.t, data.p, ratio ? data.e : data.b, data);\n                    }, _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {\n                        return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);\n                    }, _setterCSSStyle = function _setterCSSStyle(target, property, value) {\n                        return target.style[property] = value;\n                    }, _setterCSSProp = function _setterCSSProp(target, property, value) {\n                        return target.style.setProperty(property, value);\n                    }, _setterTransform = function _setterTransform(target, property, value) {\n                        return target._gsap[property] = value;\n                    }, _setterScale = function _setterScale(target, property, value) {\n                        return target._gsap.scaleX = target._gsap.scaleY = value;\n                    }, _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {\n                        var cache = target._gsap;\n                        cache.scaleX = cache.scaleY = value;\n                        cache.renderTransform(ratio, cache);\n                    }, _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {\n                        var cache = target._gsap;\n                        cache[property] = value;\n                        cache.renderTransform(ratio, cache);\n                    }, _transformProp = \"transform\", _transformOriginProp = _transformProp + \"Origin\", _supports3D, _createElement = function _createElement(type, ns) {\n                        var e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n                        return e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://greensock.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n                    }, _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {\n                        var cs = getComputedStyle(target);\n                        return cs[property] || cs.getPropertyValue(property.replace(_capsExp, \"-$1\").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || \"\"; //css variables may not need caps swapped out for dashes and lowercase.\n                    }, _prefixes = \"O,Moz,ms,Ms,Webkit\".split(\",\"), _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {\n                        var e = element || _tempDiv, s = e.style, i = 5;\n                        if (property in s && !preferPrefix) {\n                            return property;\n                        }\n                        property = property.charAt(0).toUpperCase() + property.substr(1);\n                        while(i-- && !(_prefixes[i] + property in s)){}\n                        return i < 0 ? null : (i === 3 ? \"ms\" : i >= 0 ? _prefixes[i] : \"\") + property;\n                    }, _initCore = function _initCore() {\n                        if (_windowExists() && window.document) {\n                            _win = window;\n                            _doc = _win.document;\n                            _docElement = _doc.documentElement;\n                            _tempDiv = _createElement(\"div\") || {\n                                style: {}\n                            };\n                            _tempDivStyler = _createElement(\"div\");\n                            _transformProp = _checkPropPrefix(_transformProp);\n                            _transformOriginProp = _transformProp + \"Origin\";\n                            _tempDiv.style.cssText = \"border-width:0;line-height:0;position:absolute;padding:0\"; //make sure to override certain properties that may contaminate measurements, in case the user has overreaching style sheets.\n                            _supports3D = !!_checkPropPrefix(\"perspective\");\n                            _pluginInitted = 1;\n                        }\n                    }, _getBBoxHack = function _getBBoxHack(swapIfPossible) {\n                        //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).\n                        var svg = _createElement(\"svg\", this.ownerSVGElement && this.ownerSVGElement.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\"), oldParent = this.parentNode, oldSibling = this.nextSibling, oldCSS = this.style.cssText, bbox;\n                        _docElement.appendChild(svg);\n                        svg.appendChild(this);\n                        this.style.display = \"block\";\n                        if (swapIfPossible) {\n                            try {\n                                bbox = this.getBBox();\n                                this._gsapBBox = this.getBBox; //store the original\n                                this.getBBox = _getBBoxHack;\n                            } catch (e) {}\n                        } else if (this._gsapBBox) {\n                            bbox = this._gsapBBox();\n                        }\n                        if (oldParent) {\n                            if (oldSibling) {\n                                oldParent.insertBefore(this, oldSibling);\n                            } else {\n                                oldParent.appendChild(this);\n                            }\n                        }\n                        _docElement.removeChild(svg);\n                        this.style.cssText = oldCSS;\n                        return bbox;\n                    }, _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {\n                        var i = attributesArray.length;\n                        while(i--){\n                            if (target.hasAttribute(attributesArray[i])) {\n                                return target.getAttribute(attributesArray[i]);\n                            }\n                        }\n                    }, _getBBox = function _getBBox(target) {\n                        var bounds;\n                        try {\n                            bounds = target.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118\n                        } catch (error) {\n                            bounds = _getBBoxHack.call(target, true);\n                        }\n                        bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true)); //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.\n                        return bounds && !bounds.width && !bounds.x && !bounds.y ? {\n                            x: +_getAttributeFallbacks(target, [\n                                \"x\",\n                                \"cx\",\n                                \"x1\"\n                            ]) || 0,\n                            y: +_getAttributeFallbacks(target, [\n                                \"y\",\n                                \"cy\",\n                                \"y1\"\n                            ]) || 0,\n                            width: 0,\n                            height: 0\n                        } : bounds;\n                    }, _isSVG = function _isSVG(e) {\n                        return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));\n                    }, //reports if the element is an SVG on which getBBox() actually works\n                    _removeProperty = function _removeProperty(target, property) {\n                        if (property) {\n                            var style = target.style;\n                            if (property in _transformProps && property !== _transformOriginProp) {\n                                property = _transformProp;\n                            }\n                            if (style.removeProperty) {\n                                if (property.substr(0, 2) === \"ms\" || property.substr(0, 6) === \"webkit\") {\n                                    //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be \"ms-transform\" instead of \"-ms-transform\" for IE9, for example)\n                                    property = \"-\" + property;\n                                }\n                                style.removeProperty(property.replace(_capsExp, \"-$1\").toLowerCase());\n                            } else {\n                                //note: old versions of IE use \"removeAttribute()\" instead of \"removeProperty()\"\n                                style.removeAttribute(property);\n                            }\n                        }\n                    }, _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {\n                        var pt = new _gsapCore.PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);\n                        plugin._pt = pt;\n                        pt.b = beginning;\n                        pt.e = end;\n                        plugin._props.push(property);\n                        return pt;\n                    }, _nonConvertibleUnits = {\n                        deg: 1,\n                        rad: 1,\n                        turn: 1\n                    }, //takes a single value like 20px and converts it to the unit specified, like \"%\", returning only the numeric amount.\n                    _convertToUnit = function _convertToUnit(target, property, value, unit) {\n                        var curValue = parseFloat(value) || 0, curUnit = (value + \"\").trim().substr((curValue + \"\").length) || \"px\", // some browsers leave extra whitespace at the beginning of CSS variables, hence the need to trim()\n                        style = _tempDiv.style, horizontal = _horizontalExp.test(property), isRootSVG = target.tagName.toLowerCase() === \"svg\", measureProperty = (isRootSVG ? \"client\" : \"offset\") + (horizontal ? \"Width\" : \"Height\"), amount = 100, toPixels = unit === \"px\", toPercent = unit === \"%\", px, parent, cache, isSVG;\n                        if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {\n                            return curValue;\n                        }\n                        curUnit !== \"px\" && !toPixels && (curValue = _convertToUnit(target, property, value, \"px\"));\n                        isSVG = target.getCTM && _isSVG(target);\n                        if ((toPercent || curUnit === \"%\") && (_transformProps[property] || ~property.indexOf(\"adius\"))) {\n                            px = isSVG ? target.getBBox()[horizontal ? \"width\" : \"height\"] : target[measureProperty];\n                            return (0, _gsapCore._round)(toPercent ? curValue / px * amount : curValue / 100 * px);\n                        }\n                        style[horizontal ? \"width\" : \"height\"] = amount + (toPixels ? curUnit : unit);\n                        parent = ~property.indexOf(\"adius\") || unit === \"em\" && target.appendChild && !isRootSVG ? target : target.parentNode;\n                        if (isSVG) {\n                            parent = (target.ownerSVGElement || {}).parentNode;\n                        }\n                        if (!parent || parent === _doc || !parent.appendChild) {\n                            parent = _doc.body;\n                        }\n                        cache = parent._gsap;\n                        if (cache && toPercent && cache.width && horizontal && cache.time === _gsapCore._ticker.time) {\n                            return (0, _gsapCore._round)(curValue / cache.width * amount);\n                        } else {\n                            (toPercent || curUnit === \"%\") && (style.position = _getComputedProperty(target, \"position\"));\n                            parent === target && (style.position = \"static\"); // like for borderRadius, if it's a % we must have it relative to the target itself but that may not have position: relative or position: absolute in which case it'd go up the chain until it finds its offsetParent (bad). position: static protects against that.\n                            parent.appendChild(_tempDiv);\n                            px = _tempDiv[measureProperty];\n                            parent.removeChild(_tempDiv);\n                            style.position = \"absolute\";\n                            if (horizontal && toPercent) {\n                                cache = (0, _gsapCore._getCache)(parent);\n                                cache.time = _gsapCore._ticker.time;\n                                cache.width = parent[measureProperty];\n                            }\n                        }\n                        return (0, _gsapCore._round)(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);\n                    }, _get = function _get(target, property, unit, uncache) {\n                        var value;\n                        _pluginInitted || _initCore();\n                        if (property in _propertyAliases && property !== \"transform\") {\n                            property = _propertyAliases[property];\n                            if (~property.indexOf(\",\")) {\n                                property = property.split(\",\")[0];\n                            }\n                        }\n                        if (_transformProps[property] && property !== \"transform\") {\n                            value = _parseTransform(target, uncache);\n                            value = property !== \"transformOrigin\" ? value[property] : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + \" \" + value.zOrigin + \"px\";\n                        } else {\n                            value = target.style[property];\n                            if (!value || value === \"auto\" || uncache || ~(value + \"\").indexOf(\"calc(\")) {\n                                value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || (0, _gsapCore._getProperty)(target, property) || (property === \"opacity\" ? 1 : 0); // note: some browsers, like Firefox, don't report borderRadius correctly! Instead, it only reports every corner like  borderTopLeftRadius\n                            }\n                        }\n                        return unit && !~(value + \"\").trim().indexOf(\" \") ? _convertToUnit(target, property, value, unit) + unit : value;\n                    }, _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {\n                        //note: we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus \"this\" would refer to the plugin.\n                        if (!start || start === \"none\") {\n                            // some browsers like Safari actually PREFER the prefixed property and mis-report the unprefixed value like clipPath (BUG). In other words, even though clipPath exists in the style (\"clipPath\" in target.style) and it's set in the CSS properly (along with -webkit-clip-path), Safari reports clipPath as \"none\" whereas WebkitClipPath reports accurately like \"ellipse(100% 0% at 50% 0%)\", so in this case we must SWITCH to using the prefixed property instead. See https://greensock.com/forums/topic/18310-clippath-doesnt-work-on-ios/\n                            var p = _checkPropPrefix(prop, target, 1), s = p && _getComputedProperty(target, p, 1);\n                            if (s && s !== start) {\n                                prop = p;\n                                start = s;\n                            } else if (prop === \"borderColor\") {\n                                start = _getComputedProperty(target, \"borderTopColor\"); // Firefox bug: always reports \"borderColor\" as \"\", so we must fall back to borderTopColor. See https://greensock.com/forums/topic/24583-how-to-return-colors-that-i-had-after-reverse/\n                            }\n                        }\n                        var pt = new _gsapCore.PropTween(this._pt, target.style, prop, 0, 1, _gsapCore._renderComplexString), index = 0, matchIndex = 0, a, result, startValues, startNum, color, startValue, endValue, endNum, chunk, endUnit, startUnit, relative, endValues;\n                        pt.b = start;\n                        pt.e = end;\n                        start += \"\"; //ensure values are strings\n                        end += \"\";\n                        if (end === \"auto\") {\n                            target.style[prop] = end;\n                            end = _getComputedProperty(target, prop) || end;\n                            target.style[prop] = start;\n                        }\n                        a = [\n                            start,\n                            end\n                        ];\n                        (0, _gsapCore._colorStringFilter)(a); //pass an array with the starting and ending values and let the filter do whatever it needs to the values. If colors are found, it returns true and then we must match where the color shows up order-wise because for things like boxShadow, sometimes the browser provides the computed values with the color FIRST, but the user provides it with the color LAST, so flip them if necessary. Same for drop-shadow().\n                        start = a[0];\n                        end = a[1];\n                        startValues = start.match(_gsapCore._numWithUnitExp) || [];\n                        endValues = end.match(_gsapCore._numWithUnitExp) || [];\n                        if (endValues.length) {\n                            while(result = _gsapCore._numWithUnitExp.exec(end)){\n                                endValue = result[0];\n                                chunk = end.substring(index, result.index);\n                                if (color) {\n                                    color = (color + 1) % 5;\n                                } else if (chunk.substr(-5) === \"rgba(\" || chunk.substr(-5) === \"hsla(\") {\n                                    color = 1;\n                                }\n                                if (endValue !== (startValue = startValues[matchIndex++] || \"\")) {\n                                    startNum = parseFloat(startValue) || 0;\n                                    startUnit = startValue.substr((startNum + \"\").length);\n                                    relative = endValue.charAt(1) === \"=\" ? +(endValue.charAt(0) + \"1\") : 0;\n                                    if (relative) {\n                                        endValue = endValue.substr(2);\n                                    }\n                                    endNum = parseFloat(endValue);\n                                    endUnit = endValue.substr((endNum + \"\").length);\n                                    index = _gsapCore._numWithUnitExp.lastIndex - endUnit.length;\n                                    if (!endUnit) {\n                                        //if something like \"perspective:300\" is passed in and we must add a unit to the end\n                                        endUnit = endUnit || _gsapCore._config.units[prop] || startUnit;\n                                        if (index === end.length) {\n                                            end += endUnit;\n                                            pt.e += endUnit;\n                                        }\n                                    }\n                                    if (startUnit !== endUnit) {\n                                        startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;\n                                    } //these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.\n                                    pt._pt = {\n                                        _next: pt._pt,\n                                        p: chunk || matchIndex === 1 ? chunk : \",\",\n                                        //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n                                        s: startNum,\n                                        c: relative ? relative * endNum : endNum - startNum,\n                                        m: color && color < 4 || prop === \"zIndex\" ? Math.round : 0\n                                    };\n                                }\n                            }\n                            pt.c = index < end.length ? end.substring(index, end.length) : \"\"; //we use the \"c\" of the PropTween to store the final part of the string (after the last number)\n                        } else {\n                            pt.r = prop === \"display\" && end === \"none\" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;\n                        }\n                        _gsapCore._relExp.test(end) && (pt.e = 0); //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).\n                        this._pt = pt; //start the linked list with this new PropTween. Remember, we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within another plugin too, thus \"this\" would refer to the plugin.\n                        return pt;\n                    }, _keywordToPercent = {\n                        top: \"0%\",\n                        bottom: \"100%\",\n                        left: \"0%\",\n                        right: \"100%\",\n                        center: \"50%\"\n                    }, _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {\n                        var split = value.split(\" \"), x = split[0], y = split[1] || \"50%\";\n                        if (x === \"top\" || x === \"bottom\" || y === \"left\" || y === \"right\") {\n                            //the user provided them in the wrong order, so flip them\n                            value = x;\n                            x = y;\n                            y = value;\n                        }\n                        split[0] = _keywordToPercent[x] || x;\n                        split[1] = _keywordToPercent[y] || y;\n                        return split.join(\" \");\n                    }, _renderClearProps = function _renderClearProps(ratio, data) {\n                        if (data.tween && data.tween._time === data.tween._dur) {\n                            var target = data.t, style = target.style, props = data.u, cache = target._gsap, prop, clearTransforms, i;\n                            if (props === \"all\" || props === true) {\n                                style.cssText = \"\";\n                                clearTransforms = 1;\n                            } else {\n                                props = props.split(\",\");\n                                i = props.length;\n                                while(--i > -1){\n                                    prop = props[i];\n                                    if (_transformProps[prop]) {\n                                        clearTransforms = 1;\n                                        prop = prop === \"transformOrigin\" ? _transformOriginProp : _transformProp;\n                                    }\n                                    _removeProperty(target, prop);\n                                }\n                            }\n                            if (clearTransforms) {\n                                _removeProperty(target, _transformProp);\n                                if (cache) {\n                                    cache.svg && target.removeAttribute(\"transform\");\n                                    _parseTransform(target, 1); // force all the cached values back to \"normal\"/identity, otherwise if there's another tween that's already set to render transforms on this element, it could display the wrong values.\n                                    cache.uncache = 1;\n                                }\n                            }\n                        }\n                    }, // note: specialProps should return 1 if (and only if) they have a non-zero priority. It indicates we need to sort the linked list.\n                    _specialProps = {\n                        clearProps: function clearProps(plugin, target, property, endValue, tween) {\n                            if (tween.data !== \"isFromStart\") {\n                                var pt = plugin._pt = new _gsapCore.PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);\n                                pt.u = endValue;\n                                pt.pr = -10;\n                                pt.tween = tween;\n                                plugin._props.push(property);\n                                return 1;\n                            }\n                        }\n                    }, /*\n           * --------------------------------------------------------------------------------------\n           * TRANSFORMS\n           * --------------------------------------------------------------------------------------\n           */ _identity2DMatrix = [\n                        1,\n                        0,\n                        0,\n                        1,\n                        0,\n                        0\n                    ], _rotationalProperties = {}, _isNullTransform = function _isNullTransform(value) {\n                        return value === \"matrix(1, 0, 0, 1, 0, 0)\" || value === \"none\" || !value;\n                    }, _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {\n                        var matrixString = _getComputedProperty(target, _transformProp);\n                        return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_gsapCore._numExp).map(_gsapCore._round);\n                    }, _getMatrix = function _getMatrix(target, force2D) {\n                        var cache = target._gsap || (0, _gsapCore._getCache)(target), style = target.style, matrix = _getComputedTransformMatrixAsArray(target), parent, nextSibling, temp, addedToDOM;\n                        if (cache.svg && target.getAttribute(\"transform\")) {\n                            temp = target.transform.baseVal.consolidate().matrix; //ensures that even complex values like \"translate(50,60) rotate(135,0,0)\" are parsed because it mashes it into a matrix.\n                            matrix = [\n                                temp.a,\n                                temp.b,\n                                temp.c,\n                                temp.d,\n                                temp.e,\n                                temp.f\n                            ];\n                            return matrix.join(\",\") === \"1,0,0,1,0,0\" ? _identity2DMatrix : matrix;\n                        } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {\n                            //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n                            //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not \"none\". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).\n                            temp = style.display;\n                            style.display = \"block\";\n                            parent = target.parentNode;\n                            if (!parent || !target.offsetParent) {\n                                // note: in 3.3.0 we switched target.offsetParent to _doc.body.contains(target) to avoid [sometimes unnecessary] MutationObserver calls but that wasn't adequate because there are edge cases where nested position: fixed elements need to get reparented to accurately sense transforms. See https://github.com/greensock/GSAP/issues/388 and https://github.com/greensock/GSAP/issues/375\n                                addedToDOM = 1; //flag\n                                nextSibling = target.nextSibling;\n                                _docElement.appendChild(target); //we must add it to the DOM in order to get values properly\n                            }\n                            matrix = _getComputedTransformMatrixAsArray(target);\n                            temp ? style.display = temp : _removeProperty(target, \"display\");\n                            if (addedToDOM) {\n                                nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);\n                            }\n                        }\n                        return force2D && matrix.length > 6 ? [\n                            matrix[0],\n                            matrix[1],\n                            matrix[4],\n                            matrix[5],\n                            matrix[12],\n                            matrix[13]\n                        ] : matrix;\n                    }, _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {\n                        var cache = target._gsap, matrix = matrixArray || _getMatrix(target, true), xOriginOld = cache.xOrigin || 0, yOriginOld = cache.yOrigin || 0, xOffsetOld = cache.xOffset || 0, yOffsetOld = cache.yOffset || 0, a = matrix[0], b = matrix[1], c = matrix[2], d = matrix[3], tx = matrix[4], ty = matrix[5], originSplit = origin.split(\" \"), xOrigin = parseFloat(originSplit[0]) || 0, yOrigin = parseFloat(originSplit[1]) || 0, bounds, determinant, x, y;\n                        if (!originIsAbsolute) {\n                            bounds = _getBBox(target);\n                            xOrigin = bounds.x + (~originSplit[0].indexOf(\"%\") ? xOrigin / 100 * bounds.width : xOrigin);\n                            yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf(\"%\") ? yOrigin / 100 * bounds.height : yOrigin);\n                        } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {\n                            //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.\n                            x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n                            y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n                            xOrigin = x;\n                            yOrigin = y;\n                        }\n                        if (smooth || smooth !== false && cache.smooth) {\n                            tx = xOrigin - xOriginOld;\n                            ty = yOrigin - yOriginOld;\n                            cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;\n                            cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;\n                        } else {\n                            cache.xOffset = cache.yOffset = 0;\n                        }\n                        cache.xOrigin = xOrigin;\n                        cache.yOrigin = yOrigin;\n                        cache.smooth = !!smooth;\n                        cache.origin = origin;\n                        cache.originIsAbsolute = !!originIsAbsolute;\n                        target.style[_transformOriginProp] = \"0px 0px\"; //otherwise, if someone sets  an origin via CSS, it will likely interfere with the SVG transform attribute ones (because remember, we're baking the origin into the matrix() value).\n                        if (pluginToAddPropTweensTo) {\n                            _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"xOrigin\", xOriginOld, xOrigin);\n                            _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"yOrigin\", yOriginOld, yOrigin);\n                            _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"xOffset\", xOffsetOld, cache.xOffset);\n                            _addNonTweeningPT(pluginToAddPropTweensTo, cache, \"yOffset\", yOffsetOld, cache.yOffset);\n                        }\n                        target.setAttribute(\"data-svg-origin\", xOrigin + \" \" + yOrigin);\n                    }, _parseTransform = function _parseTransform(target, uncache) {\n                        var cache = target._gsap || new _gsapCore.GSCache(target);\n                        if (\"x\" in cache && !uncache && !cache.uncache) {\n                            return cache;\n                        }\n                        var style = target.style, invertedScaleX = cache.scaleX < 0, px = \"px\", deg = \"deg\", origin = _getComputedProperty(target, _transformOriginProp) || \"0\", x, y, z, scaleX, scaleY, rotation, rotationX, rotationY, skewX, skewY, perspective, xOrigin, yOrigin, matrix, angle, cos, sin, a, b, c, d, a12, a22, t1, t2, t3, a13, a23, a33, a42, a43, a32;\n                        x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;\n                        scaleX = scaleY = 1;\n                        cache.svg = !!(target.getCTM && _isSVG(target));\n                        matrix = _getMatrix(target, cache.svg);\n                        if (cache.svg) {\n                            t1 = !cache.uncache && target.getAttribute(\"data-svg-origin\");\n                            _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);\n                        }\n                        xOrigin = cache.xOrigin || 0;\n                        yOrigin = cache.yOrigin || 0;\n                        if (matrix !== _identity2DMatrix) {\n                            a = matrix[0]; //a11\n                            b = matrix[1]; //a21\n                            c = matrix[2]; //a31\n                            d = matrix[3]; //a41\n                            x = a12 = matrix[4];\n                            y = a22 = matrix[5]; //2D matrix\n                            if (matrix.length === 6) {\n                                scaleX = Math.sqrt(a * a + b * b);\n                                scaleY = Math.sqrt(d * d + c * c);\n                                rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).\n                                skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;\n                                skewX && (scaleY *= Math.cos(skewX * _DEG2RAD));\n                                if (cache.svg) {\n                                    x -= xOrigin - (xOrigin * a + yOrigin * c);\n                                    y -= yOrigin - (xOrigin * b + yOrigin * d);\n                                } //3D matrix\n                            } else {\n                                a32 = matrix[6];\n                                a42 = matrix[7];\n                                a13 = matrix[8];\n                                a23 = matrix[9];\n                                a33 = matrix[10];\n                                a43 = matrix[11];\n                                x = matrix[12];\n                                y = matrix[13];\n                                z = matrix[14];\n                                angle = _atan2(a32, a33);\n                                rotationX = angle * _RAD2DEG; //rotationX\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    t1 = a12 * cos + a13 * sin;\n                                    t2 = a22 * cos + a23 * sin;\n                                    t3 = a32 * cos + a33 * sin;\n                                    a13 = a12 * -sin + a13 * cos;\n                                    a23 = a22 * -sin + a23 * cos;\n                                    a33 = a32 * -sin + a33 * cos;\n                                    a43 = a42 * -sin + a43 * cos;\n                                    a12 = t1;\n                                    a22 = t2;\n                                    a32 = t3;\n                                } //rotationY\n                                angle = _atan2(-c, a33);\n                                rotationY = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    t1 = a * cos - a13 * sin;\n                                    t2 = b * cos - a23 * sin;\n                                    t3 = c * cos - a33 * sin;\n                                    a43 = d * sin + a43 * cos;\n                                    a = t1;\n                                    b = t2;\n                                    c = t3;\n                                } //rotationZ\n                                angle = _atan2(b, a);\n                                rotation = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(angle);\n                                    sin = Math.sin(angle);\n                                    t1 = a * cos + b * sin;\n                                    t2 = a12 * cos + a22 * sin;\n                                    b = b * cos - a * sin;\n                                    a22 = a22 * cos - a12 * sin;\n                                    a = t1;\n                                    a12 = t2;\n                                }\n                                if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {\n                                    //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.\n                                    rotationX = rotation = 0;\n                                    rotationY = 180 - rotationY;\n                                }\n                                scaleX = (0, _gsapCore._round)(Math.sqrt(a * a + b * b + c * c));\n                                scaleY = (0, _gsapCore._round)(Math.sqrt(a22 * a22 + a32 * a32));\n                                angle = _atan2(a12, a22);\n                                skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;\n                                perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n                            }\n                            if (cache.svg) {\n                                //sense if there are CSS transforms applied on an SVG element in which case we must overwrite them when rendering. The transform attribute is more reliable cross-browser, but we can't just remove the CSS ones because they may be applied in a CSS rule somewhere (not just inline).\n                                t1 = target.getAttribute(\"transform\");\n                                cache.forceCSS = target.setAttribute(\"transform\", \"\") || !_isNullTransform(_getComputedProperty(target, _transformProp));\n                                t1 && target.setAttribute(\"transform\", t1);\n                            }\n                        }\n                        if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n                            if (invertedScaleX) {\n                                scaleX *= -1;\n                                skewX += rotation <= 0 ? 180 : -180;\n                                rotation += rotation <= 0 ? 180 : -180;\n                            } else {\n                                scaleY *= -1;\n                                skewX += skewX <= 0 ? 180 : -180;\n                            }\n                        }\n                        cache.x = x - ((cache.xPercent = x && (cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;\n                        cache.y = y - ((cache.yPercent = y && (cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;\n                        cache.z = z + px;\n                        cache.scaleX = (0, _gsapCore._round)(scaleX);\n                        cache.scaleY = (0, _gsapCore._round)(scaleY);\n                        cache.rotation = (0, _gsapCore._round)(rotation) + deg;\n                        cache.rotationX = (0, _gsapCore._round)(rotationX) + deg;\n                        cache.rotationY = (0, _gsapCore._round)(rotationY) + deg;\n                        cache.skewX = skewX + deg;\n                        cache.skewY = skewY + deg;\n                        cache.transformPerspective = perspective + px;\n                        if (cache.zOrigin = parseFloat(origin.split(\" \")[2]) || 0) {\n                            style[_transformOriginProp] = _firstTwoOnly(origin);\n                        }\n                        cache.xOffset = cache.yOffset = 0;\n                        cache.force3D = _gsapCore._config.force3D;\n                        cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;\n                        cache.uncache = 0;\n                        return cache;\n                    }, _firstTwoOnly = function _firstTwoOnly(value) {\n                        return (value = value.split(\" \"))[0] + \" \" + value[1];\n                    }, //for handling transformOrigin values, stripping out the 3rd dimension\n                    _addPxTranslate = function _addPxTranslate(target, start, value) {\n                        var unit = (0, _gsapCore.getUnit)(start);\n                        return (0, _gsapCore._round)(parseFloat(start) + parseFloat(_convertToUnit(target, \"x\", value + \"px\", unit))) + unit;\n                    }, _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {\n                        cache.z = \"0px\";\n                        cache.rotationY = cache.rotationX = \"0deg\";\n                        cache.force3D = 0;\n                        _renderCSSTransforms(ratio, cache);\n                    }, _zeroDeg = \"0deg\", _zeroPx = \"0px\", _endParenthesis = \") \", _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {\n                        var _ref = cache || this, xPercent = _ref.xPercent, yPercent = _ref.yPercent, x = _ref.x, y = _ref.y, z = _ref.z, rotation = _ref.rotation, rotationY = _ref.rotationY, rotationX = _ref.rotationX, skewX = _ref.skewX, skewY = _ref.skewY, scaleX = _ref.scaleX, scaleY = _ref.scaleY, transformPerspective = _ref.transformPerspective, force3D = _ref.force3D, target = _ref.target, zOrigin = _ref.zOrigin, transforms = \"\", use3D = force3D === \"auto\" && ratio && ratio !== 1 || force3D === true; // Safari has a bug that causes it not to render 3D transform-origin values properly, so we force the z origin to 0, record it in the cache, and then do the math here to offset the translate values accordingly (basically do the 3D transform-origin part manually)\n                        if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {\n                            var angle = parseFloat(rotationY) * _DEG2RAD, a13 = Math.sin(angle), a33 = Math.cos(angle), cos;\n                            angle = parseFloat(rotationX) * _DEG2RAD;\n                            cos = Math.cos(angle);\n                            x = _addPxTranslate(target, x, a13 * cos * -zOrigin);\n                            y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);\n                            z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);\n                        }\n                        if (transformPerspective !== _zeroPx) {\n                            transforms += \"perspective(\" + transformPerspective + _endParenthesis;\n                        }\n                        if (xPercent || yPercent) {\n                            transforms += \"translate(\" + xPercent + \"%, \" + yPercent + \"%) \";\n                        }\n                        if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {\n                            transforms += z !== _zeroPx || use3D ? \"translate3d(\" + x + \", \" + y + \", \" + z + \") \" : \"translate(\" + x + \", \" + y + _endParenthesis;\n                        }\n                        if (rotation !== _zeroDeg) {\n                            transforms += \"rotate(\" + rotation + _endParenthesis;\n                        }\n                        if (rotationY !== _zeroDeg) {\n                            transforms += \"rotateY(\" + rotationY + _endParenthesis;\n                        }\n                        if (rotationX !== _zeroDeg) {\n                            transforms += \"rotateX(\" + rotationX + _endParenthesis;\n                        }\n                        if (skewX !== _zeroDeg || skewY !== _zeroDeg) {\n                            transforms += \"skew(\" + skewX + \", \" + skewY + _endParenthesis;\n                        }\n                        if (scaleX !== 1 || scaleY !== 1) {\n                            transforms += \"scale(\" + scaleX + \", \" + scaleY + _endParenthesis;\n                        }\n                        target.style[_transformProp] = transforms || \"translate(0, 0)\";\n                    }, _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {\n                        var _ref2 = cache || this, xPercent = _ref2.xPercent, yPercent = _ref2.yPercent, x = _ref2.x, y = _ref2.y, rotation = _ref2.rotation, skewX = _ref2.skewX, skewY = _ref2.skewY, scaleX = _ref2.scaleX, scaleY = _ref2.scaleY, target = _ref2.target, xOrigin = _ref2.xOrigin, yOrigin = _ref2.yOrigin, xOffset = _ref2.xOffset, yOffset = _ref2.yOffset, forceCSS = _ref2.forceCSS, tx = parseFloat(x), ty = parseFloat(y), a11, a21, a12, a22, temp;\n                        rotation = parseFloat(rotation);\n                        skewX = parseFloat(skewX);\n                        skewY = parseFloat(skewY);\n                        if (skewY) {\n                            //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.\n                            skewY = parseFloat(skewY);\n                            skewX += skewY;\n                            rotation += skewY;\n                        }\n                        if (rotation || skewX) {\n                            rotation *= _DEG2RAD;\n                            skewX *= _DEG2RAD;\n                            a11 = Math.cos(rotation) * scaleX;\n                            a21 = Math.sin(rotation) * scaleX;\n                            a12 = Math.sin(rotation - skewX) * -scaleY;\n                            a22 = Math.cos(rotation - skewX) * scaleY;\n                            if (skewX) {\n                                skewY *= _DEG2RAD;\n                                temp = Math.tan(skewX - skewY);\n                                temp = Math.sqrt(1 + temp * temp);\n                                a12 *= temp;\n                                a22 *= temp;\n                                if (skewY) {\n                                    temp = Math.tan(skewY);\n                                    temp = Math.sqrt(1 + temp * temp);\n                                    a11 *= temp;\n                                    a21 *= temp;\n                                }\n                            }\n                            a11 = (0, _gsapCore._round)(a11);\n                            a21 = (0, _gsapCore._round)(a21);\n                            a12 = (0, _gsapCore._round)(a12);\n                            a22 = (0, _gsapCore._round)(a22);\n                        } else {\n                            a11 = scaleX;\n                            a22 = scaleY;\n                            a21 = a12 = 0;\n                        }\n                        if (tx && !~(x + \"\").indexOf(\"px\") || ty && !~(y + \"\").indexOf(\"px\")) {\n                            tx = _convertToUnit(target, \"x\", x, \"px\");\n                            ty = _convertToUnit(target, \"y\", y, \"px\");\n                        }\n                        if (xOrigin || yOrigin || xOffset || yOffset) {\n                            tx = (0, _gsapCore._round)(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);\n                            ty = (0, _gsapCore._round)(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);\n                        }\n                        if (xPercent || yPercent) {\n                            //The SVG spec doesn't support percentage-based translation in the \"transform\" attribute, so we merge it into the translation to simulate it.\n                            temp = target.getBBox();\n                            tx = (0, _gsapCore._round)(tx + xPercent / 100 * temp.width);\n                            ty = (0, _gsapCore._round)(ty + yPercent / 100 * temp.height);\n                        }\n                        temp = \"matrix(\" + a11 + \",\" + a21 + \",\" + a12 + \",\" + a22 + \",\" + tx + \",\" + ty + \")\";\n                        target.setAttribute(\"transform\", temp);\n                        forceCSS && (target.style[_transformProp] = temp); //some browsers prioritize CSS transforms over the transform attribute. When we sense that the user has CSS transforms applied, we must overwrite them this way (otherwise some browser simply won't render the  transform attribute changes!)\n                    }, _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue, relative) {\n                        var cap = 360, isString = (0, _gsapCore._isString)(endValue), endNum = parseFloat(endValue) * (isString && ~endValue.indexOf(\"rad\") ? _RAD2DEG : 1), change = relative ? endNum * relative : endNum - startNum, finalValue = startNum + change + \"deg\", direction, pt;\n                        if (isString) {\n                            direction = endValue.split(\"_\")[1];\n                            if (direction === \"short\") {\n                                change %= cap;\n                                if (change !== change % (cap / 2)) {\n                                    change += change < 0 ? cap : -cap;\n                                }\n                            }\n                            if (direction === \"cw\" && change < 0) {\n                                change = (change + cap * _bigNum) % cap - ~~(change / cap) * cap;\n                            } else if (direction === \"ccw\" && change > 0) {\n                                change = (change - cap * _bigNum) % cap - ~~(change / cap) * cap;\n                            }\n                        }\n                        plugin._pt = pt = new _gsapCore.PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);\n                        pt.e = finalValue;\n                        pt.u = \"deg\";\n                        plugin._props.push(property);\n                        return pt;\n                    }, _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {\n                        //for handling cases where someone passes in a whole transform string, like transform: \"scale(2, 3) rotate(20deg) translateY(30em)\"\n                        var style = _tempDivStyler.style, startCache = target._gsap, exclude = \"perspective,force3D,transformOrigin,svgOrigin\", endCache, p, startValue, endValue, startNum, endNum, startUnit, endUnit;\n                        style.cssText = getComputedStyle(target).cssText + \";position:absolute;display:block;\"; //%-based translations will fail unless we set the width/height to match the original target (and padding/borders can affect it)\n                        style[_transformProp] = transforms;\n                        _doc.body.appendChild(_tempDivStyler);\n                        endCache = _parseTransform(_tempDivStyler, 1);\n                        for(p in _transformProps){\n                            startValue = startCache[p];\n                            endValue = endCache[p];\n                            if (startValue !== endValue && exclude.indexOf(p) < 0) {\n                                //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.\n                                startUnit = (0, _gsapCore.getUnit)(startValue);\n                                endUnit = (0, _gsapCore.getUnit)(endValue);\n                                startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);\n                                endNum = parseFloat(endValue);\n                                plugin._pt = new _gsapCore.PropTween(plugin._pt, startCache, p, startNum, endNum - startNum, _renderCSSProp);\n                                plugin._pt.u = endUnit || 0;\n                                plugin._props.push(p);\n                            }\n                        }\n                        _doc.body.removeChild(_tempDivStyler);\n                    }; // handle splitting apart padding, margin, borderWidth, and borderRadius into their 4 components. Firefox, for example, won't report borderRadius correctly - it will only do borderTopLeftRadius and the other corners. We also want to handle paddingTop, marginLeft, borderRightWidth, etc.\n                    exports1._getBBox = _getBBox;\n                    exports1.checkPrefix = _checkPropPrefix;\n                    exports1._createElement = _createElement;\n                    (0, _gsapCore._forEachName)(\"padding,margin,Width,Radius\", function(name, index) {\n                        var t = \"Top\", r = \"Right\", b = \"Bottom\", l = \"Left\", props = (index < 3 ? [\n                            t,\n                            r,\n                            b,\n                            l\n                        ] : [\n                            t + l,\n                            t + r,\n                            b + r,\n                            b + l\n                        ]).map(function(side) {\n                            return index < 2 ? name + side : \"border\" + side + name;\n                        });\n                        _specialProps[index > 1 ? \"border\" + name : name] = function(plugin, target, property, endValue, tween) {\n                            var a, vars;\n                            if (arguments.length < 4) {\n                                // getter, passed target, property, and unit (from _get())\n                                a = props.map(function(prop) {\n                                    return _get(plugin, prop, property);\n                                });\n                                vars = a.join(\" \");\n                                return vars.split(a[0]).length === 5 ? a[0] : vars;\n                            }\n                            a = (endValue + \"\").split(\" \");\n                            vars = {};\n                            props.forEach(function(prop, i) {\n                                return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];\n                            });\n                            plugin.init(target, vars, tween);\n                        };\n                    });\n                    var CSSPlugin = {\n                        name: \"css\",\n                        register: _initCore,\n                        targetTest: function targetTest(target) {\n                            return target.style && target.nodeType;\n                        },\n                        init: function init(target, vars, tween, index, targets) {\n                            var props = this._props, style = target.style, startAt = tween.vars.startAt, startValue, endValue, endNum, startNum, type, specialProp, p, startUnit, endUnit, relative, isTransformRelated, transformPropTween, cache, smooth, hasPriority;\n                            _pluginInitted || _initCore();\n                            for(p in vars){\n                                if (p === \"autoRound\") {\n                                    continue;\n                                }\n                                endValue = vars[p];\n                                if (_gsapCore._plugins[p] && (0, _gsapCore._checkPlugin)(p, vars, tween, index, target, targets)) {\n                                    continue;\n                                }\n                                type = typeof endValue;\n                                specialProp = _specialProps[p];\n                                if (type === \"function\") {\n                                    endValue = endValue.call(tween, index, target, targets);\n                                    type = typeof endValue;\n                                }\n                                if (type === \"string\" && ~endValue.indexOf(\"random(\")) {\n                                    endValue = (0, _gsapCore._replaceRandom)(endValue);\n                                }\n                                if (specialProp) {\n                                    specialProp(this, target, p, endValue, tween) && (hasPriority = 1);\n                                } else if (p.substr(0, 2) === \"--\") {\n                                    //CSS variable\n                                    startValue = (getComputedStyle(target).getPropertyValue(p) + \"\").trim();\n                                    endValue += \"\";\n                                    startUnit = (0, _gsapCore.getUnit)(startValue);\n                                    endUnit = (0, _gsapCore.getUnit)(endValue);\n                                    endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);\n                                    this.add(style, \"setProperty\", startValue, endValue, index, targets, 0, 0, p);\n                                } else if (type !== \"undefined\") {\n                                    if (startAt && p in startAt) {\n                                        // in case someone hard-codes a complex value as the start, like top: \"calc(2vh / 2)\". Without this, it'd use the computed value (always in px)\n                                        startValue = typeof startAt[p] === \"function\" ? startAt[p].call(tween, index, target, targets) : startAt[p];\n                                        p in _gsapCore._config.units && !(0, _gsapCore.getUnit)(startValue) && (startValue += _gsapCore._config.units[p]); // for cases when someone passes in a unitless value like {x: 100}; if we try setting translate(100, 0px) it won't work.\n                                        (startValue + \"\").charAt(1) === \"=\" && (startValue = _get(target, p)); // can't work with relative values\n                                    } else {\n                                        startValue = _get(target, p);\n                                    }\n                                    startNum = parseFloat(startValue);\n                                    relative = type === \"string\" && endValue.charAt(1) === \"=\" ? +(endValue.charAt(0) + \"1\") : 0;\n                                    relative && (endValue = endValue.substr(2));\n                                    endNum = parseFloat(endValue);\n                                    if (p in _propertyAliases) {\n                                        if (p === \"autoAlpha\") {\n                                            //special case where we control the visibility along with opacity. We still allow the opacity value to pass through and get tweened.\n                                            if (startNum === 1 && _get(target, \"visibility\") === \"hidden\" && endNum) {\n                                                //if visibility is initially set to \"hidden\", we should interpret that as intent to make opacity 0 (a convenience)\n                                                startNum = 0;\n                                            }\n                                            _addNonTweeningPT(this, style, \"visibility\", startNum ? \"inherit\" : \"hidden\", endNum ? \"inherit\" : \"hidden\", !endNum);\n                                        }\n                                        if (p !== \"scale\" && p !== \"transform\") {\n                                            p = _propertyAliases[p];\n                                            ~p.indexOf(\",\") && (p = p.split(\",\")[0]);\n                                        }\n                                    }\n                                    isTransformRelated = p in _transformProps; //--- TRANSFORM-RELATED ---\n                                    if (isTransformRelated) {\n                                        if (!transformPropTween) {\n                                            cache = target._gsap;\n                                            cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform); // if, for example, gsap.set(... {transform:\"translateX(50vw)\"}), the _get() call doesn't parse the transform, thus cache.renderTransform won't be set yet so force the parsing of the transform here.\n                                            smooth = vars.smoothOrigin !== false && cache.smooth;\n                                            transformPropTween = this._pt = new _gsapCore.PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1); //the first time through, create the rendering PropTween so that it runs LAST (in the linked list, we keep adding to the beginning)\n                                            transformPropTween.dep = 1; //flag it as dependent so that if things get killed/overwritten and this is the only PropTween left, we can safely kill the whole tween.\n                                        }\n                                        if (p === \"scale\") {\n                                            this._pt = new _gsapCore.PropTween(this._pt, cache, \"scaleY\", cache.scaleY, relative ? relative * endNum : endNum - cache.scaleY);\n                                            props.push(\"scaleY\", p);\n                                            p += \"X\";\n                                        } else if (p === \"transformOrigin\") {\n                                            endValue = _convertKeywordsToPercentages(endValue); //in case something like \"left top\" or \"bottom right\" is passed in. Convert to percentages.\n                                            if (cache.svg) {\n                                                _applySVGOrigin(target, endValue, 0, smooth, 0, this);\n                                            } else {\n                                                endUnit = parseFloat(endValue.split(\" \")[2]) || 0; //handle the zOrigin separately!\n                                                endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, \"zOrigin\", cache.zOrigin, endUnit);\n                                                _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));\n                                            }\n                                            continue;\n                                        } else if (p === \"svgOrigin\") {\n                                            _applySVGOrigin(target, endValue, 1, smooth, 0, this);\n                                            continue;\n                                        } else if (p in _rotationalProperties) {\n                                            _addRotationalPropTween(this, cache, p, startNum, endValue, relative);\n                                            continue;\n                                        } else if (p === \"smoothOrigin\") {\n                                            _addNonTweeningPT(this, cache, \"smooth\", cache.smooth, endValue);\n                                            continue;\n                                        } else if (p === \"force3D\") {\n                                            cache[p] = endValue;\n                                            continue;\n                                        } else if (p === \"transform\") {\n                                            _addRawTransformPTs(this, endValue, target);\n                                            continue;\n                                        }\n                                    } else if (!(p in style)) {\n                                        p = _checkPropPrefix(p) || p;\n                                    }\n                                    if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {\n                                        startUnit = (startValue + \"\").substr((startNum + \"\").length);\n                                        endNum || (endNum = 0); // protect against NaN\n                                        endUnit = (0, _gsapCore.getUnit)(endValue) || (p in _gsapCore._config.units ? _gsapCore._config.units[p] : startUnit);\n                                        startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));\n                                        this._pt = new _gsapCore.PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, relative ? relative * endNum : endNum - startNum, !isTransformRelated && (endUnit === \"px\" || p === \"zIndex\") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);\n                                        this._pt.u = endUnit || 0;\n                                        if (startUnit !== endUnit) {\n                                            //when the tween goes all the way back to the beginning, we need to revert it to the OLD/ORIGINAL value (with those units). We record that as a \"b\" (beginning) property and point to a render method that handles that. (performance optimization)\n                                            this._pt.b = startValue;\n                                            this._pt.r = _renderCSSPropWithBeginning;\n                                        }\n                                    } else if (!(p in style)) {\n                                        if (p in target) {\n                                            //maybe it's not a style - it could be a property added directly to an element in which case we'll try to animate that.\n                                            this.add(target, p, target[p], endValue, index, targets);\n                                        } else {\n                                            (0, _gsapCore._missingPlugin)(p, endValue);\n                                            continue;\n                                        }\n                                    } else {\n                                        _tweenComplexCSSString.call(this, target, p, startValue, endValue);\n                                    }\n                                    props.push(p);\n                                }\n                            }\n                            hasPriority && (0, _gsapCore._sortPropTweensByPriority)(this);\n                        },\n                        get: _get,\n                        aliases: _propertyAliases,\n                        getSetter: function getSetter(target, property, plugin) {\n                            //returns a setter function that accepts target, property, value and applies it accordingly. Remember, properties like \"x\" aren't as simple as target.style.property = value because they've got to be applied to a proxy object and then merged into a transform string in a renderer.\n                            var p = _propertyAliases[property];\n                            p && p.indexOf(\",\") < 0 && (property = p);\n                            return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, \"x\")) ? plugin && _recentSetterPlugin === plugin ? property === \"scale\" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === \"scale\" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !(0, _gsapCore._isUndefined)(target.style[property]) ? _setterCSSStyle : ~property.indexOf(\"-\") ? _setterCSSProp : (0, _gsapCore._getSetter)(target, property);\n                        },\n                        core: {\n                            _removeProperty: _removeProperty,\n                            _getMatrix: _getMatrix\n                        }\n                    };\n                    exports1.default = exports1.CSSPlugin = CSSPlugin;\n                    _gsapCore.gsap.utils.checkPrefix = _checkPropPrefix;\n                    (function(positionAndScale, rotation, others, aliases) {\n                        var all = (0, _gsapCore._forEachName)(positionAndScale + \",\" + rotation + \",\" + others, function(name) {\n                            _transformProps[name] = 1;\n                        });\n                        (0, _gsapCore._forEachName)(rotation, function(name) {\n                            _gsapCore._config.units[name] = \"deg\";\n                            _rotationalProperties[name] = 1;\n                        });\n                        _propertyAliases[all[13]] = positionAndScale + \",\" + rotation;\n                        (0, _gsapCore._forEachName)(aliases, function(name) {\n                            var split = name.split(\":\");\n                            _propertyAliases[split[1]] = all[split[0]];\n                        });\n                    })(\"x,y,z,scale,scaleX,scaleY,xPercent,yPercent\", \"rotation,rotationX,rotationY,skewX,skewY\", \"transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective\", \"0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY\");\n                    (0, _gsapCore._forEachName)(\"x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective\", function(name) {\n                        _gsapCore._config.units[name] = \"px\";\n                    });\n                    _gsapCore.gsap.registerPlugin(CSSPlugin);\n                },\n                {\n                    \"./gsap-core.js\": \"TNS6\"\n                }\n            ],\n            \"TpQl\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    Object.defineProperty(exports1, \"Power0\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Power0;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Power1\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Power1;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Power2\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Power2;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Power3\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Power3;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Power4\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Power4;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Linear\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Linear;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Quad\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Quad;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Cubic\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Cubic;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Quart\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Quart;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Quint\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Quint;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Strong\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Strong;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Elastic\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Elastic;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Back\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Back;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"SteppedEase\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.SteppedEase;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Bounce\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Bounce;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Sine\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Sine;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Expo\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Expo;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"Circ\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.Circ;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"TweenLite\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.TweenLite;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"TimelineLite\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.TimelineLite;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"TimelineMax\", {\n                        enumerable: true,\n                        get: function() {\n                            return _gsapCore.TimelineMax;\n                        }\n                    });\n                    Object.defineProperty(exports1, \"CSSPlugin\", {\n                        enumerable: true,\n                        get: function() {\n                            return _CSSPlugin.CSSPlugin;\n                        }\n                    });\n                    exports1.TweenMax = exports1.default = exports1.gsap = void 0;\n                    var _gsapCore = require1(\"./gsap-core.js\");\n                    var _CSSPlugin = require1(\"./CSSPlugin.js\");\n                    var gsapWithCSS = _gsapCore.gsap.registerPlugin(_CSSPlugin.CSSPlugin) || _gsapCore.gsap, // to protect from tree shaking\n                    TweenMaxWithCSS = gsapWithCSS.core.Tween;\n                    exports1.TweenMax = TweenMaxWithCSS;\n                    exports1.default = exports1.gsap = gsapWithCSS;\n                },\n                {\n                    \"./gsap-core.js\": \"TNS6\",\n                    \"./CSSPlugin.js\": \"bp4Z\"\n                }\n            ],\n            \"Jcyn\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    Object.defineProperty(exports1, \"__esModule\", {\n                        value: true\n                    });\n                    exports1.Slideshow = void 0;\n                    var _slide = require1(\"../slide\");\n                    var _events = require1(\"events\");\n                    var _gsap = require1(\"gsap\");\n                    function _typeof(obj) {\n                        \"@babel/helpers - typeof\";\n                        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n                            _typeof = function _typeof(obj) {\n                                return typeof obj;\n                            };\n                        } else {\n                            _typeof = function _typeof(obj) {\n                                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                            };\n                        }\n                        return _typeof(obj);\n                    }\n                    function _createForOfIteratorHelper(o, allowArrayLike) {\n                        var it;\n                        if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n                            if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n                                if (it) o = it;\n                                var i = 0;\n                                var F = function F() {};\n                                return {\n                                    s: F,\n                                    n: function n() {\n                                        if (i >= o.length) return {\n                                            done: true\n                                        };\n                                        return {\n                                            done: false,\n                                            value: o[i++]\n                                        };\n                                    },\n                                    e: function e(_e) {\n                                        throw _e;\n                                    },\n                                    f: F\n                                };\n                            }\n                            throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                        }\n                        var normalCompletion = true, didErr = false, err;\n                        return {\n                            s: function s() {\n                                it = o[Symbol.iterator]();\n                            },\n                            n: function n() {\n                                var step = it.next();\n                                normalCompletion = step.done;\n                                return step;\n                            },\n                            e: function e(_e2) {\n                                didErr = true;\n                                err = _e2;\n                            },\n                            f: function f() {\n                                try {\n                                    if (!normalCompletion && it.return != null) it.return();\n                                } finally{\n                                    if (didErr) throw err;\n                                }\n                            }\n                        };\n                    }\n                    function _toConsumableArray(arr) {\n                        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n                    }\n                    function _nonIterableSpread() {\n                        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                    }\n                    function _unsupportedIterableToArray(o, minLen) {\n                        if (!o) return;\n                        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                        var n = Object.prototype.toString.call(o).slice(8, -1);\n                        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                    }\n                    function _iterableToArray(iter) {\n                        if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n                    }\n                    function _arrayWithoutHoles(arr) {\n                        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n                    }\n                    function _arrayLikeToArray(arr, len) {\n                        if (len == null || len > arr.length) len = arr.length;\n                        for(var i = 0, arr2 = new Array(len); i < len; i++){\n                            arr2[i] = arr[i];\n                        }\n                        return arr2;\n                    }\n                    function _classCallCheck(instance, Constructor) {\n                        if (!(instance instanceof Constructor)) {\n                            throw new TypeError(\"Cannot call a class as a function\");\n                        }\n                    }\n                    function _defineProperties(target, props) {\n                        for(var i = 0; i < props.length; i++){\n                            var descriptor = props[i];\n                            descriptor.enumerable = descriptor.enumerable || false;\n                            descriptor.configurable = true;\n                            if (\"value\" in descriptor) descriptor.writable = true;\n                            Object.defineProperty(target, descriptor.key, descriptor);\n                        }\n                    }\n                    function _createClass(Constructor, protoProps, staticProps) {\n                        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                        if (staticProps) _defineProperties(Constructor, staticProps);\n                        return Constructor;\n                    }\n                    function _inherits(subClass, superClass) {\n                        if (typeof superClass !== \"function\" && superClass !== null) {\n                            throw new TypeError(\"Super expression must either be null or a function\");\n                        }\n                        subClass.prototype = Object.create(superClass && superClass.prototype, {\n                            constructor: {\n                                value: subClass,\n                                writable: true,\n                                configurable: true\n                            }\n                        });\n                        if (superClass) _setPrototypeOf(subClass, superClass);\n                    }\n                    function _setPrototypeOf(o, p) {\n                        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n                            o.__proto__ = p;\n                            return o;\n                        };\n                        return _setPrototypeOf(o, p);\n                    }\n                    function _createSuper(Derived) {\n                        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                        return function _createSuperInternal() {\n                            var Super = _getPrototypeOf(Derived), result;\n                            if (hasNativeReflectConstruct) {\n                                var NewTarget = _getPrototypeOf(this).constructor;\n                                result = Reflect.construct(Super, arguments, NewTarget);\n                            } else {\n                                result = Super.apply(this, arguments);\n                            }\n                            return _possibleConstructorReturn(this, result);\n                        };\n                    }\n                    function _possibleConstructorReturn(self, call) {\n                        if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n                            return call;\n                        }\n                        return _assertThisInitialized(self);\n                    }\n                    function _assertThisInitialized(self) {\n                        if (self === void 0) {\n                            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                        }\n                        return self;\n                    }\n                    function _isNativeReflectConstruct() {\n                        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                        if (Reflect.construct.sham) return false;\n                        if (typeof Proxy === \"function\") return true;\n                        try {\n                            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                            return true;\n                        } catch (e) {\n                            return false;\n                        }\n                    }\n                    function _getPrototypeOf(o) {\n                        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n                            return o.__proto__ || Object.getPrototypeOf(o);\n                        };\n                        return _getPrototypeOf(o);\n                    }\n                    var Slideshow = /*#__PURE__*/ function(_EventEmitter) {\n                        _inherits(Slideshow, _EventEmitter);\n                        var _super = _createSuper(Slideshow);\n                        function Slideshow(el) {\n                            var _this;\n                            _classCallCheck(this, Slideshow);\n                            _this = _super.call(this); // the main wrapper <div class=\"slideshow\">\n                            _this.DOM = {\n                                el: el\n                            }; // the slides\n                            _this.DOM.slides = _toConsumableArray(_this.DOM.el.querySelectorAll(\".slide\")); // array of Slide obj instances\n                            _this.slides = [];\n                            _this.DOM.slides.forEach(function(slide) {\n                                return _this.slides.push(new _slide.Slide(slide));\n                            }); // total number of Slides\n                            _this.slidesTotal = _this.slides.length; // current position\n                            _this.current = 0; // some settings, like the clip paths\n                            _this.config = {\n                                clipPath: {\n                                    initial: \"circle(55% at 70% 50%)\",\n                                    final: \"circle(15% at 70% 50%)\",\n                                    hover: \"circle(20% at 30% 50%)\"\n                                }\n                            };\n                            _this.init();\n                            return _this;\n                        }\n                        _createClass(Slideshow, [\n                            {\n                                key: \"init\",\n                                value: function init() {\n                                    var _this2 = this;\n                                    // start with the first slide as the current slide\n                                    this.DOM.slides[this.current].classList.add(\"slide--current\"); // set the initial clip path\n                                    _gsap.gsap.set(this.slides[this.current].DOM.imgWrap, {\n                                        clipPath: this.config.clipPath.initial\n                                    }); // when hovering over the \"explore\" link on each slide, we animate the clip path from this.config.clipPath.initial to this.config.clipPath.hover\n                                    var _iterator = _createForOfIteratorHelper(this.slides), _step;\n                                    try {\n                                        var _loop = function _loop() {\n                                            var slide = _step.value;\n                                            slide.DOM.link.addEventListener(\"mouseenter\", function() {\n                                                _gsap.gsap.killTweensOf(slide.DOM.imgWrap);\n                                                _gsap.gsap.to(slide.DOM.imgWrap, {\n                                                    duration: 1,\n                                                    ease: \"expo\",\n                                                    clipPath: _this2.config.clipPath.hover\n                                                });\n                                            });\n                                            slide.DOM.link.addEventListener(\"mouseleave\", function() {\n                                                _gsap.gsap.killTweensOf(slide.DOM.imgWrap);\n                                                _gsap.gsap.to(slide.DOM.imgWrap, {\n                                                    duration: 1,\n                                                    ease: \"expo\",\n                                                    clipPath: _this2.config.clipPath.initial\n                                                });\n                                            });\n                                        };\n                                        for(_iterator.s(); !(_step = _iterator.n()).done;){\n                                            _loop();\n                                        }\n                                    } catch (err) {\n                                        _iterator.e(err);\n                                    } finally{\n                                        _iterator.f();\n                                    }\n                                } // navigate to the next slide\n                            },\n                            {\n                                key: \"next\",\n                                value: function next() {\n                                    this.navigate(\"next\");\n                                } // navigate to the previous slide\n                            },\n                            {\n                                key: \"prev\",\n                                value: function prev() {\n                                    this.navigate(\"prev\");\n                                }\n                            },\n                            {\n                                key: \"navigate\",\n                                value: function navigate(direction) {\n                                    var _this3 = this;\n                                    // if animating do nothing\n                                    if (this.isAnimating) {\n                                        return false;\n                                    }\n                                    this.isAnimating = true; // get the current slide\n                                    var currentSlide = this.slides[this.current]; // update current\n                                    if (direction === \"next\") {\n                                        this.current = this.current < this.slidesTotal - 1 ? this.current + 1 : 0;\n                                    } else {\n                                        this.current = this.current > 0 ? this.current - 1 : this.slidesTotal - 1;\n                                    } // now get the upcoming slide\n                                    var upcomingSlide = this.slides[this.current]; // animate things...\n                                    _gsap.gsap.timeline({\n                                        // add class current to the upcoming slide (pointer events related)\n                                        onStart: function onStart() {\n                                            return upcomingSlide.DOM.el.classList.add(\"slide--current\");\n                                        },\n                                        // and remove that class from the currentSlide when the animation ends\n                                        onComplete: function onComplete() {\n                                            _this3.isAnimating = false;\n                                            currentSlide.DOM.el.classList.remove(\"slide--current\");\n                                        }\n                                    }).addLabel(\"start\", 0) // set the initial styles for the upcoming slide imgWrap: clip path and translateY position \n                                    .set(upcomingSlide.DOM.imgWrap, {\n                                        y: direction === \"next\" ? \"100%\" : \"-100%\",\n                                        clipPath: this.config.clipPath.final\n                                    }, \"start\") // also set the opacity of the upcoming slide to 1\n                                    .set(upcomingSlide.DOM.el, {\n                                        opacity: 1\n                                    }, \"start\") // set the initial styles for the upcoming slide img: translateY position\n                                    // same for the texts and link elements\n                                    .set(upcomingSlide.DOM.img, {\n                                        y: direction === \"next\" ? \"-50%\" : \"50%\"\n                                    }, \"start\").set(upcomingSlide.DOM.text, {\n                                        y: direction === \"next\" ? \"100%\" : \"-100%\"\n                                    }, \"start\").set(upcomingSlide.DOM.link, {\n                                        opacity: 0\n                                    }, \"start\") // animate the clip path from this.config.clipPath.initial to this.config.clipPath.final\n                                    .to(currentSlide.DOM.imgWrap, {\n                                        duration: 1,\n                                        ease: \"power3\",\n                                        clipPath: this.config.clipPath.final,\n                                        rotation: 0.001 // bugfix\n                                    }, \"start\") // animate the current slide texts out\n                                    .to(currentSlide.DOM.text, {\n                                        duration: 1,\n                                        ease: \"power3\",\n                                        y: direction === \"next\" ? \"-100%\" : \"100%\"\n                                    }, \"start\") // animate the current slide link out\n                                    .to(currentSlide.DOM.link, {\n                                        duration: 0.5,\n                                        ease: \"power3\",\n                                        opacity: 0\n                                    }, \"start\") // move the current slide away \n                                    .to(currentSlide.DOM.imgWrap, {\n                                        duration: 1,\n                                        ease: \"power2.inOut\",\n                                        y: direction === \"next\" ? \"-100%\" : \"100%\",\n                                        rotation: 0.001\n                                    }, \"start+=0.6\").to(currentSlide.DOM.img, {\n                                        duration: 1,\n                                        ease: \"power2.inOut\",\n                                        y: direction === \"next\" ? \"50%\" : \"-50%\"\n                                    }, \"start+=0.6\") // and the upcoming slide in\n                                    .to(upcomingSlide.DOM.imgWrap, {\n                                        duration: 1,\n                                        ease: \"power2.inOut\",\n                                        y: \"0%\",\n                                        rotation: 0.001\n                                    }, \"start+=0.6\").to(upcomingSlide.DOM.img, {\n                                        duration: 1,\n                                        ease: \"power2.inOut\",\n                                        y: \"0%\"\n                                    }, \"start+=0.6\") // animate the upcoming slide clip path to the initial shape\n                                    .to(upcomingSlide.DOM.imgWrap, {\n                                        duration: 1.5,\n                                        ease: \"expo.inOut\",\n                                        clipPath: this.config.clipPath.initial\n                                    }, \"start+=1.2\") // animate the upcoming slide texts in\n                                    .to(upcomingSlide.DOM.text, {\n                                        duration: 1.5,\n                                        ease: \"expo.inOut\",\n                                        y: \"0%\",\n                                        rotation: 0.001,\n                                        stagger: direction === \"next\" ? 0.1 : -0.1\n                                    }, \"start+=1.1\") // animate the upcoming slide link in\n                                    .to(upcomingSlide.DOM.link, {\n                                        duration: 1,\n                                        ease: \"expo.in\",\n                                        opacity: 1\n                                    }, \"start+=1.4\"); // update the slideshow current value\n                                    this.emit(\"updateCurrent\", this.current);\n                                }\n                            }\n                        ]);\n                        return Slideshow;\n                    }(_events.EventEmitter);\n                    exports1.Slideshow = Slideshow;\n                },\n                {\n                    \"../slide\": \"Drnq\",\n                    \"events\": \"FRpO\",\n                    \"gsap\": \"TpQl\"\n                }\n            ],\n            \"C3Xv\": [\n                function(require1, module1, exports1) {\n                    \"use strict\";\n                    var _utils = require1(\"../utils\");\n                    var _navigation = require1(\"../navigation\");\n                    var _slideshow = require1(\"./slideshow\");\n                    // Preload all images\n                    (0, _utils.preloadImages)(\".slide__img\").then(function() {\n                        // remove loader (loading class) \n                        document.body.classList.remove(\"loading\"); // initialize the slideshow and navigation\n                        var slideshow = new _slideshow.Slideshow(document.querySelector(\".slideshow\"));\n                        var navigation = new _navigation.Navigation(document.querySelector(\".slides-nav\")); // navigation events\n                        navigation.DOM.ctrls.next.addEventListener(\"click\", function() {\n                            return slideshow.next();\n                        });\n                        navigation.DOM.ctrls.prev.addEventListener(\"click\", function() {\n                            return slideshow.prev();\n                        }); // set the initial navigation current slide value\n                        navigation.updateCurrent(slideshow.current); // set the navigation total number of slides\n                        navigation.DOM.total.innerHTML = slideshow.current < 10 ? \"0\".concat(slideshow.slidesTotal) : slideshow.slidesTotal; // when a new slide is shown, update the navigation current slide value\n                        slideshow.on(\"updateCurrent\", function(position) {\n                            return navigation.updateCurrent(position);\n                        });\n                    });\n                },\n                {\n                    \"../utils\": \"8MgT\",\n                    \"../navigation\": \"qr+2\",\n                    \"./slideshow\": \"Jcyn\"\n                }\n            ]\n        }, {}, [\n            \"C3Xv\"\n        ], null);\n    }\n};\nconst _default = scripts;\n/* istanbul ignore next */ /* c8 ignore start */ ;\nfunction oo_cm() {\n    try {\n        return (0, eval)(\"globalThis._console_ninja\") || (0, eval)(\"/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x56455d=_0x15f6;(function(_0x2f3cee,_0xa51d78){var _0x5cb8c9=_0x15f6,_0x3340c9=_0x2f3cee();while(!![]){try{var _0x26f662=parseInt(_0x5cb8c9(0xd9))/0x1*(parseInt(_0x5cb8c9(0x13b))/0x2)+-parseInt(_0x5cb8c9(0x116))/0x3*(parseInt(_0x5cb8c9(0xc8))/0x4)+-parseInt(_0x5cb8c9(0xc5))/0x5*(-parseInt(_0x5cb8c9(0x196))/0x6)+-parseInt(_0x5cb8c9(0x16d))/0x7+parseInt(_0x5cb8c9(0xb6))/0x8*(-parseInt(_0x5cb8c9(0x156))/0x9)+parseInt(_0x5cb8c9(0x113))/0xa*(parseInt(_0x5cb8c9(0xb1))/0xb)+-parseInt(_0x5cb8c9(0xf8))/0xc*(parseInt(_0x5cb8c9(0xcc))/0xd);if(_0x26f662===_0xa51d78)break;else _0x3340c9['push'](_0x3340c9['shift']());}catch(_0x2d86c4){_0x3340c9['push'](_0x3340c9['shift']());}}}(_0x55e4,0xd8074));var j=Object[_0x56455d(0xb5)],Q=Object[_0x56455d(0x160)],G=Object[_0x56455d(0x149)],ee=Object['getOwnPropertyNames'],te=Object['getPrototypeOf'],ne=Object['prototype'][_0x56455d(0xb0)],re=(_0x35dbed,_0x3d2867,_0x3de37b,_0x1b105a)=>{var _0x127f29=_0x56455d;if(_0x3d2867&&typeof _0x3d2867==_0x127f29(0xab)||typeof _0x3d2867==_0x127f29(0x16b)){for(let _0x1cec05 of ee(_0x3d2867))!ne[_0x127f29(0x118)](_0x35dbed,_0x1cec05)&&_0x1cec05!==_0x3de37b&&Q(_0x35dbed,_0x1cec05,{'get':()=>_0x3d2867[_0x1cec05],'enumerable':!(_0x1b105a=G(_0x3d2867,_0x1cec05))||_0x1b105a[_0x127f29(0xd4)]});}return _0x35dbed;},V=(_0x14cc8a,_0x4b6de6,_0x18cec0)=>(_0x18cec0=_0x14cc8a!=null?j(te(_0x14cc8a)):{},re(_0x4b6de6||!_0x14cc8a||!_0x14cc8a['__es'+'Module']?Q(_0x18cec0,_0x56455d(0x17c),{'value':_0x14cc8a,'enumerable':!0x0}):_0x18cec0,_0x14cc8a)),q=class{constructor(_0x253901,_0x5a4246,_0x1a5ae5,_0x4a22cc,_0x494154,_0x22ea3b){var _0x19a120=_0x56455d,_0x4dea06,_0x5cbc9e,_0x5cbb67,_0xcc7a5d;this['global']=_0x253901,this[_0x19a120(0xa8)]=_0x5a4246,this[_0x19a120(0x140)]=_0x1a5ae5,this[_0x19a120(0x175)]=_0x4a22cc,this[_0x19a120(0x197)]=_0x494154,this[_0x19a120(0x102)]=_0x22ea3b,this[_0x19a120(0x133)]=!0x0,this[_0x19a120(0x11d)]=!0x0,this['_connected']=!0x1,this[_0x19a120(0x15e)]=!0x1,this[_0x19a120(0xcb)]=((_0x5cbc9e=(_0x4dea06=_0x253901['process'])==null?void 0x0:_0x4dea06[_0x19a120(0x135)])==null?void 0x0:_0x5cbc9e[_0x19a120(0x117)])===_0x19a120(0x18a),this['_inBrowser']=!((_0xcc7a5d=(_0x5cbb67=this[_0x19a120(0x12a)][_0x19a120(0x131)])==null?void 0x0:_0x5cbb67[_0x19a120(0x188)])!=null&&_0xcc7a5d[_0x19a120(0xde)])&&!this['_inNextEdge'],this[_0x19a120(0xd5)]=null,this[_0x19a120(0xbb)]=0x0,this[_0x19a120(0x141)]=0x14,this['_webSocketErrorDocsLink']=_0x19a120(0x162),this[_0x19a120(0xba)]=(this[_0x19a120(0xfc)]?_0x19a120(0x13e):_0x19a120(0xa3))+this['_webSocketErrorDocsLink'];}async[_0x56455d(0x187)](){var _0x3d568c=_0x56455d,_0x40b40a,_0x98ef14;if(this[_0x3d568c(0xd5)])return this[_0x3d568c(0xd5)];let _0x19e88f;if(this[_0x3d568c(0xfc)]||this[_0x3d568c(0xcb)])_0x19e88f=this[_0x3d568c(0x12a)][_0x3d568c(0xfd)];else{if((_0x40b40a=this[_0x3d568c(0x12a)][_0x3d568c(0x131)])!=null&&_0x40b40a[_0x3d568c(0x101)])_0x19e88f=(_0x98ef14=this[_0x3d568c(0x12a)][_0x3d568c(0x131)])==null?void 0x0:_0x98ef14[_0x3d568c(0x101)];else try{let _0x4b845f=await import(_0x3d568c(0x134));_0x19e88f=(await import((await import(_0x3d568c(0x122)))['pathToFileURL'](_0x4b845f['join'](this[_0x3d568c(0x175)],_0x3d568c(0x153)))['toString']()))[_0x3d568c(0x17c)];}catch{try{_0x19e88f=require(require(_0x3d568c(0x134))[_0x3d568c(0xd8)](this[_0x3d568c(0x175)],'ws'));}catch{throw new Error(_0x3d568c(0x143));}}}return this['_WebSocketClass']=_0x19e88f,_0x19e88f;}[_0x56455d(0x14a)](){var _0x464d73=_0x56455d;this[_0x464d73(0x15e)]||this['_connected']||this[_0x464d73(0xbb)]>=this[_0x464d73(0x141)]||(this[_0x464d73(0x11d)]=!0x1,this['_connecting']=!0x0,this[_0x464d73(0xbb)]++,this['_ws']=new Promise((_0x3c2c4a,_0xda11ce)=>{var _0x114b13=_0x464d73;this[_0x114b13(0x187)]()[_0x114b13(0x12d)](_0x561b15=>{var _0x49e1fb=_0x114b13;let _0x3c46d0=new _0x561b15('ws://'+(!this[_0x49e1fb(0xfc)]&&this[_0x49e1fb(0x197)]?_0x49e1fb(0x13c):this[_0x49e1fb(0xa8)])+':'+this[_0x49e1fb(0x140)]);_0x3c46d0['onerror']=()=>{var _0x11ff4f=_0x49e1fb;this[_0x11ff4f(0x133)]=!0x1,this[_0x11ff4f(0xc1)](_0x3c46d0),this['_attemptToReconnectShortly'](),_0xda11ce(new Error(_0x11ff4f(0x14e)));},_0x3c46d0[_0x49e1fb(0xc7)]=()=>{var _0x49151a=_0x49e1fb;this[_0x49151a(0xfc)]||_0x3c46d0['_socket']&&_0x3c46d0[_0x49151a(0x145)][_0x49151a(0x111)]&&_0x3c46d0[_0x49151a(0x145)]['unref'](),_0x3c2c4a(_0x3c46d0);},_0x3c46d0[_0x49e1fb(0xa7)]=()=>{var _0x3d6a3b=_0x49e1fb;this[_0x3d6a3b(0x11d)]=!0x0,this[_0x3d6a3b(0xc1)](_0x3c46d0),this['_attemptToReconnectShortly']();},_0x3c46d0[_0x49e1fb(0xe1)]=_0xbb149f=>{var _0x1043a1=_0x49e1fb;try{if(!(_0xbb149f!=null&&_0xbb149f[_0x1043a1(0x15b)])||!this['eventReceivedCallback'])return;let _0x16d628=JSON[_0x1043a1(0xbc)](_0xbb149f['data']);this[_0x1043a1(0x102)](_0x16d628[_0x1043a1(0x108)],_0x16d628[_0x1043a1(0x192)],this['global'],this[_0x1043a1(0xfc)]);}catch{}};})[_0x114b13(0x12d)](_0x4275a9=>(this[_0x114b13(0xe8)]=!0x0,this[_0x114b13(0x15e)]=!0x1,this['_allowedToConnectOnSend']=!0x1,this['_allowedToSend']=!0x0,this[_0x114b13(0xbb)]=0x0,_0x4275a9))[_0x114b13(0xf1)](_0x1e9032=>(this[_0x114b13(0xe8)]=!0x1,this[_0x114b13(0x15e)]=!0x1,console[_0x114b13(0x193)](_0x114b13(0xd6)+this[_0x114b13(0x14f)]),_0xda11ce(new Error('failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host:\\\\x20'+(_0x1e9032&&_0x1e9032['message'])))));}));}['_disposeWebsocket'](_0x1b9806){var _0x1a38b5=_0x56455d;this[_0x1a38b5(0xe8)]=!0x1,this[_0x1a38b5(0x15e)]=!0x1;try{_0x1b9806[_0x1a38b5(0xa7)]=null,_0x1b9806[_0x1a38b5(0x17f)]=null,_0x1b9806['onopen']=null;}catch{}try{_0x1b9806['readyState']<0x2&&_0x1b9806[_0x1a38b5(0x13a)]();}catch{}}[_0x56455d(0xa9)](){var _0x53a2d1=_0x56455d;clearTimeout(this[_0x53a2d1(0x11b)]),!(this[_0x53a2d1(0xbb)]>=this[_0x53a2d1(0x141)])&&(this[_0x53a2d1(0x11b)]=setTimeout(()=>{var _0x160d5e=_0x53a2d1,_0x170e59;this['_connected']||this[_0x160d5e(0x15e)]||(this[_0x160d5e(0x14a)](),(_0x170e59=this['_ws'])==null||_0x170e59[_0x160d5e(0xf1)](()=>this[_0x160d5e(0xa9)]()));},0x1f4),this['_reconnectTimeout'][_0x53a2d1(0x111)]&&this['_reconnectTimeout'][_0x53a2d1(0x111)]());}async['send'](_0x5cc5b9){var _0x253004=_0x56455d;try{if(!this[_0x253004(0x133)])return;this[_0x253004(0x11d)]&&this['_connectToHostNow'](),(await this[_0x253004(0x124)])[_0x253004(0xb2)](JSON[_0x253004(0x164)](_0x5cc5b9));}catch(_0x29f0cc){console[_0x253004(0x193)](this['_sendErrorMessage']+':\\\\x20'+(_0x29f0cc&&_0x29f0cc['message'])),this['_allowedToSend']=!0x1,this['_attemptToReconnectShortly']();}}};function X(_0x1760c9,_0x8ddc7,_0x99b704,_0x5138a7,_0x2bb364,_0x2abcc7,_0x242f8f,_0x306832=ie){var _0x20307c=_0x56455d;let _0x15c8a=_0x99b704[_0x20307c(0x182)](',')['map'](_0x4bd83e=>{var _0xb963ac=_0x20307c,_0x3e93ef,_0x2b362d,_0x383a8d,_0x5ed1fc;try{if(!_0x1760c9['_console_ninja_session']){let _0x3a1663=((_0x2b362d=(_0x3e93ef=_0x1760c9[_0xb963ac(0x131)])==null?void 0x0:_0x3e93ef[_0xb963ac(0x188)])==null?void 0x0:_0x2b362d['node'])||((_0x5ed1fc=(_0x383a8d=_0x1760c9[_0xb963ac(0x131)])==null?void 0x0:_0x383a8d[_0xb963ac(0x135)])==null?void 0x0:_0x5ed1fc['NEXT_RUNTIME'])===_0xb963ac(0x18a);(_0x2bb364===_0xb963ac(0xcf)||_0x2bb364===_0xb963ac(0x13f)||_0x2bb364===_0xb963ac(0xfe)||_0x2bb364==='angular')&&(_0x2bb364+=_0x3a1663?_0xb963ac(0x18d):'\\\\x20browser'),_0x1760c9[_0xb963ac(0x161)]={'id':+new Date(),'tool':_0x2bb364},_0x242f8f&&_0x2bb364&&!_0x3a1663&&console[_0xb963ac(0xef)](_0xb963ac(0xe4)+(_0x2bb364[_0xb963ac(0x171)](0x0)[_0xb963ac(0x132)]()+_0x2bb364['substr'](0x1))+',',_0xb963ac(0x127),_0xb963ac(0xc9));}let _0x40a2e9=new q(_0x1760c9,_0x8ddc7,_0x4bd83e,_0x5138a7,_0x2abcc7,_0x306832);return _0x40a2e9[_0xb963ac(0xb2)][_0xb963ac(0xfa)](_0x40a2e9);}catch(_0x29305b){return console[_0xb963ac(0x193)]('logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host',_0x29305b&&_0x29305b[_0xb963ac(0x150)]),()=>{};}});return _0x32962f=>_0x15c8a[_0x20307c(0xce)](_0x1797d6=>_0x1797d6(_0x32962f));}function _0x15f6(_0x4f06bd,_0x1c7797){var _0x55e4c6=_0x55e4();return _0x15f6=function(_0x15f67c,_0x50ee2d){_0x15f67c=_0x15f67c-0xa3;var _0x2b5291=_0x55e4c6[_0x15f67c];return _0x2b5291;},_0x15f6(_0x4f06bd,_0x1c7797);}function ie(_0x4638af,_0x5384ab,_0x21287b,_0x3d1ac9){var _0x886f8c=_0x56455d;_0x3d1ac9&&_0x4638af==='reload'&&_0x21287b[_0x886f8c(0x139)][_0x886f8c(0x142)]();}function b(_0xbf33c5){var _0x5d05dd=_0x56455d,_0x5f3db9,_0x1284e6;let _0x228a9a=function(_0x180bda,_0xe3d70c){return _0xe3d70c-_0x180bda;},_0x1d9a86;if(_0xbf33c5[_0x5d05dd(0x12c)])_0x1d9a86=function(){var _0x54e4d6=_0x5d05dd;return _0xbf33c5['performance'][_0x54e4d6(0xf9)]();};else{if(_0xbf33c5[_0x5d05dd(0x131)]&&_0xbf33c5['process']['hrtime']&&((_0x1284e6=(_0x5f3db9=_0xbf33c5[_0x5d05dd(0x131)])==null?void 0x0:_0x5f3db9[_0x5d05dd(0x135)])==null?void 0x0:_0x1284e6[_0x5d05dd(0x117)])!==_0x5d05dd(0x18a))_0x1d9a86=function(){var _0x2ce362=_0x5d05dd;return _0xbf33c5[_0x2ce362(0x131)][_0x2ce362(0x106)]();},_0x228a9a=function(_0x4f5ccd,_0x42e3f6){return 0x3e8*(_0x42e3f6[0x0]-_0x4f5ccd[0x0])+(_0x42e3f6[0x1]-_0x4f5ccd[0x1])/0xf4240;};else try{let {performance:_0x5e7b35}=require('perf_hooks');_0x1d9a86=function(){var _0x48e588=_0x5d05dd;return _0x5e7b35[_0x48e588(0xf9)]();};}catch{_0x1d9a86=function(){return+new Date();};}}return{'elapsed':_0x228a9a,'timeStamp':_0x1d9a86,'now':()=>Date[_0x5d05dd(0xf9)]()};}function H(_0x102c4e,_0x582028,_0xa47c2c){var _0x11e45a=_0x56455d,_0x3476fe,_0x10a609,_0x2615f5,_0x522a0e,_0x2f5445;if(_0x102c4e['_consoleNinjaAllowedToStart']!==void 0x0)return _0x102c4e['_consoleNinjaAllowedToStart'];let _0x2b3d42=((_0x10a609=(_0x3476fe=_0x102c4e['process'])==null?void 0x0:_0x3476fe[_0x11e45a(0x188)])==null?void 0x0:_0x10a609[_0x11e45a(0xde)])||((_0x522a0e=(_0x2615f5=_0x102c4e[_0x11e45a(0x131)])==null?void 0x0:_0x2615f5[_0x11e45a(0x135)])==null?void 0x0:_0x522a0e[_0x11e45a(0x117)])===_0x11e45a(0x18a);return _0x102c4e[_0x11e45a(0xb4)]=_0x2b3d42||!_0x582028||((_0x2f5445=_0x102c4e['location'])==null?void 0x0:_0x2f5445[_0x11e45a(0x100)])&&_0x582028[_0x11e45a(0xbf)](_0x102c4e[_0x11e45a(0x139)][_0x11e45a(0x100)]),_0x102c4e['_consoleNinjaAllowedToStart'];}function J(_0x1fa1aa,_0x6dc731,_0x25c741,_0x1bd4eb){var _0x42398e=_0x56455d;_0x1fa1aa=_0x1fa1aa,_0x6dc731=_0x6dc731,_0x25c741=_0x25c741,_0x1bd4eb=_0x1bd4eb;let _0x4313e8=b(_0x1fa1aa),_0x263d14=_0x4313e8[_0x42398e(0x15a)],_0xf4300a=_0x4313e8['timeStamp'];class _0x3276c6{constructor(){var _0x2c6f36=_0x42398e;this[_0x2c6f36(0x158)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*$/,this['_numberRegExp']=/^(0|[1-9][0-9]*)$/,this[_0x2c6f36(0x114)]=/'([^\\\\\\\\']|\\\\\\\\')*'/,this['_undefined']=_0x1fa1aa[_0x2c6f36(0x14b)],this['_HTMLAllCollection']=_0x1fa1aa['HTMLAllCollection'],this[_0x2c6f36(0x128)]=Object[_0x2c6f36(0x149)],this[_0x2c6f36(0x10c)]=Object[_0x2c6f36(0x163)],this[_0x2c6f36(0x10d)]=_0x1fa1aa[_0x2c6f36(0x189)],this['_regExpToString']=RegExp[_0x2c6f36(0x137)]['toString'],this[_0x2c6f36(0x18e)]=Date[_0x2c6f36(0x137)][_0x2c6f36(0xb9)];}[_0x42398e(0x14c)](_0x5d90c9,_0x308297,_0x411609,_0x579c7a){var _0x205963=_0x42398e,_0xe133e2=this,_0x35ca46=_0x411609['autoExpand'];function _0x12f101(_0x354f62,_0x1779dc,_0x3a776a){var _0x366cc6=_0x15f6;_0x1779dc['type']=_0x366cc6(0xdd),_0x1779dc[_0x366cc6(0xaf)]=_0x354f62['message'],_0x1a09e4=_0x3a776a['node']['current'],_0x3a776a[_0x366cc6(0xde)][_0x366cc6(0xf2)]=_0x1779dc,_0xe133e2[_0x366cc6(0xc3)](_0x1779dc,_0x3a776a);}try{_0x411609['level']++,_0x411609[_0x205963(0xff)]&&_0x411609['autoExpandPreviousObjects'][_0x205963(0xf5)](_0x308297);var _0x14b923,_0x2ee2ed,_0x2bd83d,_0x7bdae1,_0x2a25c4=[],_0x197a09=[],_0xf0e29a,_0x5ddd19=this[_0x205963(0x191)](_0x308297),_0x3c5deb=_0x5ddd19===_0x205963(0x14d),_0x41db87=!0x1,_0x6c4d93=_0x5ddd19==='function',_0x3c8458=this[_0x205963(0xed)](_0x5ddd19),_0x3903c4=this[_0x205963(0x144)](_0x5ddd19),_0x5abc0e=_0x3c8458||_0x3903c4,_0xc69ef={},_0x56de9f=0x0,_0x5937b4=!0x1,_0x1a09e4,_0x357bdd=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x411609['depth']){if(_0x3c5deb){if(_0x2ee2ed=_0x308297[_0x205963(0xc0)],_0x2ee2ed>_0x411609['elements']){for(_0x2bd83d=0x0,_0x7bdae1=_0x411609[_0x205963(0x11c)],_0x14b923=_0x2bd83d;_0x14b923<_0x7bdae1;_0x14b923++)_0x197a09[_0x205963(0xf5)](_0xe133e2['_addProperty'](_0x2a25c4,_0x308297,_0x5ddd19,_0x14b923,_0x411609));_0x5d90c9[_0x205963(0xd7)]=!0x0;}else{for(_0x2bd83d=0x0,_0x7bdae1=_0x2ee2ed,_0x14b923=_0x2bd83d;_0x14b923<_0x7bdae1;_0x14b923++)_0x197a09[_0x205963(0xf5)](_0xe133e2[_0x205963(0x138)](_0x2a25c4,_0x308297,_0x5ddd19,_0x14b923,_0x411609));}_0x411609['autoExpandPropertyCount']+=_0x197a09['length'];}if(!(_0x5ddd19===_0x205963(0x186)||_0x5ddd19===_0x205963(0x14b))&&!_0x3c8458&&_0x5ddd19!==_0x205963(0x10b)&&_0x5ddd19!==_0x205963(0x107)&&_0x5ddd19!==_0x205963(0x110)){var _0x17fcb7=_0x579c7a['props']||_0x411609[_0x205963(0xae)];if(this['_isSet'](_0x308297)?(_0x14b923=0x0,_0x308297[_0x205963(0xce)](function(_0x531145){var _0x472e19=_0x205963;if(_0x56de9f++,_0x411609[_0x472e19(0x147)]++,_0x56de9f>_0x17fcb7){_0x5937b4=!0x0;return;}if(!_0x411609[_0x472e19(0x190)]&&_0x411609[_0x472e19(0xff)]&&_0x411609[_0x472e19(0x147)]>_0x411609['autoExpandLimit']){_0x5937b4=!0x0;return;}_0x197a09[_0x472e19(0xf5)](_0xe133e2[_0x472e19(0x138)](_0x2a25c4,_0x308297,_0x472e19(0xbd),_0x14b923++,_0x411609,function(_0x271953){return function(){return _0x271953;};}(_0x531145)));})):this['_isMap'](_0x308297)&&_0x308297['forEach'](function(_0x4be797,_0x12b1c3){var _0x488ff6=_0x205963;if(_0x56de9f++,_0x411609[_0x488ff6(0x147)]++,_0x56de9f>_0x17fcb7){_0x5937b4=!0x0;return;}if(!_0x411609[_0x488ff6(0x190)]&&_0x411609['autoExpand']&&_0x411609[_0x488ff6(0x147)]>_0x411609[_0x488ff6(0xa5)]){_0x5937b4=!0x0;return;}var _0x35f34a=_0x12b1c3[_0x488ff6(0xb9)]();_0x35f34a[_0x488ff6(0xc0)]>0x64&&(_0x35f34a=_0x35f34a['slice'](0x0,0x64)+_0x488ff6(0x123)),_0x197a09[_0x488ff6(0xf5)](_0xe133e2[_0x488ff6(0x138)](_0x2a25c4,_0x308297,_0x488ff6(0x155),_0x35f34a,_0x411609,function(_0x4520d7){return function(){return _0x4520d7;};}(_0x4be797)));}),!_0x41db87){try{for(_0xf0e29a in _0x308297)if(!(_0x3c5deb&&_0x357bdd[_0x205963(0x18b)](_0xf0e29a))&&!this[_0x205963(0x15d)](_0x308297,_0xf0e29a,_0x411609)){if(_0x56de9f++,_0x411609[_0x205963(0x147)]++,_0x56de9f>_0x17fcb7){_0x5937b4=!0x0;break;}if(!_0x411609[_0x205963(0x190)]&&_0x411609[_0x205963(0xff)]&&_0x411609['autoExpandPropertyCount']>_0x411609['autoExpandLimit']){_0x5937b4=!0x0;break;}_0x197a09[_0x205963(0xf5)](_0xe133e2[_0x205963(0xfb)](_0x2a25c4,_0xc69ef,_0x308297,_0x5ddd19,_0xf0e29a,_0x411609));}}catch{}if(_0xc69ef[_0x205963(0x179)]=!0x0,_0x6c4d93&&(_0xc69ef[_0x205963(0x159)]=!0x0),!_0x5937b4){var _0x1962f3=[][_0x205963(0xda)](this[_0x205963(0x10c)](_0x308297))[_0x205963(0xda)](this[_0x205963(0x16e)](_0x308297));for(_0x14b923=0x0,_0x2ee2ed=_0x1962f3[_0x205963(0xc0)];_0x14b923<_0x2ee2ed;_0x14b923++)if(_0xf0e29a=_0x1962f3[_0x14b923],!(_0x3c5deb&&_0x357bdd[_0x205963(0x18b)](_0xf0e29a[_0x205963(0xb9)]()))&&!this[_0x205963(0x15d)](_0x308297,_0xf0e29a,_0x411609)&&!_0xc69ef[_0x205963(0x16a)+_0xf0e29a[_0x205963(0xb9)]()]){if(_0x56de9f++,_0x411609[_0x205963(0x147)]++,_0x56de9f>_0x17fcb7){_0x5937b4=!0x0;break;}if(!_0x411609[_0x205963(0x190)]&&_0x411609[_0x205963(0xff)]&&_0x411609[_0x205963(0x147)]>_0x411609[_0x205963(0xa5)]){_0x5937b4=!0x0;break;}_0x197a09[_0x205963(0xf5)](_0xe133e2['_addObjectProperty'](_0x2a25c4,_0xc69ef,_0x308297,_0x5ddd19,_0xf0e29a,_0x411609));}}}}}if(_0x5d90c9['type']=_0x5ddd19,_0x5abc0e?(_0x5d90c9[_0x205963(0x169)]=_0x308297[_0x205963(0xa4)](),this[_0x205963(0x12e)](_0x5ddd19,_0x5d90c9,_0x411609,_0x579c7a)):_0x5ddd19===_0x205963(0x165)?_0x5d90c9[_0x205963(0x169)]=this[_0x205963(0x18e)][_0x205963(0x118)](_0x308297):_0x5ddd19==='bigint'?_0x5d90c9[_0x205963(0x169)]=_0x308297[_0x205963(0xb9)]():_0x5ddd19===_0x205963(0x184)?_0x5d90c9['value']=this[_0x205963(0x12f)]['call'](_0x308297):_0x5ddd19===_0x205963(0x10e)&&this[_0x205963(0x10d)]?_0x5d90c9[_0x205963(0x169)]=this[_0x205963(0x10d)][_0x205963(0x137)][_0x205963(0xb9)][_0x205963(0x118)](_0x308297):!_0x411609[_0x205963(0x173)]&&!(_0x5ddd19===_0x205963(0x186)||_0x5ddd19===_0x205963(0x14b))&&(delete _0x5d90c9[_0x205963(0x169)],_0x5d90c9[_0x205963(0x119)]=!0x0),_0x5937b4&&(_0x5d90c9[_0x205963(0x136)]=!0x0),_0x1a09e4=_0x411609[_0x205963(0xde)]['current'],_0x411609['node'][_0x205963(0xf2)]=_0x5d90c9,this[_0x205963(0xc3)](_0x5d90c9,_0x411609),_0x197a09[_0x205963(0xc0)]){for(_0x14b923=0x0,_0x2ee2ed=_0x197a09['length'];_0x14b923<_0x2ee2ed;_0x14b923++)_0x197a09[_0x14b923](_0x14b923);}_0x2a25c4[_0x205963(0xc0)]&&(_0x5d90c9['props']=_0x2a25c4);}catch(_0x1bc397){_0x12f101(_0x1bc397,_0x5d90c9,_0x411609);}return this['_additionalMetadata'](_0x308297,_0x5d90c9),this[_0x205963(0xea)](_0x5d90c9,_0x411609),_0x411609[_0x205963(0xde)]['current']=_0x1a09e4,_0x411609[_0x205963(0x11a)]--,_0x411609[_0x205963(0xff)]=_0x35ca46,_0x411609[_0x205963(0xff)]&&_0x411609[_0x205963(0xe5)][_0x205963(0xdc)](),_0x5d90c9;}['_getOwnPropertySymbols'](_0x3ccb7a){var _0x1467de=_0x42398e;return Object['getOwnPropertySymbols']?Object[_0x1467de(0x12b)](_0x3ccb7a):[];}[_0x42398e(0x121)](_0x93ab1a){var _0x4263a4=_0x42398e;return!!(_0x93ab1a&&_0x1fa1aa[_0x4263a4(0xbd)]&&this[_0x4263a4(0x194)](_0x93ab1a)==='[object\\\\x20Set]'&&_0x93ab1a[_0x4263a4(0xce)]);}[_0x42398e(0x15d)](_0x132306,_0x3fde98,_0x48c6a8){var _0x4e36b8=_0x42398e;return _0x48c6a8[_0x4e36b8(0xb7)]?typeof _0x132306[_0x3fde98]==_0x4e36b8(0x16b):!0x1;}[_0x42398e(0x191)](_0x3f193a){var _0x1bf1db=_0x42398e,_0x1f4dd6='';return _0x1f4dd6=typeof _0x3f193a,_0x1f4dd6===_0x1bf1db(0xab)?this[_0x1bf1db(0x194)](_0x3f193a)===_0x1bf1db(0xd0)?_0x1f4dd6='array':this[_0x1bf1db(0x194)](_0x3f193a)===_0x1bf1db(0xca)?_0x1f4dd6=_0x1bf1db(0x165):this[_0x1bf1db(0x194)](_0x3f193a)==='[object\\\\x20BigInt]'?_0x1f4dd6='bigint':_0x3f193a===null?_0x1f4dd6=_0x1bf1db(0x186):_0x3f193a[_0x1bf1db(0xcd)]&&(_0x1f4dd6=_0x3f193a[_0x1bf1db(0xcd)][_0x1bf1db(0xb3)]||_0x1f4dd6):_0x1f4dd6===_0x1bf1db(0x14b)&&this[_0x1bf1db(0x18c)]&&_0x3f193a instanceof this['_HTMLAllCollection']&&(_0x1f4dd6='HTMLAllCollection'),_0x1f4dd6;}[_0x42398e(0x194)](_0xd9808c){var _0x13ee55=_0x42398e;return Object[_0x13ee55(0x137)][_0x13ee55(0xb9)][_0x13ee55(0x118)](_0xd9808c);}[_0x42398e(0xed)](_0x5bb6d5){var _0x162f9d=_0x42398e;return _0x5bb6d5==='boolean'||_0x5bb6d5===_0x162f9d(0xeb)||_0x5bb6d5===_0x162f9d(0x18f);}['_isPrimitiveWrapperType'](_0x2e4fa2){var _0x418b45=_0x42398e;return _0x2e4fa2===_0x418b45(0x17a)||_0x2e4fa2==='String'||_0x2e4fa2===_0x418b45(0xe9);}[_0x42398e(0x138)](_0x315538,_0x53e1e3,_0x26a7ae,_0x2a9896,_0x36a47d,_0x5aeaf9){var _0x517c9f=this;return function(_0x54b11f){var _0x32f6fa=_0x15f6,_0x55a1ba=_0x36a47d[_0x32f6fa(0xde)][_0x32f6fa(0xf2)],_0xae7a51=_0x36a47d[_0x32f6fa(0xde)]['index'],_0x5cfc73=_0x36a47d[_0x32f6fa(0xde)][_0x32f6fa(0x181)];_0x36a47d[_0x32f6fa(0xde)]['parent']=_0x55a1ba,_0x36a47d[_0x32f6fa(0xde)][_0x32f6fa(0x168)]=typeof _0x2a9896==_0x32f6fa(0x18f)?_0x2a9896:_0x54b11f,_0x315538['push'](_0x517c9f[_0x32f6fa(0xd1)](_0x53e1e3,_0x26a7ae,_0x2a9896,_0x36a47d,_0x5aeaf9)),_0x36a47d[_0x32f6fa(0xde)]['parent']=_0x5cfc73,_0x36a47d[_0x32f6fa(0xde)][_0x32f6fa(0x168)]=_0xae7a51;};}[_0x42398e(0xfb)](_0x102540,_0x28b951,_0x37b0d2,_0x1f43da,_0x4c16b9,_0x43a32c,_0x33fd6d){var _0x848e81=this;return _0x28b951['_p_'+_0x4c16b9['toString']()]=!0x0,function(_0x5d0f41){var _0x3446a1=_0x15f6,_0x37915c=_0x43a32c[_0x3446a1(0xde)][_0x3446a1(0xf2)],_0x491f6f=_0x43a32c[_0x3446a1(0xde)][_0x3446a1(0x168)],_0x49f445=_0x43a32c[_0x3446a1(0xde)][_0x3446a1(0x181)];_0x43a32c[_0x3446a1(0xde)]['parent']=_0x37915c,_0x43a32c[_0x3446a1(0xde)][_0x3446a1(0x168)]=_0x5d0f41,_0x102540[_0x3446a1(0xf5)](_0x848e81[_0x3446a1(0xd1)](_0x37b0d2,_0x1f43da,_0x4c16b9,_0x43a32c,_0x33fd6d)),_0x43a32c[_0x3446a1(0xde)][_0x3446a1(0x181)]=_0x49f445,_0x43a32c['node'][_0x3446a1(0x168)]=_0x491f6f;};}[_0x42398e(0xd1)](_0x3ecc34,_0x164e9b,_0x5853f4,_0x5021cc,_0x29aa4f){var _0x1c8cca=_0x42398e,_0x4bcb30=this;_0x29aa4f||(_0x29aa4f=function(_0x40face,_0x52de5c){return _0x40face[_0x52de5c];});var _0x15dc6a=_0x5853f4[_0x1c8cca(0xb9)](),_0x43cf2f=_0x5021cc[_0x1c8cca(0xd2)]||{},_0x288c5d=_0x5021cc[_0x1c8cca(0x173)],_0x3aa860=_0x5021cc['isExpressionToEvaluate'];try{var _0x4ddca7=this[_0x1c8cca(0xe6)](_0x3ecc34),_0x57d48d=_0x15dc6a;_0x4ddca7&&_0x57d48d[0x0]==='\\\\x27'&&(_0x57d48d=_0x57d48d[_0x1c8cca(0x170)](0x1,_0x57d48d[_0x1c8cca(0xc0)]-0x2));var _0x34aa5d=_0x5021cc[_0x1c8cca(0xd2)]=_0x43cf2f[_0x1c8cca(0x16a)+_0x57d48d];_0x34aa5d&&(_0x5021cc[_0x1c8cca(0x173)]=_0x5021cc['depth']+0x1),_0x5021cc[_0x1c8cca(0x190)]=!!_0x34aa5d;var _0x57e6e5=typeof _0x5853f4=='symbol',_0x320fd2={'name':_0x57e6e5||_0x4ddca7?_0x15dc6a:this[_0x1c8cca(0xdb)](_0x15dc6a)};if(_0x57e6e5&&(_0x320fd2[_0x1c8cca(0x10e)]=!0x0),!(_0x164e9b===_0x1c8cca(0x14d)||_0x164e9b==='Error')){var _0x452736=this['_getOwnPropertyDescriptor'](_0x3ecc34,_0x5853f4);if(_0x452736&&(_0x452736[_0x1c8cca(0x180)]&&(_0x320fd2[_0x1c8cca(0x151)]=!0x0),_0x452736[_0x1c8cca(0x129)]&&!_0x34aa5d&&!_0x5021cc[_0x1c8cca(0x176)]))return _0x320fd2[_0x1c8cca(0x130)]=!0x0,this['_processTreeNodeResult'](_0x320fd2,_0x5021cc),_0x320fd2;}var _0x29a3a2;try{_0x29a3a2=_0x29aa4f(_0x3ecc34,_0x5853f4);}catch(_0x323a9e){return _0x320fd2={'name':_0x15dc6a,'type':_0x1c8cca(0xdd),'error':_0x323a9e[_0x1c8cca(0x150)]},this['_processTreeNodeResult'](_0x320fd2,_0x5021cc),_0x320fd2;}var _0x331d64=this[_0x1c8cca(0x191)](_0x29a3a2),_0x4c472a=this[_0x1c8cca(0xed)](_0x331d64);if(_0x320fd2[_0x1c8cca(0x16c)]=_0x331d64,_0x4c472a)this[_0x1c8cca(0x10a)](_0x320fd2,_0x5021cc,_0x29a3a2,function(){var _0x1e62ef=_0x1c8cca;_0x320fd2[_0x1e62ef(0x169)]=_0x29a3a2[_0x1e62ef(0xa4)](),!_0x34aa5d&&_0x4bcb30[_0x1e62ef(0x12e)](_0x331d64,_0x320fd2,_0x5021cc,{});});else{var _0x3ef656=_0x5021cc[_0x1c8cca(0xff)]&&_0x5021cc[_0x1c8cca(0x11a)]<_0x5021cc[_0x1c8cca(0x112)]&&_0x5021cc[_0x1c8cca(0xe5)]['indexOf'](_0x29a3a2)<0x0&&_0x331d64!=='function'&&_0x5021cc[_0x1c8cca(0x147)]<_0x5021cc[_0x1c8cca(0xa5)];_0x3ef656||_0x5021cc[_0x1c8cca(0x11a)]<_0x288c5d||_0x34aa5d?(this[_0x1c8cca(0x14c)](_0x320fd2,_0x29a3a2,_0x5021cc,_0x34aa5d||{}),this['_additionalMetadata'](_0x29a3a2,_0x320fd2)):this[_0x1c8cca(0x10a)](_0x320fd2,_0x5021cc,_0x29a3a2,function(){var _0x360af2=_0x1c8cca;_0x331d64===_0x360af2(0x186)||_0x331d64===_0x360af2(0x14b)||(delete _0x320fd2[_0x360af2(0x169)],_0x320fd2[_0x360af2(0x119)]=!0x0);});}return _0x320fd2;}finally{_0x5021cc['expressionsToEvaluate']=_0x43cf2f,_0x5021cc['depth']=_0x288c5d,_0x5021cc[_0x1c8cca(0x190)]=_0x3aa860;}}[_0x42398e(0x12e)](_0x4dbd9c,_0x22ef58,_0x2e67fe,_0x59e98f){var _0x3bf59c=_0x42398e,_0x5cdbf3=_0x59e98f['strLength']||_0x2e67fe[_0x3bf59c(0x195)];if((_0x4dbd9c==='string'||_0x4dbd9c===_0x3bf59c(0x10b))&&_0x22ef58['value']){let _0x4facd7=_0x22ef58[_0x3bf59c(0x169)][_0x3bf59c(0xc0)];_0x2e67fe[_0x3bf59c(0x10f)]+=_0x4facd7,_0x2e67fe['allStrLength']>_0x2e67fe['totalStrLength']?(_0x22ef58[_0x3bf59c(0x119)]='',delete _0x22ef58[_0x3bf59c(0x169)]):_0x4facd7>_0x5cdbf3&&(_0x22ef58['capped']=_0x22ef58[_0x3bf59c(0x169)]['substr'](0x0,_0x5cdbf3),delete _0x22ef58['value']);}}[_0x42398e(0xe6)](_0x39c338){var _0x5b0ed6=_0x42398e;return!!(_0x39c338&&_0x1fa1aa[_0x5b0ed6(0x155)]&&this[_0x5b0ed6(0x194)](_0x39c338)===_0x5b0ed6(0x126)&&_0x39c338[_0x5b0ed6(0xce)]);}[_0x42398e(0xdb)](_0x379fc7){var _0x541cc9=_0x42398e;if(_0x379fc7[_0x541cc9(0xf7)](/^\\\\d+$/))return _0x379fc7;var _0x3040b9;try{_0x3040b9=JSON[_0x541cc9(0x164)](''+_0x379fc7);}catch{_0x3040b9='\\\\x22'+this[_0x541cc9(0x194)](_0x379fc7)+'\\\\x22';}return _0x3040b9[_0x541cc9(0xf7)](/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)?_0x3040b9=_0x3040b9[_0x541cc9(0x170)](0x1,_0x3040b9['length']-0x2):_0x3040b9=_0x3040b9[_0x541cc9(0x172)](/'/g,'\\\\x5c\\\\x27')[_0x541cc9(0x172)](/\\\\\\\\\\\"/g,'\\\\x22')[_0x541cc9(0x172)](/(^\\\"|\\\"$)/g,'\\\\x27'),_0x3040b9;}[_0x42398e(0x10a)](_0x4602a3,_0x2102be,_0x32ea79,_0x1ef98f){var _0x257f96=_0x42398e;this[_0x257f96(0xc3)](_0x4602a3,_0x2102be),_0x1ef98f&&_0x1ef98f(),this[_0x257f96(0xe3)](_0x32ea79,_0x4602a3),this[_0x257f96(0xea)](_0x4602a3,_0x2102be);}[_0x42398e(0xc3)](_0xcb63a4,_0x4f5d89){var _0x229660=_0x42398e;this[_0x229660(0x17b)](_0xcb63a4,_0x4f5d89),this['_setNodeQueryPath'](_0xcb63a4,_0x4f5d89),this[_0x229660(0x166)](_0xcb63a4,_0x4f5d89),this[_0x229660(0x103)](_0xcb63a4,_0x4f5d89);}[_0x42398e(0x17b)](_0x163355,_0x565bf5){}[_0x42398e(0x174)](_0x1a6919,_0x600e3a){}[_0x42398e(0xa6)](_0x3564f5,_0xa86bc4){}[_0x42398e(0x11f)](_0x3eb71a){var _0x40e6e7=_0x42398e;return _0x3eb71a===this[_0x40e6e7(0x185)];}[_0x42398e(0xea)](_0xadd117,_0xcbad20){var _0x444e60=_0x42398e;this['_setNodeLabel'](_0xadd117,_0xcbad20),this[_0x444e60(0x115)](_0xadd117),_0xcbad20[_0x444e60(0xdf)]&&this[_0x444e60(0xac)](_0xadd117),this[_0x444e60(0xf0)](_0xadd117,_0xcbad20),this[_0x444e60(0x177)](_0xadd117,_0xcbad20),this[_0x444e60(0xee)](_0xadd117);}[_0x42398e(0xe3)](_0x3d23ae,_0x113eec){var _0x1810ad=_0x42398e;let _0x1746da;try{_0x1fa1aa[_0x1810ad(0x109)]&&(_0x1746da=_0x1fa1aa[_0x1810ad(0x109)][_0x1810ad(0xaf)],_0x1fa1aa['console']['error']=function(){}),_0x3d23ae&&typeof _0x3d23ae[_0x1810ad(0xc0)]=='number'&&(_0x113eec['length']=_0x3d23ae[_0x1810ad(0xc0)]);}catch{}finally{_0x1746da&&(_0x1fa1aa[_0x1810ad(0x109)][_0x1810ad(0xaf)]=_0x1746da);}if(_0x113eec[_0x1810ad(0x16c)]===_0x1810ad(0x18f)||_0x113eec['type']===_0x1810ad(0xe9)){if(isNaN(_0x113eec[_0x1810ad(0x169)]))_0x113eec[_0x1810ad(0xd3)]=!0x0,delete _0x113eec[_0x1810ad(0x169)];else switch(_0x113eec[_0x1810ad(0x169)]){case Number[_0x1810ad(0xbe)]:_0x113eec['positiveInfinity']=!0x0,delete _0x113eec[_0x1810ad(0x169)];break;case Number[_0x1810ad(0x105)]:_0x113eec[_0x1810ad(0x17e)]=!0x0,delete _0x113eec[_0x1810ad(0x169)];break;case 0x0:this[_0x1810ad(0xc6)](_0x113eec['value'])&&(_0x113eec['negativeZero']=!0x0);break;}}else _0x113eec[_0x1810ad(0x16c)]==='function'&&typeof _0x3d23ae[_0x1810ad(0xb3)]==_0x1810ad(0xeb)&&_0x3d23ae[_0x1810ad(0xb3)]&&_0x113eec[_0x1810ad(0xb3)]&&_0x3d23ae[_0x1810ad(0xb3)]!==_0x113eec[_0x1810ad(0xb3)]&&(_0x113eec[_0x1810ad(0xe2)]=_0x3d23ae[_0x1810ad(0xb3)]);}['_isNegativeZero'](_0x4be0a5){return 0x1/_0x4be0a5===Number['NEGATIVE_INFINITY'];}[_0x42398e(0xac)](_0x2afc6f){var _0x218be8=_0x42398e;!_0x2afc6f[_0x218be8(0xae)]||!_0x2afc6f['props'][_0x218be8(0xc0)]||_0x2afc6f[_0x218be8(0x16c)]==='array'||_0x2afc6f['type']===_0x218be8(0x155)||_0x2afc6f[_0x218be8(0x16c)]===_0x218be8(0xbd)||_0x2afc6f[_0x218be8(0xae)][_0x218be8(0x154)](function(_0x270618,_0x56ff62){var _0x6c3871=_0x218be8,_0x346599=_0x270618['name']['toLowerCase'](),_0x308534=_0x56ff62[_0x6c3871(0xb3)][_0x6c3871(0xb8)]();return _0x346599<_0x308534?-0x1:_0x346599>_0x308534?0x1:0x0;});}[_0x42398e(0xf0)](_0x4817a0,_0x511b51){var _0x73c91a=_0x42398e;if(!(_0x511b51[_0x73c91a(0xb7)]||!_0x4817a0[_0x73c91a(0xae)]||!_0x4817a0[_0x73c91a(0xae)][_0x73c91a(0xc0)])){for(var _0x579f3a=[],_0x216629=[],_0x483a70=0x0,_0x1077d2=_0x4817a0['props'][_0x73c91a(0xc0)];_0x483a70<_0x1077d2;_0x483a70++){var _0x5aafce=_0x4817a0['props'][_0x483a70];_0x5aafce['type']==='function'?_0x579f3a[_0x73c91a(0xf5)](_0x5aafce):_0x216629[_0x73c91a(0xf5)](_0x5aafce);}if(!(!_0x216629[_0x73c91a(0xc0)]||_0x579f3a['length']<=0x1)){_0x4817a0[_0x73c91a(0xae)]=_0x216629;var _0x56a001={'functionsNode':!0x0,'props':_0x579f3a};this[_0x73c91a(0x17b)](_0x56a001,_0x511b51),this[_0x73c91a(0xa6)](_0x56a001,_0x511b51),this['_setNodeExpandableState'](_0x56a001),this[_0x73c91a(0x103)](_0x56a001,_0x511b51),_0x56a001['id']+='\\\\x20f',_0x4817a0[_0x73c91a(0xae)][_0x73c91a(0x146)](_0x56a001);}}}[_0x42398e(0x177)](_0x52ec54,_0x1b03c8){}[_0x42398e(0x115)](_0x373f4b){}[_0x42398e(0x120)](_0x494ae3){var _0x21dd10=_0x42398e;return Array[_0x21dd10(0x152)](_0x494ae3)||typeof _0x494ae3==_0x21dd10(0xab)&&this['_objectToString'](_0x494ae3)===_0x21dd10(0xd0);}[_0x42398e(0x103)](_0x40053e,_0x5ed3d6){}['_cleanNode'](_0x3a1b5c){var _0x2f9dd2=_0x42398e;delete _0x3a1b5c[_0x2f9dd2(0x13d)],delete _0x3a1b5c[_0x2f9dd2(0x148)],delete _0x3a1b5c['_hasMapOnItsPath'];}[_0x42398e(0x166)](_0x798f23,_0x3efada){}}let _0x4c7a63=new _0x3276c6(),_0x19cf1b={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x3b151c={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x463c5b(_0xbd2986,_0x160277,_0x57abd3,_0x133479,_0x2a9121,_0x49d7af){var _0x20fba2=_0x42398e;let _0x7e007b,_0xafcbf9;try{_0xafcbf9=_0xf4300a(),_0x7e007b=_0x25c741[_0x160277],!_0x7e007b||_0xafcbf9-_0x7e007b['ts']>0x1f4&&_0x7e007b['count']&&_0x7e007b['time']/_0x7e007b['count']<0x64?(_0x25c741[_0x160277]=_0x7e007b={'count':0x0,'time':0x0,'ts':_0xafcbf9},_0x25c741[_0x20fba2(0x178)]={}):_0xafcbf9-_0x25c741['hits']['ts']>0x32&&_0x25c741[_0x20fba2(0x178)][_0x20fba2(0xad)]&&_0x25c741[_0x20fba2(0x178)][_0x20fba2(0x17d)]/_0x25c741[_0x20fba2(0x178)][_0x20fba2(0xad)]<0x64&&(_0x25c741[_0x20fba2(0x178)]={});let _0x1a0767=[],_0x301137=_0x7e007b[_0x20fba2(0xe0)]||_0x25c741[_0x20fba2(0x178)][_0x20fba2(0xe0)]?_0x3b151c:_0x19cf1b,_0xabddb=_0x129e7e=>{var _0x1e8e78=_0x20fba2;let _0x4eae92={};return _0x4eae92[_0x1e8e78(0xae)]=_0x129e7e[_0x1e8e78(0xae)],_0x4eae92[_0x1e8e78(0x11c)]=_0x129e7e[_0x1e8e78(0x11c)],_0x4eae92[_0x1e8e78(0x195)]=_0x129e7e[_0x1e8e78(0x195)],_0x4eae92['totalStrLength']=_0x129e7e['totalStrLength'],_0x4eae92[_0x1e8e78(0xa5)]=_0x129e7e[_0x1e8e78(0xa5)],_0x4eae92[_0x1e8e78(0x112)]=_0x129e7e[_0x1e8e78(0x112)],_0x4eae92[_0x1e8e78(0xdf)]=!0x1,_0x4eae92[_0x1e8e78(0xb7)]=!_0x6dc731,_0x4eae92[_0x1e8e78(0x173)]=0x1,_0x4eae92[_0x1e8e78(0x11a)]=0x0,_0x4eae92[_0x1e8e78(0x11e)]=_0x1e8e78(0x104),_0x4eae92['rootExpression']=_0x1e8e78(0x15f),_0x4eae92[_0x1e8e78(0xff)]=!0x0,_0x4eae92['autoExpandPreviousObjects']=[],_0x4eae92[_0x1e8e78(0x147)]=0x0,_0x4eae92[_0x1e8e78(0x176)]=!0x0,_0x4eae92[_0x1e8e78(0x10f)]=0x0,_0x4eae92[_0x1e8e78(0xde)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x4eae92;};for(var _0x2077f5=0x0;_0x2077f5<_0x2a9121[_0x20fba2(0xc0)];_0x2077f5++)_0x1a0767[_0x20fba2(0xf5)](_0x4c7a63[_0x20fba2(0x14c)]({'timeNode':_0xbd2986===_0x20fba2(0x17d)||void 0x0},_0x2a9121[_0x2077f5],_0xabddb(_0x301137),{}));if(_0xbd2986==='trace'){let _0x2cfcd4=Error[_0x20fba2(0xc2)];try{Error[_0x20fba2(0xc2)]=0x1/0x0,_0x1a0767[_0x20fba2(0xf5)](_0x4c7a63['serialize']({'stackNode':!0x0},new Error()[_0x20fba2(0xec)],_0xabddb(_0x301137),{'strLength':0x1/0x0}));}finally{Error['stackTraceLimit']=_0x2cfcd4;}}return{'method':_0x20fba2(0xef),'version':_0x1bd4eb,'args':[{'ts':_0x57abd3,'session':_0x133479,'args':_0x1a0767,'id':_0x160277,'context':_0x49d7af}]};}catch(_0x178591){return{'method':'log','version':_0x1bd4eb,'args':[{'ts':_0x57abd3,'session':_0x133479,'args':[{'type':_0x20fba2(0xdd),'error':_0x178591&&_0x178591['message']}],'id':_0x160277,'context':_0x49d7af}]};}finally{try{if(_0x7e007b&&_0xafcbf9){let _0x4a34f4=_0xf4300a();_0x7e007b[_0x20fba2(0xad)]++,_0x7e007b[_0x20fba2(0x17d)]+=_0x263d14(_0xafcbf9,_0x4a34f4),_0x7e007b['ts']=_0x4a34f4,_0x25c741[_0x20fba2(0x178)][_0x20fba2(0xad)]++,_0x25c741[_0x20fba2(0x178)][_0x20fba2(0x17d)]+=_0x263d14(_0xafcbf9,_0x4a34f4),_0x25c741[_0x20fba2(0x178)]['ts']=_0x4a34f4,(_0x7e007b[_0x20fba2(0xad)]>0x32||_0x7e007b[_0x20fba2(0x17d)]>0x64)&&(_0x7e007b[_0x20fba2(0xe0)]=!0x0),(_0x25c741[_0x20fba2(0x178)]['count']>0x3e8||_0x25c741[_0x20fba2(0x178)][_0x20fba2(0x17d)]>0x12c)&&(_0x25c741[_0x20fba2(0x178)][_0x20fba2(0xe0)]=!0x0);}}catch{}}}return _0x463c5b;}function _0x55e4(){var _0x3749cd=['_getOwnPropertyDescriptor','get','global','getOwnPropertySymbols','performance','then','_capIfString','_regExpToString','getter','process','toUpperCase','_allowedToSend','path','env','cappedProps','prototype','_addProperty','location','close','2VuKCBo','gateway.docker.internal','_hasSymbolPropertyOnItsPath','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20refreshing\\\\x20the\\\\x20page\\\\x20may\\\\x20help;\\\\x20also\\\\x20see\\\\x20','remix','port','_maxConnectAttemptCount','reload','failed\\\\x20to\\\\x20find\\\\x20and\\\\x20load\\\\x20WebSocket','_isPrimitiveWrapperType','_socket','unshift','autoExpandPropertyCount','_hasSetOnItsPath','getOwnPropertyDescriptor','_connectToHostNow','undefined','serialize','array','logger\\\\x20websocket\\\\x20error','_webSocketErrorDocsLink','message','setter','isArray','ws/index.js','sort','Map','18LRgzAM','','_keyStrRegExp','_p_name','elapsed','data','origin','_blacklistedProperty','_connecting','root_exp','defineProperty','_console_ninja_session','https://tinyurl.com/37x8b79t','getOwnPropertyNames','stringify','date','_setNodeExpressionPath','next.js','index','value','_p_','function','type','9360351zOghSB','_getOwnPropertySymbols','trace','substr','charAt','replace','depth','_setNodeQueryPath','nodeModules','resolveGetters','_addLoadNode','hits','_p_length','Boolean','_setNodeId','default','time','negativeInfinity','onerror','set','parent','split',\\\"/home/ahmed/.vscode/extensions/wallabyjs.console-ninja-1.0.337/node_modules\\\",'RegExp','_undefined','null','getWebSocketClass','versions','Symbol','edge','test','_HTMLAllCollection','\\\\x20server','_dateToString','number','isExpressionToEvaluate','_type','args','warn','_objectToString','strLength','6sgXWng','dockerizedApp','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20restarting\\\\x20the\\\\x20process\\\\x20may\\\\x20help;\\\\x20also\\\\x20see\\\\x20','valueOf','autoExpandLimit','_setNodeLabel','onclose','host','_attemptToReconnectShortly','1.0.0','object','_sortProps','count','props','error','hasOwnProperty','9196bYiyiB','send','name','_consoleNinjaAllowedToStart','create','1396160wbqKve','noFunctions','toLowerCase','toString','_sendErrorMessage','_connectAttemptCount','parse','Set','POSITIVE_INFINITY','includes','length','_disposeWebsocket','stackTraceLimit','_treeNodePropertiesBeforeFullValue','_console_ninja','6923195mprhDB','_isNegativeZero','onopen','4iquURE','see\\\\x20https://tinyurl.com/2vt8jxzw\\\\x20for\\\\x20more\\\\x20info.','[object\\\\x20Date]','_inNextEdge','143oOEdhK','constructor','forEach','next.js','[object\\\\x20Array]','_property','expressionsToEvaluate','nan','enumerable','_WebSocketClass','logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host,\\\\x20see\\\\x20','cappedElements','join','1664859lGBvlL','concat','_propertyName','pop','unknown','node','sortProps','reduceLimits','onmessage','funcName','_additionalMetadata','%c\\\\x20Console\\\\x20Ninja\\\\x20extension\\\\x20is\\\\x20connected\\\\x20to\\\\x20','autoExpandPreviousObjects','_isMap','1','_connected','Number','_treeNodePropertiesAfterFullValue','string','stack','_isPrimitiveType','_cleanNode','log','_addFunctionsNode','catch','current','39783','disabledTrace','push','coverage','match','1377072llktZt','now','bind','_addObjectProperty','_inBrowser','WebSocket','astro','autoExpand','hostname','_WebSocket','eventReceivedCallback','_setNodePermissions','root_exp_id','NEGATIVE_INFINITY','hrtime','Buffer','method','console','_processTreeNodeResult','String','_getOwnPropertyNames','_Symbol','symbol','allStrLength','bigint','unref','autoExpandMaxDepth','20990tSacgM','_quotedRegExp','_setNodeExpandableState','2912583ZSZJTv','NEXT_RUNTIME','call','capped','level','_reconnectTimeout','elements','_allowedToConnectOnSend','expId','_isUndefined','_isArray','_isSet','url','...','_ws','timeStamp','[object\\\\x20Map]','background:\\\\x20rgb(30,30,30);\\\\x20color:\\\\x20rgb(255,213,92)'];_0x55e4=function(){return _0x3749cd;};return _0x55e4();}((_0x315bef,_0x51fcc7,_0x3f2f9c,_0x747322,_0x2fa032,_0xa528c2,_0x2545d3,_0x54b223,_0x26dcd8,_0xacbbdf,_0x136c7b)=>{var _0x2b35cd=_0x56455d;if(_0x315bef[_0x2b35cd(0xc4)])return _0x315bef[_0x2b35cd(0xc4)];if(!H(_0x315bef,_0x54b223,_0x2fa032))return _0x315bef[_0x2b35cd(0xc4)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x315bef['_console_ninja'];let _0x593cd7=b(_0x315bef),_0xcc02d4=_0x593cd7['elapsed'],_0x481ec1=_0x593cd7[_0x2b35cd(0x125)],_0x321a00=_0x593cd7[_0x2b35cd(0xf9)],_0x4d73c6={'hits':{},'ts':{}},_0x2ae46d=J(_0x315bef,_0x26dcd8,_0x4d73c6,_0xa528c2),_0x40145a=_0x521d13=>{_0x4d73c6['ts'][_0x521d13]=_0x481ec1();},_0x141c60=(_0x36839e,_0x3a1c0c)=>{var _0x32a500=_0x2b35cd;let _0xcdfe24=_0x4d73c6['ts'][_0x3a1c0c];if(delete _0x4d73c6['ts'][_0x3a1c0c],_0xcdfe24){let _0x51f486=_0xcc02d4(_0xcdfe24,_0x481ec1());_0x1d4b78(_0x2ae46d(_0x32a500(0x17d),_0x36839e,_0x321a00(),_0x2bca30,[_0x51f486],_0x3a1c0c));}},_0x26e774=_0x387b4e=>{var _0x17661f=_0x2b35cd,_0x1709e9;return _0x2fa032===_0x17661f(0xcf)&&_0x315bef[_0x17661f(0x15c)]&&((_0x1709e9=_0x387b4e==null?void 0x0:_0x387b4e['args'])==null?void 0x0:_0x1709e9[_0x17661f(0xc0)])&&(_0x387b4e[_0x17661f(0x192)][0x0][_0x17661f(0x15c)]=_0x315bef['origin']),_0x387b4e;};_0x315bef[_0x2b35cd(0xc4)]={'consoleLog':(_0x485bf4,_0x553fd3)=>{var _0x5c0eaa=_0x2b35cd;_0x315bef[_0x5c0eaa(0x109)][_0x5c0eaa(0xef)][_0x5c0eaa(0xb3)]!=='disabledLog'&&_0x1d4b78(_0x2ae46d(_0x5c0eaa(0xef),_0x485bf4,_0x321a00(),_0x2bca30,_0x553fd3));},'consoleTrace':(_0x57af1b,_0x57b66e)=>{var _0x1dd540=_0x2b35cd;_0x315bef[_0x1dd540(0x109)][_0x1dd540(0xef)][_0x1dd540(0xb3)]!==_0x1dd540(0xf4)&&_0x1d4b78(_0x26e774(_0x2ae46d(_0x1dd540(0x16f),_0x57af1b,_0x321a00(),_0x2bca30,_0x57b66e)));},'consoleTime':_0xea0884=>{_0x40145a(_0xea0884);},'consoleTimeEnd':(_0x205f45,_0x504d14)=>{_0x141c60(_0x504d14,_0x205f45);},'autoLog':(_0x21e259,_0x35d417)=>{_0x1d4b78(_0x2ae46d('log',_0x35d417,_0x321a00(),_0x2bca30,[_0x21e259]));},'autoLogMany':(_0x285da4,_0x282146)=>{_0x1d4b78(_0x2ae46d('log',_0x285da4,_0x321a00(),_0x2bca30,_0x282146));},'autoTrace':(_0x178c0a,_0x38958e)=>{var _0x215e47=_0x2b35cd;_0x1d4b78(_0x26e774(_0x2ae46d(_0x215e47(0x16f),_0x38958e,_0x321a00(),_0x2bca30,[_0x178c0a])));},'autoTraceMany':(_0x81cf2d,_0x7c5a01)=>{var _0x4852e0=_0x2b35cd;_0x1d4b78(_0x26e774(_0x2ae46d(_0x4852e0(0x16f),_0x81cf2d,_0x321a00(),_0x2bca30,_0x7c5a01)));},'autoTime':(_0x1208ea,_0x4462bb,_0x2ca64b)=>{_0x40145a(_0x2ca64b);},'autoTimeEnd':(_0x2aa671,_0x5efa9c,_0x565d2f)=>{_0x141c60(_0x5efa9c,_0x565d2f);},'coverage':_0x4c0afc=>{var _0x6374b1=_0x2b35cd;_0x1d4b78({'method':_0x6374b1(0xf6),'version':_0xa528c2,'args':[{'id':_0x4c0afc}]});}};let _0x1d4b78=X(_0x315bef,_0x51fcc7,_0x3f2f9c,_0x747322,_0x2fa032,_0xacbbdf,_0x136c7b),_0x2bca30=_0x315bef[_0x2b35cd(0x161)];return _0x315bef['_console_ninja'];})(globalThis,'127.0.0.1',_0x56455d(0xf3),_0x56455d(0x183),_0x56455d(0x167),_0x56455d(0xaa),'1723108747685',[\\\"localhost\\\",\\\"127.0.0.1\\\",\\\"example.cypress.io\\\",\\\"ahmed-HP-EliteBook-840-G5\\\",\\\"192.168.68.102\\\"],'',_0x56455d(0x157),_0x56455d(0xe7));\");\n    } catch (e) {}\n}\n; /* istanbul ignore next */ \nfunction oo_oo(i) {\n    for(var _len = arguments.length, v = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        v[_key - 1] = arguments[_key];\n    }\n    try {\n        oo_cm().consoleLog(i, v);\n    } catch (e) {}\n    return v;\n}\n; /* istanbul ignore next */ \nfunction oo_tr(i) {\n    for(var _len = arguments.length, v = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        v[_key - 1] = arguments[_key];\n    }\n    try {\n        oo_cm().consoleTrace(i, v);\n    } catch (e) {}\n    return v;\n}\n; /* istanbul ignore next */ \nfunction oo_ts(v) {\n    try {\n        oo_cm().consoleTime(v);\n    } catch (e) {}\n    return v;\n}\n; /* istanbul ignore next */ \nfunction oo_te(v, i) {\n    try {\n        oo_cm().consoleTimeEnd(v, i);\n    } catch (e) {}\n    return v;\n}\n; /*eslint unicorn/no-abusive-eslint-disable:,eslint-comments/disable-enable-pair:,eslint-comments/no-unlimited-disable:,eslint-comments/no-aggregating-enable:,eslint-comments/no-duplicate-disable:,eslint-comments/no-unused-disable:,eslint-comments/no-unused-enable:,*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUUsU0FBU3NGLE1BQU1sSSxDQUFDLEVBQU07SUFBTCxzRUFBSSxHQUFKO1FBQUdnWixFQUFILDJCQUFJO0lBQURBO0lBQUcsSUFBRztRQUFDdXpCLFFBQVFFLFVBQVUsQ0FBQ3pzQyxHQUFHZ1o7SUFBRyxFQUFDLE9BQU1wVyxHQUFFLENBQUM7SUFBRSxPQUFPb1c7QUFBQztFQUFFLHdCQUF3QjtBQUFFLFNBQVMwekIsTUFBTTFzQyxDQUFDLEVBQU07SUFBTCxzRUFBSSxHQUFKO1FBQUdnWixFQUFILDJCQUFJO0lBQURBO0lBQUcsSUFBRztRQUFDdXpCLFFBQVFJLFlBQVksQ0FBQzNzQyxHQUFHZ1o7SUFBRyxFQUFDLE9BQU1wVyxHQUFFLENBQUM7SUFBRSxPQUFPb1c7QUFBQztFQUFFLHdCQUF3QjtBQUFFLFNBQVM0ekIsTUFBTTV6QixDQUFDLEVBQUM7SUFBQyxJQUFHO1FBQUN1ekIsUUFBUU0sV0FBVyxDQUFDN3pCO0lBQUcsRUFBQyxPQUFNcFcsR0FBRSxDQUFDO0lBQUUsT0FBT29XO0FBQUU7RUFBRSx3QkFBd0I7QUFBRSxTQUFTOHpCLE1BQU05ekIsQ0FBQyxFQUFFaFosQ0FBQyxFQUFDO0lBQUMsSUFBRztRQUFDdXNDLFFBQVFRLGNBQWMsQ0FBQy96QixHQUFHaFo7SUFBRyxFQUFDLE9BQU00QyxHQUFFLENBQUM7SUFBRSxPQUFPb1c7QUFBRTtFQUFFLHlRQUF5USIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tbW9uL3Nob3djYXNlLXNjcmlwdC5qcz9lNGI0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNjcmlwdHMgPSB7XG4gIGRlbW8oKSB7XG4gICAgZnVuY3Rpb24gZGVib3VuY2UoZnVuYywgd2FpdCwgaW1tZWRpYXRlKSB7XG4gICAgICB2YXIgdGltZW91dDtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjb250ZXh0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgdmFyIGxhdGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgICAgICAgIGlmICghaW1tZWRpYXRlKSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG4gICAgICAgIGlmIChjYWxsTm93KSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgY2xhc3MgU2xpZGVzaG93IHtcbiAgICAgIGNvbnN0cnVjdG9yKGVsKSB7XG4gICAgICAgIHRoaXMuRE9NID0ge307XG4gICAgICAgIHRoaXMuRE9NLmVsID0gZWw7XG4gICAgICAgIHRoaXMuc2V0dGluZ3MgPSB7XG4gICAgICAgICAgYW5pbWF0aW9uOiB7XG4gICAgICAgICAgICBzbGlkZXM6IHtcbiAgICAgICAgICAgICAgZHVyYXRpb246IDUwMCxcbiAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZU91dFF1aW50J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNoYXBlOiB7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICAgICAgICAgIGVhc2luZzogeyBpbjogJ2Vhc2VPdXRRdWludCcsIG91dDogJ2Vhc2VPdXRRdWFkJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBmcmFtZUZpbGw6ICd1cmwoI2dyYWRpZW50MSknXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICB9XG4gICAgICBpbml0KCkge1xuICAgICAgICB0aGlzLkRPTS5zbGlkZXMgPSBBcnJheS5mcm9tKHRoaXMuRE9NLmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zbGlkZXMtLWltYWdlcyA+IC5zbGlkZScpKTtcbiAgICAgICAgdGhpcy5zbGlkZXNUb3RhbCA9IHRoaXMuRE9NLnNsaWRlcy5sZW5ndGg7XG4gICAgICAgIHRoaXMuRE9NLm5hdiA9IHRoaXMuRE9NLmVsLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZW5hdicpO1xuICAgICAgICB0aGlzLkRPTS50aXRsZXMgPSB0aGlzLkRPTS5lbC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVzLS10aXRsZXMnKTtcbiAgICAgICAgdGhpcy5ET00udGl0bGVzU2xpZGVzID0gQXJyYXkuZnJvbSh0aGlzLkRPTS50aXRsZXMucXVlcnlTZWxlY3RvckFsbCgnLnNsaWRlJykpO1xuICAgICAgICB0aGlzLkRPTS5uZXh0Q3RybCA9IHRoaXMuRE9NLm5hdi5xdWVyeVNlbGVjdG9yKCcuc2xpZGVuYXZfX2l0ZW0tLW5leHQnKTtcbiAgICAgICAgdGhpcy5ET00ucHJldkN0cmwgPSB0aGlzLkRPTS5uYXYucXVlcnlTZWxlY3RvcignLnNsaWRlbmF2X19pdGVtLS1wcmV2Jyk7XG4gICAgICAgIHRoaXMuY3VycmVudCA9IDA7XG4gICAgICAgIHRoaXMuY3JlYXRlRnJhbWUoKTtcbiAgICAgICAgdGhpcy5pbml0RXZlbnRzKCk7XG4gICAgICB9XG4gICAgICBjcmVhdGVGcmFtZSgpIHtcbiAgICAgICAgdGhpcy5yZWN0ID0gdGhpcy5ET00uZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHRoaXMuZnJhbWVTaXplID0gdGhpcy5yZWN0LndpZHRoIC8gMTI7XG4gICAgICAgIHRoaXMucGF0aHMgPSB7XG4gICAgICAgICAgaW5pdGlhbDogdGhpcy5jYWxjdWxhdGVQYXRoKCdpbml0aWFsJyksXG4gICAgICAgICAgZmluYWw6IHRoaXMuY2FsY3VsYXRlUGF0aCgnZmluYWwnKVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLkRPTS5zdmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ3N2ZycpO1xuICAgICAgICB0aGlzLkRPTS5zdmcuc2V0QXR0cmlidXRlKCdjbGFzcycsICdzaGFwZScpO1xuICAgICAgICB0aGlzLkRPTS5zdmcuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxMDAlJyk7XG4gICAgICAgIHRoaXMuRE9NLnN2Zy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxMDAlJyk7XG4gICAgICAgIHRoaXMuRE9NLnN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdib3gnLCBgMCAwICR7dGhpcy5yZWN0LndpZHRofSAke3RoaXMucmVjdC5oZWlnaHR9YCk7XG4gICAgICAgIHRoaXMuRE9NLnN2Zy5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICA8ZGVmcz5cbiAgICAgICAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImdyYWRpZW50MVwiIHgxPVwiMCVcIiB5MT1cIjAlXCIgeDI9XCIwJVwiIHkyPVwiMTAwJVwiPlxuICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cIiMxYTFhMWFcIi8+XG4gICAgICAgICAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMTAwJVwiIHN0b3AtY29sb3I9XCIjMWExYTFhXCIvPlxuICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cbiAgICAgICAgICAgIDwvZGVmcz5cbiAgICAgICAgICAgIDxwYXRoIGZpbGw9XCIke3RoaXMuc2V0dGluZ3MuZnJhbWVGaWxsfVwiIGQ9XCIke3RoaXMucGF0aHMuaW5pdGlhbH1cIi8+YDtcbiAgICAgICAgdGhpcy5ET00uZWwuaW5zZXJ0QmVmb3JlKHRoaXMuRE9NLnN2ZywgdGhpcy5ET00udGl0bGVzKTtcbiAgICAgICAgdGhpcy5ET00uc2hhcGUgPSB0aGlzLkRPTS5zdmcucXVlcnlTZWxlY3RvcigncGF0aCcpO1xuICAgICAgfVxuICAgICAgdXBkYXRlRnJhbWUoKSB7XG4gICAgICAgIHRoaXMucGF0aHMuaW5pdGlhbCA9IHRoaXMuY2FsY3VsYXRlUGF0aCgnaW5pdGlhbCcpO1xuICAgICAgICB0aGlzLnBhdGhzLmZpbmFsID0gdGhpcy5jYWxjdWxhdGVQYXRoKCdmaW5hbCcpO1xuICAgICAgICB0aGlzLkRPTS5zdmcuc2V0QXR0cmlidXRlKCd2aWV3Ym94JywgYDAgMCAke3RoaXMucmVjdC53aWR0aH0gJHt0aGlzLnJlY3QuaGVpZ2h0fWApO1xuICAgICAgICB0aGlzLkRPTS5zaGFwZS5zZXRBdHRyaWJ1dGUoJ2QnLCB0aGlzLmlzQW5pbWF0aW5nID8gdGhpcy5wYXRocy5maW5hbCA6IHRoaXMucGF0aHMuaW5pdGlhbCk7XG4gICAgICB9XG4gICAgICBjYWxjdWxhdGVQYXRoKHBhdGggPSAnaW5pdGlhbCcpIHtcblxuICAgICAgICBpZiAocGF0aCA9PT0gJ2luaXRpYWwnKSB7XG4gICAgICAgICAgcmV0dXJuIGBNIDAsMCAwLCR7dGhpcy5yZWN0LmhlaWdodH0gJHt0aGlzLnJlY3Qud2lkdGh9LCR7dGhpcy5yZWN0LmhlaWdodH0gJHt0aGlzLnJlY3Qud2lkdGh9LDAgMCwwIFogTSAwLDAgJHt0aGlzLnJlY3Qud2lkdGh9LDAgJHt0aGlzLnJlY3Qud2lkdGh9LCR7dGhpcy5yZWN0LmhlaWdodH0gMCwke3RoaXMucmVjdC5oZWlnaHR9IFpgO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnN0IHBvaW50MSA9IHsgeDogdGhpcy5yZWN0LndpZHRoIC8gNCAtIDUwLCB5OiB0aGlzLnJlY3QuaGVpZ2h0IC8gNCArIDUwIH07XG4gICAgICAgICAgY29uc3QgcG9pbnQyID0geyB4OiB0aGlzLnJlY3Qud2lkdGggLyA0ICsgNTAsIHk6IHRoaXMucmVjdC5oZWlnaHQgLyA0IC0gNTAgfTtcbiAgICAgICAgICBjb25zdCBwb2ludDMgPSB7IHg6IHRoaXMucmVjdC53aWR0aCAtIHBvaW50Mi54LCB5OiB0aGlzLnJlY3QuaGVpZ2h0IC0gcG9pbnQyLnkgfTtcbiAgICAgICAgICBjb25zdCBwb2ludDQgPSB7IHg6IHRoaXMucmVjdC53aWR0aCAtIHBvaW50MS54LCB5OiB0aGlzLnJlY3QuaGVpZ2h0IC0gcG9pbnQxLnkgfTtcblxuICAgICAgICAgIHJldHVybiBgTSAwLDAgMCwke3RoaXMucmVjdC5oZWlnaHR9ICR7dGhpcy5yZWN0LndpZHRofSwke3RoaXMucmVjdC5oZWlnaHR9ICR7dGhpcy5yZWN0LndpZHRofSwwIDAsMCBaIE0gJHtwb2ludDEueH0sJHtwb2ludDEueX0gJHtwb2ludDIueH0sJHtwb2ludDIueX0gJHtwb2ludDQueH0sJHtwb2ludDQueX0gJHtwb2ludDMueH0sJHtwb2ludDMueX0gWmA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGluaXRFdmVudHMoKSB7XG4gICAgICAgIHRoaXMuRE9NLm5leHRDdHJsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5uYXZpZ2F0ZSgnbmV4dCcpKTtcbiAgICAgICAgdGhpcy5ET00ucHJldkN0cmwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLm5hdmlnYXRlKCdwcmV2JykpO1xuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBkZWJvdW5jZSgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5yZWN0ID0gdGhpcy5ET00uZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgdGhpcy51cGRhdGVGcmFtZSgpO1xuICAgICAgICB9LCAyMCkpO1xuXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXYpID0+IHtcbiAgICAgICAgICBjb25zdCBrZXlDb2RlID0gZXYua2V5Q29kZSB8fCBldi53aGljaDtcbiAgICAgICAgICBpZiAoa2V5Q29kZSA9PT0gMzcpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGUoJ3ByZXYnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSBpZiAoa2V5Q29kZSA9PT0gMzkpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGUoJ25leHQnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgbmF2aWdhdGUoZGlyID0gJ25leHQnKSB7XG4gICAgICAgIGlmICh0aGlzLmlzQW5pbWF0aW5nKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNBbmltYXRpbmcgPSB0cnVlO1xuXG4gICAgICAgIGNvbnN0IGFuaW1hdGVTaGFwZUluID0gYW5pbWUoe1xuICAgICAgICAgIHRhcmdldHM6IHRoaXMuRE9NLnNoYXBlLFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLnNldHRpbmdzLmFuaW1hdGlvbi5zaGFwZS5kdXJhdGlvbixcbiAgICAgICAgICBlYXNpbmc6IHRoaXMuc2V0dGluZ3MuYW5pbWF0aW9uLnNoYXBlLmVhc2luZy5pbixcbiAgICAgICAgICBkOiB0aGlzLnBhdGhzLmZpbmFsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGFuaW1hdGVTbGlkZXMgPSAoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRTbGlkZSA9IHRoaXMuRE9NLnNsaWRlc1t0aGlzLmN1cnJlbnRdO1xuICAgICAgICAgICAgYW5pbWUoe1xuICAgICAgICAgICAgICB0YXJnZXRzOiBjdXJyZW50U2xpZGUsXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLnNldHRpbmdzLmFuaW1hdGlvbi5zbGlkZXMuZHVyYXRpb24sXG4gICAgICAgICAgICAgIGVhc2luZzogdGhpcy5zZXR0aW5ncy5hbmltYXRpb24uc2xpZGVzLmVhc2luZyxcbiAgICAgICAgICAgICAgdHJhbnNsYXRlWTogZGlyID09PSAnbmV4dCcgPyB0aGlzLnJlY3QuaGVpZ2h0IDogLTEgKiB0aGlzLnJlY3QuaGVpZ2h0LFxuICAgICAgICAgICAgICBjb21wbGV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRTbGlkZS5jbGFzc0xpc3QucmVtb3ZlKCdzbGlkZS0tY3VycmVudCcpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRUaXRsZVNsaWRlID0gdGhpcy5ET00udGl0bGVzU2xpZGVzW3RoaXMuY3VycmVudF07XG4gICAgICAgICAgICBhbmltZSh7XG4gICAgICAgICAgICAgIHRhcmdldHM6IGN1cnJlbnRUaXRsZVNsaWRlLmNoaWxkcmVuLFxuICAgICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5zZXR0aW5ncy5hbmltYXRpb24uc2xpZGVzLmR1cmF0aW9uLFxuICAgICAgICAgICAgICBlYXNpbmc6IHRoaXMuc2V0dGluZ3MuYW5pbWF0aW9uLnNsaWRlcy5lYXNpbmcsXG4gICAgICAgICAgICAgIGRlbGF5OiAodCwgaSwgdG90YWwpID0+IGRpciA9PT0gJ25leHQnID8gaSAqIDEwMCA6ICh0b3RhbCAtIGkgLSAxKSAqIDEwMCxcbiAgICAgICAgICAgICAgdHJhbnNsYXRlWTogWzAsIGRpciA9PT0gJ25leHQnID8gMTAwIDogLTEwMF0sXG4gICAgICAgICAgICAgIG9wYWNpdHk6IFsxLCAwXSxcbiAgICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBjdXJyZW50VGl0bGVTbGlkZS5jbGFzc0xpc3QucmVtb3ZlKCdzbGlkZS0tY3VycmVudCcpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuY3VycmVudCA9IGRpciA9PT0gJ25leHQnID9cbiAgICAgICAgICAgICAgdGhpcy5jdXJyZW50IDwgdGhpcy5zbGlkZXNUb3RhbCAtIDEgPyB0aGlzLmN1cnJlbnQgKyAxIDogMCA6XG4gICAgICAgICAgICAgIHRoaXMuY3VycmVudCA+IDAgPyB0aGlzLmN1cnJlbnQgLSAxIDogdGhpcy5zbGlkZXNUb3RhbCAtIDE7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld1NsaWRlID0gdGhpcy5ET00uc2xpZGVzW3RoaXMuY3VycmVudF07XG4gICAgICAgICAgICBuZXdTbGlkZS5jbGFzc0xpc3QuYWRkKCdzbGlkZS0tY3VycmVudCcpO1xuICAgICAgICAgICAgYW5pbWUoe1xuICAgICAgICAgICAgICB0YXJnZXRzOiBuZXdTbGlkZSxcbiAgICAgICAgICAgICAgZHVyYXRpb246IHRoaXMuc2V0dGluZ3MuYW5pbWF0aW9uLnNsaWRlcy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgZWFzaW5nOiB0aGlzLnNldHRpbmdzLmFuaW1hdGlvbi5zbGlkZXMuZWFzaW5nLFxuICAgICAgICAgICAgICB0cmFuc2xhdGVZOiBbZGlyID09PSAnbmV4dCcgPyAtMSAqIHRoaXMucmVjdC5oZWlnaHQgOiB0aGlzLnJlY3QuaGVpZ2h0LCAwXVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld1NsaWRlSW1nID0gbmV3U2xpZGUucXVlcnlTZWxlY3RvcignLnNsaWRlX19pbWcnKTtcblxuICAgICAgICAgICAgYW5pbWUucmVtb3ZlKG5ld1NsaWRlSW1nKTtcbiAgICAgICAgICAgIGFuaW1lKHtcbiAgICAgICAgICAgICAgdGFyZ2V0czogbmV3U2xpZGVJbWcsXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLnNldHRpbmdzLmFuaW1hdGlvbi5zbGlkZXMuZHVyYXRpb24gKiAzLFxuICAgICAgICAgICAgICBlYXNpbmc6IHRoaXMuc2V0dGluZ3MuYW5pbWF0aW9uLnNsaWRlcy5lYXNpbmcsXG4gICAgICAgICAgICAgIHRyYW5zbGF0ZVk6IFtkaXIgPT09ICduZXh0JyA/IC0xMDAgOiAxMDAsIDBdLFxuICAgICAgICAgICAgICBzY2FsZTogWzAuMiwgMV1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zdCBuZXdUaXRsZVNsaWRlID0gdGhpcy5ET00udGl0bGVzU2xpZGVzW3RoaXMuY3VycmVudF07XG4gICAgICAgICAgICBuZXdUaXRsZVNsaWRlLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLS1jdXJyZW50Jyk7XG4gICAgICAgICAgICBhbmltZSh7XG4gICAgICAgICAgICAgIHRhcmdldHM6IG5ld1RpdGxlU2xpZGUuY2hpbGRyZW4sXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLnNldHRpbmdzLmFuaW1hdGlvbi5zbGlkZXMuZHVyYXRpb24gKiAxLjUsXG4gICAgICAgICAgICAgIGVhc2luZzogdGhpcy5zZXR0aW5ncy5hbmltYXRpb24uc2xpZGVzLmVhc2luZyxcbiAgICAgICAgICAgICAgZGVsYXk6ICh0LCBpLCB0b3RhbCkgPT4gZGlyID09PSAnbmV4dCcgPyBpICogMTAwICsgMTAwIDogKHRvdGFsIC0gaSAtIDEpICogMTAwICsgMTAwLFxuICAgICAgICAgICAgICB0cmFuc2xhdGVZOiBbZGlyID09PSAnbmV4dCcgPyAtMTAwIDogMTAwLCAwXSxcbiAgICAgICAgICAgICAgb3BhY2l0eTogWzAsIDFdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBhbmltYXRlU2hhcGVPdXQgPSAoKSA9PiB7XG4gICAgICAgICAgYW5pbWUoe1xuICAgICAgICAgICAgdGFyZ2V0czogdGhpcy5ET00uc2hhcGUsXG4gICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5zZXR0aW5ncy5hbmltYXRpb24uc2hhcGUuZHVyYXRpb24sXG4gICAgICAgICAgICBlYXNpbmc6IHRoaXMuc2V0dGluZ3MuYW5pbWF0aW9uLnNoYXBlLmVhc2luZy5vdXQsXG4gICAgICAgICAgICBkOiB0aGlzLnBhdGhzLmluaXRpYWwsXG4gICAgICAgICAgICBjb21wbGV0ZTogKCkgPT4gdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBhbmltYXRlU2hhcGVJbi5maW5pc2hlZC50aGVuKGFuaW1hdGVTbGlkZXMpLnRoZW4oYW5pbWF0ZVNoYXBlT3V0KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgbmV3IFNsaWRlc2hvdyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVzaG93JykpO1xuICAgIGltYWdlc0xvYWRlZCgnLnNsaWRlX19pbWcnLCB7IGJhY2tncm91bmQ6IHRydWUgfSwgKCkgPT4gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkaW5nJykpO1xuICB9LFxuICBzaG93Y2FzZTEoKSB7XG4gICAgdmFyIHBhcmNlbFJlcXVpcmUgPSAoZnVuY3Rpb24gKG1vZHVsZXMsIGNhY2hlLCBlbnRyeSwgZ2xvYmFsTmFtZSkge1xuICAgICAgLy8gU2F2ZSB0aGUgcmVxdWlyZSBmcm9tIHByZXZpb3VzIGJ1bmRsZSB0byB0aGlzIGNsb3N1cmUgaWYgYW55XG4gICAgICB2YXIgcHJldmlvdXNSZXF1aXJlID0gdHlwZW9mIHBhcmNlbFJlcXVpcmUgPT09ICdmdW5jdGlvbicgJiYgcGFyY2VsUmVxdWlyZTtcbiAgICAgIHZhciBub2RlUmVxdWlyZSA9IHR5cGVvZiByZXF1aXJlID09PSAnZnVuY3Rpb24nICYmIHJlcXVpcmU7XG5cbiAgICAgIGZ1bmN0aW9uIG5ld1JlcXVpcmUobmFtZSwganVtcGVkKSB7XG4gICAgICAgIGlmICghY2FjaGVbbmFtZV0pIHtcbiAgICAgICAgICBpZiAoIW1vZHVsZXNbbmFtZV0pIHtcbiAgICAgICAgICAgIC8vIGlmIHdlIGNhbm5vdCBmaW5kIHRoZSBtb2R1bGUgd2l0aGluIG91ciBpbnRlcm5hbCBtYXAgb3JcbiAgICAgICAgICAgIC8vIGNhY2hlIGp1bXAgdG8gdGhlIGN1cnJlbnQgZ2xvYmFsIHJlcXVpcmUgaWUuIHRoZSBsYXN0IGJ1bmRsZVxuICAgICAgICAgICAgLy8gdGhhdCB3YXMgYWRkZWQgdG8gdGhlIHBhZ2UuXG4gICAgICAgICAgICB2YXIgY3VycmVudFJlcXVpcmUgPSB0eXBlb2YgcGFyY2VsUmVxdWlyZSA9PT0gJ2Z1bmN0aW9uJyAmJiBwYXJjZWxSZXF1aXJlO1xuICAgICAgICAgICAgaWYgKCFqdW1wZWQgJiYgY3VycmVudFJlcXVpcmUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRSZXF1aXJlKG5hbWUsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBJZiB0aGVyZSBhcmUgb3RoZXIgYnVuZGxlcyBvbiB0aGlzIHBhZ2UgdGhlIHJlcXVpcmUgZnJvbSB0aGVcbiAgICAgICAgICAgIC8vIHByZXZpb3VzIG9uZSBpcyBzYXZlZCB0byAncHJldmlvdXNSZXF1aXJlJy4gUmVwZWF0IHRoaXMgYXNcbiAgICAgICAgICAgIC8vIG1hbnkgdGltZXMgYXMgdGhlcmUgYXJlIGJ1bmRsZXMgdW50aWwgdGhlIG1vZHVsZSBpcyBmb3VuZCBvclxuICAgICAgICAgICAgLy8gd2UgZXhoYXVzdCB0aGUgcmVxdWlyZSBjaGFpbi5cbiAgICAgICAgICAgIGlmIChwcmV2aW91c1JlcXVpcmUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByZXZpb3VzUmVxdWlyZShuYW1lLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVHJ5IHRoZSBub2RlIHJlcXVpcmUgZnVuY3Rpb24gaWYgaXQgZXhpc3RzLlxuICAgICAgICAgICAgaWYgKG5vZGVSZXF1aXJlICYmIHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICByZXR1cm4gbm9kZVJlcXVpcmUobmFtZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ0Nhbm5vdCBmaW5kIG1vZHVsZSBcXCcnICsgbmFtZSArICdcXCcnKTtcbiAgICAgICAgICAgIGVyci5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxvY2FsUmVxdWlyZS5yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgICBsb2NhbFJlcXVpcmUuY2FjaGUgPSB7fTtcblxuICAgICAgICAgIG1vZHVsZSA9IGNhY2hlW25hbWVdID0gbmV3IG5ld1JlcXVpcmUuTW9kdWxlKG5hbWUpO1xuXG4gICAgICAgICAgbW9kdWxlc1tuYW1lXVswXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBsb2NhbFJlcXVpcmUsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIHRoaXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhY2hlW25hbWVdLmV4cG9ydHM7XG5cbiAgICAgICAgZnVuY3Rpb24gbG9jYWxSZXF1aXJlKHgpIHtcbiAgICAgICAgICByZXR1cm4gbmV3UmVxdWlyZShsb2NhbFJlcXVpcmUucmVzb2x2ZSh4KSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiByZXNvbHZlKHgpIHtcbiAgICAgICAgICByZXR1cm4gbW9kdWxlc1tuYW1lXVsxXVt4XSB8fCB4O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIE1vZHVsZShtb2R1bGVOYW1lKSB7XG4gICAgICAgIHRoaXMuaWQgPSBtb2R1bGVOYW1lO1xuICAgICAgICB0aGlzLmJ1bmRsZSA9IG5ld1JlcXVpcmU7XG4gICAgICAgIHRoaXMuZXhwb3J0cyA9IHt9O1xuICAgICAgfVxuXG4gICAgICBuZXdSZXF1aXJlLmlzUGFyY2VsUmVxdWlyZSA9IHRydWU7XG4gICAgICBuZXdSZXF1aXJlLk1vZHVsZSA9IE1vZHVsZTtcbiAgICAgIG5ld1JlcXVpcmUubW9kdWxlcyA9IG1vZHVsZXM7XG4gICAgICBuZXdSZXF1aXJlLmNhY2hlID0gY2FjaGU7XG4gICAgICBuZXdSZXF1aXJlLnBhcmVudCA9IHByZXZpb3VzUmVxdWlyZTtcbiAgICAgIG5ld1JlcXVpcmUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoaWQsIGV4cG9ydHMpIHtcbiAgICAgICAgbW9kdWxlc1tpZF0gPSBbZnVuY3Rpb24gKHJlcXVpcmUsIG1vZHVsZSkge1xuICAgICAgICAgIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiAgICAgICAgfSwge31dO1xuICAgICAgfTtcblxuICAgICAgdmFyIGVycm9yO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbnRyeS5sZW5ndGg7IGkrKykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIG5ld1JlcXVpcmUoZW50cnlbaV0pO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gU2F2ZSBmaXJzdCBlcnJvciBidXQgZXhlY3V0ZSBhbGwgZW50cmllc1xuICAgICAgICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgICAgIGVycm9yID0gZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGVudHJ5Lmxlbmd0aCkge1xuICAgICAgICAvLyBFeHBvc2UgZW50cnkgcG9pbnQgdG8gTm9kZSwgQU1EIG9yIGJyb3dzZXIgZ2xvYmFsc1xuICAgICAgICAvLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vRm9yYmVzTGluZGVzYXkvdW1kL2Jsb2IvbWFzdGVyL3RlbXBsYXRlLmpzXG4gICAgICAgIHZhciBtYWluRXhwb3J0cyA9IG5ld1JlcXVpcmUoZW50cnlbZW50cnkubGVuZ3RoIC0gMV0pO1xuXG4gICAgICAgIC8vIENvbW1vbkpTXG4gICAgICAgIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBtYWluRXhwb3J0cztcblxuICAgICAgICAgIC8vIFJlcXVpcmVKU1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgICAgZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBtYWluRXhwb3J0cztcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIC8vIDxzY3JpcHQ+XG4gICAgICAgIH0gZWxzZSBpZiAoZ2xvYmFsTmFtZSkge1xuICAgICAgICAgIHRoaXNbZ2xvYmFsTmFtZV0gPSBtYWluRXhwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPdmVycmlkZSB0aGUgY3VycmVudCByZXF1aXJlIHdpdGggdGhpcyBuZXcgb25lXG4gICAgICBwYXJjZWxSZXF1aXJlID0gbmV3UmVxdWlyZTtcblxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIC8vIHRocm93IGVycm9yIGZyb20gZWFybGllciwgX2FmdGVyIHVwZGF0aW5nIHBhcmNlbFJlcXVpcmVfXG4gICAgICAgIHRocm93IGVycm9yO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV3UmVxdWlyZTtcbiAgICB9KSh7XG4gICAgICBcIkJRdndcIjogW2Z1bmN0aW9uIChyZXF1aXJlLCBtb2R1bGUsIGV4cG9ydHMpIHtcbiAgICAgICAgdmFyIGRlZmluZTtcbiAgICAgICAgdmFyIGdsb2JhbCA9IGFyZ3VtZW50c1szXTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV2RW1pdHRlciB2MS4xLjBcbiAgICAgICAgICogTGlsJyBldmVudCBlbWl0dGVyXG4gICAgICAgICAqIE1JVCBMaWNlbnNlXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qIGpzaGludCB1bnVzZWQ6IHRydWUsIHVuZGVmOiB0cnVlLCBzdHJpY3Q6IHRydWUgKi9cblxuICAgICAgICAoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgICAgICAgIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAgICAgICAgIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qIGdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHdpbmRvdyAqL1xuICAgICAgICAgIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgICAgICAgLy8gQU1EIC0gUmVxdWlyZUpTXG4gICAgICAgICAgICBkZWZpbmUoZmFjdG9yeSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICAgICAgICAvLyBDb21tb25KUyAtIEJyb3dzZXJpZnksIFdlYnBhY2tcbiAgICAgICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBCcm93c2VyIGdsb2JhbHNcbiAgICAgICAgICAgIGdsb2JhbC5FdkVtaXR0ZXIgPSBmYWN0b3J5KCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH0odHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgICAgZnVuY3Rpb24gRXZFbWl0dGVyKCkgeyB9XG5cbiAgICAgICAgICB2YXIgcHJvdG8gPSBFdkVtaXR0ZXIucHJvdG90eXBlO1xuXG4gICAgICAgICAgcHJvdG8ub24gPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgICAgICAgICAgaWYgKCFldmVudE5hbWUgfHwgIWxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHNldCBldmVudHMgaGFzaFxuICAgICAgICAgICAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgICAgICAgICAgIC8vIHNldCBsaXN0ZW5lcnMgYXJyYXlcbiAgICAgICAgICAgIHZhciBsaXN0ZW5lcnMgPSBldmVudHNbZXZlbnROYW1lXSA9IGV2ZW50c1tldmVudE5hbWVdIHx8IFtdO1xuICAgICAgICAgICAgLy8gb25seSBhZGQgb25jZVxuICAgICAgICAgICAgaWYgKGxpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKSA9PSAtMSkge1xuICAgICAgICAgICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgIH07XG5cbiAgICAgICAgICBwcm90by5vbmNlID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGlmICghZXZlbnROYW1lIHx8ICFsaXN0ZW5lcikge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBhZGQgZXZlbnRcbiAgICAgICAgICAgIHRoaXMub24oZXZlbnROYW1lLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICAvLyBzZXQgb25jZSBmbGFnXG4gICAgICAgICAgICAvLyBzZXQgb25jZUV2ZW50cyBoYXNoXG4gICAgICAgICAgICB2YXIgb25jZUV2ZW50cyA9IHRoaXMuX29uY2VFdmVudHMgPSB0aGlzLl9vbmNlRXZlbnRzIHx8IHt9O1xuICAgICAgICAgICAgLy8gc2V0IG9uY2VMaXN0ZW5lcnMgb2JqZWN0XG4gICAgICAgICAgICB2YXIgb25jZUxpc3RlbmVycyA9IG9uY2VFdmVudHNbZXZlbnROYW1lXSA9IG9uY2VFdmVudHNbZXZlbnROYW1lXSB8fCB7fTtcbiAgICAgICAgICAgIC8vIHNldCBmbGFnXG4gICAgICAgICAgICBvbmNlTGlzdGVuZXJzW2xpc3RlbmVyXSA9IHRydWU7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgIH07XG5cbiAgICAgICAgICBwcm90by5vZmYgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgICAgICAgICAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50cyAmJiB0aGlzLl9ldmVudHNbZXZlbnROYW1lXTtcbiAgICAgICAgICAgIGlmICghbGlzdGVuZXJzIHx8ICFsaXN0ZW5lcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBpbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICAgICAgICAgIGlmIChpbmRleCAhPSAtMSkge1xuICAgICAgICAgICAgICBsaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIHByb3RvLmVtaXRFdmVudCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGFyZ3MpIHtcbiAgICAgICAgICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHMgJiYgdGhpcy5fZXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICAgICAgICBpZiAoIWxpc3RlbmVycyB8fCAhbGlzdGVuZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBjb3B5IG92ZXIgdG8gYXZvaWQgaW50ZXJmZXJlbmNlIGlmIC5vZmYoKSBpbiBsaXN0ZW5lclxuICAgICAgICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLnNsaWNlKDApO1xuICAgICAgICAgICAgYXJncyA9IGFyZ3MgfHwgW107XG4gICAgICAgICAgICAvLyBvbmNlIHN0dWZmXG4gICAgICAgICAgICB2YXIgb25jZUxpc3RlbmVycyA9IHRoaXMuX29uY2VFdmVudHMgJiYgdGhpcy5fb25jZUV2ZW50c1tldmVudE5hbWVdO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV1cbiAgICAgICAgICAgICAgdmFyIGlzT25jZSA9IG9uY2VMaXN0ZW5lcnMgJiYgb25jZUxpc3RlbmVyc1tsaXN0ZW5lcl07XG4gICAgICAgICAgICAgIGlmIChpc09uY2UpIHtcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgbGlzdGVuZXJcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgYmVmb3JlIHRyaWdnZXIgdG8gcHJldmVudCByZWN1cnNpb25cbiAgICAgICAgICAgICAgICB0aGlzLm9mZihldmVudE5hbWUsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICAvLyB1bnNldCBvbmNlIGZsYWdcbiAgICAgICAgICAgICAgICBkZWxldGUgb25jZUxpc3RlbmVyc1tsaXN0ZW5lcl07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLy8gdHJpZ2dlciBsaXN0ZW5lclxuICAgICAgICAgICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIHByb3RvLmFsbE9mZiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHM7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5fb25jZUV2ZW50cztcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgcmV0dXJuIEV2RW1pdHRlcjtcblxuICAgICAgICB9KSk7XG5cbiAgICAgIH0sIHt9XSwgXCJsYzdmXCI6IFtmdW5jdGlvbiAocmVxdWlyZSwgbW9kdWxlLCBleHBvcnRzKSB7XG4gICAgICAgIHZhciBkZWZpbmU7XG4gICAgICAgIC8qIVxuICAgICAgICAgKiBpbWFnZXNMb2FkZWQgdjQuMS40XG4gICAgICAgICAqIEphdmFTY3JpcHQgaXMgYWxsIGxpa2UgXCJZb3UgaW1hZ2VzIGFyZSBkb25lIHlldCBvciB3aGF0P1wiXG4gICAgICAgICAqIE1JVCBMaWNlbnNlXG4gICAgICAgICAqL1xuXG4gICAgICAgIChmdW5jdGlvbiAod2luZG93LCBmYWN0b3J5KSB7XG4gICAgICAgICAgJ3VzZSBzdHJpY3QnO1xuICAgICAgICAgIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuXG4gICAgICAgICAgLypnbG9iYWwgZGVmaW5lOiBmYWxzZSwgbW9kdWxlOiBmYWxzZSwgcmVxdWlyZTogZmFsc2UgKi9cblxuICAgICAgICAgIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgICAgICAgLy8gQU1EXG4gICAgICAgICAgICBkZWZpbmUoW1xuICAgICAgICAgICAgICAnZXYtZW1pdHRlci9ldi1lbWl0dGVyJ1xuICAgICAgICAgICAgXSwgZnVuY3Rpb24gKEV2RW1pdHRlcikge1xuICAgICAgICAgICAgICByZXR1cm4gZmFjdG9yeSh3aW5kb3csIEV2RW1pdHRlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgICAgICAgIC8vIENvbW1vbkpTXG4gICAgICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICAgICAgICAgIHdpbmRvdyxcbiAgICAgICAgICAgICAgcmVxdWlyZSgnZXYtZW1pdHRlcicpXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgICAgICAgICAgd2luZG93LmltYWdlc0xvYWRlZCA9IGZhY3RvcnkoXG4gICAgICAgICAgICAgIHdpbmRvdyxcbiAgICAgICAgICAgICAgd2luZG93LkV2RW1pdHRlclxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgfSkodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0aGlzLFxuXG4gICAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIGZhY3RvcnkgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAgICAgICAgIGZ1bmN0aW9uIGZhY3Rvcnkod2luZG93LCBFdkVtaXR0ZXIpIHtcblxuICAgICAgICAgICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgICAgICAgICB2YXIgJCA9IHdpbmRvdy5qUXVlcnk7XG4gICAgICAgICAgICB2YXIgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlO1xuXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBoZWxwZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbiAgICAgICAgICAgIC8vIGV4dGVuZCBvYmplY3RzXG4gICAgICAgICAgICBmdW5jdGlvbiBleHRlbmQoYSwgYikge1xuICAgICAgICAgICAgICBmb3IgKHZhciBwcm9wIGluIGIpIHtcbiAgICAgICAgICAgICAgICBhW3Byb3BdID0gYltwcm9wXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGFycmF5U2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG5cbiAgICAgICAgICAgIC8vIHR1cm4gZWxlbWVudCBvciBub2RlTGlzdCBpbnRvIGFuIGFycmF5XG4gICAgICAgICAgICBmdW5jdGlvbiBtYWtlQXJyYXkob2JqKSB7XG4gICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgICAgICAgICAvLyB1c2Ugb2JqZWN0IGlmIGFscmVhZHkgYW4gYXJyYXlcbiAgICAgICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdmFyIGlzQXJyYXlMaWtlID0gdHlwZW9mIG9iaiA9PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqLmxlbmd0aCA9PSAnbnVtYmVyJztcbiAgICAgICAgICAgICAgaWYgKGlzQXJyYXlMaWtlKSB7XG4gICAgICAgICAgICAgICAgLy8gY29udmVydCBub2RlTGlzdCB0byBhcnJheVxuICAgICAgICAgICAgICAgIHJldHVybiBhcnJheVNsaWNlLmNhbGwob2JqKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIGFycmF5IG9mIHNpbmdsZSBpbmRleFxuICAgICAgICAgICAgICByZXR1cm4gW29ial07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGltYWdlc0xvYWRlZCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7QXJyYXksIEVsZW1lbnQsIE5vZGVMaXN0LCBTdHJpbmd9IGVsZW1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0IG9yIEZ1bmN0aW9ufSBvcHRpb25zIC0gaWYgZnVuY3Rpb24sIHVzZSBhcyBjYWxsYmFja1xuICAgICAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb25BbHdheXMgLSBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBmdW5jdGlvbiBJbWFnZXNMb2FkZWQoZWxlbSwgb3B0aW9ucywgb25BbHdheXMpIHtcbiAgICAgICAgICAgICAgLy8gY29lcmNlIEltYWdlc0xvYWRlZCgpIHdpdGhvdXQgbmV3LCB0byBiZSBuZXcgSW1hZ2VzTG9hZGVkKClcbiAgICAgICAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEltYWdlc0xvYWRlZCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEltYWdlc0xvYWRlZChlbGVtLCBvcHRpb25zLCBvbkFsd2F5cyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLy8gdXNlIGVsZW0gYXMgc2VsZWN0b3Igc3RyaW5nXG4gICAgICAgICAgICAgIHZhciBxdWVyeUVsZW0gPSBlbGVtO1xuICAgICAgICAgICAgICBpZiAodHlwZW9mIGVsZW0gPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBxdWVyeUVsZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsZW0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIGJhaWwgaWYgYmFkIGVsZW1lbnRcbiAgICAgICAgICAgICAgaWYgKCFxdWVyeUVsZW0pIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdCYWQgZWxlbWVudCBmb3IgaW1hZ2VzTG9hZGVkICcgKyAocXVlcnlFbGVtIHx8IGVsZW0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzID0gbWFrZUFycmF5KHF1ZXJ5RWxlbSk7XG4gICAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IGV4dGVuZCh7fSwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgICAgLy8gc2hpZnQgYXJndW1lbnRzIGlmIG5vIG9wdGlvbnMgc2V0XG4gICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb25BbHdheXMgPSBvcHRpb25zO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGV4dGVuZCh0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKG9uQWx3YXlzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vbignYWx3YXlzJywgb25BbHdheXMpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdGhpcy5nZXRJbWFnZXMoKTtcblxuICAgICAgICAgICAgICBpZiAoJCkge1xuICAgICAgICAgICAgICAgIC8vIGFkZCBqUXVlcnkgRGVmZXJyZWQgb2JqZWN0XG4gICAgICAgICAgICAgICAgdGhpcy5qcURlZmVycmVkID0gbmV3ICQuRGVmZXJyZWQoKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIEhBQ0sgY2hlY2sgYXN5bmMgdG8gYWxsb3cgdGltZSB0byBiaW5kIGxpc3RlbmVyc1xuICAgICAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMuY2hlY2suYmluZCh0aGlzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEltYWdlc0xvYWRlZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEV2RW1pdHRlci5wcm90b3R5cGUpO1xuXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQucHJvdG90eXBlLm9wdGlvbnMgPSB7fTtcblxuICAgICAgICAgICAgSW1hZ2VzTG9hZGVkLnByb3RvdHlwZS5nZXRJbWFnZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHRoaXMuaW1hZ2VzID0gW107XG5cbiAgICAgICAgICAgICAgLy8gZmlsdGVyICYgZmluZCBpdGVtcyBpZiB3ZSBoYXZlIGFuIGl0ZW0gc2VsZWN0b3JcbiAgICAgICAgICAgICAgdGhpcy5lbGVtZW50cy5mb3JFYWNoKHRoaXMuYWRkRWxlbWVudEltYWdlcywgdGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7Tm9kZX0gZWxlbWVudFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQucHJvdG90eXBlLmFkZEVsZW1lbnRJbWFnZXMgPSBmdW5jdGlvbiAoZWxlbSkge1xuICAgICAgICAgICAgICAvLyBmaWx0ZXIgc2libGluZ3NcbiAgICAgICAgICAgICAgaWYgKGVsZW0ubm9kZU5hbWUgPT0gJ0lNRycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZEltYWdlKGVsZW0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIGdldCBiYWNrZ3JvdW5kIGltYWdlIG9uIGVsZW1lbnRcbiAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRFbGVtZW50QmFja2dyb3VuZEltYWdlcyhlbGVtKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIGZpbmQgY2hpbGRyZW5cbiAgICAgICAgICAgICAgLy8gbm8gbm9uLWVsZW1lbnQgbm9kZXMsICMxNDNcbiAgICAgICAgICAgICAgdmFyIG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcbiAgICAgICAgICAgICAgaWYgKCFub2RlVHlwZSB8fCAhZWxlbWVudE5vZGVUeXBlc1tub2RlVHlwZV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdmFyIGNoaWxkSW1ncyA9IGVsZW0ucXVlcnlTZWxlY3RvckFsbCgnaW1nJyk7XG4gICAgICAgICAgICAgIC8vIGNvbmNhdCBjaGlsZEVsZW1zIHRvIGZpbHRlckZvdW5kIGFycmF5XG4gICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRJbWdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGltZyA9IGNoaWxkSW1nc1tpXTtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZEltYWdlKGltZyk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAvLyBnZXQgY2hpbGQgYmFja2dyb3VuZCBpbWFnZXNcbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuYmFja2dyb3VuZCA9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IGVsZW0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLm9wdGlvbnMuYmFja2dyb3VuZCk7XG4gICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBjaGlsZHJlbltpXTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRWxlbWVudEJhY2tncm91bmRJbWFnZXMoY2hpbGQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdmFyIGVsZW1lbnROb2RlVHlwZXMgPSB7XG4gICAgICAgICAgICAgIDE6IHRydWUsXG4gICAgICAgICAgICAgIDk6IHRydWUsXG4gICAgICAgICAgICAgIDExOiB0cnVlXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQucHJvdG90eXBlLmFkZEVsZW1lbnRCYWNrZ3JvdW5kSW1hZ2VzID0gZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgICAgICAgICAgdmFyIHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtKTtcbiAgICAgICAgICAgICAgaWYgKCFzdHlsZSkge1xuICAgICAgICAgICAgICAgIC8vIEZpcmVmb3ggcmV0dXJucyBudWxsIGlmIGluIGEgaGlkZGVuIGlmcmFtZSBodHRwczovL2J1Z3ppbC5sYS81NDgzOTdcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLy8gZ2V0IHVybCBpbnNpZGUgdXJsKFwiLi4uXCIpXG4gICAgICAgICAgICAgIHZhciByZVVSTCA9IC91cmxcXCgoWydcIl0pPyguKj8pXFwxXFwpL2dpO1xuICAgICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IHJlVVJMLmV4ZWMoc3R5bGUuYmFja2dyb3VuZEltYWdlKTtcbiAgICAgICAgICAgICAgd2hpbGUgKG1hdGNoZXMgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gbWF0Y2hlcyAmJiBtYXRjaGVzWzJdO1xuICAgICAgICAgICAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQmFja2dyb3VuZCh1cmwsIGVsZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtYXRjaGVzID0gcmVVUkwuZXhlYyhzdHlsZS5iYWNrZ3JvdW5kSW1hZ2UpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7SW1hZ2V9IGltZ1xuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQucHJvdG90eXBlLmFkZEltYWdlID0gZnVuY3Rpb24gKGltZykge1xuICAgICAgICAgICAgICB2YXIgbG9hZGluZ0ltYWdlID0gbmV3IExvYWRpbmdJbWFnZShpbWcpO1xuICAgICAgICAgICAgICB0aGlzLmltYWdlcy5wdXNoKGxvYWRpbmdJbWFnZSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQucHJvdG90eXBlLmFkZEJhY2tncm91bmQgPSBmdW5jdGlvbiAodXJsLCBlbGVtKSB7XG4gICAgICAgICAgICAgIHZhciBiYWNrZ3JvdW5kID0gbmV3IEJhY2tncm91bmQodXJsLCBlbGVtKTtcbiAgICAgICAgICAgICAgdGhpcy5pbWFnZXMucHVzaChiYWNrZ3JvdW5kKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIEltYWdlc0xvYWRlZC5wcm90b3R5cGUuY2hlY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NlZENvdW50ID0gMDtcbiAgICAgICAgICAgICAgdGhpcy5oYXNBbnlCcm9rZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgLy8gY29tcGxldGUgaWYgbm8gaW1hZ2VzXG4gICAgICAgICAgICAgIGlmICghdGhpcy5pbWFnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGZ1bmN0aW9uIG9uUHJvZ3Jlc3MoaW1hZ2UsIGVsZW0sIG1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICAvLyBIQUNLIC0gQ2hyb21lIHRyaWdnZXJzIGV2ZW50IGJlZm9yZSBvYmplY3QgcHJvcGVydGllcyBoYXZlIGNoYW5nZWQuICM4M1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgX3RoaXMucHJvZ3Jlc3MoaW1hZ2UsIGVsZW0sIG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdGhpcy5pbWFnZXMuZm9yRWFjaChmdW5jdGlvbiAobG9hZGluZ0ltYWdlKSB7XG4gICAgICAgICAgICAgICAgbG9hZGluZ0ltYWdlLm9uY2UoJ3Byb2dyZXNzJywgb25Qcm9ncmVzcyk7XG4gICAgICAgICAgICAgICAgbG9hZGluZ0ltYWdlLmNoZWNrKCk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgSW1hZ2VzTG9hZGVkLnByb3RvdHlwZS5wcm9ncmVzcyA9IGZ1bmN0aW9uIChpbWFnZSwgZWxlbSwgbWVzc2FnZSkge1xuICAgICAgICAgICAgICB0aGlzLnByb2dyZXNzZWRDb3VudCsrO1xuICAgICAgICAgICAgICB0aGlzLmhhc0FueUJyb2tlbiA9IHRoaXMuaGFzQW55QnJva2VuIHx8ICFpbWFnZS5pc0xvYWRlZDtcbiAgICAgICAgICAgICAgLy8gcHJvZ3Jlc3MgZXZlbnRcbiAgICAgICAgICAgICAgdGhpcy5lbWl0RXZlbnQoJ3Byb2dyZXNzJywgW3RoaXMsIGltYWdlLCBlbGVtXSk7XG4gICAgICAgICAgICAgIGlmICh0aGlzLmpxRGVmZXJyZWQgJiYgdGhpcy5qcURlZmVycmVkLm5vdGlmeSkge1xuICAgICAgICAgICAgICAgIHRoaXMuanFEZWZlcnJlZC5ub3RpZnkodGhpcywgaW1hZ2UpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIGNoZWNrIGlmIGNvbXBsZXRlZFxuICAgICAgICAgICAgICBpZiAodGhpcy5wcm9ncmVzc2VkQ291bnQgPT0gdGhpcy5pbWFnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kZWJ1ZyAmJiBjb25zb2xlKSB7XG4gICAgICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi9jb25zb2xlLmxvZyguLi5vb19vbyhgNTQ4ODc5MDg4XzY3N18xNl82NzdfNjRfNGAsJ3Byb2dyZXNzOiAnICsgbWVzc2FnZSwgaW1hZ2UsIGVsZW0pKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgSW1hZ2VzTG9hZGVkLnByb3RvdHlwZS5jb21wbGV0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdmFyIGV2ZW50TmFtZSA9IHRoaXMuaGFzQW55QnJva2VuID8gJ2ZhaWwnIDogJ2RvbmUnO1xuICAgICAgICAgICAgICB0aGlzLmlzQ29tcGxldGUgPSB0cnVlO1xuICAgICAgICAgICAgICB0aGlzLmVtaXRFdmVudChldmVudE5hbWUsIFt0aGlzXSk7XG4gICAgICAgICAgICAgIHRoaXMuZW1pdEV2ZW50KCdhbHdheXMnLCBbdGhpc10pO1xuICAgICAgICAgICAgICBpZiAodGhpcy5qcURlZmVycmVkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGpxTWV0aG9kID0gdGhpcy5oYXNBbnlCcm9rZW4gPyAncmVqZWN0JyA6ICdyZXNvbHZlJztcbiAgICAgICAgICAgICAgICB0aGlzLmpxRGVmZXJyZWRbanFNZXRob2RdKHRoaXMpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAgICAgICAgICAgZnVuY3Rpb24gTG9hZGluZ0ltYWdlKGltZykge1xuICAgICAgICAgICAgICB0aGlzLmltZyA9IGltZztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgTG9hZGluZ0ltYWdlLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRXZFbWl0dGVyLnByb3RvdHlwZSk7XG5cbiAgICAgICAgICAgIExvYWRpbmdJbWFnZS5wcm90b3R5cGUuY2hlY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIC8vIElmIGNvbXBsZXRlIGlzIHRydWUgYW5kIGJyb3dzZXIgc3VwcG9ydHMgbmF0dXJhbCBzaXplcyxcbiAgICAgICAgICAgICAgLy8gdHJ5IHRvIGNoZWNrIGZvciBpbWFnZSBzdGF0dXMgbWFudWFsbHkuXG4gICAgICAgICAgICAgIHZhciBpc0NvbXBsZXRlID0gdGhpcy5nZXRJc0ltYWdlQ29tcGxldGUoKTtcbiAgICAgICAgICAgICAgaWYgKGlzQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICAvLyByZXBvcnQgYmFzZWQgb24gbmF0dXJhbFdpZHRoXG4gICAgICAgICAgICAgICAgdGhpcy5jb25maXJtKHRoaXMuaW1nLm5hdHVyYWxXaWR0aCAhPT0gMCwgJ25hdHVyYWxXaWR0aCcpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIElmIG5vbmUgb2YgdGhlIGNoZWNrcyBhYm92ZSBtYXRjaGVkLCBzaW11bGF0ZSBsb2FkaW5nIG9uIGRldGFjaGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgIHRoaXMucHJveHlJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgICB0aGlzLnByb3h5SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHRoaXMpO1xuICAgICAgICAgICAgICB0aGlzLnByb3h5SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB0aGlzKTtcbiAgICAgICAgICAgICAgLy8gYmluZCB0byBpbWFnZSBhcyB3ZWxsIGZvciBGaXJlZm94LiAjMTkxXG4gICAgICAgICAgICAgIHRoaXMuaW1nLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCB0aGlzKTtcbiAgICAgICAgICAgICAgdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB0aGlzKTtcbiAgICAgICAgICAgICAgdGhpcy5wcm94eUltYWdlLnNyYyA9IHRoaXMuaW1nLnNyYztcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIExvYWRpbmdJbWFnZS5wcm90b3R5cGUuZ2V0SXNJbWFnZUNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAvLyBjaGVjayBmb3Igbm9uLXplcm8sIG5vbi11bmRlZmluZWQgbmF0dXJhbFdpZHRoXG4gICAgICAgICAgICAgIC8vIGZpeGVzIFNhZmFyaStJbmZpbml0ZVNjcm9sbCtNYXNvbnJ5IGJ1ZyBpbmZpbml0ZS1zY3JvbGwjNjcxXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLmltZy5jb21wbGV0ZSAmJiB0aGlzLmltZy5uYXR1cmFsV2lkdGg7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBMb2FkaW5nSW1hZ2UucHJvdG90eXBlLmNvbmZpcm0gPSBmdW5jdGlvbiAoaXNMb2FkZWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgdGhpcy5pc0xvYWRlZCA9IGlzTG9hZGVkO1xuICAgICAgICAgICAgICB0aGlzLmVtaXRFdmVudCgncHJvZ3Jlc3MnLCBbdGhpcywgdGhpcy5pbWcsIG1lc3NhZ2VdKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIC0tLS0tIGV2ZW50cyAtLS0tLSAvL1xuXG4gICAgICAgICAgICAvLyB0cmlnZ2VyIHNwZWNpZmllZCBoYW5kbGVyIGZvciBldmVudCB0eXBlXG4gICAgICAgICAgICBMb2FkaW5nSW1hZ2UucHJvdG90eXBlLmhhbmRsZUV2ZW50ID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgIHZhciBtZXRob2QgPSAnb24nICsgZXZlbnQudHlwZTtcbiAgICAgICAgICAgICAgaWYgKHRoaXNbbWV0aG9kXSkge1xuICAgICAgICAgICAgICAgIHRoaXNbbWV0aG9kXShldmVudCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIExvYWRpbmdJbWFnZS5wcm90b3R5cGUub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICB0aGlzLmNvbmZpcm0odHJ1ZSwgJ29ubG9hZCcpO1xuICAgICAgICAgICAgICB0aGlzLnVuYmluZEV2ZW50cygpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgTG9hZGluZ0ltYWdlLnByb3RvdHlwZS5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICB0aGlzLmNvbmZpcm0oZmFsc2UsICdvbmVycm9yJyk7XG4gICAgICAgICAgICAgIHRoaXMudW5iaW5kRXZlbnRzKCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBMb2FkaW5nSW1hZ2UucHJvdG90eXBlLnVuYmluZEV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGhpcy5wcm94eUltYWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCB0aGlzKTtcbiAgICAgICAgICAgICAgdGhpcy5wcm94eUltYWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgdGhpcyk7XG4gICAgICAgICAgICAgIHRoaXMuaW1nLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCB0aGlzKTtcbiAgICAgICAgICAgICAgdGhpcy5pbWcucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCB0aGlzKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEJhY2tncm91bmQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAgICAgICAgICAgZnVuY3Rpb24gQmFja2dyb3VuZCh1cmwsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgICAgICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgICAgICAgIHRoaXMuaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGluaGVyaXQgTG9hZGluZ0ltYWdlIHByb3RvdHlwZVxuICAgICAgICAgICAgQmFja2dyb3VuZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKExvYWRpbmdJbWFnZS5wcm90b3R5cGUpO1xuXG4gICAgICAgICAgICBCYWNrZ3JvdW5kLnByb3RvdHlwZS5jaGVjayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHRoaXMpO1xuICAgICAgICAgICAgICB0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIHRoaXMpO1xuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSB0aGlzLnVybDtcbiAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgaW1hZ2UgaXMgYWxyZWFkeSBjb21wbGV0ZVxuICAgICAgICAgICAgICB2YXIgaXNDb21wbGV0ZSA9IHRoaXMuZ2V0SXNJbWFnZUNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgIGlmIChpc0NvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maXJtKHRoaXMuaW1nLm5hdHVyYWxXaWR0aCAhPT0gMCwgJ25hdHVyYWxXaWR0aCcpO1xuICAgICAgICAgICAgICAgIHRoaXMudW5iaW5kRXZlbnRzKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIEJhY2tncm91bmQucHJvdG90eXBlLnVuYmluZEV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGhpcy5pbWcucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIHRoaXMpO1xuICAgICAgICAgICAgICB0aGlzLmltZy5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIHRoaXMpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgQmFja2dyb3VuZC5wcm90b3R5cGUuY29uZmlybSA9IGZ1bmN0aW9uIChpc0xvYWRlZCwgbWVzc2FnZSkge1xuICAgICAgICAgICAgICB0aGlzLmlzTG9hZGVkID0gaXNMb2FkZWQ7XG4gICAgICAgICAgICAgIHRoaXMuZW1pdEV2ZW50KCdwcm9ncmVzcycsIFt0aGlzLCB0aGlzLmVsZW1lbnQsIG1lc3NhZ2VdKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGpRdWVyeSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQubWFrZUpRdWVyeVBsdWdpbiA9IGZ1bmN0aW9uIChqUXVlcnkpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5ID0galF1ZXJ5IHx8IHdpbmRvdy5qUXVlcnk7XG4gICAgICAgICAgICAgIGlmICghalF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIHNldCBsb2NhbCB2YXJpYWJsZVxuICAgICAgICAgICAgICAkID0galF1ZXJ5O1xuICAgICAgICAgICAgICAvLyAkKCkuaW1hZ2VzTG9hZGVkKClcbiAgICAgICAgICAgICAgJC5mbi5pbWFnZXNMb2FkZWQgPSBmdW5jdGlvbiAob3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5zdGFuY2UgPSBuZXcgSW1hZ2VzTG9hZGVkKHRoaXMsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5zdGFuY2UuanFEZWZlcnJlZC5wcm9taXNlKCQodGhpcykpO1xuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIHRyeSBtYWtpbmcgcGx1Z2luXG4gICAgICAgICAgICBJbWFnZXNMb2FkZWQubWFrZUpRdWVyeVBsdWdpbigpO1xuXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuICAgICAgICAgICAgcmV0dXJuIEltYWdlc0xvYWRlZDtcblxuICAgICAgICAgIH0pO1xuXG4gICAgICB9LCB7IFwiZXYtZW1pdHRlclwiOiBcIkJRdndcIiB9XSwgXCI4TWdUXCI6IFtmdW5jdGlvbiAocmVxdWlyZSwgbW9kdWxlLCBleHBvcnRzKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBleHBvcnRzLnByZWxvYWRJbWFnZXMgPSB2b2lkIDA7XG5cbiAgICAgICAgdmFyIGltYWdlc0xvYWRlZCA9IHJlcXVpcmUoJ2ltYWdlc2xvYWRlZCcpOyAvLyBQcmVsb2FkIGltYWdlc1xuXG5cbiAgICAgICAgdmFyIHByZWxvYWRJbWFnZXMgPSBmdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKCkge1xuICAgICAgICAgIHZhciBzZWxlY3RvciA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJ2ltZyc7XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgICAgICBpbWFnZXNMb2FkZWQoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvciksIHtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogdHJ1ZVxuICAgICAgICAgICAgfSwgcmVzb2x2ZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgZXhwb3J0cy5wcmVsb2FkSW1hZ2VzID0gcHJlbG9hZEltYWdlcztcbiAgICAgIH0sIHsgXCJpbWFnZXNsb2FkZWRcIjogXCJsYzdmXCIgfV0sIFwicXIrMlwiOiBbZnVuY3Rpb24gKHJlcXVpcmUsIG1vZHVsZSwgZXhwb3J0cykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgZXhwb3J0cy5OYXZpZ2F0aW9uID0gdm9pZCAwO1xuXG4gICAgICAgIGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbiAgICAgICAgZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbiAgICAgICAgdmFyIE5hdmlnYXRpb24gPVxuICAgICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBOYXZpZ2F0aW9uKGVsKSB7XG4gICAgICAgICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOYXZpZ2F0aW9uKTtcblxuICAgICAgICAgICAgICB0aGlzLkRPTSA9IHtcbiAgICAgICAgICAgICAgICBlbDogZWxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgdGhpcy5ET00uY3RybHMgPSB7XG4gICAgICAgICAgICAgICAgbmV4dDogdGhpcy5ET00uZWwucXVlcnlTZWxlY3RvcignLnNsaWRlcy1uYXZfX2J1dHRvbi0tbmV4dCcpLFxuICAgICAgICAgICAgICAgIHByZXY6IHRoaXMuRE9NLmVsLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZXMtbmF2X19idXR0b24tLXByZXYnKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICB0aGlzLkRPTS5jdXJyZW50ID0gdGhpcy5ET00uZWwucXVlcnlTZWxlY3RvcignLnNsaWRlcy1uYXZfX2luZGV4LWN1cnJlbnQnKTtcbiAgICAgICAgICAgICAgdGhpcy5ET00udG90YWwgPSB0aGlzLkRPTS5lbC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVzLW5hdl9faW5kZXgtdG90YWwnKTtcbiAgICAgICAgICAgIH0gLy8gdXBkYXRlcyB0aGUgY3VycmVudCB2YWx1ZVxuXG5cbiAgICAgICAgICAgIF9jcmVhdGVDbGFzcyhOYXZpZ2F0aW9uLCBbe1xuICAgICAgICAgICAgICBrZXk6IFwidXBkYXRlQ3VycmVudFwiLFxuICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlQ3VycmVudChwb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuRE9NLmN1cnJlbnQuaW5uZXJIVE1MID0gcG9zaXRpb24gPCAxMCA/IFwiMFwiLmNvbmNhdChwb3NpdGlvbiArIDEpIDogcG9zaXRpb247XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dKTtcblxuICAgICAgICAgICAgcmV0dXJuIE5hdmlnYXRpb247XG4gICAgICAgICAgfSgpO1xuXG4gICAgICAgIGV4cG9ydHMuTmF2aWdhdGlvbiA9IE5hdmlnYXRpb247XG4gICAgICB9LCB7fV0sIFwiRHJucVwiOiBbZnVuY3Rpb24gKHJlcXVpcmUsIG1vZHVsZSwgZXhwb3J0cykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgZXhwb3J0cy5TbGlkZSA9IHZvaWQgMDtcblxuICAgICAgICBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4gICAgICAgIHZhciBTbGlkZSA9IGZ1bmN0aW9uIFNsaWRlKGVsKSB7XG4gICAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNsaWRlKTtcblxuICAgICAgICAgIHRoaXMuRE9NID0ge1xuICAgICAgICAgICAgZWw6IGVsXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLkRPTS5pbWdXcmFwID0gdGhpcy5ET00uZWwucXVlcnlTZWxlY3RvcignLnNsaWRlX19pbWctd3JhcCcpO1xuICAgICAgICAgIHRoaXMuRE9NLmltZyA9IHRoaXMuRE9NLmltZ1dyYXAucXVlcnlTZWxlY3RvcignLnNsaWRlX19pbWcnKTtcbiAgICAgICAgICB0aGlzLkRPTS5oZWFkbGluZSA9IHRoaXMuRE9NLmVsLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZXNfX2NhcHRpb24taGVhZGxpbmUnKTtcbiAgICAgICAgICB0aGlzLkRPTS50ZXh0ID0gdGhpcy5ET00uaGVhZGxpbmUucXVlcnlTZWxlY3RvckFsbCgnLnRleHQtcm93ID4gc3BhbicpO1xuICAgICAgICAgIHRoaXMuRE9NLmxpbmsgPSB0aGlzLkRPTS5lbC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVzX19jYXB0aW9uLWxpbmsnKTtcbiAgICAgICAgfTtcblxuICAgICAgICBleHBvcnRzLlNsaWRlID0gU2xpZGU7XG4gICAgICB9LCB7fV0sIFwiRlJwT1wiOiBbZnVuY3Rpb24gKHJlcXVpcmUsIG1vZHVsZSwgZXhwb3J0cykge1xuICAgICAgICAvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbiAgICAgICAgLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuICAgICAgICAvLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbiAgICAgICAgLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuICAgICAgICAvLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4gICAgICAgIC8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuICAgICAgICAvLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbiAgICAgICAgLy9cbiAgICAgICAgLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbiAgICAgICAgLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gICAgICAgIC8vXG4gICAgICAgIC8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1NcbiAgICAgICAgLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuICAgICAgICAvLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4gICAgICAgIC8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuICAgICAgICAvLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1JcbiAgICAgICAgLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuICAgICAgICAvLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuICAgICAgICAndXNlIHN0cmljdCc7XG5cbiAgICAgICAgdmFyIFIgPSB0eXBlb2YgUmVmbGVjdCA9PT0gJ29iamVjdCcgPyBSZWZsZWN0IDogbnVsbDtcbiAgICAgICAgdmFyIFJlZmxlY3RBcHBseSA9IFIgJiYgdHlwZW9mIFIuYXBwbHkgPT09ICdmdW5jdGlvbicgPyBSLmFwcGx5IDogZnVuY3Rpb24gUmVmbGVjdEFwcGx5KHRhcmdldCwgcmVjZWl2ZXIsIGFyZ3MpIHtcbiAgICAgICAgICByZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmNhbGwodGFyZ2V0LCByZWNlaXZlciwgYXJncyk7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBSZWZsZWN0T3duS2V5cztcblxuICAgICAgICBpZiAoUiAmJiB0eXBlb2YgUi5vd25LZXlzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgUmVmbGVjdE93bktleXMgPSBSLm93bktleXM7XG4gICAgICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgIFJlZmxlY3RPd25LZXlzID0gZnVuY3Rpb24gUmVmbGVjdE93bktleXModGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KS5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0YXJnZXQpKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIFJlZmxlY3RPd25LZXlzID0gZnVuY3Rpb24gUmVmbGVjdE93bktleXModGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gUHJvY2Vzc0VtaXRXYXJuaW5nKHdhcm5pbmcpIHtcbiAgICAgICAgICBpZiAoY29uc29sZSAmJiBjb25zb2xlLndhcm4pIGNvbnNvbGUud2Fybih3YXJuaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBOdW1iZXJJc05hTiA9IE51bWJlci5pc05hTiB8fCBmdW5jdGlvbiBOdW1iZXJJc05hTih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gdmFsdWU7XG4gICAgICAgIH07XG5cbiAgICAgICAgZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICAgICAgICAgIEV2ZW50RW1pdHRlci5pbml0LmNhbGwodGhpcyk7XG4gICAgICAgIH1cblxuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjtcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMub25jZSA9IG9uY2U7IC8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuMTAueFxuXG4gICAgICAgIEV2ZW50RW1pdHRlci5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuX2V2ZW50cyA9IHVuZGVmaW5lZDtcbiAgICAgICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzQ291bnQgPSAwO1xuICAgICAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7IC8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZVxuICAgICAgICAvLyBhZGRlZCB0byBpdC4gVGhpcyBpcyBhIHVzZWZ1bCBkZWZhdWx0IHdoaWNoIGhlbHBzIGZpbmRpbmcgbWVtb3J5IGxlYWtzLlxuXG4gICAgICAgIHZhciBkZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbiAgICAgICAgZnVuY3Rpb24gY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcikge1xuICAgICAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uLiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgbGlzdGVuZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFdmVudEVtaXR0ZXIsICdkZWZhdWx0TWF4TGlzdGVuZXJzJywge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVmYXVsdE1heExpc3RlbmVycztcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNldDogZnVuY3Rpb24gKGFyZykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmcgIT09ICdudW1iZXInIHx8IGFyZyA8IDAgfHwgTnVtYmVySXNOYU4oYXJnKSkge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIG9mIFwiZGVmYXVsdE1heExpc3RlbmVyc1wiIGlzIG91dCBvZiByYW5nZS4gSXQgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBudW1iZXIuIFJlY2VpdmVkICcgKyBhcmcgKyAnLicpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBkZWZhdWx0TWF4TGlzdGVuZXJzID0gYXJnO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgRXZlbnRFbWl0dGVyLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKHRoaXMuX2V2ZW50cyA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX2V2ZW50cyA9PT0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLl9ldmVudHMpIHtcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5fbWF4TGlzdGVuZXJzID0gdGhpcy5fbWF4TGlzdGVuZXJzIHx8IHVuZGVmaW5lZDtcbiAgICAgICAgfTsgLy8gT2J2aW91c2x5IG5vdCBhbGwgRW1pdHRlcnMgc2hvdWxkIGJlIGxpbWl0ZWQgdG8gMTAuIFRoaXMgZnVuY3Rpb24gYWxsb3dzXG4gICAgICAgIC8vIHRoYXQgdG8gYmUgaW5jcmVhc2VkLiBTZXQgdG8gemVybyBmb3IgdW5saW1pdGVkLlxuXG5cbiAgICAgICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnMgPSBmdW5jdGlvbiBzZXRNYXhMaXN0ZW5lcnMobikge1xuICAgICAgICAgIGlmICh0eXBlb2YgbiAhPT0gJ251bWJlcicgfHwgbiA8IDAgfHwgTnVtYmVySXNOYU4obikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgb2YgXCJuXCIgaXMgb3V0IG9mIHJhbmdlLiBJdCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIG51bWJlci4gUmVjZWl2ZWQgJyArIG4gKyAnLicpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuX21heExpc3RlbmVycyA9IG47XG4gICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgZnVuY3Rpb24gX2dldE1heExpc3RlbmVycyh0aGF0KSB7XG4gICAgICAgICAgaWYgKHRoYXQuX21heExpc3RlbmVycyA9PT0gdW5kZWZpbmVkKSByZXR1cm4gRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gICAgICAgICAgcmV0dXJuIHRoYXQuX21heExpc3RlbmVycztcbiAgICAgICAgfVxuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuZ2V0TWF4TGlzdGVuZXJzID0gZnVuY3Rpb24gZ2V0TWF4TGlzdGVuZXJzKCkge1xuICAgICAgICAgIHJldHVybiBfZ2V0TWF4TGlzdGVuZXJzKHRoaXMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIGVtaXQodHlwZSkge1xuICAgICAgICAgIHZhciBhcmdzID0gW107XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XG5cbiAgICAgICAgICB2YXIgZG9FcnJvciA9IHR5cGUgPT09ICdlcnJvcic7XG4gICAgICAgICAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcbiAgICAgICAgICBpZiAoZXZlbnRzICE9PSB1bmRlZmluZWQpIGRvRXJyb3IgPSBkb0Vycm9yICYmIGV2ZW50cy5lcnJvciA9PT0gdW5kZWZpbmVkOyBlbHNlIGlmICghZG9FcnJvcikgcmV0dXJuIGZhbHNlOyAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuXG5cbiAgICAgICAgICBpZiAoZG9FcnJvcikge1xuICAgICAgICAgICAgdmFyIGVyO1xuICAgICAgICAgICAgaWYgKGFyZ3MubGVuZ3RoID4gMCkgZXIgPSBhcmdzWzBdO1xuXG4gICAgICAgICAgICBpZiAoZXIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgICAvLyBOb3RlOiBUaGUgY29tbWVudHMgb24gdGhlIGB0aHJvd2AgbGluZXMgYXJlIGludGVudGlvbmFsLCB0aGV5IHNob3dcbiAgICAgICAgICAgICAgLy8gdXAgaW4gTm9kZSdzIG91dHB1dCBpZiB0aGlzIHJlc3VsdHMgaW4gYW4gdW5oYW5kbGVkIGV4Y2VwdGlvbi5cbiAgICAgICAgICAgICAgdGhyb3cgZXI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gICAgICAgICAgICB9IC8vIEF0IGxlYXN0IGdpdmUgc29tZSBraW5kIG9mIGNvbnRleHQgdG8gdGhlIHVzZXJcblxuXG4gICAgICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdVbmhhbmRsZWQgZXJyb3IuJyArIChlciA/ICcgKCcgKyBlci5tZXNzYWdlICsgJyknIDogJycpKTtcbiAgICAgICAgICAgIGVyci5jb250ZXh0ID0gZXI7XG4gICAgICAgICAgICB0aHJvdyBlcnI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIGhhbmRsZXIgPSBldmVudHNbdHlwZV07XG4gICAgICAgICAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBSZWZsZWN0QXBwbHkoaGFuZGxlciwgdGhpcywgYXJncyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBsZW4gPSBoYW5kbGVyLmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBsaXN0ZW5lcnMgPSBhcnJheUNsb25lKGhhbmRsZXIsIGxlbik7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIFJlZmxlY3RBcHBseShsaXN0ZW5lcnNbaV0sIHRoaXMsIGFyZ3MpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIF9hZGRMaXN0ZW5lcih0YXJnZXQsIHR5cGUsIGxpc3RlbmVyLCBwcmVwZW5kKSB7XG4gICAgICAgICAgdmFyIG07XG4gICAgICAgICAgdmFyIGV2ZW50cztcbiAgICAgICAgICB2YXIgZXhpc3Rpbmc7XG4gICAgICAgICAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgICAgICAgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHM7XG5cbiAgICAgICAgICBpZiAoZXZlbnRzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgIHRhcmdldC5fZXZlbnRzQ291bnQgPSAwO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBUbyBhdm9pZCByZWN1cnNpb24gaW4gdGhlIGNhc2UgdGhhdCB0eXBlID09PSBcIm5ld0xpc3RlbmVyXCIhIEJlZm9yZVxuICAgICAgICAgICAgLy8gYWRkaW5nIGl0IHRvIHRoZSBsaXN0ZW5lcnMsIGZpcnN0IGVtaXQgXCJuZXdMaXN0ZW5lclwiLlxuICAgICAgICAgICAgaWYgKGV2ZW50cy5uZXdMaXN0ZW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIHRhcmdldC5lbWl0KCduZXdMaXN0ZW5lcicsIHR5cGUsIGxpc3RlbmVyLmxpc3RlbmVyID8gbGlzdGVuZXIubGlzdGVuZXIgOiBsaXN0ZW5lcik7IC8vIFJlLWFzc2lnbiBgZXZlbnRzYCBiZWNhdXNlIGEgbmV3TGlzdGVuZXIgaGFuZGxlciBjb3VsZCBoYXZlIGNhdXNlZCB0aGVcbiAgICAgICAgICAgICAgLy8gdGhpcy5fZXZlbnRzIHRvIGJlIGFzc2lnbmVkIHRvIGEgbmV3IG9iamVjdFxuXG4gICAgICAgICAgICAgIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBleGlzdGluZyA9IGV2ZW50c1t0eXBlXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoZXhpc3RpbmcgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gT3B0aW1pemUgdGhlIGNhc2Ugb2Ygb25lIGxpc3RlbmVyLiBEb24ndCBuZWVkIHRoZSBleHRyYSBhcnJheSBvYmplY3QuXG4gICAgICAgICAgICBleGlzdGluZyA9IGV2ZW50c1t0eXBlXSA9IGxpc3RlbmVyO1xuICAgICAgICAgICAgKyt0YXJnZXQuX2V2ZW50c0NvdW50O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGV4aXN0aW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgIC8vIEFkZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQsIG5lZWQgdG8gY2hhbmdlIHRvIGFycmF5LlxuICAgICAgICAgICAgICBleGlzdGluZyA9IGV2ZW50c1t0eXBlXSA9IHByZXBlbmQgPyBbbGlzdGVuZXIsIGV4aXN0aW5nXSA6IFtleGlzdGluZywgbGlzdGVuZXJdOyAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGdvdCBhbiBhcnJheSwganVzdCBhcHBlbmQuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHByZXBlbmQpIHtcbiAgICAgICAgICAgICAgZXhpc3RpbmcudW5zaGlmdChsaXN0ZW5lcik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBleGlzdGluZy5wdXNoKGxpc3RlbmVyKTtcbiAgICAgICAgICAgIH0gLy8gQ2hlY2sgZm9yIGxpc3RlbmVyIGxlYWtcblxuXG4gICAgICAgICAgICBtID0gX2dldE1heExpc3RlbmVycyh0YXJnZXQpO1xuXG4gICAgICAgICAgICBpZiAobSA+IDAgJiYgZXhpc3RpbmcubGVuZ3RoID4gbSAmJiAhZXhpc3Rpbmcud2FybmVkKSB7XG4gICAgICAgICAgICAgIGV4aXN0aW5nLndhcm5lZCA9IHRydWU7IC8vIE5vIGVycm9yIGNvZGUgZm9yIHRoaXMgc2luY2UgaXQgaXMgYSBXYXJuaW5nXG4gICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuXG4gICAgICAgICAgICAgIHZhciB3ID0gbmV3IEVycm9yKCdQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICcgKyBleGlzdGluZy5sZW5ndGggKyAnICcgKyBTdHJpbmcodHlwZSkgKyAnIGxpc3RlbmVycyAnICsgJ2FkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byAnICsgJ2luY3JlYXNlIGxpbWl0Jyk7XG4gICAgICAgICAgICAgIHcubmFtZSA9ICdNYXhMaXN0ZW5lcnNFeGNlZWRlZFdhcm5pbmcnO1xuICAgICAgICAgICAgICB3LmVtaXR0ZXIgPSB0YXJnZXQ7XG4gICAgICAgICAgICAgIHcudHlwZSA9IHR5cGU7XG4gICAgICAgICAgICAgIHcuY291bnQgPSBleGlzdGluZy5sZW5ndGg7XG4gICAgICAgICAgICAgIFByb2Nlc3NFbWl0V2FybmluZyh3KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICB9XG5cbiAgICAgICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgICAgcmV0dXJuIF9hZGRMaXN0ZW5lcih0aGlzLCB0eXBlLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICB9O1xuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyO1xuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUucHJlcGVuZExpc3RlbmVyID0gZnVuY3Rpb24gcHJlcGVuZExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgICAgcmV0dXJuIF9hZGRMaXN0ZW5lcih0aGlzLCB0eXBlLCBsaXN0ZW5lciwgdHJ1ZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgZnVuY3Rpb24gb25jZVdyYXBwZXIoKSB7XG4gICAgICAgICAgaWYgKCF0aGlzLmZpcmVkKSB7XG4gICAgICAgICAgICB0aGlzLnRhcmdldC5yZW1vdmVMaXN0ZW5lcih0aGlzLnR5cGUsIHRoaXMud3JhcEZuKTtcbiAgICAgICAgICAgIHRoaXMuZmlyZWQgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHJldHVybiB0aGlzLmxpc3RlbmVyLmNhbGwodGhpcy50YXJnZXQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuYXBwbHkodGhpcy50YXJnZXQsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gX29uY2VXcmFwKHRhcmdldCwgdHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgICB2YXIgc3RhdGUgPSB7XG4gICAgICAgICAgICBmaXJlZDogZmFsc2UsXG4gICAgICAgICAgICB3cmFwRm46IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0LFxuICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgIGxpc3RlbmVyOiBsaXN0ZW5lclxuICAgICAgICAgIH07XG4gICAgICAgICAgdmFyIHdyYXBwZWQgPSBvbmNlV3JhcHBlci5iaW5kKHN0YXRlKTtcbiAgICAgICAgICB3cmFwcGVkLmxpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgICAgICAgc3RhdGUud3JhcEZuID0gd3JhcHBlZDtcbiAgICAgICAgICByZXR1cm4gd3JhcHBlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uIG9uY2UodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICAgICAgICB0aGlzLm9uKHR5cGUsIF9vbmNlV3JhcCh0aGlzLCB0eXBlLCBsaXN0ZW5lcikpO1xuICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUucHJlcGVuZE9uY2VMaXN0ZW5lciA9IGZ1bmN0aW9uIHByZXBlbmRPbmNlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICAgICAgICB0aGlzLnByZXBlbmRMaXN0ZW5lcih0eXBlLCBfb25jZVdyYXAodGhpcywgdHlwZSwgbGlzdGVuZXIpKTtcbiAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTsgLy8gRW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmIGFuZCBvbmx5IGlmIHRoZSBsaXN0ZW5lciB3YXMgcmVtb3ZlZC5cblxuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPSBmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICAgIHZhciBsaXN0LCBldmVudHMsIHBvc2l0aW9uLCBpLCBvcmlnaW5hbExpc3RlbmVyO1xuICAgICAgICAgIGNoZWNrTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgICAgIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcbiAgICAgICAgICBpZiAoZXZlbnRzID09PSB1bmRlZmluZWQpIHJldHVybiB0aGlzO1xuICAgICAgICAgIGxpc3QgPSBldmVudHNbdHlwZV07XG4gICAgICAgICAgaWYgKGxpc3QgPT09IHVuZGVmaW5lZCkgcmV0dXJuIHRoaXM7XG5cbiAgICAgICAgICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHwgbGlzdC5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGlmICgtLXRoaXMuX2V2ZW50c0NvdW50ID09PSAwKSB0aGlzLl9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpOyBlbHNlIHtcbiAgICAgICAgICAgICAgZGVsZXRlIGV2ZW50c1t0eXBlXTtcbiAgICAgICAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lcikgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIGxpc3QubGlzdGVuZXIgfHwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGxpc3QgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gLTE7XG5cbiAgICAgICAgICAgIGZvciAoaSA9IGxpc3QubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgICAgaWYgKGxpc3RbaV0gPT09IGxpc3RlbmVyIHx8IGxpc3RbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgb3JpZ2luYWxMaXN0ZW5lciA9IGxpc3RbaV0ubGlzdGVuZXI7XG4gICAgICAgICAgICAgICAgcG9zaXRpb24gPSBpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwb3NpdGlvbiA8IDApIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgaWYgKHBvc2l0aW9uID09PSAwKSBsaXN0LnNoaWZ0KCk7IGVsc2Uge1xuICAgICAgICAgICAgICBzcGxpY2VPbmUobGlzdCwgcG9zaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxpc3QubGVuZ3RoID09PSAxKSBldmVudHNbdHlwZV0gPSBsaXN0WzBdO1xuICAgICAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lciAhPT0gdW5kZWZpbmVkKSB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgb3JpZ2luYWxMaXN0ZW5lciB8fCBsaXN0ZW5lcik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyO1xuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24gcmVtb3ZlQWxsTGlzdGVuZXJzKHR5cGUpIHtcbiAgICAgICAgICB2YXIgbGlzdGVuZXJzLCBldmVudHMsIGk7XG4gICAgICAgICAgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICAgICAgICAgIGlmIChldmVudHMgPT09IHVuZGVmaW5lZCkgcmV0dXJuIHRoaXM7IC8vIG5vdCBsaXN0ZW5pbmcgZm9yIHJlbW92ZUxpc3RlbmVyLCBubyBuZWVkIHRvIGVtaXRcblxuICAgICAgICAgIGlmIChldmVudHMucmVtb3ZlTGlzdGVuZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzQ291bnQgPSAwO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChldmVudHNbdHlwZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBpZiAoLS10aGlzLl9ldmVudHNDb3VudCA9PT0gMCkgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTsgZWxzZSBkZWxldGUgZXZlbnRzW3R5cGVdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICB9IC8vIGVtaXQgcmVtb3ZlTGlzdGVuZXIgZm9yIGFsbCBsaXN0ZW5lcnMgb24gYWxsIGV2ZW50c1xuXG5cbiAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhldmVudHMpO1xuICAgICAgICAgICAgdmFyIGtleTtcblxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3JlbW92ZUxpc3RlbmVyJykgY29udGludWU7XG4gICAgICAgICAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKGtleSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCdyZW1vdmVMaXN0ZW5lcicpO1xuICAgICAgICAgICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50c0NvdW50ID0gMDtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxpc3RlbmVycyA9IGV2ZW50c1t0eXBlXTtcblxuICAgICAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXJzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVycyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChsaXN0ZW5lcnMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gTElGTyBvcmRlclxuICAgICAgICAgICAgZm9yIChpID0gbGlzdGVuZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICBmdW5jdGlvbiBfbGlzdGVuZXJzKHRhcmdldCwgdHlwZSwgdW53cmFwKSB7XG4gICAgICAgICAgdmFyIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzO1xuICAgICAgICAgIGlmIChldmVudHMgPT09IHVuZGVmaW5lZCkgcmV0dXJuIFtdO1xuICAgICAgICAgIHZhciBldmxpc3RlbmVyID0gZXZlbnRzW3R5cGVdO1xuICAgICAgICAgIGlmIChldmxpc3RlbmVyID09PSB1bmRlZmluZWQpIHJldHVybiBbXTtcbiAgICAgICAgICBpZiAodHlwZW9mIGV2bGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHJldHVybiB1bndyYXAgPyBbZXZsaXN0ZW5lci5saXN0ZW5lciB8fCBldmxpc3RlbmVyXSA6IFtldmxpc3RlbmVyXTtcbiAgICAgICAgICByZXR1cm4gdW53cmFwID8gdW53cmFwTGlzdGVuZXJzKGV2bGlzdGVuZXIpIDogYXJyYXlDbG9uZShldmxpc3RlbmVyLCBldmxpc3RlbmVyLmxlbmd0aCk7XG4gICAgICAgIH1cblxuICAgICAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uIGxpc3RlbmVycyh0eXBlKSB7XG4gICAgICAgICAgcmV0dXJuIF9saXN0ZW5lcnModGhpcywgdHlwZSwgdHJ1ZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yYXdMaXN0ZW5lcnMgPSBmdW5jdGlvbiByYXdMaXN0ZW5lcnModHlwZSkge1xuICAgICAgICAgIHJldHVybiBfbGlzdGVuZXJzKHRoaXMsIHR5cGUsIGZhbHNlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBFdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uIChlbWl0dGVyLCB0eXBlKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBlbWl0dGVyLmxpc3RlbmVyQ291bnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiBlbWl0dGVyLmxpc3RlbmVyQ291bnQodHlwZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBsaXN0ZW5lckNvdW50LmNhbGwoZW1pdHRlciwgdHlwZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudCA9IGxpc3RlbmVyQ291bnQ7XG5cbiAgICAgICAgZnVuY3Rpb24gbGlzdGVuZXJDb3VudCh0eXBlKSB7XG4gICAgICAgICAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcblxuICAgICAgICAgIGlmIChldmVudHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdmFyIGV2bGlzdGVuZXIgPSBldmVudHNbdHlwZV07XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgZXZsaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZXZsaXN0ZW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIHJldHVybiBldmxpc3RlbmVyLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuZXZlbnROYW1lcyA9IGZ1bmN0aW9uIGV2ZW50TmFtZXMoKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2V2ZW50c0NvdW50ID4gMCA/IFJlZmxlY3RPd25LZXlzKHRoaXMuX2V2ZW50cykgOiBbXTtcbiAgICAgICAgfTtcblxuICAgICAgICBmdW5jdGlvbiBhcnJheUNsb25lKGFyciwgbikge1xuICAgICAgICAgIHZhciBjb3B5ID0gbmV3IEFycmF5KG4pO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpIGNvcHlbaV0gPSBhcnJbaV07XG5cbiAgICAgICAgICByZXR1cm4gY29weTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICAgICAgICAgIGZvciAoOyBpbmRleCArIDEgPCBsaXN0Lmxlbmd0aDsgaW5kZXgrKykgbGlzdFtpbmRleF0gPSBsaXN0W2luZGV4ICsgMV07XG5cbiAgICAgICAgICBsaXN0LnBvcCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdW53cmFwTGlzdGVuZXJzKGFycikge1xuICAgICAgICAgIHZhciByZXQgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJldC5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgcmV0W2ldID0gYXJyW2ldLmxpc3RlbmVyIHx8IGFycltpXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gb25jZShlbWl0dGVyLCBuYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGVycm9yTGlzdGVuZXIoZXJyKSB7XG4gICAgICAgICAgICAgIGVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIobmFtZSwgcmVzb2x2ZXIpO1xuICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnVuY3Rpb24gcmVzb2x2ZXIoKSB7XG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgZW1pdHRlci5yZW1vdmVMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgZXJyb3JMaXN0ZW5lcik7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXNvbHZlKFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIGV2ZW50VGFyZ2V0QWdub3N0aWNBZGRMaXN0ZW5lcihlbWl0dGVyLCBuYW1lLCByZXNvbHZlciwge1xuICAgICAgICAgICAgICBvbmNlOiB0cnVlXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKG5hbWUgIT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgICAgYWRkRXJyb3JIYW5kbGVySWZFdmVudEVtaXR0ZXIoZW1pdHRlciwgZXJyb3JMaXN0ZW5lciwge1xuICAgICAgICAgICAgICAgIG9uY2U6IHRydWVcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBhZGRFcnJvckhhbmRsZXJJZkV2ZW50RW1pdHRlcihlbWl0dGVyLCBoYW5kbGVyLCBmbGFncykge1xuICAgICAgICAgIGlmICh0eXBlb2YgZW1pdHRlci5vbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgZXZlbnRUYXJnZXRBZ25vc3RpY0FkZExpc3RlbmVyKGVtaXR0ZXIsICdlcnJvcicsIGhhbmRsZXIsIGZsYWdzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBldmVudFRhcmdldEFnbm9zdGljQWRkTGlzdGVuZXIoZW1pdHRlciwgbmFtZSwgbGlzdGVuZXIsIGZsYWdzKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBlbWl0dGVyLm9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBpZiAoZmxhZ3Mub25jZSkge1xuICAgICAgICAgICAgICBlbWl0dGVyLm9uY2UobmFtZSwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgZW1pdHRlci5vbihuYW1lLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgZW1pdHRlci5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAvLyBFdmVudFRhcmdldCBkb2VzIG5vdCBoYXZlIGBlcnJvcmAgZXZlbnQgc2VtYW50aWNzIGxpa2UgTm9kZVxuICAgICAgICAgICAgLy8gRXZlbnRFbWl0dGVycywgd2UgZG8gbm90IGxpc3RlbiBmb3IgYGVycm9yYCBldmVudHMgaGVyZS5cbiAgICAgICAgICAgIGVtaXR0ZXIuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBmdW5jdGlvbiB3cmFwTGlzdGVuZXIoYXJnKSB7XG4gICAgICAgICAgICAgIC8vIElFIGRvZXMgbm90IGhhdmUgYnVpbHRpbiBgeyBvbmNlOiB0cnVlIH1gIHN1cHBvcnQgc28gd2VcbiAgICAgICAgICAgICAgLy8gaGF2ZSB0byBkbyBpdCBtYW51YWxseS5cbiAgICAgICAgICAgICAgaWYgKGZsYWdzLm9uY2UpIHtcbiAgICAgICAgICAgICAgICBlbWl0dGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIobmFtZSwgd3JhcExpc3RlbmVyKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGxpc3RlbmVyKGFyZyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwiZW1pdHRlclwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBFdmVudEVtaXR0ZXIuIFJlY2VpdmVkIHR5cGUgJyArIHR5cGVvZiBlbWl0dGVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIHt9XSwgXCJUTlM2XCI6IFtmdW5jdGlvbiAocmVxdWlyZSwgbW9kdWxlLCBleHBvcnRzKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBleHBvcnRzLl9nZXRDYWNoZSA9IGV4cG9ydHMuX2dldFNldHRlciA9IGV4cG9ydHMuX21pc3NpbmdQbHVnaW4gPSBleHBvcnRzLl9yb3VuZCA9IGV4cG9ydHMuX3JvdW5kTW9kaWZpZXIgPSBleHBvcnRzLl9jb25maWcgPSBleHBvcnRzLl90aWNrZXIgPSBleHBvcnRzLl9wbHVnaW5zID0gZXhwb3J0cy5fY2hlY2tQbHVnaW4gPSBleHBvcnRzLl9yZXBsYWNlUmFuZG9tID0gZXhwb3J0cy5fY29sb3JTdHJpbmdGaWx0ZXIgPSBleHBvcnRzLl9zb3J0UHJvcFR3ZWVuc0J5UHJpb3JpdHkgPSBleHBvcnRzLl9mb3JFYWNoTmFtZSA9IGV4cG9ydHMuX3JlbW92ZUxpbmtlZExpc3RJdGVtID0gZXhwb3J0cy5fc2V0RGVmYXVsdHMgPSBleHBvcnRzLl9yZWxFeHAgPSBleHBvcnRzLl9yZW5kZXJDb21wbGV4U3RyaW5nID0gZXhwb3J0cy5faXNVbmRlZmluZWQgPSBleHBvcnRzLl9pc1N0cmluZyA9IGV4cG9ydHMuX251bVdpdGhVbml0RXhwID0gZXhwb3J0cy5fbnVtRXhwID0gZXhwb3J0cy5fZ2V0UHJvcGVydHkgPSBleHBvcnRzLnNodWZmbGUgPSBleHBvcnRzLmludGVycG9sYXRlID0gZXhwb3J0cy51bml0aXplID0gZXhwb3J0cy5waXBlID0gZXhwb3J0cy5tYXBSYW5nZSA9IGV4cG9ydHMudG9BcnJheSA9IGV4cG9ydHMuc3BsaXRDb2xvciA9IGV4cG9ydHMuY2xhbXAgPSBleHBvcnRzLmdldFVuaXQgPSBleHBvcnRzLm5vcm1hbGl6ZSA9IGV4cG9ydHMuc25hcCA9IGV4cG9ydHMucmFuZG9tID0gZXhwb3J0cy5kaXN0cmlidXRlID0gZXhwb3J0cy53cmFwWW95byA9IGV4cG9ydHMud3JhcCA9IGV4cG9ydHMuQ2lyYyA9IGV4cG9ydHMuRXhwbyA9IGV4cG9ydHMuU2luZSA9IGV4cG9ydHMuQm91bmNlID0gZXhwb3J0cy5TdGVwcGVkRWFzZSA9IGV4cG9ydHMuQmFjayA9IGV4cG9ydHMuRWxhc3RpYyA9IGV4cG9ydHMuU3Ryb25nID0gZXhwb3J0cy5RdWludCA9IGV4cG9ydHMuUXVhcnQgPSBleHBvcnRzLkN1YmljID0gZXhwb3J0cy5RdWFkID0gZXhwb3J0cy5MaW5lYXIgPSBleHBvcnRzLlBvd2VyNCA9IGV4cG9ydHMuUG93ZXIzID0gZXhwb3J0cy5Qb3dlcjIgPSBleHBvcnRzLlBvd2VyMSA9IGV4cG9ydHMuUG93ZXIwID0gZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5nc2FwID0gZXhwb3J0cy5Qcm9wVHdlZW4gPSBleHBvcnRzLlR3ZWVuTGl0ZSA9IGV4cG9ydHMuVHdlZW5NYXggPSBleHBvcnRzLlR3ZWVuID0gZXhwb3J0cy5UaW1lbGluZUxpdGUgPSBleHBvcnRzLlRpbWVsaW5lTWF4ID0gZXhwb3J0cy5UaW1lbGluZSA9IGV4cG9ydHMuQW5pbWF0aW9uID0gZXhwb3J0cy5HU0NhY2hlID0gdm9pZCAwO1xuXG4gICAgICAgIGZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICAgICAgICAgIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc2VsZjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gICAgICAgICAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gICAgICAgICAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gICAgICAgICAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbiAgICAgICAgfVxuICAgICAgICAvKiFcbiAgICAgICAgICogR1NBUCAzLjYuMFxuICAgICAgICAgKiBodHRwczovL2dyZWVuc29jay5jb21cbiAgICAgICAgICpcbiAgICAgICAgICogQGxpY2Vuc2UgQ29weXJpZ2h0IDIwMDgtMjAyMSwgR3JlZW5Tb2NrLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICAgICAgICAgKiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhdCBodHRwczovL2dyZWVuc29jay5jb20vc3RhbmRhcmQtbGljZW5zZSBvciBmb3JcbiAgICAgICAgICogQ2x1YiBHcmVlblNvY2sgbWVtYmVycywgdGhlIGFncmVlbWVudCBpc3N1ZWQgd2l0aCB0aGF0IG1lbWJlcnNoaXAuXG4gICAgICAgICAqIEBhdXRob3I6IEphY2sgRG95bGUsIGphY2tAZ3JlZW5zb2NrLmNvbVxuICAgICAgICAqL1xuXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlICovXG5cblxuICAgICAgICB2YXIgX2NvbmZpZyA9IHtcbiAgICAgICAgICBhdXRvU2xlZXA6IDEyMCxcbiAgICAgICAgICBmb3JjZTNEOiBcImF1dG9cIixcbiAgICAgICAgICBudWxsVGFyZ2V0V2FybjogMSxcbiAgICAgICAgICB1bml0czoge1xuICAgICAgICAgICAgbGluZUhlaWdodDogXCJcIlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgICBfZGVmYXVsdHMgPSB7XG4gICAgICAgICAgICBkdXJhdGlvbjogLjUsXG4gICAgICAgICAgICBvdmVyd3JpdGU6IGZhbHNlLFxuICAgICAgICAgICAgZGVsYXk6IDBcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zdXBwcmVzc092ZXJ3cml0ZXMsXG4gICAgICAgICAgX2JpZ051bSA9IDFlOCxcbiAgICAgICAgICBfdGlueU51bSA9IDEgLyBfYmlnTnVtLFxuICAgICAgICAgIF8yUEkgPSBNYXRoLlBJICogMixcbiAgICAgICAgICBfSEFMRl9QSSA9IF8yUEkgLyA0LFxuICAgICAgICAgIF9nc0lEID0gMCxcbiAgICAgICAgICBfc3FydCA9IE1hdGguc3FydCxcbiAgICAgICAgICBfY29zID0gTWF0aC5jb3MsXG4gICAgICAgICAgX3NpbiA9IE1hdGguc2luLFxuICAgICAgICAgIF9pc1N0cmluZyA9IGZ1bmN0aW9uIF9pc1N0cmluZyh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pc0Z1bmN0aW9uID0gZnVuY3Rpb24gX2lzRnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pc051bWJlciA9IGZ1bmN0aW9uIF9pc051bWJlcih2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pc1VuZGVmaW5lZCA9IGZ1bmN0aW9uIF9pc1VuZGVmaW5lZCh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pc09iamVjdCA9IGZ1bmN0aW9uIF9pc09iamVjdCh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pc05vdEZhbHNlID0gZnVuY3Rpb24gX2lzTm90RmFsc2UodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZmFsc2U7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfd2luZG93RXhpc3RzID0gZnVuY3Rpb24gX3dpbmRvd0V4aXN0cygpIHtcbiAgICAgICAgICAgIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2lzRnVuY09yU3RyaW5nID0gZnVuY3Rpb24gX2lzRnVuY09yU3RyaW5nKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gX2lzRnVuY3Rpb24odmFsdWUpIHx8IF9pc1N0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfaXNUeXBlZEFycmF5ID0gdHlwZW9mIEFycmF5QnVmZmVyID09PSBcImZ1bmN0aW9uXCIgJiYgQXJyYXlCdWZmZXIuaXNWaWV3IHx8IGZ1bmN0aW9uICgpIHsgfSxcbiAgICAgICAgICAvLyBub3RlOiBJRTEwIGhhcyBBcnJheUJ1ZmZlciwgYnV0IE5PVCBBcnJheUJ1ZmZlci5pc1ZpZXcoKS5cbiAgICAgICAgICBfaXNBcnJheSA9IEFycmF5LmlzQXJyYXksXG4gICAgICAgICAgX3N0cmljdE51bUV4cCA9IC8oPzotP1xcLj9cXGR8XFwuKSsvZ2ksXG4gICAgICAgICAgLy9vbmx5IG51bWJlcnMgKGluY2x1ZGluZyBuZWdhdGl2ZXMgYW5kIGRlY2ltYWxzKSBidXQgTk9UIHJlbGF0aXZlIHZhbHVlcy5cbiAgICAgICAgICBfbnVtRXhwID0gL1stKz0uXSpcXGQrWy5lXFwtK10qXFxkKltlXFwtK10qXFxkKi9nLFxuICAgICAgICAgIC8vZmluZHMgYW55IG51bWJlcnMsIGluY2x1ZGluZyBvbmVzIHRoYXQgc3RhcnQgd2l0aCArPSBvciAtPSwgbmVnYXRpdmUgbnVtYmVycywgYW5kIG9uZXMgaW4gc2NpZW50aWZpYyBub3RhdGlvbiBsaWtlIDFlLTguXG4gICAgICAgICAgX251bVdpdGhVbml0RXhwID0gL1stKz0uXSpcXGQrWy5lLV0qXFxkKlthLXolXSovZyxcbiAgICAgICAgICBfY29tcGxleFN0cmluZ051bUV4cCA9IC9bLSs9Ll0qXFxkK1xcLj9cXGQqKD86ZS18ZVxcKyk/XFxkKi9naSxcbiAgICAgICAgICAvL2R1cGxpY2F0ZSBzbyB0aGF0IHdoaWxlIHdlJ3JlIGxvb3BpbmcgdGhyb3VnaCBtYXRjaGVzIGZyb20gZXhlYygpLCBpdCBkb2Vzbid0IGNvbnRhbWluYXRlIHRoZSBsYXN0SW5kZXggb2YgX251bUV4cCB3aGljaCB3ZSB1c2UgdG8gc2VhcmNoIGZvciBjb2xvcnMgdG9vLlxuICAgICAgICAgIF9yZWxFeHAgPSAvWystXT0tP1suXFxkXSsvLFxuICAgICAgICAgIF9kZWxpbWl0ZWRWYWx1ZUV4cCA9IC9bI1xcLSsuXSpcXGJbYS16XFxkLT0rJS5dKy9naSxcbiAgICAgICAgICBfdW5pdEV4cCA9IC9bXFxkLitcXC09XSsoPzplWy0rXVxcZCopKi9pLFxuICAgICAgICAgIF9nbG9iYWxUaW1lbGluZSxcbiAgICAgICAgICBfd2luLFxuICAgICAgICAgIF9jb3JlSW5pdHRlZCxcbiAgICAgICAgICBfZG9jLFxuICAgICAgICAgIF9nbG9iYWxzID0ge30sXG4gICAgICAgICAgX2luc3RhbGxTY29wZSA9IHt9LFxuICAgICAgICAgIF9jb3JlUmVhZHksXG4gICAgICAgICAgX2luc3RhbGwgPSBmdW5jdGlvbiBfaW5zdGFsbChzY29wZSkge1xuICAgICAgICAgICAgcmV0dXJuIChfaW5zdGFsbFNjb3BlID0gX21lcmdlKHNjb3BlLCBfZ2xvYmFscykpICYmIGdzYXA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfbWlzc2luZ1BsdWdpbiA9IGZ1bmN0aW9uIF9taXNzaW5nUGx1Z2luKHByb3BlcnR5LCB2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihcIkludmFsaWQgcHJvcGVydHlcIiwgcHJvcGVydHksIFwic2V0IHRvXCIsIHZhbHVlLCBcIk1pc3NpbmcgcGx1Z2luPyBnc2FwLnJlZ2lzdGVyUGx1Z2luKClcIik7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfd2FybiA9IGZ1bmN0aW9uIF93YXJuKG1lc3NhZ2UsIHN1cHByZXNzKSB7XG4gICAgICAgICAgICByZXR1cm4gIXN1cHByZXNzICYmIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hZGRHbG9iYWwgPSBmdW5jdGlvbiBfYWRkR2xvYmFsKG5hbWUsIG9iaikge1xuICAgICAgICAgICAgcmV0dXJuIG5hbWUgJiYgKF9nbG9iYWxzW25hbWVdID0gb2JqKSAmJiBfaW5zdGFsbFNjb3BlICYmIChfaW5zdGFsbFNjb3BlW25hbWVdID0gb2JqKSB8fCBfZ2xvYmFscztcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9lbXB0eUZ1bmMgPSBmdW5jdGlvbiBfZW1wdHlGdW5jKCkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVzZXJ2ZWRQcm9wcyA9IHt9LFxuICAgICAgICAgIF9sYXp5VHdlZW5zID0gW10sXG4gICAgICAgICAgX2xhenlMb29rdXAgPSB7fSxcbiAgICAgICAgICBfbGFzdFJlbmRlcmVkRnJhbWUsXG4gICAgICAgICAgX3BsdWdpbnMgPSB7fSxcbiAgICAgICAgICBfZWZmZWN0cyA9IHt9LFxuICAgICAgICAgIF9uZXh0R0NGcmFtZSA9IDMwLFxuICAgICAgICAgIF9oYXJuZXNzUGx1Z2lucyA9IFtdLFxuICAgICAgICAgIF9jYWxsYmFja05hbWVzID0gXCJcIixcbiAgICAgICAgICBfaGFybmVzcyA9IGZ1bmN0aW9uIF9oYXJuZXNzKHRhcmdldHMpIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSB0YXJnZXRzWzBdLFxuICAgICAgICAgICAgICBoYXJuZXNzUGx1Z2luLFxuICAgICAgICAgICAgICBpO1xuICAgICAgICAgICAgX2lzT2JqZWN0KHRhcmdldCkgfHwgX2lzRnVuY3Rpb24odGFyZ2V0KSB8fCAodGFyZ2V0cyA9IFt0YXJnZXRzXSk7XG5cbiAgICAgICAgICAgIGlmICghKGhhcm5lc3NQbHVnaW4gPSAodGFyZ2V0Ll9nc2FwIHx8IHt9KS5oYXJuZXNzKSkge1xuICAgICAgICAgICAgICAvLyBmaW5kIHRoZSBmaXJzdCB0YXJnZXQgd2l0aCBhIGhhcm5lc3MuIFdlIGFzc3VtZSB0YXJnZXRzIHBhc3NlZCBpbnRvIGFuIGFuaW1hdGlvbiB3aWxsIGJlIG9mIHNpbWlsYXIgdHlwZSwgbWVhbmluZyB0aGUgc2FtZSBraW5kIG9mIGhhcm5lc3MgY2FuIGJlIHVzZWQgZm9yIHRoZW0gYWxsIChwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24pXG4gICAgICAgICAgICAgIGkgPSBfaGFybmVzc1BsdWdpbnMubGVuZ3RoO1xuXG4gICAgICAgICAgICAgIHdoaWxlIChpLS0gJiYgIV9oYXJuZXNzUGx1Z2luc1tpXS50YXJnZXRUZXN0KHRhcmdldCkpIHsgfVxuXG4gICAgICAgICAgICAgIGhhcm5lc3NQbHVnaW4gPSBfaGFybmVzc1BsdWdpbnNbaV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGkgPSB0YXJnZXRzLmxlbmd0aDtcblxuICAgICAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgICB0YXJnZXRzW2ldICYmICh0YXJnZXRzW2ldLl9nc2FwIHx8ICh0YXJnZXRzW2ldLl9nc2FwID0gbmV3IEdTQ2FjaGUodGFyZ2V0c1tpXSwgaGFybmVzc1BsdWdpbikpKSB8fCB0YXJnZXRzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldHM7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZ2V0Q2FjaGUgPSBmdW5jdGlvbiBfZ2V0Q2FjaGUodGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0Ll9nc2FwIHx8IF9oYXJuZXNzKHRvQXJyYXkodGFyZ2V0KSlbMF0uX2dzYXA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZ2V0UHJvcGVydHkgPSBmdW5jdGlvbiBfZ2V0UHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eSwgdikge1xuICAgICAgICAgICAgcmV0dXJuICh2ID0gdGFyZ2V0W3Byb3BlcnR5XSkgJiYgX2lzRnVuY3Rpb24odikgPyB0YXJnZXRbcHJvcGVydHldKCkgOiBfaXNVbmRlZmluZWQodikgJiYgdGFyZ2V0LmdldEF0dHJpYnV0ZSAmJiB0YXJnZXQuZ2V0QXR0cmlidXRlKHByb3BlcnR5KSB8fCB2O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2ZvckVhY2hOYW1lID0gZnVuY3Rpb24gX2ZvckVhY2hOYW1lKG5hbWVzLCBmdW5jKSB7XG4gICAgICAgICAgICByZXR1cm4gKG5hbWVzID0gbmFtZXMuc3BsaXQoXCIsXCIpKS5mb3JFYWNoKGZ1bmMpIHx8IG5hbWVzO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgLy9zcGxpdCBhIGNvbW1hLWRlbGltaXRlZCBsaXN0IG9mIG5hbWVzIGludG8gYW4gYXJyYXksIHRoZW4gcnVuIGEgZm9yRWFjaCgpIGZ1bmN0aW9uIGFuZCByZXR1cm4gdGhlIHNwbGl0IGFycmF5ICh0aGlzIGlzIGp1c3QgYSB3YXkgdG8gY29uc29saWRhdGUvc2hvcnRlbiBzb21lIGNvZGUpLlxuICAgICAgICAgIF9yb3VuZCA9IGZ1bmN0aW9uIF9yb3VuZCh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiAxMDAwMDApIC8gMTAwMDAwIHx8IDA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfYXJyYXlDb250YWluc0FueSA9IGZ1bmN0aW9uIF9hcnJheUNvbnRhaW5zQW55KHRvU2VhcmNoLCB0b0ZpbmQpIHtcbiAgICAgICAgICAgIC8vc2VhcmNoZXMgb25lIGFycmF5IHRvIGZpbmQgbWF0Y2hlcyBmb3IgYW55IG9mIHRoZSBpdGVtcyBpbiB0aGUgdG9GaW5kIGFycmF5LiBBcyBzb29uIGFzIG9uZSBpcyBmb3VuZCwgaXQgcmV0dXJucyB0cnVlLiBJdCBkb2VzIE5PVCByZXR1cm4gYWxsIHRoZSBtYXRjaGVzOyBpdCdzIHNpbXBseSBhIGJvb2xlYW4gc2VhcmNoLlxuICAgICAgICAgICAgdmFyIGwgPSB0b0ZpbmQubGVuZ3RoLFxuICAgICAgICAgICAgICBpID0gMDtcblxuICAgICAgICAgICAgZm9yICg7IHRvU2VhcmNoLmluZGV4T2YodG9GaW5kW2ldKSA8IDAgJiYgKytpIDwgbDspIHsgfVxuXG4gICAgICAgICAgICByZXR1cm4gaSA8IGw7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcGFyc2VWYXJzID0gZnVuY3Rpb24gX3BhcnNlVmFycyhwYXJhbXMsIHR5cGUsIHBhcmVudCkge1xuICAgICAgICAgICAgLy9yZWFkcyB0aGUgYXJndW1lbnRzIHBhc3NlZCB0byBvbmUgb2YgdGhlIGtleSBtZXRob2RzIGFuZCBmaWd1cmVzIG91dCBpZiB0aGUgdXNlciBpcyBkZWZpbmluZyB0aGluZ3Mgd2l0aCB0aGUgT0xEL2xlZ2FjeSBzeW50YXggd2hlcmUgdGhlIGR1cmF0aW9uIGlzIHRoZSAybmQgcGFyYW1ldGVyLCBhbmQgdGhlbiBpdCBhZGp1c3RzIHRoaW5ncyBhY2NvcmRpbmdseSBhbmQgc3BpdHMgYmFjayB0aGUgY29ycmVjdGVkIHZhcnMgb2JqZWN0ICh3aXRoIHRoZSBkdXJhdGlvbiBhZGRlZCBpZiBuZWNlc3NhcnksIGFzIHdlbGwgYXMgcnVuQmFja3dhcmRzIG9yIHN0YXJ0QXQgb3IgaW1tZWRpYXRlUmVuZGVyKS4gdHlwZSAwID0gdG8oKS9zdGFnZ2VyVG8oKSwgMSA9IGZyb20oKS9zdGFnZ2VyRnJvbSgpLCAyID0gZnJvbVRvKCkvc3RhZ2dlckZyb21UbygpXG4gICAgICAgICAgICB2YXIgaXNMZWdhY3kgPSBfaXNOdW1iZXIocGFyYW1zWzFdKSxcbiAgICAgICAgICAgICAgdmFyc0luZGV4ID0gKGlzTGVnYWN5ID8gMiA6IDEpICsgKHR5cGUgPCAyID8gMCA6IDEpLFxuICAgICAgICAgICAgICB2YXJzID0gcGFyYW1zW3ZhcnNJbmRleF0sXG4gICAgICAgICAgICAgIGlyVmFycztcblxuICAgICAgICAgICAgaXNMZWdhY3kgJiYgKHZhcnMuZHVyYXRpb24gPSBwYXJhbXNbMV0pO1xuICAgICAgICAgICAgdmFycy5wYXJlbnQgPSBwYXJlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgICAgIGlyVmFycyA9IHZhcnM7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKHBhcmVudCAmJiAhKFwiaW1tZWRpYXRlUmVuZGVyXCIgaW4gaXJWYXJzKSkge1xuICAgICAgICAgICAgICAgIC8vIGluaGVyaXRhbmNlIGhhc24ndCBoYXBwZW5lZCB5ZXQsIGJ1dCBzb21lb25lIG1heSBoYXZlIHNldCBhIGRlZmF1bHQgaW4gYW4gYW5jZXN0b3IgdGltZWxpbmUuIFdlIGNvdWxkIGRvIHZhcnMuaW1tZWRpYXRlUmVuZGVyID0gX2lzTm90RmFsc2UoX2luaGVyaXREZWZhdWx0cyh2YXJzKS5pbW1lZGlhdGVSZW5kZXIpIGJ1dCB0aGF0J2QgZXhhY3QgYSBzbGlnaHQgcGVyZm9ybWFuY2UgcGVuYWx0eSBiZWNhdXNlIF9pbmhlcml0RGVmYXVsdHMoKSBhbHNvIHJ1bnMgaW4gdGhlIFR3ZWVuIGNvbnN0cnVjdG9yLiBXZSdyZSBwYXlpbmcgYSBzbWFsbCBrYiBwcmljZSBoZXJlIHRvIGdhaW4gc3BlZWQuXG4gICAgICAgICAgICAgICAgaXJWYXJzID0gcGFyZW50LnZhcnMuZGVmYXVsdHMgfHwge307XG4gICAgICAgICAgICAgICAgcGFyZW50ID0gX2lzTm90RmFsc2UocGFyZW50LnZhcnMuaW5oZXJpdCkgJiYgcGFyZW50LnBhcmVudDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHZhcnMuaW1tZWRpYXRlUmVuZGVyID0gX2lzTm90RmFsc2UoaXJWYXJzLmltbWVkaWF0ZVJlbmRlcik7XG4gICAgICAgICAgICAgIHR5cGUgPCAyID8gdmFycy5ydW5CYWNrd2FyZHMgPSAxIDogdmFycy5zdGFydEF0ID0gcGFyYW1zW3ZhcnNJbmRleCAtIDFdOyAvLyBcImZyb21cIiB2YXJzXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB2YXJzO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2xhenlSZW5kZXIgPSBmdW5jdGlvbiBfbGF6eVJlbmRlcigpIHtcbiAgICAgICAgICAgIHZhciBsID0gX2xhenlUd2VlbnMubGVuZ3RoLFxuICAgICAgICAgICAgICBhID0gX2xhenlUd2VlbnMuc2xpY2UoMCksXG4gICAgICAgICAgICAgIGksXG4gICAgICAgICAgICAgIHR3ZWVuO1xuXG4gICAgICAgICAgICBfbGF6eUxvb2t1cCA9IHt9O1xuICAgICAgICAgICAgX2xhenlUd2VlbnMubGVuZ3RoID0gMDtcblxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICB0d2VlbiA9IGFbaV07XG4gICAgICAgICAgICAgIHR3ZWVuICYmIHR3ZWVuLl9sYXp5ICYmICh0d2Vlbi5yZW5kZXIodHdlZW4uX2xhenlbMF0sIHR3ZWVuLl9sYXp5WzFdLCB0cnVlKS5fbGF6eSA9IDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgX2xhenlTYWZlUmVuZGVyID0gZnVuY3Rpb24gX2xhenlTYWZlUmVuZGVyKGFuaW1hdGlvbiwgdGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKSB7XG4gICAgICAgICAgICBfbGF6eVR3ZWVucy5sZW5ndGggJiYgX2xhenlSZW5kZXIoKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi5yZW5kZXIodGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKTtcbiAgICAgICAgICAgIF9sYXp5VHdlZW5zLmxlbmd0aCAmJiBfbGF6eVJlbmRlcigpOyAvL2luIGNhc2UgcmVuZGVyaW5nIGNhdXNlZCBhbnkgdHdlZW5zIHRvIGxhenktaW5pdCwgd2Ugc2hvdWxkIHJlbmRlciB0aGVtIGJlY2F1c2UgdHlwaWNhbGx5IHdoZW4gc29tZW9uZSBjYWxscyBzZWVrKCkgb3IgdGltZSgpIG9yIHByb2dyZXNzKCksIHRoZXkgZXhwZWN0IGFuIGltbWVkaWF0ZSByZW5kZXIuXG4gICAgICAgICAgfSxcbiAgICAgICAgICBfbnVtZXJpY0lmUG9zc2libGUgPSBmdW5jdGlvbiBfbnVtZXJpY0lmUG9zc2libGUodmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBuID0gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gKG4gfHwgbiA9PT0gMCkgJiYgKHZhbHVlICsgXCJcIikubWF0Y2goX2RlbGltaXRlZFZhbHVlRXhwKS5sZW5ndGggPCAyID8gbiA6IF9pc1N0cmluZyh2YWx1ZSkgPyB2YWx1ZS50cmltKCkgOiB2YWx1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9wYXNzVGhyb3VnaCA9IGZ1bmN0aW9uIF9wYXNzVGhyb3VnaChwKSB7XG4gICAgICAgICAgICByZXR1cm4gcDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXREZWZhdWx0cyA9IGZ1bmN0aW9uIF9zZXREZWZhdWx0cyhvYmosIGRlZmF1bHRzKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIGRlZmF1bHRzKSB7XG4gICAgICAgICAgICAgIHAgaW4gb2JqIHx8IChvYmpbcF0gPSBkZWZhdWx0c1twXSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfc2V0S2V5ZnJhbWVEZWZhdWx0cyA9IGZ1bmN0aW9uIF9zZXRLZXlmcmFtZURlZmF1bHRzKG9iaiwgZGVmYXVsdHMpIHtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gZGVmYXVsdHMpIHtcbiAgICAgICAgICAgICAgcCBpbiBvYmogfHwgcCA9PT0gXCJkdXJhdGlvblwiIHx8IHAgPT09IFwiZWFzZVwiIHx8IChvYmpbcF0gPSBkZWZhdWx0c1twXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfbWVyZ2UgPSBmdW5jdGlvbiBfbWVyZ2UoYmFzZSwgdG9NZXJnZSkge1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiB0b01lcmdlKSB7XG4gICAgICAgICAgICAgIGJhc2VbcF0gPSB0b01lcmdlW3BdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYmFzZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9tZXJnZURlZXAgPSBmdW5jdGlvbiBfbWVyZ2VEZWVwKGJhc2UsIHRvTWVyZ2UpIHtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gdG9NZXJnZSkge1xuICAgICAgICAgICAgICBwICE9PSBcIl9fcHJvdG9fX1wiICYmIHAgIT09IFwiY29uc3RydWN0b3JcIiAmJiBwICE9PSBcInByb3RvdHlwZVwiICYmIChiYXNlW3BdID0gX2lzT2JqZWN0KHRvTWVyZ2VbcF0pID8gX21lcmdlRGVlcChiYXNlW3BdIHx8IChiYXNlW3BdID0ge30pLCB0b01lcmdlW3BdKSA6IHRvTWVyZ2VbcF0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYmFzZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9jb3B5RXhjbHVkaW5nID0gZnVuY3Rpb24gX2NvcHlFeGNsdWRpbmcob2JqLCBleGNsdWRpbmcpIHtcbiAgICAgICAgICAgIHZhciBjb3B5ID0ge30sXG4gICAgICAgICAgICAgIHA7XG5cbiAgICAgICAgICAgIGZvciAocCBpbiBvYmopIHtcbiAgICAgICAgICAgICAgcCBpbiBleGNsdWRpbmcgfHwgKGNvcHlbcF0gPSBvYmpbcF0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY29weTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pbmhlcml0RGVmYXVsdHMgPSBmdW5jdGlvbiBfaW5oZXJpdERlZmF1bHRzKHZhcnMpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnQgPSB2YXJzLnBhcmVudCB8fCBfZ2xvYmFsVGltZWxpbmUsXG4gICAgICAgICAgICAgIGZ1bmMgPSB2YXJzLmtleWZyYW1lcyA/IF9zZXRLZXlmcmFtZURlZmF1bHRzIDogX3NldERlZmF1bHRzO1xuXG4gICAgICAgICAgICBpZiAoX2lzTm90RmFsc2UodmFycy5pbmhlcml0KSkge1xuICAgICAgICAgICAgICB3aGlsZSAocGFyZW50KSB7XG4gICAgICAgICAgICAgICAgZnVuYyh2YXJzLCBwYXJlbnQudmFycy5kZWZhdWx0cyk7XG4gICAgICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudCB8fCBwYXJlbnQuX2RwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB2YXJzO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2FycmF5c01hdGNoID0gZnVuY3Rpb24gX2FycmF5c01hdGNoKGExLCBhMikge1xuICAgICAgICAgICAgdmFyIGkgPSBhMS5sZW5ndGgsXG4gICAgICAgICAgICAgIG1hdGNoID0gaSA9PT0gYTIubGVuZ3RoO1xuXG4gICAgICAgICAgICB3aGlsZSAobWF0Y2ggJiYgaS0tICYmIGExW2ldID09PSBhMltpXSkgeyB9XG5cbiAgICAgICAgICAgIHJldHVybiBpIDwgMDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hZGRMaW5rZWRMaXN0SXRlbSA9IGZ1bmN0aW9uIF9hZGRMaW5rZWRMaXN0SXRlbShwYXJlbnQsIGNoaWxkLCBmaXJzdFByb3AsIGxhc3RQcm9wLCBzb3J0QnkpIHtcbiAgICAgICAgICAgIGlmIChmaXJzdFByb3AgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICBmaXJzdFByb3AgPSBcIl9maXJzdFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobGFzdFByb3AgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICBsYXN0UHJvcCA9IFwiX2xhc3RcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHByZXYgPSBwYXJlbnRbbGFzdFByb3BdLFxuICAgICAgICAgICAgICB0O1xuXG4gICAgICAgICAgICBpZiAoc29ydEJ5KSB7XG4gICAgICAgICAgICAgIHQgPSBjaGlsZFtzb3J0QnldO1xuXG4gICAgICAgICAgICAgIHdoaWxlIChwcmV2ICYmIHByZXZbc29ydEJ5XSA+IHQpIHtcbiAgICAgICAgICAgICAgICBwcmV2ID0gcHJldi5fcHJldjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJldikge1xuICAgICAgICAgICAgICBjaGlsZC5fbmV4dCA9IHByZXYuX25leHQ7XG4gICAgICAgICAgICAgIHByZXYuX25leHQgPSBjaGlsZDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNoaWxkLl9uZXh0ID0gcGFyZW50W2ZpcnN0UHJvcF07XG4gICAgICAgICAgICAgIHBhcmVudFtmaXJzdFByb3BdID0gY2hpbGQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjaGlsZC5fbmV4dCkge1xuICAgICAgICAgICAgICBjaGlsZC5fbmV4dC5fcHJldiA9IGNoaWxkO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcGFyZW50W2xhc3RQcm9wXSA9IGNoaWxkO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjaGlsZC5fcHJldiA9IHByZXY7XG4gICAgICAgICAgICBjaGlsZC5wYXJlbnQgPSBjaGlsZC5fZHAgPSBwYXJlbnQ7XG4gICAgICAgICAgICByZXR1cm4gY2hpbGQ7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVtb3ZlTGlua2VkTGlzdEl0ZW0gPSBmdW5jdGlvbiBfcmVtb3ZlTGlua2VkTGlzdEl0ZW0ocGFyZW50LCBjaGlsZCwgZmlyc3RQcm9wLCBsYXN0UHJvcCkge1xuICAgICAgICAgICAgaWYgKGZpcnN0UHJvcCA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgIGZpcnN0UHJvcCA9IFwiX2ZpcnN0XCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChsYXN0UHJvcCA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgIGxhc3RQcm9wID0gXCJfbGFzdFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcHJldiA9IGNoaWxkLl9wcmV2LFxuICAgICAgICAgICAgICBuZXh0ID0gY2hpbGQuX25leHQ7XG5cbiAgICAgICAgICAgIGlmIChwcmV2KSB7XG4gICAgICAgICAgICAgIHByZXYuX25leHQgPSBuZXh0O1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJlbnRbZmlyc3RQcm9wXSA9PT0gY2hpbGQpIHtcbiAgICAgICAgICAgICAgcGFyZW50W2ZpcnN0UHJvcF0gPSBuZXh0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobmV4dCkge1xuICAgICAgICAgICAgICBuZXh0Ll9wcmV2ID0gcHJldjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyZW50W2xhc3RQcm9wXSA9PT0gY2hpbGQpIHtcbiAgICAgICAgICAgICAgcGFyZW50W2xhc3RQcm9wXSA9IHByZXY7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNoaWxkLl9uZXh0ID0gY2hpbGQuX3ByZXYgPSBjaGlsZC5wYXJlbnQgPSBudWxsOyAvLyBkb24ndCBkZWxldGUgdGhlIF9kcCBqdXN0IHNvIHdlIGNhbiByZXZlcnQgaWYgbmVjZXNzYXJ5LiBCdXQgcGFyZW50IHNob3VsZCBiZSBudWxsIHRvIGluZGljYXRlIHRoZSBpdGVtIGlzbid0IGluIGEgbGlua2VkIGxpc3QuXG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVtb3ZlRnJvbVBhcmVudCA9IGZ1bmN0aW9uIF9yZW1vdmVGcm9tUGFyZW50KGNoaWxkLCBvbmx5SWZQYXJlbnRIYXNBdXRvUmVtb3ZlKSB7XG4gICAgICAgICAgICBjaGlsZC5wYXJlbnQgJiYgKCFvbmx5SWZQYXJlbnRIYXNBdXRvUmVtb3ZlIHx8IGNoaWxkLnBhcmVudC5hdXRvUmVtb3ZlQ2hpbGRyZW4pICYmIGNoaWxkLnBhcmVudC5yZW1vdmUoY2hpbGQpO1xuICAgICAgICAgICAgY2hpbGQuX2FjdCA9IDA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfdW5jYWNoZSA9IGZ1bmN0aW9uIF91bmNhY2hlKGFuaW1hdGlvbiwgY2hpbGQpIHtcbiAgICAgICAgICAgIGlmIChhbmltYXRpb24gJiYgKCFjaGlsZCB8fCBjaGlsZC5fZW5kID4gYW5pbWF0aW9uLl9kdXIgfHwgY2hpbGQuX3N0YXJ0IDwgMCkpIHtcbiAgICAgICAgICAgICAgLy8gcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uOiBpZiBhIGNoaWxkIGFuaW1hdGlvbiBpcyBwYXNzZWQgaW4gd2Ugc2hvdWxkIG9ubHkgdW5jYWNoZSBpZiB0aGF0IGNoaWxkIEVYVEVORFMgdGhlIGFuaW1hdGlvbiAoaXRzIGVuZCB0aW1lIGlzIGJleW9uZCB0aGUgZW5kKVxuICAgICAgICAgICAgICB2YXIgYSA9IGFuaW1hdGlvbjtcblxuICAgICAgICAgICAgICB3aGlsZSAoYSkge1xuICAgICAgICAgICAgICAgIGEuX2RpcnR5ID0gMTtcbiAgICAgICAgICAgICAgICBhID0gYS5wYXJlbnQ7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGFuaW1hdGlvbjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9yZWNhY2hlQW5jZXN0b3JzID0gZnVuY3Rpb24gX3JlY2FjaGVBbmNlc3RvcnMoYW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB2YXIgcGFyZW50ID0gYW5pbWF0aW9uLnBhcmVudDtcblxuICAgICAgICAgICAgd2hpbGUgKHBhcmVudCAmJiBwYXJlbnQucGFyZW50KSB7XG4gICAgICAgICAgICAgIC8vc29tZXRpbWVzIHdlIG11c3QgZm9yY2UgYSByZS1zb3J0IG9mIGFsbCBjaGlsZHJlbiBhbmQgdXBkYXRlIHRoZSBkdXJhdGlvbi90b3RhbER1cmF0aW9uIG9mIGFsbCBhbmNlc3RvciB0aW1lbGluZXMgaW1tZWRpYXRlbHkgaW4gY2FzZSwgZm9yIGV4YW1wbGUsIGluIHRoZSBtaWRkbGUgb2YgYSByZW5kZXIgbG9vcCwgb25lIHR3ZWVuIGFsdGVycyBhbm90aGVyIHR3ZWVuJ3MgdGltZVNjYWxlIHdoaWNoIHNob3ZlcyBpdHMgc3RhcnRUaW1lIGJlZm9yZSAwLCBmb3JjaW5nIHRoZSBwYXJlbnQgdGltZWxpbmUgdG8gc2hpZnQgYXJvdW5kIGFuZCBzaGlmdENoaWxkcmVuKCkgd2hpY2ggY291bGQgYWZmZWN0IHRoYXQgbmV4dCB0d2VlbidzIHJlbmRlciAoc3RhcnRUaW1lKS4gRG9lc24ndCBtYXR0ZXIgZm9yIHRoZSByb290IHRpbWVsaW5lIHRob3VnaC5cbiAgICAgICAgICAgICAgcGFyZW50Ll9kaXJ0eSA9IDE7XG4gICAgICAgICAgICAgIHBhcmVudC50b3RhbER1cmF0aW9uKCk7XG4gICAgICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBhbmltYXRpb247XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfaGFzTm9QYXVzZWRBbmNlc3RvcnMgPSBmdW5jdGlvbiBfaGFzTm9QYXVzZWRBbmNlc3RvcnMoYW5pbWF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gIWFuaW1hdGlvbiB8fCBhbmltYXRpb24uX3RzICYmIF9oYXNOb1BhdXNlZEFuY2VzdG9ycyhhbmltYXRpb24ucGFyZW50KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9lbGFwc2VkQ3ljbGVEdXJhdGlvbiA9IGZ1bmN0aW9uIF9lbGFwc2VkQ3ljbGVEdXJhdGlvbihhbmltYXRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBhbmltYXRpb24uX3JlcGVhdCA/IF9hbmltYXRpb25DeWNsZShhbmltYXRpb24uX3RUaW1lLCBhbmltYXRpb24gPSBhbmltYXRpb24uZHVyYXRpb24oKSArIGFuaW1hdGlvbi5fckRlbGF5KSAqIGFuaW1hdGlvbiA6IDA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvLyBmZWVkIGluIHRoZSB0b3RhbFRpbWUgYW5kIGN5Y2xlRHVyYXRpb24gYW5kIGl0J2xsIHJldHVybiB0aGUgY3ljbGUgKGl0ZXJhdGlvbiBtaW51cyAxKSBhbmQgaWYgdGhlIHBsYXloZWFkIGlzIGV4YWN0bHkgYXQgdGhlIHZlcnkgRU5ELCBpdCB3aWxsIE5PVCBidW1wIHVwIHRvIHRoZSBuZXh0IGN5Y2xlLlxuICAgICAgICAgIF9hbmltYXRpb25DeWNsZSA9IGZ1bmN0aW9uIF9hbmltYXRpb25DeWNsZSh0VGltZSwgY3ljbGVEdXJhdGlvbikge1xuICAgICAgICAgICAgdmFyIHdob2xlID0gTWF0aC5mbG9vcih0VGltZSAvPSBjeWNsZUR1cmF0aW9uKTtcbiAgICAgICAgICAgIHJldHVybiB0VGltZSAmJiB3aG9sZSA9PT0gdFRpbWUgPyB3aG9sZSAtIDEgOiB3aG9sZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9wYXJlbnRUb0NoaWxkVG90YWxUaW1lID0gZnVuY3Rpb24gX3BhcmVudFRvQ2hpbGRUb3RhbFRpbWUocGFyZW50VGltZSwgY2hpbGQpIHtcbiAgICAgICAgICAgIHJldHVybiAocGFyZW50VGltZSAtIGNoaWxkLl9zdGFydCkgKiBjaGlsZC5fdHMgKyAoY2hpbGQuX3RzID49IDAgPyAwIDogY2hpbGQuX2RpcnR5ID8gY2hpbGQudG90YWxEdXJhdGlvbigpIDogY2hpbGQuX3REdXIpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3NldEVuZCA9IGZ1bmN0aW9uIF9zZXRFbmQoYW5pbWF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gYW5pbWF0aW9uLl9lbmQgPSBfcm91bmQoYW5pbWF0aW9uLl9zdGFydCArIChhbmltYXRpb24uX3REdXIgLyBNYXRoLmFicyhhbmltYXRpb24uX3RzIHx8IGFuaW1hdGlvbi5fcnRzIHx8IF90aW55TnVtKSB8fCAwKSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfYWxpZ25QbGF5aGVhZCA9IGZ1bmN0aW9uIF9hbGlnblBsYXloZWFkKGFuaW1hdGlvbiwgdG90YWxUaW1lKSB7XG4gICAgICAgICAgICAvLyBhZGp1c3RzIHRoZSBhbmltYXRpb24ncyBfc3RhcnQgYW5kIF9lbmQgYWNjb3JkaW5nIHRvIHRoZSBwcm92aWRlZCB0b3RhbFRpbWUgKG9ubHkgaWYgdGhlIHBhcmVudCdzIHNtb290aENoaWxkVGltaW5nIGlzIHRydWUgYW5kIHRoZSBhbmltYXRpb24gaXNuJ3QgcGF1c2VkKS4gSXQgZG9lc24ndCBkbyBhbnkgcmVuZGVyaW5nIG9yIGZvcmNpbmcgdGhpbmdzIGJhY2sgaW50byBwYXJlbnQgdGltZWxpbmVzLCBldGMuIC0gdGhhdCdzIHdoYXQgdG90YWxUaW1lKCkgaXMgZm9yLlxuICAgICAgICAgICAgdmFyIHBhcmVudCA9IGFuaW1hdGlvbi5fZHA7XG5cbiAgICAgICAgICAgIGlmIChwYXJlbnQgJiYgcGFyZW50LnNtb290aENoaWxkVGltaW5nICYmIGFuaW1hdGlvbi5fdHMpIHtcbiAgICAgICAgICAgICAgYW5pbWF0aW9uLl9zdGFydCA9IF9yb3VuZChwYXJlbnQuX3RpbWUgLSAoYW5pbWF0aW9uLl90cyA+IDAgPyB0b3RhbFRpbWUgLyBhbmltYXRpb24uX3RzIDogKChhbmltYXRpb24uX2RpcnR5ID8gYW5pbWF0aW9uLnRvdGFsRHVyYXRpb24oKSA6IGFuaW1hdGlvbi5fdER1cikgLSB0b3RhbFRpbWUpIC8gLWFuaW1hdGlvbi5fdHMpKTtcblxuICAgICAgICAgICAgICBfc2V0RW5kKGFuaW1hdGlvbik7XG5cbiAgICAgICAgICAgICAgcGFyZW50Ll9kaXJ0eSB8fCBfdW5jYWNoZShwYXJlbnQsIGFuaW1hdGlvbik7IC8vZm9yIHBlcmZvcm1hbmNlIGltcHJvdmVtZW50LiBJZiB0aGUgcGFyZW50J3MgY2FjaGUgaXMgYWxyZWFkeSBkaXJ0eSwgaXQgYWxyZWFkeSB0b29rIGNhcmUgb2YgbWFya2luZyB0aGUgYW5jZXN0b3JzIGFzIGRpcnR5IHRvbywgc28gc2tpcCB0aGUgZnVuY3Rpb24gY2FsbCBoZXJlLlxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYW5pbWF0aW9uO1xuICAgICAgICAgIH0sXG5cbiAgICAgICAgICAvKlxuICAgICAgICAgIF90b3RhbFRpbWVUb1RpbWUgPSAoY2xhbXBlZFRvdGFsVGltZSwgZHVyYXRpb24sIHJlcGVhdCwgcmVwZWF0RGVsYXksIHlveW8pID0+IHtcbiAgICAgICAgICAgIGxldCBjeWNsZUR1cmF0aW9uID0gZHVyYXRpb24gKyByZXBlYXREZWxheSxcbiAgICAgICAgICAgICAgdGltZSA9IF9yb3VuZChjbGFtcGVkVG90YWxUaW1lICUgY3ljbGVEdXJhdGlvbik7XG4gICAgICAgICAgICBpZiAodGltZSA+IGR1cmF0aW9uKSB7XG4gICAgICAgICAgICAgIHRpbWUgPSBkdXJhdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoeW95byAmJiAofn4oY2xhbXBlZFRvdGFsVGltZSAvIGN5Y2xlRHVyYXRpb24pICYgMSkpID8gZHVyYXRpb24gLSB0aW1lIDogdGltZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgICovXG4gICAgICAgICAgX3Bvc3RBZGRDaGVja3MgPSBmdW5jdGlvbiBfcG9zdEFkZENoZWNrcyh0aW1lbGluZSwgY2hpbGQpIHtcbiAgICAgICAgICAgIHZhciB0O1xuXG4gICAgICAgICAgICBpZiAoY2hpbGQuX3RpbWUgfHwgY2hpbGQuX2luaXR0ZWQgJiYgIWNoaWxkLl9kdXIpIHtcbiAgICAgICAgICAgICAgLy9pbiBjYXNlLCBmb3IgZXhhbXBsZSwgdGhlIF9zdGFydCBpcyBtb3ZlZCBvbiBhIHR3ZWVuIHRoYXQgaGFzIGFscmVhZHkgcmVuZGVyZWQuIEltYWdpbmUgaXQncyBhdCBpdHMgZW5kIHN0YXRlLCB0aGVuIHRoZSBzdGFydFRpbWUgaXMgbW92ZWQgV0FZIGxhdGVyIChhZnRlciB0aGUgZW5kIG9mIHRoaXMgdGltZWxpbmUpLCBpdCBzaG91bGQgcmVuZGVyIGF0IGl0cyBiZWdpbm5pbmcuXG4gICAgICAgICAgICAgIHQgPSBfcGFyZW50VG9DaGlsZFRvdGFsVGltZSh0aW1lbGluZS5yYXdUaW1lKCksIGNoaWxkKTtcblxuICAgICAgICAgICAgICBpZiAoIWNoaWxkLl9kdXIgfHwgX2NsYW1wKDAsIGNoaWxkLnRvdGFsRHVyYXRpb24oKSwgdCkgLSBjaGlsZC5fdFRpbWUgPiBfdGlueU51bSkge1xuICAgICAgICAgICAgICAgIGNoaWxkLnJlbmRlcih0LCB0cnVlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSAvL2lmIHRoZSB0aW1lbGluZSBoYXMgYWxyZWFkeSBlbmRlZCBidXQgdGhlIGluc2VydGVkIHR3ZWVuL3RpbWVsaW5lIGV4dGVuZHMgdGhlIGR1cmF0aW9uLCB3ZSBzaG91bGQgZW5hYmxlIHRoaXMgdGltZWxpbmUgYWdhaW4gc28gdGhhdCBpdCByZW5kZXJzIHByb3Blcmx5LiBXZSBzaG91bGQgYWxzbyBhbGlnbiB0aGUgcGxheWhlYWQgd2l0aCB0aGUgcGFyZW50IHRpbWVsaW5lJ3Mgd2hlbiBhcHByb3ByaWF0ZS5cblxuXG4gICAgICAgICAgICBpZiAoX3VuY2FjaGUodGltZWxpbmUsIGNoaWxkKS5fZHAgJiYgdGltZWxpbmUuX2luaXR0ZWQgJiYgdGltZWxpbmUuX3RpbWUgPj0gdGltZWxpbmUuX2R1ciAmJiB0aW1lbGluZS5fdHMpIHtcbiAgICAgICAgICAgICAgLy9pbiBjYXNlIGFueSBvZiB0aGUgYW5jZXN0b3JzIGhhZCBjb21wbGV0ZWQgYnV0IHNob3VsZCBub3cgYmUgZW5hYmxlZC4uLlxuICAgICAgICAgICAgICBpZiAodGltZWxpbmUuX2R1ciA8IHRpbWVsaW5lLmR1cmF0aW9uKCkpIHtcbiAgICAgICAgICAgICAgICB0ID0gdGltZWxpbmU7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAodC5fZHApIHtcbiAgICAgICAgICAgICAgICAgIHQucmF3VGltZSgpID49IDAgJiYgdC50b3RhbFRpbWUodC5fdFRpbWUpOyAvL21vdmVzIHRoZSB0aW1lbGluZSAoc2hpZnRzIGl0cyBzdGFydFRpbWUpIGlmIG5lY2Vzc2FyeSwgYW5kIGFsc28gZW5hYmxlcyBpdC4gSWYgaXQncyBjdXJyZW50bHkgemVybywgdGhvdWdoLCBpdCBtYXkgbm90IGJlIHNjaGVkdWxlZCB0byByZW5kZXIgdW50aWwgbGF0ZXIgc28gdGhlcmUncyBubyBuZWVkIHRvIGZvcmNlIGl0IHRvIGFsaWduIHdpdGggdGhlIGN1cnJlbnQgcGxheWhlYWQgcG9zaXRpb24uIE9ubHkgbW92ZSB0byBjYXRjaCB1cCB3aXRoIHRoZSBwbGF5aGVhZC5cblxuICAgICAgICAgICAgICAgICAgdCA9IHQuX2RwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHRpbWVsaW5lLl96VGltZSA9IC1fdGlueU51bTsgLy8gaGVscHMgZW5zdXJlIHRoYXQgdGhlIG5leHQgcmVuZGVyKCkgd2lsbCBiZSBmb3JjZWQgKGNyb3NzaW5nU3RhcnQgPSB0cnVlIGluIHJlbmRlcigpKSwgZXZlbiBpZiB0aGUgZHVyYXRpb24gaGFzbid0IGNoYW5nZWQgKHdlJ3JlIGFkZGluZyBhIGNoaWxkIHdoaWNoIHdvdWxkIG5lZWQgdG8gZ2V0IHJlbmRlcmVkKS4gRGVmaW5pdGVseSBhbiBlZGdlIGNhc2UuIE5vdGU6IHdlIE1VU1QgZG8gdGhpcyBBRlRFUiB0aGUgbG9vcCBhYm92ZSB3aGVyZSB0aGUgdG90YWxUaW1lKCkgbWlnaHQgdHJpZ2dlciBhIHJlbmRlcigpIGJlY2F1c2UgdGhpcyBfYWRkVG9UaW1lbGluZSgpIG1ldGhvZCBnZXRzIGNhbGxlZCBmcm9tIHRoZSBBbmltYXRpb24gY29uc3RydWN0b3IsIEJFRk9SRSB0d2VlbnMgZXZlbiByZWNvcmQgdGhlaXIgdGFyZ2V0cywgZXRjLiBzbyB3ZSB3b3VsZG4ndCB3YW50IHRoaW5ncyB0byBnZXQgdHJpZ2dlcmVkIGluIHRoZSB3cm9uZyBvcmRlci5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hZGRUb1RpbWVsaW5lID0gZnVuY3Rpb24gX2FkZFRvVGltZWxpbmUodGltZWxpbmUsIGNoaWxkLCBwb3NpdGlvbiwgc2tpcENoZWNrcykge1xuICAgICAgICAgICAgY2hpbGQucGFyZW50ICYmIF9yZW1vdmVGcm9tUGFyZW50KGNoaWxkKTtcbiAgICAgICAgICAgIGNoaWxkLl9zdGFydCA9IF9yb3VuZChwb3NpdGlvbiArIGNoaWxkLl9kZWxheSk7XG4gICAgICAgICAgICBjaGlsZC5fZW5kID0gX3JvdW5kKGNoaWxkLl9zdGFydCArIChjaGlsZC50b3RhbER1cmF0aW9uKCkgLyBNYXRoLmFicyhjaGlsZC50aW1lU2NhbGUoKSkgfHwgMCkpO1xuXG4gICAgICAgICAgICBfYWRkTGlua2VkTGlzdEl0ZW0odGltZWxpbmUsIGNoaWxkLCBcIl9maXJzdFwiLCBcIl9sYXN0XCIsIHRpbWVsaW5lLl9zb3J0ID8gXCJfc3RhcnRcIiA6IDApO1xuXG4gICAgICAgICAgICB0aW1lbGluZS5fcmVjZW50ID0gY2hpbGQ7XG4gICAgICAgICAgICBza2lwQ2hlY2tzIHx8IF9wb3N0QWRkQ2hlY2tzKHRpbWVsaW5lLCBjaGlsZCk7XG4gICAgICAgICAgICByZXR1cm4gdGltZWxpbmU7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfc2Nyb2xsVHJpZ2dlciA9IGZ1bmN0aW9uIF9zY3JvbGxUcmlnZ2VyKGFuaW1hdGlvbiwgdHJpZ2dlcikge1xuICAgICAgICAgICAgcmV0dXJuIChfZ2xvYmFscy5TY3JvbGxUcmlnZ2VyIHx8IF9taXNzaW5nUGx1Z2luKFwic2Nyb2xsVHJpZ2dlclwiLCB0cmlnZ2VyKSkgJiYgX2dsb2JhbHMuU2Nyb2xsVHJpZ2dlci5jcmVhdGUodHJpZ2dlciwgYW5pbWF0aW9uKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hdHRlbXB0SW5pdFR3ZWVuID0gZnVuY3Rpb24gX2F0dGVtcHRJbml0VHdlZW4odHdlZW4sIHRvdGFsVGltZSwgZm9yY2UsIHN1cHByZXNzRXZlbnRzKSB7XG4gICAgICAgICAgICBfaW5pdFR3ZWVuKHR3ZWVuLCB0b3RhbFRpbWUpO1xuXG4gICAgICAgICAgICBpZiAoIXR3ZWVuLl9pbml0dGVkKSB7XG4gICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIWZvcmNlICYmIHR3ZWVuLl9wdCAmJiAodHdlZW4uX2R1ciAmJiB0d2Vlbi52YXJzLmxhenkgIT09IGZhbHNlIHx8ICF0d2Vlbi5fZHVyICYmIHR3ZWVuLnZhcnMubGF6eSkgJiYgX2xhc3RSZW5kZXJlZEZyYW1lICE9PSBfdGlja2VyLmZyYW1lKSB7XG4gICAgICAgICAgICAgIF9sYXp5VHdlZW5zLnB1c2godHdlZW4pO1xuXG4gICAgICAgICAgICAgIHR3ZWVuLl9sYXp5ID0gW3RvdGFsVGltZSwgc3VwcHJlc3NFdmVudHNdO1xuICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9wYXJlbnRQbGF5aGVhZElzQmVmb3JlU3RhcnQgPSBmdW5jdGlvbiBfcGFyZW50UGxheWhlYWRJc0JlZm9yZVN0YXJ0KF9yZWYpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnQgPSBfcmVmLnBhcmVudDtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQgJiYgcGFyZW50Ll90cyAmJiBwYXJlbnQuX2luaXR0ZWQgJiYgIXBhcmVudC5fbG9jayAmJiAocGFyZW50LnJhd1RpbWUoKSA8IDAgfHwgX3BhcmVudFBsYXloZWFkSXNCZWZvcmVTdGFydChwYXJlbnQpKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vIGNoZWNrIHBhcmVudCdzIF9sb2NrIGJlY2F1c2Ugd2hlbiBhIHRpbWVsaW5lIHJlcGVhdHMveW95b3MgYW5kIGRvZXMgaXRzIGFydGlmaWNpYWwgd3JhcHBpbmcsIHdlIHNob3VsZG4ndCBmb3JjZSB0aGUgcmF0aW8gYmFjayB0byAwXG4gICAgICAgICAgX3JlbmRlclplcm9EdXJhdGlvblR3ZWVuID0gZnVuY3Rpb24gX3JlbmRlclplcm9EdXJhdGlvblR3ZWVuKHR3ZWVuLCB0b3RhbFRpbWUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSkge1xuICAgICAgICAgICAgdmFyIHByZXZSYXRpbyA9IHR3ZWVuLnJhdGlvLFxuICAgICAgICAgICAgICByYXRpbyA9IHRvdGFsVGltZSA8IDAgfHwgIXRvdGFsVGltZSAmJiAoIXR3ZWVuLl9zdGFydCAmJiBfcGFyZW50UGxheWhlYWRJc0JlZm9yZVN0YXJ0KHR3ZWVuKSB8fCAodHdlZW4uX3RzIDwgMCB8fCB0d2Vlbi5fZHAuX3RzIDwgMCkgJiYgdHdlZW4uZGF0YSAhPT0gXCJpc0Zyb21TdGFydFwiICYmIHR3ZWVuLmRhdGEgIT09IFwiaXNTdGFydFwiKSA/IDAgOiAxLFxuICAgICAgICAgICAgICAvLyBpZiB0aGUgdHdlZW4gb3IgaXRzIHBhcmVudCBpcyByZXZlcnNlZCBhbmQgdGhlIHRvdGFsVGltZSBpcyAwLCB3ZSBzaG91bGQgZ28gdG8gYSByYXRpbyBvZiAwLlxuICAgICAgICAgICAgICByZXBlYXREZWxheSA9IHR3ZWVuLl9yRGVsYXksXG4gICAgICAgICAgICAgIHRUaW1lID0gMCxcbiAgICAgICAgICAgICAgcHQsXG4gICAgICAgICAgICAgIGl0ZXJhdGlvbixcbiAgICAgICAgICAgICAgcHJldkl0ZXJhdGlvbjtcblxuICAgICAgICAgICAgaWYgKHJlcGVhdERlbGF5ICYmIHR3ZWVuLl9yZXBlYXQpIHtcbiAgICAgICAgICAgICAgLy8gaW4gY2FzZSB0aGVyZSdzIGEgemVyby1kdXJhdGlvbiB0d2VlbiB0aGF0IGhhcyBhIHJlcGVhdCB3aXRoIGEgcmVwZWF0RGVsYXlcbiAgICAgICAgICAgICAgdFRpbWUgPSBfY2xhbXAoMCwgdHdlZW4uX3REdXIsIHRvdGFsVGltZSk7XG4gICAgICAgICAgICAgIGl0ZXJhdGlvbiA9IF9hbmltYXRpb25DeWNsZSh0VGltZSwgcmVwZWF0RGVsYXkpO1xuICAgICAgICAgICAgICBwcmV2SXRlcmF0aW9uID0gX2FuaW1hdGlvbkN5Y2xlKHR3ZWVuLl90VGltZSwgcmVwZWF0RGVsYXkpO1xuICAgICAgICAgICAgICB0d2Vlbi5feW95byAmJiBpdGVyYXRpb24gJiAxICYmIChyYXRpbyA9IDEgLSByYXRpbyk7XG5cbiAgICAgICAgICAgICAgaWYgKGl0ZXJhdGlvbiAhPT0gcHJldkl0ZXJhdGlvbikge1xuICAgICAgICAgICAgICAgIHByZXZSYXRpbyA9IDEgLSByYXRpbztcbiAgICAgICAgICAgICAgICB0d2Vlbi52YXJzLnJlcGVhdFJlZnJlc2ggJiYgdHdlZW4uX2luaXR0ZWQgJiYgdHdlZW4uaW52YWxpZGF0ZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyYXRpbyAhPT0gcHJldlJhdGlvIHx8IGZvcmNlIHx8IHR3ZWVuLl96VGltZSA9PT0gX3RpbnlOdW0gfHwgIXRvdGFsVGltZSAmJiB0d2Vlbi5felRpbWUpIHtcbiAgICAgICAgICAgICAgaWYgKCF0d2Vlbi5faW5pdHRlZCAmJiBfYXR0ZW1wdEluaXRUd2Vlbih0d2VlbiwgdG90YWxUaW1lLCBmb3JjZSwgc3VwcHJlc3NFdmVudHMpKSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgd2UgcmVuZGVyIHRoZSB2ZXJ5IGJlZ2lubmluZyAodGltZSA9PSAwKSBvZiBhIGZyb21UbygpLCB3ZSBtdXN0IGZvcmNlIHRoZSByZW5kZXIgKG5vcm1hbCB0d2VlbnMgd291bGRuJ3QgbmVlZCB0byByZW5kZXIgYXQgYSB0aW1lIG9mIDAgd2hlbiB0aGUgcHJldlRpbWUgd2FzIGFsc28gMCkuIFRoaXMgaXMgYWxzbyBtYW5kYXRvcnkgdG8gbWFrZSBzdXJlIG92ZXJ3cml0aW5nIGtpY2tzIGluIGltbWVkaWF0ZWx5LlxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHByZXZJdGVyYXRpb24gPSB0d2Vlbi5felRpbWU7XG4gICAgICAgICAgICAgIHR3ZWVuLl96VGltZSA9IHRvdGFsVGltZSB8fCAoc3VwcHJlc3NFdmVudHMgPyBfdGlueU51bSA6IDApOyAvLyB3aGVuIHRoZSBwbGF5aGVhZCBhcnJpdmVzIGF0IEVYQUNUTFkgdGltZSAwIChyaWdodCBvbiB0b3ApIG9mIGEgemVyby1kdXJhdGlvbiB0d2Vlbiwgd2UgbmVlZCB0byBkaXNjZXJuIGlmIGV2ZW50cyBhcmUgc3VwcHJlc3NlZCBzbyB0aGF0IHdoZW4gdGhlIHBsYXloZWFkIG1vdmVzIGFnYWluIChuZXh0IHRpbWUpLCBpdCdsbCB0cmlnZ2VyIHRoZSBjYWxsYmFjay4gSWYgZXZlbnRzIGFyZSBOT1Qgc3VwcHJlc3NlZCwgb2J2aW91c2x5IHRoZSBjYWxsYmFjayB3b3VsZCBiZSB0cmlnZ2VyZWQgaW4gdGhpcyByZW5kZXIuIEJhc2ljYWxseSwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlIGVpdGhlciB3aGVuIHRoZSBwbGF5aGVhZCBBUlJJVkVTIG9yIExFQVZFUyB0aGlzIGV4YWN0IHNwb3QsIG5vdCBib3RoLiBJbWFnaW5lIGRvaW5nIGEgdGltZWxpbmUuc2VlaygwKSBhbmQgdGhlcmUncyBhIGNhbGxiYWNrIHRoYXQgc2l0cyBhdCAwLiBTaW5jZSBldmVudHMgYXJlIHN1cHByZXNzZWQgb24gdGhhdCBzZWVrKCkgYnkgZGVmYXVsdCwgbm90aGluZyB3aWxsIGZpcmUsIGJ1dCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBvZmYgb2YgdGhhdCBwb3NpdGlvbiwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlLiBUaGlzIGJlaGF2aW9yIGlzIHdoYXQgcGVvcGxlIGludHVpdGl2ZWx5IGV4cGVjdC5cblxuICAgICAgICAgICAgICBzdXBwcmVzc0V2ZW50cyB8fCAoc3VwcHJlc3NFdmVudHMgPSB0b3RhbFRpbWUgJiYgIXByZXZJdGVyYXRpb24pOyAvLyBpZiBpdCB3YXMgcmVuZGVyZWQgcHJldmlvdXNseSBhdCBleGFjdGx5IDAgKF96VGltZSkgYW5kIG5vdyB0aGUgcGxheWhlYWQgaXMgbW92aW5nIGF3YXksIERPTidUIGZpcmUgY2FsbGJhY2tzIG90aGVyd2lzZSB0aGV5J2xsIHNlZW0gbGlrZSBkdXBsaWNhdGVzLlxuXG4gICAgICAgICAgICAgIHR3ZWVuLnJhdGlvID0gcmF0aW87XG4gICAgICAgICAgICAgIHR3ZWVuLl9mcm9tICYmIChyYXRpbyA9IDEgLSByYXRpbyk7XG4gICAgICAgICAgICAgIHR3ZWVuLl90aW1lID0gMDtcbiAgICAgICAgICAgICAgdHdlZW4uX3RUaW1lID0gdFRpbWU7XG4gICAgICAgICAgICAgIHN1cHByZXNzRXZlbnRzIHx8IF9jYWxsYmFjayh0d2VlbiwgXCJvblN0YXJ0XCIpO1xuICAgICAgICAgICAgICBwdCA9IHR3ZWVuLl9wdDtcblxuICAgICAgICAgICAgICB3aGlsZSAocHQpIHtcbiAgICAgICAgICAgICAgICBwdC5yKHJhdGlvLCBwdC5kKTtcbiAgICAgICAgICAgICAgICBwdCA9IHB0Ll9uZXh0O1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdHdlZW4uX3N0YXJ0QXQgJiYgdG90YWxUaW1lIDwgMCAmJiB0d2Vlbi5fc3RhcnRBdC5yZW5kZXIodG90YWxUaW1lLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgICAgdHdlZW4uX29uVXBkYXRlICYmICFzdXBwcmVzc0V2ZW50cyAmJiBfY2FsbGJhY2sodHdlZW4sIFwib25VcGRhdGVcIik7XG4gICAgICAgICAgICAgIHRUaW1lICYmIHR3ZWVuLl9yZXBlYXQgJiYgIXN1cHByZXNzRXZlbnRzICYmIHR3ZWVuLnBhcmVudCAmJiBfY2FsbGJhY2sodHdlZW4sIFwib25SZXBlYXRcIik7XG5cbiAgICAgICAgICAgICAgaWYgKCh0b3RhbFRpbWUgPj0gdHdlZW4uX3REdXIgfHwgdG90YWxUaW1lIDwgMCkgJiYgdHdlZW4ucmF0aW8gPT09IHJhdGlvKSB7XG4gICAgICAgICAgICAgICAgcmF0aW8gJiYgX3JlbW92ZUZyb21QYXJlbnQodHdlZW4sIDEpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFzdXBwcmVzc0V2ZW50cykge1xuICAgICAgICAgICAgICAgICAgX2NhbGxiYWNrKHR3ZWVuLCByYXRpbyA/IFwib25Db21wbGV0ZVwiIDogXCJvblJldmVyc2VDb21wbGV0ZVwiLCB0cnVlKTtcblxuICAgICAgICAgICAgICAgICAgdHdlZW4uX3Byb20gJiYgdHdlZW4uX3Byb20oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIXR3ZWVuLl96VGltZSkge1xuICAgICAgICAgICAgICB0d2Vlbi5felRpbWUgPSB0b3RhbFRpbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZmluZE5leHRQYXVzZVR3ZWVuID0gZnVuY3Rpb24gX2ZpbmROZXh0UGF1c2VUd2VlbihhbmltYXRpb24sIHByZXZUaW1lLCB0aW1lKSB7XG4gICAgICAgICAgICB2YXIgY2hpbGQ7XG5cbiAgICAgICAgICAgIGlmICh0aW1lID4gcHJldlRpbWUpIHtcbiAgICAgICAgICAgICAgY2hpbGQgPSBhbmltYXRpb24uX2ZpcnN0O1xuXG4gICAgICAgICAgICAgIHdoaWxlIChjaGlsZCAmJiBjaGlsZC5fc3RhcnQgPD0gdGltZSkge1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGQuX2R1ciAmJiBjaGlsZC5kYXRhID09PSBcImlzUGF1c2VcIiAmJiBjaGlsZC5fc3RhcnQgPiBwcmV2VGltZSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNoaWxkID0gY2hpbGQuX25leHQ7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNoaWxkID0gYW5pbWF0aW9uLl9sYXN0O1xuXG4gICAgICAgICAgICAgIHdoaWxlIChjaGlsZCAmJiBjaGlsZC5fc3RhcnQgPj0gdGltZSkge1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGQuX2R1ciAmJiBjaGlsZC5kYXRhID09PSBcImlzUGF1c2VcIiAmJiBjaGlsZC5fc3RhcnQgPCBwcmV2VGltZSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNoaWxkID0gY2hpbGQuX3ByZXY7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXREdXJhdGlvbiA9IGZ1bmN0aW9uIF9zZXREdXJhdGlvbihhbmltYXRpb24sIGR1cmF0aW9uLCBza2lwVW5jYWNoZSwgbGVhdmVQbGF5aGVhZCkge1xuICAgICAgICAgICAgdmFyIHJlcGVhdCA9IGFuaW1hdGlvbi5fcmVwZWF0LFxuICAgICAgICAgICAgICBkdXIgPSBfcm91bmQoZHVyYXRpb24pIHx8IDAsXG4gICAgICAgICAgICAgIHRvdGFsUHJvZ3Jlc3MgPSBhbmltYXRpb24uX3RUaW1lIC8gYW5pbWF0aW9uLl90RHVyO1xuICAgICAgICAgICAgdG90YWxQcm9ncmVzcyAmJiAhbGVhdmVQbGF5aGVhZCAmJiAoYW5pbWF0aW9uLl90aW1lICo9IGR1ciAvIGFuaW1hdGlvbi5fZHVyKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi5fZHVyID0gZHVyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLl90RHVyID0gIXJlcGVhdCA/IGR1ciA6IHJlcGVhdCA8IDAgPyAxZTEwIDogX3JvdW5kKGR1ciAqIChyZXBlYXQgKyAxKSArIGFuaW1hdGlvbi5fckRlbGF5ICogcmVwZWF0KTtcbiAgICAgICAgICAgIHRvdGFsUHJvZ3Jlc3MgJiYgIWxlYXZlUGxheWhlYWQgPyBfYWxpZ25QbGF5aGVhZChhbmltYXRpb24sIGFuaW1hdGlvbi5fdFRpbWUgPSBhbmltYXRpb24uX3REdXIgKiB0b3RhbFByb2dyZXNzKSA6IGFuaW1hdGlvbi5wYXJlbnQgJiYgX3NldEVuZChhbmltYXRpb24pO1xuICAgICAgICAgICAgc2tpcFVuY2FjaGUgfHwgX3VuY2FjaGUoYW5pbWF0aW9uLnBhcmVudCwgYW5pbWF0aW9uKTtcbiAgICAgICAgICAgIHJldHVybiBhbmltYXRpb247XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfb25VcGRhdGVUb3RhbER1cmF0aW9uID0gZnVuY3Rpb24gX29uVXBkYXRlVG90YWxEdXJhdGlvbihhbmltYXRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBhbmltYXRpb24gaW5zdGFuY2VvZiBUaW1lbGluZSA/IF91bmNhY2hlKGFuaW1hdGlvbikgOiBfc2V0RHVyYXRpb24oYW5pbWF0aW9uLCBhbmltYXRpb24uX2R1cik7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfemVyb1Bvc2l0aW9uID0ge1xuICAgICAgICAgICAgX3N0YXJ0OiAwLFxuICAgICAgICAgICAgZW5kVGltZTogX2VtcHR5RnVuY1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3BhcnNlUG9zaXRpb24gPSBmdW5jdGlvbiBfcGFyc2VQb3NpdGlvbihhbmltYXRpb24sIHBvc2l0aW9uKSB7XG4gICAgICAgICAgICB2YXIgbGFiZWxzID0gYW5pbWF0aW9uLmxhYmVscyxcbiAgICAgICAgICAgICAgcmVjZW50ID0gYW5pbWF0aW9uLl9yZWNlbnQgfHwgX3plcm9Qb3NpdGlvbixcbiAgICAgICAgICAgICAgY2xpcHBlZER1cmF0aW9uID0gYW5pbWF0aW9uLmR1cmF0aW9uKCkgPj0gX2JpZ051bSA/IHJlY2VudC5lbmRUaW1lKGZhbHNlKSA6IGFuaW1hdGlvbi5fZHVyLFxuICAgICAgICAgICAgICAvL2luIGNhc2UgdGhlcmUncyBhIGNoaWxkIHRoYXQgaW5maW5pdGVseSByZXBlYXRzLCB1c2VycyBhbG1vc3QgbmV2ZXIgaW50ZW5kIGZvciB0aGUgaW5zZXJ0aW9uIHBvaW50IG9mIGEgbmV3IGNoaWxkIHRvIGJlIGJhc2VkIG9uIGEgU1VQRVIgbG9uZyB2YWx1ZSBsaWtlIHRoYXQgc28gd2UgY2xpcCBpdCBhbmQgYXNzdW1lIHRoZSBtb3N0IHJlY2VudGx5LWFkZGVkIGNoaWxkJ3MgZW5kVGltZSBzaG91bGQgYmUgdXNlZCBpbnN0ZWFkLlxuICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICBvZmZzZXQ7XG5cbiAgICAgICAgICAgIGlmIChfaXNTdHJpbmcocG9zaXRpb24pICYmIChpc05hTihwb3NpdGlvbikgfHwgcG9zaXRpb24gaW4gbGFiZWxzKSkge1xuICAgICAgICAgICAgICAvL2lmIHRoZSBzdHJpbmcgaXMgYSBudW1iZXIgbGlrZSBcIjFcIiwgY2hlY2sgdG8gc2VlIGlmIHRoZXJlJ3MgYSBsYWJlbCB3aXRoIHRoYXQgbmFtZSwgb3RoZXJ3aXNlIGludGVycHJldCBpdCBhcyBhIG51bWJlciAoYWJzb2x1dGUgdmFsdWUpLlxuICAgICAgICAgICAgICBpID0gcG9zaXRpb24uY2hhckF0KDApO1xuXG4gICAgICAgICAgICAgIGlmIChpID09PSBcIjxcIiB8fCBpID09PSBcIj5cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiAoaSA9PT0gXCI8XCIgPyByZWNlbnQuX3N0YXJ0IDogcmVjZW50LmVuZFRpbWUocmVjZW50Ll9yZXBlYXQgPj0gMCkpICsgKHBhcnNlRmxvYXQocG9zaXRpb24uc3Vic3RyKDEpKSB8fCAwKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGkgPSBwb3NpdGlvbi5pbmRleE9mKFwiPVwiKTtcblxuICAgICAgICAgICAgICBpZiAoaSA8IDApIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiBpbiBsYWJlbHMgfHwgKGxhYmVsc1twb3NpdGlvbl0gPSBjbGlwcGVkRHVyYXRpb24pO1xuICAgICAgICAgICAgICAgIHJldHVybiBsYWJlbHNbcG9zaXRpb25dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2Zmc2V0ID0gKyhwb3NpdGlvbi5jaGFyQXQoaSAtIDEpICsgcG9zaXRpb24uc3Vic3RyKGkgKyAxKSk7XG4gICAgICAgICAgICAgIHJldHVybiBpID4gMSA/IF9wYXJzZVBvc2l0aW9uKGFuaW1hdGlvbiwgcG9zaXRpb24uc3Vic3RyKDAsIGkgLSAxKSkgKyBvZmZzZXQgOiBjbGlwcGVkRHVyYXRpb24gKyBvZmZzZXQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBwb3NpdGlvbiA9PSBudWxsID8gY2xpcHBlZER1cmF0aW9uIDogK3Bvc2l0aW9uO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2NvbmRpdGlvbmFsUmV0dXJuID0gZnVuY3Rpb24gX2NvbmRpdGlvbmFsUmV0dXJuKHZhbHVlLCBmdW5jKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgfHwgdmFsdWUgPT09IDAgPyBmdW5jKHZhbHVlKSA6IGZ1bmM7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfY2xhbXAgPSBmdW5jdGlvbiBfY2xhbXAobWluLCBtYXgsIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPCBtaW4gPyBtaW4gOiB2YWx1ZSA+IG1heCA/IG1heCA6IHZhbHVlO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0VW5pdCA9IGZ1bmN0aW9uIGdldFVuaXQodmFsdWUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciB2ID0gX3VuaXRFeHAuZXhlYyh2YWx1ZSk7XG5cbiAgICAgICAgICAgIHJldHVybiB2ID8gdmFsdWUuc3Vic3RyKHYuaW5kZXggKyB2WzBdLmxlbmd0aCkgOiBcIlwiO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgLy8gbm90ZTogcHJvdGVjdCBhZ2FpbnN0IHBhZGRlZCBudW1iZXJzIGFzIHN0cmluZ3MsIGxpa2UgXCIxMDAuMTAwXCIuIFRoYXQgc2hvdWxkbid0IHJldHVybiBcIjAwXCIgYXMgdGhlIHVuaXQuIElmIGl0J3MgbnVtZXJpYywgcmV0dXJuIG5vIHVuaXQuXG4gICAgICAgICAgY2xhbXAgPSBmdW5jdGlvbiBjbGFtcChtaW4sIG1heCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBfY29uZGl0aW9uYWxSZXR1cm4odmFsdWUsIGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgICAgIHJldHVybiBfY2xhbXAobWluLCBtYXgsIHYpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfc2xpY2UgPSBbXS5zbGljZSxcbiAgICAgICAgICBfaXNBcnJheUxpa2UgPSBmdW5jdGlvbiBfaXNBcnJheUxpa2UodmFsdWUsIG5vbkVtcHR5KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgJiYgX2lzT2JqZWN0KHZhbHVlKSAmJiBcImxlbmd0aFwiIGluIHZhbHVlICYmICghbm9uRW1wdHkgJiYgIXZhbHVlLmxlbmd0aCB8fCB2YWx1ZS5sZW5ndGggLSAxIGluIHZhbHVlICYmIF9pc09iamVjdCh2YWx1ZVswXSkpICYmICF2YWx1ZS5ub2RlVHlwZSAmJiB2YWx1ZSAhPT0gX3dpbjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9mbGF0dGVuID0gZnVuY3Rpb24gX2ZsYXR0ZW4oYXIsIGxlYXZlU3RyaW5ncywgYWNjdW11bGF0b3IpIHtcbiAgICAgICAgICAgIGlmIChhY2N1bXVsYXRvciA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgIGFjY3VtdWxhdG9yID0gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBhci5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICB2YXIgX2FjY3VtdWxhdG9yO1xuXG4gICAgICAgICAgICAgIHJldHVybiBfaXNTdHJpbmcodmFsdWUpICYmICFsZWF2ZVN0cmluZ3MgfHwgX2lzQXJyYXlMaWtlKHZhbHVlLCAxKSA/IChfYWNjdW11bGF0b3IgPSBhY2N1bXVsYXRvcikucHVzaC5hcHBseShfYWNjdW11bGF0b3IsIHRvQXJyYXkodmFsdWUpKSA6IGFjY3VtdWxhdG9yLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgfSkgfHwgYWNjdW11bGF0b3I7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvL3Rha2VzIGFueSB2YWx1ZSBhbmQgcmV0dXJucyBhbiBhcnJheS4gSWYgaXQncyBhIHN0cmluZyAoYW5kIGxlYXZlU3RyaW5ncyBpc24ndCB0cnVlKSwgaXQnbGwgdXNlIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoKSBhbmQgY29udmVydCB0aGF0IHRvIGFuIGFycmF5LiBJdCdsbCBhbHNvIGFjY2VwdCBpdGVyYWJsZXMgbGlrZSBqUXVlcnkgb2JqZWN0cy5cbiAgICAgICAgICB0b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSh2YWx1ZSwgbGVhdmVTdHJpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gX2lzU3RyaW5nKHZhbHVlKSAmJiAhbGVhdmVTdHJpbmdzICYmIChfY29yZUluaXR0ZWQgfHwgIV93YWtlKCkpID8gX3NsaWNlLmNhbGwoX2RvYy5xdWVyeVNlbGVjdG9yQWxsKHZhbHVlKSwgMCkgOiBfaXNBcnJheSh2YWx1ZSkgPyBfZmxhdHRlbih2YWx1ZSwgbGVhdmVTdHJpbmdzKSA6IF9pc0FycmF5TGlrZSh2YWx1ZSkgPyBfc2xpY2UuY2FsbCh2YWx1ZSwgMCkgOiB2YWx1ZSA/IFt2YWx1ZV0gOiBbXTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNodWZmbGUgPSBmdW5jdGlvbiBzaHVmZmxlKGEpIHtcbiAgICAgICAgICAgIHJldHVybiBhLnNvcnQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gLjUgLSBNYXRoLnJhbmRvbSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvLyBhbHRlcm5hdGl2ZSB0aGF0J3MgYSBiaXQgZmFzdGVyIGFuZCBtb3JlIHJlbGlhYmx5IGRpdmVyc2UgYnV0IGJpZ2dlcjogICBmb3IgKGxldCBqLCB2LCBpID0gYS5sZW5ndGg7IGk7IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpKSwgdiA9IGFbLS1pXSwgYVtpXSA9IGFbal0sIGFbal0gPSB2KTsgcmV0dXJuIGE7XG4gICAgICAgICAgLy9mb3IgZGlzdHJpYnV0aW5nIHZhbHVlcyBhY3Jvc3MgYW4gYXJyYXkuIENhbiBhY2NlcHQgYSBudW1iZXIsIGEgZnVuY3Rpb24gb3IgKG1vc3QgY29tbW9ubHkpIGEgZnVuY3Rpb24gd2hpY2ggY2FuIGNvbnRhaW4gdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOiB7YmFzZSwgYW1vdW50LCBmcm9tLCBlYXNlLCBncmlkLCBheGlzLCBsZW5ndGgsIGVhY2h9LiBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCBleHBlY3RzIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczogaW5kZXgsIHRhcmdldCwgYXJyYXkuIFJlY29nbml6ZXMgdGhlIGZvbGxvd2luZ1xuICAgICAgICAgIGRpc3RyaWJ1dGUgPSBmdW5jdGlvbiBkaXN0cmlidXRlKHYpIHtcbiAgICAgICAgICAgIGlmIChfaXNGdW5jdGlvbih2KSkge1xuICAgICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHZhcnMgPSBfaXNPYmplY3QodikgPyB2IDoge1xuICAgICAgICAgICAgICBlYWNoOiB2XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAvL246MSBpcyBqdXN0IHRvIGluZGljYXRlIHYgd2FzIGEgbnVtYmVyOyB3ZSBsZXZlcmFnZSB0aGF0IGxhdGVyIHRvIHNldCB2IGFjY29yZGluZyB0byB0aGUgbGVuZ3RoIHdlIGdldC4gSWYgYSBudW1iZXIgaXMgcGFzc2VkIGluLCB3ZSB0cmVhdCBpdCBsaWtlIHRoZSBvbGQgc3RhZ2dlciB2YWx1ZSB3aGVyZSAwLjEsIGZvciBleGFtcGxlLCB3b3VsZCBtZWFuIHRoYXQgdGhpbmdzIHdvdWxkIGJlIGRpc3RyaWJ1dGVkIHdpdGggMC4xIGJldHdlZW4gZWFjaCBlbGVtZW50IGluIHRoZSBhcnJheSByYXRoZXIgdGhhbiBhIHRvdGFsIFwiYW1vdW50XCIgdGhhdCdzIGNodW5rZWQgb3V0IGFtb25nIHRoZW0gYWxsLlxuICAgICAgICAgICAgICBlYXNlID0gX3BhcnNlRWFzZSh2YXJzLmVhc2UpLFxuICAgICAgICAgICAgICBmcm9tID0gdmFycy5mcm9tIHx8IDAsXG4gICAgICAgICAgICAgIGJhc2UgPSBwYXJzZUZsb2F0KHZhcnMuYmFzZSkgfHwgMCxcbiAgICAgICAgICAgICAgY2FjaGUgPSB7fSxcbiAgICAgICAgICAgICAgaXNEZWNpbWFsID0gZnJvbSA+IDAgJiYgZnJvbSA8IDEsXG4gICAgICAgICAgICAgIHJhdGlvcyA9IGlzTmFOKGZyb20pIHx8IGlzRGVjaW1hbCxcbiAgICAgICAgICAgICAgYXhpcyA9IHZhcnMuYXhpcyxcbiAgICAgICAgICAgICAgcmF0aW9YID0gZnJvbSxcbiAgICAgICAgICAgICAgcmF0aW9ZID0gZnJvbTtcblxuICAgICAgICAgICAgaWYgKF9pc1N0cmluZyhmcm9tKSkge1xuICAgICAgICAgICAgICByYXRpb1ggPSByYXRpb1kgPSB7XG4gICAgICAgICAgICAgICAgY2VudGVyOiAuNSxcbiAgICAgICAgICAgICAgICBlZGdlczogLjUsXG4gICAgICAgICAgICAgICAgZW5kOiAxXG4gICAgICAgICAgICAgIH1bZnJvbV0gfHwgMDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIWlzRGVjaW1hbCAmJiByYXRpb3MpIHtcbiAgICAgICAgICAgICAgcmF0aW9YID0gZnJvbVswXTtcbiAgICAgICAgICAgICAgcmF0aW9ZID0gZnJvbVsxXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpLCB0YXJnZXQsIGEpIHtcbiAgICAgICAgICAgICAgdmFyIGwgPSAoYSB8fCB2YXJzKS5sZW5ndGgsXG4gICAgICAgICAgICAgICAgZGlzdGFuY2VzID0gY2FjaGVbbF0sXG4gICAgICAgICAgICAgICAgb3JpZ2luWCxcbiAgICAgICAgICAgICAgICBvcmlnaW5ZLFxuICAgICAgICAgICAgICAgIHgsXG4gICAgICAgICAgICAgICAgeSxcbiAgICAgICAgICAgICAgICBkLFxuICAgICAgICAgICAgICAgIGosXG4gICAgICAgICAgICAgICAgbWF4LFxuICAgICAgICAgICAgICAgIG1pbixcbiAgICAgICAgICAgICAgICB3cmFwQXQ7XG5cbiAgICAgICAgICAgICAgaWYgKCFkaXN0YW5jZXMpIHtcbiAgICAgICAgICAgICAgICB3cmFwQXQgPSB2YXJzLmdyaWQgPT09IFwiYXV0b1wiID8gMCA6ICh2YXJzLmdyaWQgfHwgWzEsIF9iaWdOdW1dKVsxXTtcblxuICAgICAgICAgICAgICAgIGlmICghd3JhcEF0KSB7XG4gICAgICAgICAgICAgICAgICBtYXggPSAtX2JpZ051bTtcblxuICAgICAgICAgICAgICAgICAgd2hpbGUgKG1heCA8IChtYXggPSBhW3dyYXBBdCsrXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0KSAmJiB3cmFwQXQgPCBsKSB7IH1cblxuICAgICAgICAgICAgICAgICAgd3JhcEF0LS07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZGlzdGFuY2VzID0gY2FjaGVbbF0gPSBbXTtcbiAgICAgICAgICAgICAgICBvcmlnaW5YID0gcmF0aW9zID8gTWF0aC5taW4od3JhcEF0LCBsKSAqIHJhdGlvWCAtIC41IDogZnJvbSAlIHdyYXBBdDtcbiAgICAgICAgICAgICAgICBvcmlnaW5ZID0gcmF0aW9zID8gbCAqIHJhdGlvWSAvIHdyYXBBdCAtIC41IDogZnJvbSAvIHdyYXBBdCB8IDA7XG4gICAgICAgICAgICAgICAgbWF4ID0gMDtcbiAgICAgICAgICAgICAgICBtaW4gPSBfYmlnTnVtO1xuXG4gICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGw7IGorKykge1xuICAgICAgICAgICAgICAgICAgeCA9IGogJSB3cmFwQXQgLSBvcmlnaW5YO1xuICAgICAgICAgICAgICAgICAgeSA9IG9yaWdpblkgLSAoaiAvIHdyYXBBdCB8IDApO1xuICAgICAgICAgICAgICAgICAgZGlzdGFuY2VzW2pdID0gZCA9ICFheGlzID8gX3NxcnQoeCAqIHggKyB5ICogeSkgOiBNYXRoLmFicyhheGlzID09PSBcInlcIiA/IHkgOiB4KTtcbiAgICAgICAgICAgICAgICAgIGQgPiBtYXggJiYgKG1heCA9IGQpO1xuICAgICAgICAgICAgICAgICAgZCA8IG1pbiAmJiAobWluID0gZCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnJvbSA9PT0gXCJyYW5kb21cIiAmJiBzaHVmZmxlKGRpc3RhbmNlcyk7XG4gICAgICAgICAgICAgICAgZGlzdGFuY2VzLm1heCA9IG1heCAtIG1pbjtcbiAgICAgICAgICAgICAgICBkaXN0YW5jZXMubWluID0gbWluO1xuICAgICAgICAgICAgICAgIGRpc3RhbmNlcy52ID0gbCA9IChwYXJzZUZsb2F0KHZhcnMuYW1vdW50KSB8fCBwYXJzZUZsb2F0KHZhcnMuZWFjaCkgKiAod3JhcEF0ID4gbCA/IGwgLSAxIDogIWF4aXMgPyBNYXRoLm1heCh3cmFwQXQsIGwgLyB3cmFwQXQpIDogYXhpcyA9PT0gXCJ5XCIgPyBsIC8gd3JhcEF0IDogd3JhcEF0KSB8fCAwKSAqIChmcm9tID09PSBcImVkZ2VzXCIgPyAtMSA6IDEpO1xuICAgICAgICAgICAgICAgIGRpc3RhbmNlcy5iID0gbCA8IDAgPyBiYXNlIC0gbCA6IGJhc2U7XG4gICAgICAgICAgICAgICAgZGlzdGFuY2VzLnUgPSBnZXRVbml0KHZhcnMuYW1vdW50IHx8IHZhcnMuZWFjaCkgfHwgMDsgLy91bml0XG5cbiAgICAgICAgICAgICAgICBlYXNlID0gZWFzZSAmJiBsIDwgMCA/IF9pbnZlcnRFYXNlKGVhc2UpIDogZWFzZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGwgPSAoZGlzdGFuY2VzW2ldIC0gZGlzdGFuY2VzLm1pbikgLyBkaXN0YW5jZXMubWF4IHx8IDA7XG4gICAgICAgICAgICAgIHJldHVybiBfcm91bmQoZGlzdGFuY2VzLmIgKyAoZWFzZSA/IGVhc2UobCkgOiBsKSAqIGRpc3RhbmNlcy52KSArIGRpc3RhbmNlcy51OyAvL3JvdW5kIGluIG9yZGVyIHRvIHdvcmsgYXJvdW5kIGZsb2F0aW5nIHBvaW50IGVycm9yc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9yb3VuZE1vZGlmaWVyID0gZnVuY3Rpb24gX3JvdW5kTW9kaWZpZXIodikge1xuICAgICAgICAgICAgLy9wYXNzIGluIDAuMSBnZXQgYSBmdW5jdGlvbiB0aGF0J2xsIHJvdW5kIHRvIHRoZSBuZWFyZXN0IHRlbnRoLCBvciA1IHRvIHJvdW5kIHRvIHRoZSBjbG9zZXN0IDUsIG9yIDAuMDAxIHRvIHRoZSBjbG9zZXN0IDEwMDB0aCwgZXRjLlxuICAgICAgICAgICAgdmFyIHAgPSB2IDwgMSA/IE1hdGgucG93KDEwLCAodiArIFwiXCIpLmxlbmd0aCAtIDIpIDogMTsgLy90byBhdm9pZCBmbG9hdGluZyBwb2ludCBtYXRoIGVycm9ycyAobGlrZSAyNCAqIDAuMSA9PSAyLjQwMDAwMDAwMDAwMDAwMDQpLCB3ZSBjaG9wIG9mZiBhdCBhIHNwZWNpZmljIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcyAobXVjaCBmYXN0ZXIgdGhhbiB0b0ZpeGVkKClcblxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChyYXcpIHtcbiAgICAgICAgICAgICAgdmFyIG4gPSBNYXRoLnJvdW5kKHBhcnNlRmxvYXQocmF3KSAvIHYpICogdiAqIHA7XG4gICAgICAgICAgICAgIHJldHVybiAobiAtIG4gJSAxKSAvIHAgKyAoX2lzTnVtYmVyKHJhdykgPyAwIDogZ2V0VW5pdChyYXcpKTsgLy8gbiAtIG4gJSAxIHJlcGxhY2VzIE1hdGguZmxvb3IoKSBpbiBvcmRlciB0byBoYW5kbGUgbmVnYXRpdmUgdmFsdWVzIHByb3Blcmx5LiBGb3IgZXhhbXBsZSwgTWF0aC5mbG9vcigtMTUwLjAwMDAwMDAwMDAwMDAzKSBpcyAxNTEhXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc25hcCA9IGZ1bmN0aW9uIHNuYXAoc25hcFRvLCB2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIGlzQXJyYXkgPSBfaXNBcnJheShzbmFwVG8pLFxuICAgICAgICAgICAgICByYWRpdXMsXG4gICAgICAgICAgICAgIGlzMkQ7XG5cbiAgICAgICAgICAgIGlmICghaXNBcnJheSAmJiBfaXNPYmplY3Qoc25hcFRvKSkge1xuICAgICAgICAgICAgICByYWRpdXMgPSBpc0FycmF5ID0gc25hcFRvLnJhZGl1cyB8fCBfYmlnTnVtO1xuXG4gICAgICAgICAgICAgIGlmIChzbmFwVG8udmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgc25hcFRvID0gdG9BcnJheShzbmFwVG8udmFsdWVzKTtcblxuICAgICAgICAgICAgICAgIGlmIChpczJEID0gIV9pc051bWJlcihzbmFwVG9bMF0pKSB7XG4gICAgICAgICAgICAgICAgICByYWRpdXMgKj0gcmFkaXVzOyAvL3BlcmZvcm1hbmNlIG9wdGltaXphdGlvbiBzbyB3ZSBkb24ndCBoYXZlIHRvIE1hdGguc3FydCgpIGluIHRoZSBsb29wLlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzbmFwVG8gPSBfcm91bmRNb2RpZmllcihzbmFwVG8uaW5jcmVtZW50KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gX2NvbmRpdGlvbmFsUmV0dXJuKHZhbHVlLCAhaXNBcnJheSA/IF9yb3VuZE1vZGlmaWVyKHNuYXBUbykgOiBfaXNGdW5jdGlvbihzbmFwVG8pID8gZnVuY3Rpb24gKHJhdykge1xuICAgICAgICAgICAgICBpczJEID0gc25hcFRvKHJhdyk7XG4gICAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyhpczJEIC0gcmF3KSA8PSByYWRpdXMgPyBpczJEIDogcmF3O1xuICAgICAgICAgICAgfSA6IGZ1bmN0aW9uIChyYXcpIHtcbiAgICAgICAgICAgICAgdmFyIHggPSBwYXJzZUZsb2F0KGlzMkQgPyByYXcueCA6IHJhdyksXG4gICAgICAgICAgICAgICAgeSA9IHBhcnNlRmxvYXQoaXMyRCA/IHJhdy55IDogMCksXG4gICAgICAgICAgICAgICAgbWluID0gX2JpZ051bSxcbiAgICAgICAgICAgICAgICBjbG9zZXN0ID0gMCxcbiAgICAgICAgICAgICAgICBpID0gc25hcFRvLmxlbmd0aCxcbiAgICAgICAgICAgICAgICBkeCxcbiAgICAgICAgICAgICAgICBkeTtcblxuICAgICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzMkQpIHtcbiAgICAgICAgICAgICAgICAgIGR4ID0gc25hcFRvW2ldLnggLSB4O1xuICAgICAgICAgICAgICAgICAgZHkgPSBzbmFwVG9baV0ueSAtIHk7XG4gICAgICAgICAgICAgICAgICBkeCA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBkeCA9IE1hdGguYWJzKHNuYXBUb1tpXSAtIHgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChkeCA8IG1pbikge1xuICAgICAgICAgICAgICAgICAgbWluID0gZHg7XG4gICAgICAgICAgICAgICAgICBjbG9zZXN0ID0gaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBjbG9zZXN0ID0gIXJhZGl1cyB8fCBtaW4gPD0gcmFkaXVzID8gc25hcFRvW2Nsb3Nlc3RdIDogcmF3O1xuICAgICAgICAgICAgICByZXR1cm4gaXMyRCB8fCBjbG9zZXN0ID09PSByYXcgfHwgX2lzTnVtYmVyKHJhdykgPyBjbG9zZXN0IDogY2xvc2VzdCArIGdldFVuaXQocmF3KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcmFuZG9tID0gZnVuY3Rpb24gcmFuZG9tKG1pbiwgbWF4LCByb3VuZGluZ0luY3JlbWVudCwgcmV0dXJuRnVuY3Rpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBfY29uZGl0aW9uYWxSZXR1cm4oX2lzQXJyYXkobWluKSA/ICFtYXggOiByb3VuZGluZ0luY3JlbWVudCA9PT0gdHJ1ZSA/ICEhKHJvdW5kaW5nSW5jcmVtZW50ID0gMCkgOiAhcmV0dXJuRnVuY3Rpb24sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9pc0FycmF5KG1pbikgPyBtaW5bfn4oTWF0aC5yYW5kb20oKSAqIG1pbi5sZW5ndGgpXSA6IChyb3VuZGluZ0luY3JlbWVudCA9IHJvdW5kaW5nSW5jcmVtZW50IHx8IDFlLTUpICYmIChyZXR1cm5GdW5jdGlvbiA9IHJvdW5kaW5nSW5jcmVtZW50IDwgMSA/IE1hdGgucG93KDEwLCAocm91bmRpbmdJbmNyZW1lbnQgKyBcIlwiKS5sZW5ndGggLSAyKSA6IDEpICYmIE1hdGguZmxvb3IoTWF0aC5yb3VuZCgobWluIC0gcm91bmRpbmdJbmNyZW1lbnQgLyAyICsgTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyByb3VuZGluZ0luY3JlbWVudCAqIC45OSkpIC8gcm91bmRpbmdJbmNyZW1lbnQpICogcm91bmRpbmdJbmNyZW1lbnQgKiByZXR1cm5GdW5jdGlvbikgLyByZXR1cm5GdW5jdGlvbjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcGlwZSA9IGZ1bmN0aW9uIHBpcGUoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZnVuY3Rpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICAgICAgICBmdW5jdGlvbnNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9ucy5yZWR1Y2UoZnVuY3Rpb24gKHYsIGYpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZih2KTtcbiAgICAgICAgICAgICAgfSwgdmFsdWUpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHVuaXRpemUgPSBmdW5jdGlvbiB1bml0aXplKGZ1bmMsIHVuaXQpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMocGFyc2VGbG9hdCh2YWx1ZSkpICsgKHVuaXQgfHwgZ2V0VW5pdCh2YWx1ZSkpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG5vcm1hbGl6ZSA9IGZ1bmN0aW9uIG5vcm1hbGl6ZShtaW4sIG1heCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXBSYW5nZShtaW4sIG1heCwgMCwgMSwgdmFsdWUpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3dyYXBBcnJheSA9IGZ1bmN0aW9uIF93cmFwQXJyYXkoYSwgd3JhcHBlciwgdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBfY29uZGl0aW9uYWxSZXR1cm4odmFsdWUsIGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgICByZXR1cm4gYVt+fndyYXBwZXIoaW5kZXgpXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgd3JhcCA9IGZ1bmN0aW9uIHdyYXAobWluLCBtYXgsIHZhbHVlKSB7XG4gICAgICAgICAgICAvLyBOT1RFOiB3cmFwKCkgQ0FOTk9UIGJlIGFuIGFycm93IGZ1bmN0aW9uISBBIHZlcnkgb2RkIGNvbXBpbGluZyBidWcgY2F1c2VzIHByb2JsZW1zICh1bnJlbGF0ZWQgdG8gR1NBUCkuXG4gICAgICAgICAgICB2YXIgcmFuZ2UgPSBtYXggLSBtaW47XG4gICAgICAgICAgICByZXR1cm4gX2lzQXJyYXkobWluKSA/IF93cmFwQXJyYXkobWluLCB3cmFwKDAsIG1pbi5sZW5ndGgpLCBtYXgpIDogX2NvbmRpdGlvbmFsUmV0dXJuKHZhbHVlLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChyYW5nZSArICh2YWx1ZSAtIG1pbikgJSByYW5nZSkgJSByYW5nZSArIG1pbjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgd3JhcFlveW8gPSBmdW5jdGlvbiB3cmFwWW95byhtaW4sIG1heCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IG1heCAtIG1pbixcbiAgICAgICAgICAgICAgdG90YWwgPSByYW5nZSAqIDI7XG4gICAgICAgICAgICByZXR1cm4gX2lzQXJyYXkobWluKSA/IF93cmFwQXJyYXkobWluLCB3cmFwWW95bygwLCBtaW4ubGVuZ3RoIC0gMSksIG1heCkgOiBfY29uZGl0aW9uYWxSZXR1cm4odmFsdWUsIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICB2YWx1ZSA9ICh0b3RhbCArICh2YWx1ZSAtIG1pbikgJSB0b3RhbCkgJSB0b3RhbCB8fCAwO1xuICAgICAgICAgICAgICByZXR1cm4gbWluICsgKHZhbHVlID4gcmFuZ2UgPyB0b3RhbCAtIHZhbHVlIDogdmFsdWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVwbGFjZVJhbmRvbSA9IGZ1bmN0aW9uIF9yZXBsYWNlUmFuZG9tKHZhbHVlKSB7XG4gICAgICAgICAgICAvL3JlcGxhY2VzIGFsbCBvY2N1cnJlbmNlcyBvZiByYW5kb20oLi4uKSBpbiBhIHN0cmluZyB3aXRoIHRoZSBjYWxjdWxhdGVkIHJhbmRvbSB2YWx1ZS4gY2FuIGJlIGEgcmFuZ2UgbGlrZSByYW5kb20oLTEwMCwgMTAwLCA1KSBvciBhbiBhcnJheSBsaWtlIHJhbmRvbShbMCwgMTAwLCA1MDBdKVxuICAgICAgICAgICAgdmFyIHByZXYgPSAwLFxuICAgICAgICAgICAgICBzID0gXCJcIixcbiAgICAgICAgICAgICAgaSxcbiAgICAgICAgICAgICAgbnVtcyxcbiAgICAgICAgICAgICAgZW5kLFxuICAgICAgICAgICAgICBpc0FycmF5O1xuXG4gICAgICAgICAgICB3aGlsZSAofihpID0gdmFsdWUuaW5kZXhPZihcInJhbmRvbShcIiwgcHJldikpKSB7XG4gICAgICAgICAgICAgIGVuZCA9IHZhbHVlLmluZGV4T2YoXCIpXCIsIGkpO1xuICAgICAgICAgICAgICBpc0FycmF5ID0gdmFsdWUuY2hhckF0KGkgKyA3KSA9PT0gXCJbXCI7XG4gICAgICAgICAgICAgIG51bXMgPSB2YWx1ZS5zdWJzdHIoaSArIDcsIGVuZCAtIGkgLSA3KS5tYXRjaChpc0FycmF5ID8gX2RlbGltaXRlZFZhbHVlRXhwIDogX3N0cmljdE51bUV4cCk7XG4gICAgICAgICAgICAgIHMgKz0gdmFsdWUuc3Vic3RyKHByZXYsIGkgLSBwcmV2KSArIHJhbmRvbShpc0FycmF5ID8gbnVtcyA6ICtudW1zWzBdLCBpc0FycmF5ID8gMCA6ICtudW1zWzFdLCArbnVtc1syXSB8fCAxZS01KTtcbiAgICAgICAgICAgICAgcHJldiA9IGVuZCArIDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzICsgdmFsdWUuc3Vic3RyKHByZXYsIHZhbHVlLmxlbmd0aCAtIHByZXYpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbWFwUmFuZ2UgPSBmdW5jdGlvbiBtYXBSYW5nZShpbk1pbiwgaW5NYXgsIG91dE1pbiwgb3V0TWF4LCB2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIGluUmFuZ2UgPSBpbk1heCAtIGluTWluLFxuICAgICAgICAgICAgICBvdXRSYW5nZSA9IG91dE1heCAtIG91dE1pbjtcbiAgICAgICAgICAgIHJldHVybiBfY29uZGl0aW9uYWxSZXR1cm4odmFsdWUsIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICByZXR1cm4gb3V0TWluICsgKCh2YWx1ZSAtIGluTWluKSAvIGluUmFuZ2UgKiBvdXRSYW5nZSB8fCAwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgaW50ZXJwb2xhdGUgPSBmdW5jdGlvbiBpbnRlcnBvbGF0ZShzdGFydCwgZW5kLCBwcm9ncmVzcywgbXV0YXRlKSB7XG4gICAgICAgICAgICB2YXIgZnVuYyA9IGlzTmFOKHN0YXJ0ICsgZW5kKSA/IDAgOiBmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICByZXR1cm4gKDEgLSBwKSAqIHN0YXJ0ICsgcCAqIGVuZDtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmICghZnVuYykge1xuICAgICAgICAgICAgICB2YXIgaXNTdHJpbmcgPSBfaXNTdHJpbmcoc3RhcnQpLFxuICAgICAgICAgICAgICAgIG1hc3RlciA9IHt9LFxuICAgICAgICAgICAgICAgIHAsXG4gICAgICAgICAgICAgICAgaSxcbiAgICAgICAgICAgICAgICBpbnRlcnBvbGF0b3JzLFxuICAgICAgICAgICAgICAgIGwsXG4gICAgICAgICAgICAgICAgaWw7XG5cbiAgICAgICAgICAgICAgcHJvZ3Jlc3MgPT09IHRydWUgJiYgKG11dGF0ZSA9IDEpICYmIChwcm9ncmVzcyA9IG51bGwpO1xuXG4gICAgICAgICAgICAgIGlmIChpc1N0cmluZykge1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0ge1xuICAgICAgICAgICAgICAgICAgcDogc3RhcnRcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGVuZCA9IHtcbiAgICAgICAgICAgICAgICAgIHA6IGVuZFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoX2lzQXJyYXkoc3RhcnQpICYmICFfaXNBcnJheShlbmQpKSB7XG4gICAgICAgICAgICAgICAgaW50ZXJwb2xhdG9ycyA9IFtdO1xuICAgICAgICAgICAgICAgIGwgPSBzdGFydC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgaWwgPSBsIC0gMjtcblxuICAgICAgICAgICAgICAgIGZvciAoaSA9IDE7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgIGludGVycG9sYXRvcnMucHVzaChpbnRlcnBvbGF0ZShzdGFydFtpIC0gMV0sIHN0YXJ0W2ldKSk7IC8vYnVpbGQgdGhlIGludGVycG9sYXRvcnMgdXAgZnJvbnQgYXMgYSBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24gc28gdGhhdCB3aGVuIHRoZSBmdW5jdGlvbiBpcyBjYWxsZWQgbWFueSB0aW1lcywgaXQgY2FuIGp1c3QgcmV1c2UgdGhlbS5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBsLS07XG5cbiAgICAgICAgICAgICAgICBmdW5jID0gZnVuY3Rpb24gZnVuYyhwKSB7XG4gICAgICAgICAgICAgICAgICBwICo9IGw7XG4gICAgICAgICAgICAgICAgICB2YXIgaSA9IE1hdGgubWluKGlsLCB+fnApO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVycG9sYXRvcnNbaV0ocCAtIGkpO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBwcm9ncmVzcyA9IGVuZDtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmICghbXV0YXRlKSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBfbWVyZ2UoX2lzQXJyYXkoc3RhcnQpID8gW10gOiB7fSwgc3RhcnQpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpbnRlcnBvbGF0b3JzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChwIGluIGVuZCkge1xuICAgICAgICAgICAgICAgICAgX2FkZFByb3BUd2Vlbi5jYWxsKG1hc3Rlciwgc3RhcnQsIHAsIFwiZ2V0XCIsIGVuZFtwXSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuYyA9IGZ1bmN0aW9uIGZ1bmMocCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZW5kZXJQcm9wVHdlZW5zKHAsIG1hc3RlcikgfHwgKGlzU3RyaW5nID8gc3RhcnQucCA6IHN0YXJ0KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBfY29uZGl0aW9uYWxSZXR1cm4ocHJvZ3Jlc3MsIGZ1bmMpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2dldExhYmVsSW5EaXJlY3Rpb24gPSBmdW5jdGlvbiBfZ2V0TGFiZWxJbkRpcmVjdGlvbih0aW1lbGluZSwgZnJvbVRpbWUsIGJhY2t3YXJkKSB7XG4gICAgICAgICAgICAvL3VzZWQgZm9yIG5leHRMYWJlbCgpIGFuZCBwcmV2aW91c0xhYmVsKClcbiAgICAgICAgICAgIHZhciBsYWJlbHMgPSB0aW1lbGluZS5sYWJlbHMsXG4gICAgICAgICAgICAgIG1pbiA9IF9iaWdOdW0sXG4gICAgICAgICAgICAgIHAsXG4gICAgICAgICAgICAgIGRpc3RhbmNlLFxuICAgICAgICAgICAgICBsYWJlbDtcblxuICAgICAgICAgICAgZm9yIChwIGluIGxhYmVscykge1xuICAgICAgICAgICAgICBkaXN0YW5jZSA9IGxhYmVsc1twXSAtIGZyb21UaW1lO1xuXG4gICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IDAgPT09ICEhYmFja3dhcmQgJiYgZGlzdGFuY2UgJiYgbWluID4gKGRpc3RhbmNlID0gTWF0aC5hYnMoZGlzdGFuY2UpKSkge1xuICAgICAgICAgICAgICAgIGxhYmVsID0gcDtcbiAgICAgICAgICAgICAgICBtaW4gPSBkaXN0YW5jZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbGFiZWw7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfY2FsbGJhY2sgPSBmdW5jdGlvbiBfY2FsbGJhY2soYW5pbWF0aW9uLCB0eXBlLCBleGVjdXRlTGF6eUZpcnN0KSB7XG4gICAgICAgICAgICB2YXIgdiA9IGFuaW1hdGlvbi52YXJzLFxuICAgICAgICAgICAgICBjYWxsYmFjayA9IHZbdHlwZV0sXG4gICAgICAgICAgICAgIHBhcmFtcyxcbiAgICAgICAgICAgICAgc2NvcGU7XG5cbiAgICAgICAgICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwYXJhbXMgPSB2W3R5cGUgKyBcIlBhcmFtc1wiXTtcbiAgICAgICAgICAgIHNjb3BlID0gdi5jYWxsYmFja1Njb3BlIHx8IGFuaW1hdGlvbjtcbiAgICAgICAgICAgIGV4ZWN1dGVMYXp5Rmlyc3QgJiYgX2xhenlUd2VlbnMubGVuZ3RoICYmIF9sYXp5UmVuZGVyKCk7IC8vaW4gY2FzZSByZW5kZXJpbmcgY2F1c2VkIGFueSB0d2VlbnMgdG8gbGF6eS1pbml0LCB3ZSBzaG91bGQgcmVuZGVyIHRoZW0gYmVjYXVzZSB0eXBpY2FsbHkgd2hlbiBhIHRpbWVsaW5lIGZpbmlzaGVzLCB1c2VycyBleHBlY3QgdGhpbmdzIHRvIGhhdmUgcmVuZGVyZWQgZnVsbHkuIEltYWdpbmUgYW4gb25VcGRhdGUgb24gYSB0aW1lbGluZSB0aGF0IHJlcG9ydHMvY2hlY2tzIHR3ZWVuZWQgdmFsdWVzLlxuXG4gICAgICAgICAgICByZXR1cm4gcGFyYW1zID8gY2FsbGJhY2suYXBwbHkoc2NvcGUsIHBhcmFtcykgOiBjYWxsYmFjay5jYWxsKHNjb3BlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pbnRlcnJ1cHQgPSBmdW5jdGlvbiBfaW50ZXJydXB0KGFuaW1hdGlvbikge1xuICAgICAgICAgICAgX3JlbW92ZUZyb21QYXJlbnQoYW5pbWF0aW9uKTtcblxuICAgICAgICAgICAgYW5pbWF0aW9uLnByb2dyZXNzKCkgPCAxICYmIF9jYWxsYmFjayhhbmltYXRpb24sIFwib25JbnRlcnJ1cHRcIik7XG4gICAgICAgICAgICByZXR1cm4gYW5pbWF0aW9uO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3F1aWNrVHdlZW4sXG4gICAgICAgICAgX2NyZWF0ZVBsdWdpbiA9IGZ1bmN0aW9uIF9jcmVhdGVQbHVnaW4oY29uZmlnKSB7XG4gICAgICAgICAgICBjb25maWcgPSAhY29uZmlnLm5hbWUgJiYgY29uZmlnW1wiZGVmYXVsdFwiXSB8fCBjb25maWc7IC8vVU1EIHBhY2thZ2luZyB3cmFwcyB0aGluZ3Mgb2RkbHksIHNvIGZvciBleGFtcGxlIE1vdGlvblBhdGhIZWxwZXIgYmVjb21lcyB7TW90aW9uUGF0aEhlbHBlcjpNb3Rpb25QYXRoSGVscGVyLCBkZWZhdWx0Ok1vdGlvblBhdGhIZWxwZXJ9LlxuXG4gICAgICAgICAgICB2YXIgbmFtZSA9IGNvbmZpZy5uYW1lLFxuICAgICAgICAgICAgICBpc0Z1bmMgPSBfaXNGdW5jdGlvbihjb25maWcpLFxuICAgICAgICAgICAgICBQbHVnaW4gPSBuYW1lICYmICFpc0Z1bmMgJiYgY29uZmlnLmluaXQgPyBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcHJvcHMgPSBbXTtcbiAgICAgICAgICAgICAgfSA6IGNvbmZpZyxcbiAgICAgICAgICAgICAgLy9pbiBjYXNlIHNvbWVvbmUgcGFzc2VzIGluIGFuIG9iamVjdCB0aGF0J3Mgbm90IGEgcGx1Z2luLCBsaWtlIEN1c3RvbUVhc2VcbiAgICAgICAgICAgICAgaW5zdGFuY2VEZWZhdWx0cyA9IHtcbiAgICAgICAgICAgICAgICBpbml0OiBfZW1wdHlGdW5jLFxuICAgICAgICAgICAgICAgIHJlbmRlcjogX3JlbmRlclByb3BUd2VlbnMsXG4gICAgICAgICAgICAgICAgYWRkOiBfYWRkUHJvcFR3ZWVuLFxuICAgICAgICAgICAgICAgIGtpbGw6IF9raWxsUHJvcFR3ZWVuc09mLFxuICAgICAgICAgICAgICAgIG1vZGlmaWVyOiBfYWRkUGx1Z2luTW9kaWZpZXIsXG4gICAgICAgICAgICAgICAgcmF3VmFyczogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBzdGF0aWNzID0ge1xuICAgICAgICAgICAgICAgIHRhcmdldFRlc3Q6IDAsXG4gICAgICAgICAgICAgICAgZ2V0OiAwLFxuICAgICAgICAgICAgICAgIGdldFNldHRlcjogX2dldFNldHRlcixcbiAgICAgICAgICAgICAgICBhbGlhc2VzOiB7fSxcbiAgICAgICAgICAgICAgICByZWdpc3RlcjogMFxuICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfd2FrZSgpO1xuXG4gICAgICAgICAgICBpZiAoY29uZmlnICE9PSBQbHVnaW4pIHtcbiAgICAgICAgICAgICAgaWYgKF9wbHVnaW5zW25hbWVdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgX3NldERlZmF1bHRzKFBsdWdpbiwgX3NldERlZmF1bHRzKF9jb3B5RXhjbHVkaW5nKGNvbmZpZywgaW5zdGFuY2VEZWZhdWx0cyksIHN0YXRpY3MpKTsgLy9zdGF0aWMgbWV0aG9kc1xuXG5cbiAgICAgICAgICAgICAgX21lcmdlKFBsdWdpbi5wcm90b3R5cGUsIF9tZXJnZShpbnN0YW5jZURlZmF1bHRzLCBfY29weUV4Y2x1ZGluZyhjb25maWcsIHN0YXRpY3MpKSk7IC8vaW5zdGFuY2UgbWV0aG9kc1xuXG5cbiAgICAgICAgICAgICAgX3BsdWdpbnNbUGx1Z2luLnByb3AgPSBuYW1lXSA9IFBsdWdpbjtcblxuICAgICAgICAgICAgICBpZiAoY29uZmlnLnRhcmdldFRlc3QpIHtcbiAgICAgICAgICAgICAgICBfaGFybmVzc1BsdWdpbnMucHVzaChQbHVnaW4pO1xuXG4gICAgICAgICAgICAgICAgX3Jlc2VydmVkUHJvcHNbbmFtZV0gPSAxO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgbmFtZSA9IChuYW1lID09PSBcImNzc1wiID8gXCJDU1NcIiA6IG5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnN1YnN0cigxKSkgKyBcIlBsdWdpblwiOyAvL2ZvciB0aGUgZ2xvYmFsIG5hbWUuIFwibW90aW9uUGF0aFwiIHNob3VsZCBiZWNvbWUgTW90aW9uUGF0aFBsdWdpblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfYWRkR2xvYmFsKG5hbWUsIFBsdWdpbik7XG5cbiAgICAgICAgICAgIGNvbmZpZy5yZWdpc3RlciAmJiBjb25maWcucmVnaXN0ZXIoZ3NhcCwgUGx1Z2luLCBQcm9wVHdlZW4pO1xuICAgICAgICAgIH0sXG5cbiAgICAgICAgICAvKlxuICAgICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgICogQ09MT1JTXG4gICAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICAgKi9cbiAgICAgICAgICBfMjU1ID0gMjU1LFxuICAgICAgICAgIF9jb2xvckxvb2t1cCA9IHtcbiAgICAgICAgICAgIGFxdWE6IFswLCBfMjU1LCBfMjU1XSxcbiAgICAgICAgICAgIGxpbWU6IFswLCBfMjU1LCAwXSxcbiAgICAgICAgICAgIHNpbHZlcjogWzE5MiwgMTkyLCAxOTJdLFxuICAgICAgICAgICAgYmxhY2s6IFswLCAwLCAwXSxcbiAgICAgICAgICAgIG1hcm9vbjogWzEyOCwgMCwgMF0sXG4gICAgICAgICAgICB0ZWFsOiBbMCwgMTI4LCAxMjhdLFxuICAgICAgICAgICAgYmx1ZTogWzAsIDAsIF8yNTVdLFxuICAgICAgICAgICAgbmF2eTogWzAsIDAsIDEyOF0sXG4gICAgICAgICAgICB3aGl0ZTogW18yNTUsIF8yNTUsIF8yNTVdLFxuICAgICAgICAgICAgb2xpdmU6IFsxMjgsIDEyOCwgMF0sXG4gICAgICAgICAgICB5ZWxsb3c6IFtfMjU1LCBfMjU1LCAwXSxcbiAgICAgICAgICAgIG9yYW5nZTogW18yNTUsIDE2NSwgMF0sXG4gICAgICAgICAgICBncmF5OiBbMTI4LCAxMjgsIDEyOF0sXG4gICAgICAgICAgICBwdXJwbGU6IFsxMjgsIDAsIDEyOF0sXG4gICAgICAgICAgICBncmVlbjogWzAsIDEyOCwgMF0sXG4gICAgICAgICAgICByZWQ6IFtfMjU1LCAwLCAwXSxcbiAgICAgICAgICAgIHBpbms6IFtfMjU1LCAxOTIsIDIwM10sXG4gICAgICAgICAgICBjeWFuOiBbMCwgXzI1NSwgXzI1NV0sXG4gICAgICAgICAgICB0cmFuc3BhcmVudDogW18yNTUsIF8yNTUsIF8yNTUsIDBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICBfaHVlID0gZnVuY3Rpb24gX2h1ZShoLCBtMSwgbTIpIHtcbiAgICAgICAgICAgIGggPSBoIDwgMCA/IGggKyAxIDogaCA+IDEgPyBoIC0gMSA6IGg7XG4gICAgICAgICAgICByZXR1cm4gKGggKiA2IDwgMSA/IG0xICsgKG0yIC0gbTEpICogaCAqIDYgOiBoIDwgLjUgPyBtMiA6IGggKiAzIDwgMiA/IG0xICsgKG0yIC0gbTEpICogKDIgLyAzIC0gaCkgKiA2IDogbTEpICogXzI1NSArIC41IHwgMDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNwbGl0Q29sb3IgPSBmdW5jdGlvbiBzcGxpdENvbG9yKHYsIHRvSFNMLCBmb3JjZUFscGhhKSB7XG4gICAgICAgICAgICB2YXIgYSA9ICF2ID8gX2NvbG9yTG9va3VwLmJsYWNrIDogX2lzTnVtYmVyKHYpID8gW3YgPj4gMTYsIHYgPj4gOCAmIF8yNTUsIHYgJiBfMjU1XSA6IDAsXG4gICAgICAgICAgICAgIHIsXG4gICAgICAgICAgICAgIGcsXG4gICAgICAgICAgICAgIGIsXG4gICAgICAgICAgICAgIGgsXG4gICAgICAgICAgICAgIHMsXG4gICAgICAgICAgICAgIGwsXG4gICAgICAgICAgICAgIG1heCxcbiAgICAgICAgICAgICAgbWluLFxuICAgICAgICAgICAgICBkLFxuICAgICAgICAgICAgICB3YXNIU0w7XG5cbiAgICAgICAgICAgIGlmICghYSkge1xuICAgICAgICAgICAgICBpZiAodi5zdWJzdHIoLTEpID09PSBcIixcIikge1xuICAgICAgICAgICAgICAgIHYgPSB2LnN1YnN0cigwLCB2Lmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKF9jb2xvckxvb2t1cFt2XSkge1xuICAgICAgICAgICAgICAgIGEgPSBfY29sb3JMb29rdXBbdl07XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAodi5jaGFyQXQoMCkgPT09IFwiI1wiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHYubGVuZ3RoIDwgNikge1xuICAgICAgICAgICAgICAgICAgciA9IHYuY2hhckF0KDEpO1xuICAgICAgICAgICAgICAgICAgZyA9IHYuY2hhckF0KDIpO1xuICAgICAgICAgICAgICAgICAgYiA9IHYuY2hhckF0KDMpO1xuICAgICAgICAgICAgICAgICAgdiA9IFwiI1wiICsgciArIHIgKyBnICsgZyArIGIgKyBiICsgKHYubGVuZ3RoID09PSA1ID8gdi5jaGFyQXQoNCkgKyB2LmNoYXJBdCg0KSA6IFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICh2Lmxlbmd0aCA9PT0gOSkge1xuICAgICAgICAgICAgICAgICAgYSA9IHBhcnNlSW50KHYuc3Vic3RyKDEsIDYpLCAxNik7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2EgPj4gMTYsIGEgPj4gOCAmIF8yNTUsIGEgJiBfMjU1LCBwYXJzZUludCh2LnN1YnN0cig3KSwgMTYpIC8gMjU1XTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2ID0gcGFyc2VJbnQodi5zdWJzdHIoMSksIDE2KTtcbiAgICAgICAgICAgICAgICBhID0gW3YgPj4gMTYsIHYgPj4gOCAmIF8yNTUsIHYgJiBfMjU1XTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmICh2LnN1YnN0cigwLCAzKSA9PT0gXCJoc2xcIikge1xuICAgICAgICAgICAgICAgIGEgPSB3YXNIU0wgPSB2Lm1hdGNoKF9zdHJpY3ROdW1FeHApO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF0b0hTTCkge1xuICAgICAgICAgICAgICAgICAgaCA9ICthWzBdICUgMzYwIC8gMzYwO1xuICAgICAgICAgICAgICAgICAgcyA9ICthWzFdIC8gMTAwO1xuICAgICAgICAgICAgICAgICAgbCA9ICthWzJdIC8gMTAwO1xuICAgICAgICAgICAgICAgICAgZyA9IGwgPD0gLjUgPyBsICogKHMgKyAxKSA6IGwgKyBzIC0gbCAqIHM7XG4gICAgICAgICAgICAgICAgICByID0gbCAqIDIgLSBnO1xuICAgICAgICAgICAgICAgICAgYS5sZW5ndGggPiAzICYmIChhWzNdICo9IDEpOyAvL2Nhc3QgYXMgbnVtYmVyXG5cbiAgICAgICAgICAgICAgICAgIGFbMF0gPSBfaHVlKGggKyAxIC8gMywgciwgZyk7XG4gICAgICAgICAgICAgICAgICBhWzFdID0gX2h1ZShoLCByLCBnKTtcbiAgICAgICAgICAgICAgICAgIGFbMl0gPSBfaHVlKGggLSAxIC8gMywgciwgZyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh+di5pbmRleE9mKFwiPVwiKSkge1xuICAgICAgICAgICAgICAgICAgLy9pZiByZWxhdGl2ZSB2YWx1ZXMgYXJlIGZvdW5kLCBqdXN0IHJldHVybiB0aGUgcmF3IHN0cmluZ3Mgd2l0aCB0aGUgcmVsYXRpdmUgcHJlZml4ZXMgaW4gcGxhY2UuXG4gICAgICAgICAgICAgICAgICBhID0gdi5tYXRjaChfbnVtRXhwKTtcbiAgICAgICAgICAgICAgICAgIGZvcmNlQWxwaGEgJiYgYS5sZW5ndGggPCA0ICYmIChhWzNdID0gMSk7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYSA9IHYubWF0Y2goX3N0cmljdE51bUV4cCkgfHwgX2NvbG9yTG9va3VwLnRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgYSA9IGEubWFwKE51bWJlcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0b0hTTCAmJiAhd2FzSFNMKSB7XG4gICAgICAgICAgICAgIHIgPSBhWzBdIC8gXzI1NTtcbiAgICAgICAgICAgICAgZyA9IGFbMV0gLyBfMjU1O1xuICAgICAgICAgICAgICBiID0gYVsyXSAvIF8yNTU7XG4gICAgICAgICAgICAgIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpO1xuICAgICAgICAgICAgICBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKTtcbiAgICAgICAgICAgICAgbCA9IChtYXggKyBtaW4pIC8gMjtcblxuICAgICAgICAgICAgICBpZiAobWF4ID09PSBtaW4pIHtcbiAgICAgICAgICAgICAgICBoID0gcyA9IDA7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZCA9IG1heCAtIG1pbjtcbiAgICAgICAgICAgICAgICBzID0gbCA+IDAuNSA/IGQgLyAoMiAtIG1heCAtIG1pbikgOiBkIC8gKG1heCArIG1pbik7XG4gICAgICAgICAgICAgICAgaCA9IG1heCA9PT0gciA/IChnIC0gYikgLyBkICsgKGcgPCBiID8gNiA6IDApIDogbWF4ID09PSBnID8gKGIgLSByKSAvIGQgKyAyIDogKHIgLSBnKSAvIGQgKyA0O1xuICAgICAgICAgICAgICAgIGggKj0gNjA7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBhWzBdID0gfn4oaCArIC41KTtcbiAgICAgICAgICAgICAgYVsxXSA9IH5+KHMgKiAxMDAgKyAuNSk7XG4gICAgICAgICAgICAgIGFbMl0gPSB+fihsICogMTAwICsgLjUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3JjZUFscGhhICYmIGEubGVuZ3RoIDwgNCAmJiAoYVszXSA9IDEpO1xuICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfY29sb3JPcmRlckRhdGEgPSBmdW5jdGlvbiBfY29sb3JPcmRlckRhdGEodikge1xuICAgICAgICAgICAgdmFyIHZhbHVlcyA9IFtdLFxuICAgICAgICAgICAgICBjID0gW10sXG4gICAgICAgICAgICAgIGkgPSAtMTtcbiAgICAgICAgICAgIHYuc3BsaXQoX2NvbG9yRXhwKS5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgICAgIHZhciBhID0gdi5tYXRjaChfbnVtV2l0aFVuaXRFeHApIHx8IFtdO1xuICAgICAgICAgICAgICB2YWx1ZXMucHVzaC5hcHBseSh2YWx1ZXMsIGEpO1xuICAgICAgICAgICAgICBjLnB1c2goaSArPSBhLmxlbmd0aCArIDEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YWx1ZXMuYyA9IGM7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2Zvcm1hdENvbG9ycyA9IGZ1bmN0aW9uIF9mb3JtYXRDb2xvcnMocywgdG9IU0wsIG9yZGVyTWF0Y2hEYXRhKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gXCJcIixcbiAgICAgICAgICAgICAgY29sb3JzID0gKHMgKyByZXN1bHQpLm1hdGNoKF9jb2xvckV4cCksXG4gICAgICAgICAgICAgIHR5cGUgPSB0b0hTTCA/IFwiaHNsYShcIiA6IFwicmdiYShcIixcbiAgICAgICAgICAgICAgaSA9IDAsXG4gICAgICAgICAgICAgIGMsXG4gICAgICAgICAgICAgIHNoZWxsLFxuICAgICAgICAgICAgICBkLFxuICAgICAgICAgICAgICBsO1xuXG4gICAgICAgICAgICBpZiAoIWNvbG9ycykge1xuICAgICAgICAgICAgICByZXR1cm4gcztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29sb3JzID0gY29sb3JzLm1hcChmdW5jdGlvbiAoY29sb3IpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChjb2xvciA9IHNwbGl0Q29sb3IoY29sb3IsIHRvSFNMLCAxKSkgJiYgdHlwZSArICh0b0hTTCA/IGNvbG9yWzBdICsgXCIsXCIgKyBjb2xvclsxXSArIFwiJSxcIiArIGNvbG9yWzJdICsgXCIlLFwiICsgY29sb3JbM10gOiBjb2xvci5qb2luKFwiLFwiKSkgKyBcIilcIjtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAob3JkZXJNYXRjaERhdGEpIHtcbiAgICAgICAgICAgICAgZCA9IF9jb2xvck9yZGVyRGF0YShzKTtcbiAgICAgICAgICAgICAgYyA9IG9yZGVyTWF0Y2hEYXRhLmM7XG5cbiAgICAgICAgICAgICAgaWYgKGMuam9pbihyZXN1bHQpICE9PSBkLmMuam9pbihyZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgc2hlbGwgPSBzLnJlcGxhY2UoX2NvbG9yRXhwLCBcIjFcIikuc3BsaXQoX251bVdpdGhVbml0RXhwKTtcbiAgICAgICAgICAgICAgICBsID0gc2hlbGwubGVuZ3RoIC0gMTtcblxuICAgICAgICAgICAgICAgIGZvciAoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICByZXN1bHQgKz0gc2hlbGxbaV0gKyAofmMuaW5kZXhPZihpKSA/IGNvbG9ycy5zaGlmdCgpIHx8IHR5cGUgKyBcIjAsMCwwLDApXCIgOiAoZC5sZW5ndGggPyBkIDogY29sb3JzLmxlbmd0aCA/IGNvbG9ycyA6IG9yZGVyTWF0Y2hEYXRhKS5zaGlmdCgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFzaGVsbCkge1xuICAgICAgICAgICAgICBzaGVsbCA9IHMuc3BsaXQoX2NvbG9yRXhwKTtcbiAgICAgICAgICAgICAgbCA9IHNoZWxsLmxlbmd0aCAtIDE7XG5cbiAgICAgICAgICAgICAgZm9yICg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc2hlbGxbaV0gKyBjb2xvcnNbaV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArIHNoZWxsW2xdO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2NvbG9yRXhwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHMgPSBcIig/OlxcXFxiKD86KD86cmdifHJnYmF8aHNsfGhzbGEpXFxcXCguKz9cXFxcKSl8XFxcXEIjKD86WzAtOWEtZl17Myw0fSl7MSwyfVxcXFxiXCIsXG4gICAgICAgICAgICAgIC8vd2UnbGwgZHluYW1pY2FsbHkgYnVpbGQgdGhpcyBSZWd1bGFyIEV4cHJlc3Npb24gdG8gY29uc2VydmUgZmlsZSBzaXplLiBBZnRlciBidWlsZGluZyBpdCwgaXQgd2lsbCBiZSBhYmxlIHRvIGZpbmQgcmdiKCksIHJnYmEoKSwgIyAoaGV4YWRlY2ltYWwpLCBhbmQgbmFtZWQgY29sb3IgdmFsdWVzIGxpa2UgcmVkLCBibHVlLCBwdXJwbGUsIGV0Yy4sXG4gICAgICAgICAgICAgIHA7XG5cbiAgICAgICAgICAgIGZvciAocCBpbiBfY29sb3JMb29rdXApIHtcbiAgICAgICAgICAgICAgcyArPSBcInxcIiArIHAgKyBcIlxcXFxiXCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKHMgKyBcIilcIiwgXCJnaVwiKTtcbiAgICAgICAgICB9KCksXG4gICAgICAgICAgX2hzbEV4cCA9IC9oc2xbYV0/XFwoLyxcbiAgICAgICAgICBfY29sb3JTdHJpbmdGaWx0ZXIgPSBmdW5jdGlvbiBfY29sb3JTdHJpbmdGaWx0ZXIoYSkge1xuICAgICAgICAgICAgdmFyIGNvbWJpbmVkID0gYS5qb2luKFwiIFwiKSxcbiAgICAgICAgICAgICAgdG9IU0w7XG4gICAgICAgICAgICBfY29sb3JFeHAubGFzdEluZGV4ID0gMDtcblxuICAgICAgICAgICAgaWYgKF9jb2xvckV4cC50ZXN0KGNvbWJpbmVkKSkge1xuICAgICAgICAgICAgICB0b0hTTCA9IF9oc2xFeHAudGVzdChjb21iaW5lZCk7XG4gICAgICAgICAgICAgIGFbMV0gPSBfZm9ybWF0Q29sb3JzKGFbMV0sIHRvSFNMKTtcbiAgICAgICAgICAgICAgYVswXSA9IF9mb3JtYXRDb2xvcnMoYVswXSwgdG9IU0wsIF9jb2xvck9yZGVyRGF0YShhWzFdKSk7IC8vIG1ha2Ugc3VyZSB0aGUgb3JkZXIgb2YgbnVtYmVycy9jb2xvcnMgbWF0Y2ggd2l0aCB0aGUgRU5EIHZhbHVlLlxuXG4gICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG5cbiAgICAgICAgICAvKlxuICAgICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgICogVElDS0VSXG4gICAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICAgKi9cbiAgICAgICAgICBfdGlja2VyQWN0aXZlLFxuICAgICAgICAgIF90aWNrZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2dldFRpbWUgPSBEYXRlLm5vdyxcbiAgICAgICAgICAgICAgX2xhZ1RocmVzaG9sZCA9IDUwMCxcbiAgICAgICAgICAgICAgX2FkanVzdGVkTGFnID0gMzMsXG4gICAgICAgICAgICAgIF9zdGFydFRpbWUgPSBfZ2V0VGltZSgpLFxuICAgICAgICAgICAgICBfbGFzdFVwZGF0ZSA9IF9zdGFydFRpbWUsXG4gICAgICAgICAgICAgIF9nYXAgPSAxMDAwIC8gMjQwLFxuICAgICAgICAgICAgICBfbmV4dFRpbWUgPSBfZ2FwLFxuICAgICAgICAgICAgICBfbGlzdGVuZXJzID0gW10sXG4gICAgICAgICAgICAgIF9pZCxcbiAgICAgICAgICAgICAgX3JlcSxcbiAgICAgICAgICAgICAgX3JhZixcbiAgICAgICAgICAgICAgX3NlbGYsXG4gICAgICAgICAgICAgIF9kZWx0YSxcbiAgICAgICAgICAgICAgX2ksXG4gICAgICAgICAgICAgIF90aWNrID0gZnVuY3Rpb24gX3RpY2sodikge1xuICAgICAgICAgICAgICAgIHZhciBlbGFwc2VkID0gX2dldFRpbWUoKSAtIF9sYXN0VXBkYXRlLFxuICAgICAgICAgICAgICAgICAgbWFudWFsID0gdiA9PT0gdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIG92ZXJsYXAsXG4gICAgICAgICAgICAgICAgICBkaXNwYXRjaCxcbiAgICAgICAgICAgICAgICAgIHRpbWUsXG4gICAgICAgICAgICAgICAgICBmcmFtZTtcblxuICAgICAgICAgICAgICAgIGVsYXBzZWQgPiBfbGFnVGhyZXNob2xkICYmIChfc3RhcnRUaW1lICs9IGVsYXBzZWQgLSBfYWRqdXN0ZWRMYWcpO1xuICAgICAgICAgICAgICAgIF9sYXN0VXBkYXRlICs9IGVsYXBzZWQ7XG4gICAgICAgICAgICAgICAgdGltZSA9IF9sYXN0VXBkYXRlIC0gX3N0YXJ0VGltZTtcbiAgICAgICAgICAgICAgICBvdmVybGFwID0gdGltZSAtIF9uZXh0VGltZTtcblxuICAgICAgICAgICAgICAgIGlmIChvdmVybGFwID4gMCB8fCBtYW51YWwpIHtcbiAgICAgICAgICAgICAgICAgIGZyYW1lID0gKytfc2VsZi5mcmFtZTtcbiAgICAgICAgICAgICAgICAgIF9kZWx0YSA9IHRpbWUgLSBfc2VsZi50aW1lICogMTAwMDtcbiAgICAgICAgICAgICAgICAgIF9zZWxmLnRpbWUgPSB0aW1lID0gdGltZSAvIDEwMDA7XG4gICAgICAgICAgICAgICAgICBfbmV4dFRpbWUgKz0gb3ZlcmxhcCArIChvdmVybGFwID49IF9nYXAgPyA0IDogX2dhcCAtIG92ZXJsYXApO1xuICAgICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSAxO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG1hbnVhbCB8fCAoX2lkID0gX3JlcShfdGljaykpOyAvL21ha2Ugc3VyZSB0aGUgcmVxdWVzdCBpcyBtYWRlIGJlZm9yZSB3ZSBkaXNwYXRjaCB0aGUgXCJ0aWNrXCIgZXZlbnQgc28gdGhhdCB0aW1pbmcgaXMgbWFpbnRhaW5lZC4gT3RoZXJ3aXNlLCBpZiBwcm9jZXNzaW5nIHRoZSBcInRpY2tcIiByZXF1aXJlcyBhIGJ1bmNoIG9mIHRpbWUgKGxpa2UgMTVtcykgYW5kIHdlJ3JlIHVzaW5nIGEgc2V0VGltZW91dCgpIHRoYXQncyBiYXNlZCBvbiAxNi43bXMsIGl0J2QgdGVjaG5pY2FsbHkgdGFrZSAzMS43bXMgYmV0d2VlbiBmcmFtZXMgb3RoZXJ3aXNlLlxuXG4gICAgICAgICAgICAgICAgaWYgKGRpc3BhdGNoKSB7XG4gICAgICAgICAgICAgICAgICBmb3IgKF9pID0gMDsgX2kgPCBfbGlzdGVuZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgICAgICAvLyB1c2UgX2kgYW5kIGNoZWNrIF9saXN0ZW5lcnMubGVuZ3RoIGluc3RlYWQgb2YgYSB2YXJpYWJsZSBiZWNhdXNlIGEgbGlzdGVuZXIgY291bGQgZ2V0IHJlbW92ZWQgZHVyaW5nIHRoZSBsb29wLCBhbmQgaWYgdGhhdCBoYXBwZW5zIHRvIGFuIGVsZW1lbnQgbGVzcyB0aGFuIHRoZSBjdXJyZW50IGluZGV4LCBpdCdkIHRocm93IHRoaW5ncyBvZmYgaW4gdGhlIGxvb3AuXG4gICAgICAgICAgICAgICAgICAgIF9saXN0ZW5lcnNbX2ldKHRpbWUsIF9kZWx0YSwgZnJhbWUsIHYpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3NlbGYgPSB7XG4gICAgICAgICAgICAgIHRpbWU6IDAsXG4gICAgICAgICAgICAgIGZyYW1lOiAwLFxuICAgICAgICAgICAgICB0aWNrOiBmdW5jdGlvbiB0aWNrKCkge1xuICAgICAgICAgICAgICAgIF90aWNrKHRydWUpO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkZWx0YVJhdGlvOiBmdW5jdGlvbiBkZWx0YVJhdGlvKGZwcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZGVsdGEgLyAoMTAwMCAvIChmcHMgfHwgNjApKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgd2FrZTogZnVuY3Rpb24gd2FrZSgpIHtcbiAgICAgICAgICAgICAgICBpZiAoX2NvcmVSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgaWYgKCFfY29yZUluaXR0ZWQgJiYgX3dpbmRvd0V4aXN0cygpKSB7XG4gICAgICAgICAgICAgICAgICAgIF93aW4gPSBfY29yZUluaXR0ZWQgPSB3aW5kb3c7XG4gICAgICAgICAgICAgICAgICAgIF9kb2MgPSBfd2luLmRvY3VtZW50IHx8IHt9O1xuICAgICAgICAgICAgICAgICAgICBfZ2xvYmFscy5nc2FwID0gZ3NhcDtcbiAgICAgICAgICAgICAgICAgICAgKF93aW4uZ3NhcFZlcnNpb25zIHx8IChfd2luLmdzYXBWZXJzaW9ucyA9IFtdKSkucHVzaChnc2FwLnZlcnNpb24pO1xuXG4gICAgICAgICAgICAgICAgICAgIF9pbnN0YWxsKF9pbnN0YWxsU2NvcGUgfHwgX3dpbi5HcmVlblNvY2tHbG9iYWxzIHx8ICFfd2luLmdzYXAgJiYgX3dpbiB8fCB7fSk7XG5cbiAgICAgICAgICAgICAgICAgICAgX3JhZiA9IF93aW4ucmVxdWVzdEFuaW1hdGlvbkZyYW1lO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBfaWQgJiYgX3NlbGYuc2xlZXAoKTtcblxuICAgICAgICAgICAgICAgICAgX3JlcSA9IF9yYWYgfHwgZnVuY3Rpb24gKGYpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZiwgX25leHRUaW1lIC0gX3NlbGYudGltZSAqIDEwMDAgKyAxIHwgMCk7XG4gICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICBfdGlja2VyQWN0aXZlID0gMTtcblxuICAgICAgICAgICAgICAgICAgX3RpY2soMik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBzbGVlcDogZnVuY3Rpb24gc2xlZXAoKSB7XG4gICAgICAgICAgICAgICAgKF9yYWYgPyBfd2luLmNhbmNlbEFuaW1hdGlvbkZyYW1lIDogY2xlYXJUaW1lb3V0KShfaWQpO1xuICAgICAgICAgICAgICAgIF90aWNrZXJBY3RpdmUgPSAwO1xuICAgICAgICAgICAgICAgIF9yZXEgPSBfZW1wdHlGdW5jO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBsYWdTbW9vdGhpbmc6IGZ1bmN0aW9uIGxhZ1Ntb290aGluZyh0aHJlc2hvbGQsIGFkanVzdGVkTGFnKSB7XG4gICAgICAgICAgICAgICAgX2xhZ1RocmVzaG9sZCA9IHRocmVzaG9sZCB8fCAxIC8gX3RpbnlOdW07IC8vemVybyBzaG91bGQgYmUgaW50ZXJwcmV0ZWQgYXMgYmFzaWNhbGx5IHVubGltaXRlZFxuXG4gICAgICAgICAgICAgICAgX2FkanVzdGVkTGFnID0gTWF0aC5taW4oYWRqdXN0ZWRMYWcsIF9sYWdUaHJlc2hvbGQsIDApO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBmcHM6IGZ1bmN0aW9uIGZwcyhfZnBzKSB7XG4gICAgICAgICAgICAgICAgX2dhcCA9IDEwMDAgLyAoX2ZwcyB8fCAyNDApO1xuICAgICAgICAgICAgICAgIF9uZXh0VGltZSA9IF9zZWxmLnRpbWUgKiAxMDAwICsgX2dhcDtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYWRkOiBmdW5jdGlvbiBhZGQoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBfbGlzdGVuZXJzLmluZGV4T2YoY2FsbGJhY2spIDwgMCAmJiBfbGlzdGVuZXJzLnB1c2goY2FsbGJhY2spO1xuXG4gICAgICAgICAgICAgICAgX3dha2UoKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgICAgICAgICB+KGkgPSBfbGlzdGVuZXJzLmluZGV4T2YoY2FsbGJhY2spKSAmJiBfbGlzdGVuZXJzLnNwbGljZShpLCAxKSAmJiBfaSA+PSBpICYmIF9pLS07XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIF9saXN0ZW5lcnM6IF9saXN0ZW5lcnNcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gX3NlbGY7XG4gICAgICAgICAgfSgpLFxuICAgICAgICAgIF93YWtlID0gZnVuY3Rpb24gX3dha2UoKSB7XG4gICAgICAgICAgICByZXR1cm4gIV90aWNrZXJBY3RpdmUgJiYgX3RpY2tlci53YWtlKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvL2Fsc28gZW5zdXJlcyB0aGUgY29yZSBjbGFzc2VzIGFyZSBpbml0aWFsaXplZC5cblxuICAgICAgICAgIC8qXG4gICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgKiBFQVNJTkdcbiAgICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICAqL1xuICAgICAgICAgIF9lYXNlTWFwID0ge30sXG4gICAgICAgICAgX2N1c3RvbUVhc2VFeHAgPSAvXltcXGQuXFwtTV1bXFxkLlxcLSxcXHNdLyxcbiAgICAgICAgICBfcXVvdGVzRXhwID0gL1tcIiddL2csXG4gICAgICAgICAgX3BhcnNlT2JqZWN0SW5TdHJpbmcgPSBmdW5jdGlvbiBfcGFyc2VPYmplY3RJblN0cmluZyh2YWx1ZSkge1xuICAgICAgICAgICAgLy90YWtlcyBhIHN0cmluZyBsaWtlIFwie3dpZ2dsZXM6MTAsIHR5cGU6YW50aWNpcGF0ZX0pXCIgYW5kIHR1cm5zIGl0IGludG8gYSByZWFsIG9iamVjdC4gTm90aWNlIGl0IGVuZHMgaW4gXCIpXCIgYW5kIGluY2x1ZGVzIHRoZSB7fSB3cmFwcGVycy4gVGhpcyBpcyBiZWNhdXNlIHdlIG9ubHkgdXNlIHRoaXMgZnVuY3Rpb24gZm9yIHBhcnNpbmcgZWFzZSBjb25maWdzIGFuZCBwcmlvcml0aXplZCBvcHRpbWl6YXRpb24gcmF0aGVyIHRoYW4gcmV1c2FiaWxpdHkuXG4gICAgICAgICAgICB2YXIgb2JqID0ge30sXG4gICAgICAgICAgICAgIHNwbGl0ID0gdmFsdWUuc3Vic3RyKDEsIHZhbHVlLmxlbmd0aCAtIDMpLnNwbGl0KFwiOlwiKSxcbiAgICAgICAgICAgICAga2V5ID0gc3BsaXRbMF0sXG4gICAgICAgICAgICAgIGkgPSAxLFxuICAgICAgICAgICAgICBsID0gc3BsaXQubGVuZ3RoLFxuICAgICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICAgICAgdmFsLFxuICAgICAgICAgICAgICBwYXJzZWRWYWw7XG5cbiAgICAgICAgICAgIGZvciAoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgIHZhbCA9IHNwbGl0W2ldO1xuICAgICAgICAgICAgICBpbmRleCA9IGkgIT09IGwgLSAxID8gdmFsLmxhc3RJbmRleE9mKFwiLFwiKSA6IHZhbC5sZW5ndGg7XG4gICAgICAgICAgICAgIHBhcnNlZFZhbCA9IHZhbC5zdWJzdHIoMCwgaW5kZXgpO1xuICAgICAgICAgICAgICBvYmpba2V5XSA9IGlzTmFOKHBhcnNlZFZhbCkgPyBwYXJzZWRWYWwucmVwbGFjZShfcXVvdGVzRXhwLCBcIlwiKS50cmltKCkgOiArcGFyc2VkVmFsO1xuICAgICAgICAgICAgICBrZXkgPSB2YWwuc3Vic3RyKGluZGV4ICsgMSkudHJpbSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3ZhbHVlSW5QYXJlbnRoZXNlcyA9IGZ1bmN0aW9uIF92YWx1ZUluUGFyZW50aGVzZXModmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBvcGVuID0gdmFsdWUuaW5kZXhPZihcIihcIikgKyAxLFxuICAgICAgICAgICAgICBjbG9zZSA9IHZhbHVlLmluZGV4T2YoXCIpXCIpLFxuICAgICAgICAgICAgICBuZXN0ZWQgPSB2YWx1ZS5pbmRleE9mKFwiKFwiLCBvcGVuKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5zdWJzdHJpbmcob3Blbiwgfm5lc3RlZCAmJiBuZXN0ZWQgPCBjbG9zZSA/IHZhbHVlLmluZGV4T2YoXCIpXCIsIGNsb3NlICsgMSkgOiBjbG9zZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfY29uZmlnRWFzZUZyb21TdHJpbmcgPSBmdW5jdGlvbiBfY29uZmlnRWFzZUZyb21TdHJpbmcobmFtZSkge1xuICAgICAgICAgICAgLy9uYW1lIGNhbiBiZSBhIHN0cmluZyBsaWtlIFwiZWxhc3RpYy5vdXQoMSwwLjUpXCIsIGFuZCBwYXNzIGluIF9lYXNlTWFwIGFzIG9iaiBhbmQgaXQnbGwgcGFyc2UgaXQgb3V0IGFuZCBjYWxsIHRoZSBhY3R1YWwgZnVuY3Rpb24gbGlrZSBfZWFzZU1hcC5FbGFzdGljLmVhc2VPdXQuY29uZmlnKDEsMC41KS4gSXQgd2lsbCBhbHNvIHBhcnNlIGN1c3RvbSBlYXNlIHN0cmluZ3MgYXMgbG9uZyBhcyBDdXN0b21FYXNlIGlzIGxvYWRlZCBhbmQgcmVnaXN0ZXJlZCAoaW50ZXJuYWxseSBhcyBfZWFzZU1hcC5fQ0UpLlxuICAgICAgICAgICAgdmFyIHNwbGl0ID0gKG5hbWUgKyBcIlwiKS5zcGxpdChcIihcIiksXG4gICAgICAgICAgICAgIGVhc2UgPSBfZWFzZU1hcFtzcGxpdFswXV07XG4gICAgICAgICAgICByZXR1cm4gZWFzZSAmJiBzcGxpdC5sZW5ndGggPiAxICYmIGVhc2UuY29uZmlnID8gZWFzZS5jb25maWcuYXBwbHkobnVsbCwgfm5hbWUuaW5kZXhPZihcIntcIikgPyBbX3BhcnNlT2JqZWN0SW5TdHJpbmcoc3BsaXRbMV0pXSA6IF92YWx1ZUluUGFyZW50aGVzZXMobmFtZSkuc3BsaXQoXCIsXCIpLm1hcChfbnVtZXJpY0lmUG9zc2libGUpKSA6IF9lYXNlTWFwLl9DRSAmJiBfY3VzdG9tRWFzZUV4cC50ZXN0KG5hbWUpID8gX2Vhc2VNYXAuX0NFKFwiXCIsIG5hbWUpIDogZWFzZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pbnZlcnRFYXNlID0gZnVuY3Rpb24gX2ludmVydEVhc2UoZWFzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICAgIHJldHVybiAxIC0gZWFzZSgxIC0gcCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgLy8gYWxsb3cgeW95b0Vhc2UgdG8gYmUgc2V0IGluIGNoaWxkcmVuIGFuZCBoYXZlIHRob3NlIGFmZmVjdGVkIHdoZW4gdGhlIHBhcmVudC9hbmNlc3RvciB0aW1lbGluZSB5b3lvcy5cbiAgICAgICAgICBfcHJvcGFnYXRlWW95b0Vhc2UgPSBmdW5jdGlvbiBfcHJvcGFnYXRlWW95b0Vhc2UodGltZWxpbmUsIGlzWW95bykge1xuICAgICAgICAgICAgdmFyIGNoaWxkID0gdGltZWxpbmUuX2ZpcnN0LFxuICAgICAgICAgICAgICBlYXNlO1xuXG4gICAgICAgICAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgVGltZWxpbmUpIHtcbiAgICAgICAgICAgICAgICBfcHJvcGFnYXRlWW95b0Vhc2UoY2hpbGQsIGlzWW95byk7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoY2hpbGQudmFycy55b3lvRWFzZSAmJiAoIWNoaWxkLl95b3lvIHx8ICFjaGlsZC5fcmVwZWF0KSAmJiBjaGlsZC5feW95byAhPT0gaXNZb3lvKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkLnRpbWVsaW5lKSB7XG4gICAgICAgICAgICAgICAgICBfcHJvcGFnYXRlWW95b0Vhc2UoY2hpbGQudGltZWxpbmUsIGlzWW95byk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGVhc2UgPSBjaGlsZC5fZWFzZTtcbiAgICAgICAgICAgICAgICAgIGNoaWxkLl9lYXNlID0gY2hpbGQuX3lFYXNlO1xuICAgICAgICAgICAgICAgICAgY2hpbGQuX3lFYXNlID0gZWFzZTtcbiAgICAgICAgICAgICAgICAgIGNoaWxkLl95b3lvID0gaXNZb3lvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGNoaWxkID0gY2hpbGQuX25leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcGFyc2VFYXNlID0gZnVuY3Rpb24gX3BhcnNlRWFzZShlYXNlLCBkZWZhdWx0RWFzZSkge1xuICAgICAgICAgICAgcmV0dXJuICFlYXNlID8gZGVmYXVsdEVhc2UgOiAoX2lzRnVuY3Rpb24oZWFzZSkgPyBlYXNlIDogX2Vhc2VNYXBbZWFzZV0gfHwgX2NvbmZpZ0Vhc2VGcm9tU3RyaW5nKGVhc2UpKSB8fCBkZWZhdWx0RWFzZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9pbnNlcnRFYXNlID0gZnVuY3Rpb24gX2luc2VydEVhc2UobmFtZXMsIGVhc2VJbiwgZWFzZU91dCwgZWFzZUluT3V0KSB7XG4gICAgICAgICAgICBpZiAoZWFzZU91dCA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgIGVhc2VPdXQgPSBmdW5jdGlvbiBlYXNlT3V0KHApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMSAtIGVhc2VJbigxIC0gcCk7XG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChlYXNlSW5PdXQgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICBlYXNlSW5PdXQgPSBmdW5jdGlvbiBlYXNlSW5PdXQocCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwIDwgLjUgPyBlYXNlSW4ocCAqIDIpIC8gMiA6IDEgLSBlYXNlSW4oKDEgLSBwKSAqIDIpIC8gMjtcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGVhc2UgPSB7XG4gICAgICAgICAgICAgIGVhc2VJbjogZWFzZUluLFxuICAgICAgICAgICAgICBlYXNlT3V0OiBlYXNlT3V0LFxuICAgICAgICAgICAgICBlYXNlSW5PdXQ6IGVhc2VJbk91dFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgbG93ZXJjYXNlTmFtZTtcblxuICAgICAgICAgICAgX2ZvckVhY2hOYW1lKG5hbWVzLCBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgICBfZWFzZU1hcFtuYW1lXSA9IF9nbG9iYWxzW25hbWVdID0gZWFzZTtcbiAgICAgICAgICAgICAgX2Vhc2VNYXBbbG93ZXJjYXNlTmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKV0gPSBlYXNlT3V0O1xuXG4gICAgICAgICAgICAgIGZvciAodmFyIHAgaW4gZWFzZSkge1xuICAgICAgICAgICAgICAgIF9lYXNlTWFwW2xvd2VyY2FzZU5hbWUgKyAocCA9PT0gXCJlYXNlSW5cIiA/IFwiLmluXCIgOiBwID09PSBcImVhc2VPdXRcIiA/IFwiLm91dFwiIDogXCIuaW5PdXRcIildID0gX2Vhc2VNYXBbbmFtZSArIFwiLlwiICsgcF0gPSBlYXNlW3BdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGVhc2U7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZWFzZUluT3V0RnJvbU91dCA9IGZ1bmN0aW9uIF9lYXNlSW5PdXRGcm9tT3V0KGVhc2VPdXQpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICByZXR1cm4gcCA8IC41ID8gKDEgLSBlYXNlT3V0KDEgLSBwICogMikpIC8gMiA6IC41ICsgZWFzZU91dCgocCAtIC41KSAqIDIpIC8gMjtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfY29uZmlnRWxhc3RpYyA9IGZ1bmN0aW9uIF9jb25maWdFbGFzdGljKHR5cGUsIGFtcGxpdHVkZSwgcGVyaW9kKSB7XG4gICAgICAgICAgICB2YXIgcDEgPSBhbXBsaXR1ZGUgPj0gMSA/IGFtcGxpdHVkZSA6IDEsXG4gICAgICAgICAgICAgIC8vbm90ZTogaWYgYW1wbGl0dWRlIGlzIDwgMSwgd2Ugc2ltcGx5IGFkanVzdCB0aGUgcGVyaW9kIGZvciBhIG1vcmUgbmF0dXJhbCBmZWVsLiBPdGhlcndpc2UgdGhlIG1hdGggZG9lc24ndCB3b3JrIHJpZ2h0IGFuZCB0aGUgY3VydmUgc3RhcnRzIGF0IDEuXG4gICAgICAgICAgICAgIHAyID0gKHBlcmlvZCB8fCAodHlwZSA/IC4zIDogLjQ1KSkgLyAoYW1wbGl0dWRlIDwgMSA/IGFtcGxpdHVkZSA6IDEpLFxuICAgICAgICAgICAgICBwMyA9IHAyIC8gXzJQSSAqIChNYXRoLmFzaW4oMSAvIHAxKSB8fCAwKSxcbiAgICAgICAgICAgICAgZWFzZU91dCA9IGZ1bmN0aW9uIGVhc2VPdXQocCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwID09PSAxID8gMSA6IHAxICogTWF0aC5wb3coMiwgLTEwICogcCkgKiBfc2luKChwIC0gcDMpICogcDIpICsgMTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZWFzZSA9IHR5cGUgPT09IFwib3V0XCIgPyBlYXNlT3V0IDogdHlwZSA9PT0gXCJpblwiID8gZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMSAtIGVhc2VPdXQoMSAtIHApO1xuICAgICAgICAgICAgICB9IDogX2Vhc2VJbk91dEZyb21PdXQoZWFzZU91dCk7XG5cbiAgICAgICAgICAgIHAyID0gXzJQSSAvIHAyOyAvL3ByZWNhbGN1bGF0ZSB0byBvcHRpbWl6ZVxuXG4gICAgICAgICAgICBlYXNlLmNvbmZpZyA9IGZ1bmN0aW9uIChhbXBsaXR1ZGUsIHBlcmlvZCkge1xuICAgICAgICAgICAgICByZXR1cm4gX2NvbmZpZ0VsYXN0aWModHlwZSwgYW1wbGl0dWRlLCBwZXJpb2QpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmV0dXJuIGVhc2U7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfY29uZmlnQmFjayA9IGZ1bmN0aW9uIF9jb25maWdCYWNrKHR5cGUsIG92ZXJzaG9vdCkge1xuICAgICAgICAgICAgaWYgKG92ZXJzaG9vdCA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgIG92ZXJzaG9vdCA9IDEuNzAxNTg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBlYXNlT3V0ID0gZnVuY3Rpb24gZWFzZU91dChwKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwID8gLS1wICogcCAqICgob3ZlcnNob290ICsgMSkgKiBwICsgb3ZlcnNob290KSArIDEgOiAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZWFzZSA9IHR5cGUgPT09IFwib3V0XCIgPyBlYXNlT3V0IDogdHlwZSA9PT0gXCJpblwiID8gZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMSAtIGVhc2VPdXQoMSAtIHApO1xuICAgICAgICAgICAgICB9IDogX2Vhc2VJbk91dEZyb21PdXQoZWFzZU91dCk7XG5cbiAgICAgICAgICAgIGVhc2UuY29uZmlnID0gZnVuY3Rpb24gKG92ZXJzaG9vdCkge1xuICAgICAgICAgICAgICByZXR1cm4gX2NvbmZpZ0JhY2sodHlwZSwgb3ZlcnNob290KTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHJldHVybiBlYXNlO1xuICAgICAgICAgIH07IC8vIGEgY2hlYXBlciAoa2IgYW5kIGNwdSkgYnV0IG1vcmUgbWlsZCB3YXkgdG8gZ2V0IGEgcGFyYW1ldGVyaXplZCB3ZWlnaHRlZCBlYXNlIGJ5IGZlZWRpbmcgaW4gYSB2YWx1ZSBiZXR3ZWVuIC0xIChlYXNlSW4pIGFuZCAxIChlYXNlT3V0KSB3aGVyZSAwIGlzIGxpbmVhci5cbiAgICAgICAgLy8gX3dlaWdodGVkRWFzZSA9IHJhdGlvID0+IHtcbiAgICAgICAgLy8gXHRsZXQgeSA9IDAuNSArIHJhdGlvIC8gMjtcbiAgICAgICAgLy8gXHRyZXR1cm4gcCA9PiAoMiAqICgxIC0gcCkgKiBwICogeSArIHAgKiBwKTtcbiAgICAgICAgLy8gfSxcbiAgICAgICAgLy8gYSBzdHJvbmdlciAoYnV0IG1vcmUgZXhwZW5zaXZlIGtiL2NwdSkgcGFyYW1ldGVyaXplZCB3ZWlnaHRlZCBlYXNlIHRoYXQgbGV0cyB5b3UgZmVlZCBpbiBhIHZhbHVlIGJldHdlZW4gLTEgKGVhc2VJbikgYW5kIDEgKGVhc2VPdXQpIHdoZXJlIDAgaXMgbGluZWFyLlxuICAgICAgICAvLyBfd2VpZ2h0ZWRFYXNlU3Ryb25nID0gcmF0aW8gPT4ge1xuICAgICAgICAvLyBcdHJhdGlvID0gLjUgKyByYXRpbyAvIDI7XG4gICAgICAgIC8vIFx0bGV0IG8gPSAxIC8gMyAqIChyYXRpbyA8IC41ID8gcmF0aW8gOiAxIC0gcmF0aW8pLFxuICAgICAgICAvLyBcdFx0YiA9IHJhdGlvIC0gbyxcbiAgICAgICAgLy8gXHRcdGMgPSByYXRpbyArIG87XG4gICAgICAgIC8vIFx0cmV0dXJuIHAgPT4gcCA9PT0gMSA/IHAgOiAzICogYiAqICgxIC0gcCkgKiAoMSAtIHApICogcCArIDMgKiBjICogKDEgLSBwKSAqIHAgKiBwICsgcCAqIHAgKiBwO1xuICAgICAgICAvLyB9O1xuXG5cbiAgICAgICAgZXhwb3J0cy5fdGlja2VyID0gX3RpY2tlcjtcbiAgICAgICAgZXhwb3J0cy5fY29sb3JTdHJpbmdGaWx0ZXIgPSBfY29sb3JTdHJpbmdGaWx0ZXI7XG4gICAgICAgIGV4cG9ydHMuc3BsaXRDb2xvciA9IHNwbGl0Q29sb3I7XG4gICAgICAgIGV4cG9ydHMuaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZTtcbiAgICAgICAgZXhwb3J0cy5tYXBSYW5nZSA9IG1hcFJhbmdlO1xuICAgICAgICBleHBvcnRzLl9yZXBsYWNlUmFuZG9tID0gX3JlcGxhY2VSYW5kb207XG4gICAgICAgIGV4cG9ydHMud3JhcFlveW8gPSB3cmFwWW95bztcbiAgICAgICAgZXhwb3J0cy53cmFwID0gd3JhcDtcbiAgICAgICAgZXhwb3J0cy5ub3JtYWxpemUgPSBub3JtYWxpemU7XG4gICAgICAgIGV4cG9ydHMudW5pdGl6ZSA9IHVuaXRpemU7XG4gICAgICAgIGV4cG9ydHMucGlwZSA9IHBpcGU7XG4gICAgICAgIGV4cG9ydHMucmFuZG9tID0gcmFuZG9tO1xuICAgICAgICBleHBvcnRzLnNuYXAgPSBzbmFwO1xuICAgICAgICBleHBvcnRzLl9yb3VuZE1vZGlmaWVyID0gX3JvdW5kTW9kaWZpZXI7XG4gICAgICAgIGV4cG9ydHMuZGlzdHJpYnV0ZSA9IGRpc3RyaWJ1dGU7XG4gICAgICAgIGV4cG9ydHMuc2h1ZmZsZSA9IHNodWZmbGU7XG4gICAgICAgIGV4cG9ydHMudG9BcnJheSA9IHRvQXJyYXk7XG4gICAgICAgIGV4cG9ydHMuY2xhbXAgPSBjbGFtcDtcbiAgICAgICAgZXhwb3J0cy5nZXRVbml0ID0gZ2V0VW5pdDtcbiAgICAgICAgZXhwb3J0cy5fcmVtb3ZlTGlua2VkTGlzdEl0ZW0gPSBfcmVtb3ZlTGlua2VkTGlzdEl0ZW07XG4gICAgICAgIGV4cG9ydHMuX3NldERlZmF1bHRzID0gX3NldERlZmF1bHRzO1xuICAgICAgICBleHBvcnRzLl9yb3VuZCA9IF9yb3VuZDtcbiAgICAgICAgZXhwb3J0cy5fZm9yRWFjaE5hbWUgPSBfZm9yRWFjaE5hbWU7XG4gICAgICAgIGV4cG9ydHMuX2dldFByb3BlcnR5ID0gX2dldFByb3BlcnR5O1xuICAgICAgICBleHBvcnRzLl9nZXRDYWNoZSA9IF9nZXRDYWNoZTtcbiAgICAgICAgZXhwb3J0cy5fcGx1Z2lucyA9IF9wbHVnaW5zO1xuICAgICAgICBleHBvcnRzLl9taXNzaW5nUGx1Z2luID0gX21pc3NpbmdQbHVnaW47XG4gICAgICAgIGV4cG9ydHMuX3JlbEV4cCA9IF9yZWxFeHA7XG4gICAgICAgIGV4cG9ydHMuX251bVdpdGhVbml0RXhwID0gX251bVdpdGhVbml0RXhwO1xuICAgICAgICBleHBvcnRzLl9udW1FeHAgPSBfbnVtRXhwO1xuICAgICAgICBleHBvcnRzLl9pc1VuZGVmaW5lZCA9IF9pc1VuZGVmaW5lZDtcbiAgICAgICAgZXhwb3J0cy5faXNTdHJpbmcgPSBfaXNTdHJpbmc7XG4gICAgICAgIGV4cG9ydHMuX2NvbmZpZyA9IF9jb25maWc7XG5cbiAgICAgICAgX2ZvckVhY2hOYW1lKFwiTGluZWFyLFF1YWQsQ3ViaWMsUXVhcnQsUXVpbnQsU3Ryb25nXCIsIGZ1bmN0aW9uIChuYW1lLCBpKSB7XG4gICAgICAgICAgdmFyIHBvd2VyID0gaSA8IDUgPyBpICsgMSA6IGk7XG5cbiAgICAgICAgICBfaW5zZXJ0RWFzZShuYW1lICsgXCIsUG93ZXJcIiArIChwb3dlciAtIDEpLCBpID8gZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnBvdyhwLCBwb3dlcik7XG4gICAgICAgICAgfSA6IGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICByZXR1cm4gcDtcbiAgICAgICAgICB9LCBmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgcmV0dXJuIDEgLSBNYXRoLnBvdygxIC0gcCwgcG93ZXIpO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICByZXR1cm4gcCA8IC41ID8gTWF0aC5wb3cocCAqIDIsIHBvd2VyKSAvIDIgOiAxIC0gTWF0aC5wb3coKDEgLSBwKSAqIDIsIHBvd2VyKSAvIDI7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF9lYXNlTWFwLkxpbmVhci5lYXNlTm9uZSA9IF9lYXNlTWFwLm5vbmUgPSBfZWFzZU1hcC5MaW5lYXIuZWFzZUluO1xuXG4gICAgICAgIF9pbnNlcnRFYXNlKFwiRWxhc3RpY1wiLCBfY29uZmlnRWxhc3RpYyhcImluXCIpLCBfY29uZmlnRWxhc3RpYyhcIm91dFwiKSwgX2NvbmZpZ0VsYXN0aWMoKSk7XG5cbiAgICAgICAgKGZ1bmN0aW9uIChuLCBjKSB7XG4gICAgICAgICAgdmFyIG4xID0gMSAvIGMsXG4gICAgICAgICAgICBuMiA9IDIgKiBuMSxcbiAgICAgICAgICAgIG4zID0gMi41ICogbjEsXG4gICAgICAgICAgICBlYXNlT3V0ID0gZnVuY3Rpb24gZWFzZU91dChwKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwIDwgbjEgPyBuICogcCAqIHAgOiBwIDwgbjIgPyBuICogTWF0aC5wb3cocCAtIDEuNSAvIGMsIDIpICsgLjc1IDogcCA8IG4zID8gbiAqIChwIC09IDIuMjUgLyBjKSAqIHAgKyAuOTM3NSA6IG4gKiBNYXRoLnBvdyhwIC0gMi42MjUgLyBjLCAyKSArIC45ODQzNzU7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgX2luc2VydEVhc2UoXCJCb3VuY2VcIiwgZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgIHJldHVybiAxIC0gZWFzZU91dCgxIC0gcCk7XG4gICAgICAgICAgfSwgZWFzZU91dCk7XG4gICAgICAgIH0pKDcuNTYyNSwgMi43NSk7XG5cbiAgICAgICAgX2luc2VydEVhc2UoXCJFeHBvXCIsIGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgcmV0dXJuIHAgPyBNYXRoLnBvdygyLCAxMCAqIChwIC0gMSkpIDogMDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgX2luc2VydEVhc2UoXCJDaXJjXCIsIGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgcmV0dXJuIC0oX3NxcnQoMSAtIHAgKiBwKSAtIDEpO1xuICAgICAgICB9KTtcblxuICAgICAgICBfaW5zZXJ0RWFzZShcIlNpbmVcIiwgZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICByZXR1cm4gcCA9PT0gMSA/IDEgOiAtX2NvcyhwICogX0hBTEZfUEkpICsgMTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgX2luc2VydEVhc2UoXCJCYWNrXCIsIF9jb25maWdCYWNrKFwiaW5cIiksIF9jb25maWdCYWNrKFwib3V0XCIpLCBfY29uZmlnQmFjaygpKTtcblxuICAgICAgICBfZWFzZU1hcC5TdGVwcGVkRWFzZSA9IF9lYXNlTWFwLnN0ZXBzID0gX2dsb2JhbHMuU3RlcHBlZEVhc2UgPSB7XG4gICAgICAgICAgY29uZmlnOiBmdW5jdGlvbiBjb25maWcoc3RlcHMsIGltbWVkaWF0ZVN0YXJ0KSB7XG4gICAgICAgICAgICBpZiAoc3RlcHMgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICBzdGVwcyA9IDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBwMSA9IDEgLyBzdGVwcyxcbiAgICAgICAgICAgICAgcDIgPSBzdGVwcyArIChpbW1lZGlhdGVTdGFydCA/IDAgOiAxKSxcbiAgICAgICAgICAgICAgcDMgPSBpbW1lZGlhdGVTdGFydCA/IDEgOiAwLFxuICAgICAgICAgICAgICBtYXggPSAxIC0gX3RpbnlOdW07XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgcmV0dXJuICgocDIgKiBfY2xhbXAoMCwgbWF4LCBwKSB8IDApICsgcDMpICogcDE7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX2RlZmF1bHRzLmVhc2UgPSBfZWFzZU1hcFtcInF1YWQub3V0XCJdO1xuXG4gICAgICAgIF9mb3JFYWNoTmFtZShcIm9uQ29tcGxldGUsb25VcGRhdGUsb25TdGFydCxvblJlcGVhdCxvblJldmVyc2VDb21wbGV0ZSxvbkludGVycnVwdFwiLCBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgIHJldHVybiBfY2FsbGJhY2tOYW1lcyArPSBuYW1lICsgXCIsXCIgKyBuYW1lICsgXCJQYXJhbXMsXCI7XG4gICAgICAgIH0pO1xuICAgICAgICAvKlxuICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgKiBDQUNIRVxuICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgKi9cblxuXG4gICAgICAgIHZhciBHU0NhY2hlID0gZnVuY3Rpb24gR1NDYWNoZSh0YXJnZXQsIGhhcm5lc3MpIHtcbiAgICAgICAgICB0aGlzLmlkID0gX2dzSUQrKztcbiAgICAgICAgICB0YXJnZXQuX2dzYXAgPSB0aGlzO1xuICAgICAgICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICAgICAgICAgIHRoaXMuaGFybmVzcyA9IGhhcm5lc3M7XG4gICAgICAgICAgdGhpcy5nZXQgPSBoYXJuZXNzID8gaGFybmVzcy5nZXQgOiBfZ2V0UHJvcGVydHk7XG4gICAgICAgICAgdGhpcy5zZXQgPSBoYXJuZXNzID8gaGFybmVzcy5nZXRTZXR0ZXIgOiBfZ2V0U2V0dGVyO1xuICAgICAgICB9O1xuICAgICAgICAvKlxuICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgKiBBTklNQVRJT05cbiAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICovXG5cblxuICAgICAgICBleHBvcnRzLkdTQ2FjaGUgPSBHU0NhY2hlO1xuXG4gICAgICAgIHZhciBBbmltYXRpb24gPVxuICAgICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBBbmltYXRpb24odmFycywgdGltZSkge1xuICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gdmFycy5wYXJlbnQgfHwgX2dsb2JhbFRpbWVsaW5lO1xuICAgICAgICAgICAgICB0aGlzLnZhcnMgPSB2YXJzO1xuICAgICAgICAgICAgICB0aGlzLl9kZWxheSA9ICt2YXJzLmRlbGF5IHx8IDA7XG5cbiAgICAgICAgICAgICAgaWYgKHRoaXMuX3JlcGVhdCA9IHZhcnMucmVwZWF0ID09PSBJbmZpbml0eSA/IC0yIDogdmFycy5yZXBlYXQgfHwgMCkge1xuICAgICAgICAgICAgICAgIC8vIFRPRE86IHJlcGVhdDogSW5maW5pdHkgb24gYSB0aW1lbGluZSdzIGNoaWxkcmVuIG11c3QgZmxhZyB0aGF0IHRpbWVsaW5lIGludGVybmFsbHkgYW5kIGFmZmVjdCBpdHMgdG90YWxEdXJhdGlvbiwgb3RoZXJ3aXNlIGl0J2xsIHN0b3AgaW4gdGhlIG5lZ2F0aXZlIGRpcmVjdGlvbiB3aGVuIHJlYWNoaW5nIHRoZSBzdGFydC5cbiAgICAgICAgICAgICAgICB0aGlzLl9yRGVsYXkgPSB2YXJzLnJlcGVhdERlbGF5IHx8IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5feW95byA9ICEhdmFycy55b3lvIHx8ICEhdmFycy55b3lvRWFzZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHRoaXMuX3RzID0gMTtcblxuICAgICAgICAgICAgICBfc2V0RHVyYXRpb24odGhpcywgK3ZhcnMuZHVyYXRpb24sIDEsIDEpO1xuXG4gICAgICAgICAgICAgIHRoaXMuZGF0YSA9IHZhcnMuZGF0YTtcbiAgICAgICAgICAgICAgX3RpY2tlckFjdGl2ZSB8fCBfdGlja2VyLndha2UoKTtcbiAgICAgICAgICAgICAgcGFyZW50ICYmIF9hZGRUb1RpbWVsaW5lKHBhcmVudCwgdGhpcywgdGltZSB8fCB0aW1lID09PSAwID8gdGltZSA6IHBhcmVudC5fdGltZSwgMSk7XG4gICAgICAgICAgICAgIHZhcnMucmV2ZXJzZWQgJiYgdGhpcy5yZXZlcnNlKCk7XG4gICAgICAgICAgICAgIHZhcnMucGF1c2VkICYmIHRoaXMucGF1c2VkKHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgX3Byb3RvID0gQW5pbWF0aW9uLnByb3RvdHlwZTtcblxuICAgICAgICAgICAgX3Byb3RvLmRlbGF5ID0gZnVuY3Rpb24gZGVsYXkodmFsdWUpIHtcbiAgICAgICAgICAgICAgaWYgKHZhbHVlIHx8IHZhbHVlID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQuc21vb3RoQ2hpbGRUaW1pbmcgJiYgdGhpcy5zdGFydFRpbWUodGhpcy5fc3RhcnQgKyB2YWx1ZSAtIHRoaXMuX2RlbGF5KTtcbiAgICAgICAgICAgICAgICB0aGlzLl9kZWxheSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RlbGF5O1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLmR1cmF0aW9uID0gZnVuY3Rpb24gZHVyYXRpb24odmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLnRvdGFsRHVyYXRpb24odGhpcy5fcmVwZWF0ID4gMCA/IHZhbHVlICsgKHZhbHVlICsgdGhpcy5fckRlbGF5KSAqIHRoaXMuX3JlcGVhdCA6IHZhbHVlKSA6IHRoaXMudG90YWxEdXJhdGlvbigpICYmIHRoaXMuX2R1cjtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by50b3RhbER1cmF0aW9uID0gZnVuY3Rpb24gdG90YWxEdXJhdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fdER1cjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHRoaXMuX2RpcnR5ID0gMDtcbiAgICAgICAgICAgICAgcmV0dXJuIF9zZXREdXJhdGlvbih0aGlzLCB0aGlzLl9yZXBlYXQgPCAwID8gdmFsdWUgOiAodmFsdWUgLSB0aGlzLl9yZXBlYXQgKiB0aGlzLl9yRGVsYXkpIC8gKHRoaXMuX3JlcGVhdCArIDEpKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by50b3RhbFRpbWUgPSBmdW5jdGlvbiB0b3RhbFRpbWUoX3RvdGFsVGltZSwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgX3dha2UoKTtcblxuICAgICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fdFRpbWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gdGhpcy5fZHA7XG5cbiAgICAgICAgICAgICAgaWYgKHBhcmVudCAmJiBwYXJlbnQuc21vb3RoQ2hpbGRUaW1pbmcgJiYgdGhpcy5fdHMpIHtcbiAgICAgICAgICAgICAgICBfYWxpZ25QbGF5aGVhZCh0aGlzLCBfdG90YWxUaW1lKTtcblxuICAgICAgICAgICAgICAgICFwYXJlbnQuX2RwIHx8IHBhcmVudC5wYXJlbnQgfHwgX3Bvc3RBZGRDaGVja3MocGFyZW50LCB0aGlzKTsgLy8gZWRnZSBjYXNlOiBpZiB0aGlzIGlzIGEgY2hpbGQgb2YgYSB0aW1lbGluZSB0aGF0IGFscmVhZHkgY29tcGxldGVkLCBmb3IgZXhhbXBsZSwgd2UgbXVzdCByZS1hY3RpdmF0ZSB0aGUgcGFyZW50LlxuICAgICAgICAgICAgICAgIC8vaW4gY2FzZSBhbnkgb2YgdGhlIGFuY2VzdG9yIHRpbWVsaW5lcyBoYWQgY29tcGxldGVkIGJ1dCBzaG91bGQgbm93IGJlIGVuYWJsZWQsIHdlIHNob3VsZCByZXNldCB0aGVpciB0b3RhbFRpbWUoKSB3aGljaCB3aWxsIGFsc28gZW5zdXJlIHRoYXQgdGhleSdyZSBsaW5lZCB1cCBwcm9wZXJseSBhbmQgZW5hYmxlZC4gU2tpcCBmb3IgYW5pbWF0aW9ucyB0aGF0IGFyZSBvbiB0aGUgcm9vdCAod2FzdGVmdWwpLiBFeGFtcGxlOiBhIFRpbWVsaW5lTGl0ZS5leHBvcnRSb290KCkgaXMgcGVyZm9ybWVkIHdoZW4gdGhlcmUncyBhIHBhdXNlZCB0d2VlbiBvbiB0aGUgcm9vdCwgdGhlIGV4cG9ydCB3aWxsIG5vdCBjb21wbGV0ZSB1bnRpbCB0aGF0IHR3ZWVuIGlzIHVucGF1c2VkLCBidXQgaW1hZ2luZSBhIGNoaWxkIGdldHMgcmVzdGFydGVkIGxhdGVyLCBhZnRlciBhbGwgW3VucGF1c2VkXSB0d2VlbnMgaGF2ZSBjb21wbGV0ZWQuIFRoZSBzdGFydCBvZiB0aGF0IGNoaWxkIHdvdWxkIGdldCBwdXNoZWQgb3V0LCBidXQgb25lIG9mIHRoZSBhbmNlc3RvcnMgbWF5IGhhdmUgY29tcGxldGVkLlxuXG4gICAgICAgICAgICAgICAgd2hpbGUgKHBhcmVudC5wYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChwYXJlbnQucGFyZW50Ll90aW1lICE9PSBwYXJlbnQuX3N0YXJ0ICsgKHBhcmVudC5fdHMgPj0gMCA/IHBhcmVudC5fdFRpbWUgLyBwYXJlbnQuX3RzIDogKHBhcmVudC50b3RhbER1cmF0aW9uKCkgLSBwYXJlbnQuX3RUaW1lKSAvIC1wYXJlbnQuX3RzKSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnQudG90YWxUaW1lKHBhcmVudC5fdFRpbWUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5wYXJlbnQgJiYgdGhpcy5fZHAuYXV0b1JlbW92ZUNoaWxkcmVuICYmICh0aGlzLl90cyA+IDAgJiYgX3RvdGFsVGltZSA8IHRoaXMuX3REdXIgfHwgdGhpcy5fdHMgPCAwICYmIF90b3RhbFRpbWUgPiAwIHx8ICF0aGlzLl90RHVyICYmICFfdG90YWxUaW1lKSkge1xuICAgICAgICAgICAgICAgICAgLy9pZiB0aGUgYW5pbWF0aW9uIGRvZXNuJ3QgaGF2ZSBhIHBhcmVudCwgcHV0IGl0IGJhY2sgaW50byBpdHMgbGFzdCBwYXJlbnQgKHJlY29yZGVkIGFzIF9kcCBmb3IgZXhhY3RseSBjYXNlcyBsaWtlIHRoaXMpLiBMaW1pdCB0byBwYXJlbnRzIHdpdGggYXV0b1JlbW92ZUNoaWxkcmVuIChsaWtlIGdsb2JhbFRpbWVsaW5lKSBzbyB0aGF0IGlmIHRoZSB1c2VyIG1hbnVhbGx5IHJlbW92ZXMgYW4gYW5pbWF0aW9uIGZyb20gYSB0aW1lbGluZSBhbmQgdGhlbiBhbHRlcnMgaXRzIHBsYXloZWFkLCBpdCBkb2Vzbid0IGdldCBhZGRlZCBiYWNrIGluLlxuICAgICAgICAgICAgICAgICAgX2FkZFRvVGltZWxpbmUodGhpcy5fZHAsIHRoaXMsIHRoaXMuX3N0YXJ0IC0gdGhpcy5fZGVsYXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICh0aGlzLl90VGltZSAhPT0gX3RvdGFsVGltZSB8fCAhdGhpcy5fZHVyICYmICFzdXBwcmVzc0V2ZW50cyB8fCB0aGlzLl9pbml0dGVkICYmIE1hdGguYWJzKHRoaXMuX3pUaW1lKSA9PT0gX3RpbnlOdW0gfHwgIV90b3RhbFRpbWUgJiYgIXRoaXMuX2luaXR0ZWQgJiYgKHRoaXMuYWRkIHx8IHRoaXMuX3B0TG9va3VwKSkge1xuICAgICAgICAgICAgICAgIC8vIGNoZWNrIGZvciBfcHRMb29rdXAgb24gYSBUd2VlbiBpbnN0YW5jZSB0byBlbnN1cmUgaXQgaGFzIGFjdHVhbGx5IGZpbmlzaGVkIGJlaW5nIGluc3RhbnRpYXRlZCwgb3RoZXJ3aXNlIGlmIHRoaXMucmV2ZXJzZSgpIGdldHMgY2FsbGVkIGluIHRoZSBBbmltYXRpb24gY29uc3RydWN0b3IsIGl0IGNvdWxkIHRyaWdnZXIgYSByZW5kZXIoKSBoZXJlIGV2ZW4gdGhvdWdoIHRoZSBfdGFyZ2V0cyB3ZXJlbid0IHBvcHVsYXRlZCwgdGh1cyB3aGVuIF9pbml0KCkgaXMgY2FsbGVkIHRoZXJlIHdvbid0IGJlIGFueSBQcm9wVHdlZW5zIChpdCdsbCBhY3QgbGlrZSB0aGUgdHdlZW4gaXMgbm9uLWZ1bmN0aW9uYWwpXG4gICAgICAgICAgICAgICAgdGhpcy5fdHMgfHwgKHRoaXMuX3BUaW1lID0gX3RvdGFsVGltZSk7IC8vIG90aGVyd2lzZSwgaWYgYW4gYW5pbWF0aW9uIGlzIHBhdXNlZCwgdGhlbiB0aGUgcGxheWhlYWQgaXMgbW92ZWQgYmFjayB0byB6ZXJvLCB0aGVuIHJlc3VtZWQsIGl0J2QgcmV2ZXJ0IGJhY2sgdG8gdGhlIG9yaWdpbmFsIHRpbWUgYXQgdGhlIHBhdXNlXG4gICAgICAgICAgICAgICAgLy9pZiAoIXRoaXMuX2xvY2spIHsgLy8gYXZvaWQgZW5kbGVzcyByZWN1cnNpb24gKG5vdCBzdXJlIHdlIG5lZWQgdGhpcyB5ZXQgb3IgaWYgaXQncyB3b3J0aCB0aGUgcGVyZm9ybWFuY2UgaGl0KVxuICAgICAgICAgICAgICAgIC8vICAgdGhpcy5fbG9jayA9IDE7XG5cbiAgICAgICAgICAgICAgICBfbGF6eVNhZmVSZW5kZXIodGhpcywgX3RvdGFsVGltZSwgc3VwcHJlc3NFdmVudHMpOyAvLyAgIHRoaXMuX2xvY2sgPSAwO1xuICAgICAgICAgICAgICAgIC8vfVxuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by50aW1lID0gZnVuY3Rpb24gdGltZSh2YWx1ZSwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLnRvdGFsVGltZShNYXRoLm1pbih0aGlzLnRvdGFsRHVyYXRpb24oKSwgdmFsdWUgKyBfZWxhcHNlZEN5Y2xlRHVyYXRpb24odGhpcykpICUgdGhpcy5fZHVyIHx8ICh2YWx1ZSA/IHRoaXMuX2R1ciA6IDApLCBzdXBwcmVzc0V2ZW50cykgOiB0aGlzLl90aW1lOyAvLyBub3RlOiBpZiB0aGUgbW9kdWx1cyByZXN1bHRzIGluIDAsIHRoZSBwbGF5aGVhZCBjb3VsZCBiZSBleGFjdGx5IGF0IHRoZSBlbmQgb3IgdGhlIGJlZ2lubmluZywgYW5kIHdlIGFsd2F5cyBkZWZlciB0byB0aGUgRU5EIHdpdGggYSBub24temVybyB2YWx1ZSwgb3RoZXJ3aXNlIGlmIHlvdSBzZXQgdGhlIHRpbWUoKSB0byB0aGUgdmVyeSBlbmQgKGR1cmF0aW9uKCkpLCBpdCB3b3VsZCByZW5kZXIgYXQgdGhlIFNUQVJUIVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLnRvdGFsUHJvZ3Jlc3MgPSBmdW5jdGlvbiB0b3RhbFByb2dyZXNzKHZhbHVlLCBzdXBwcmVzc0V2ZW50cykge1xuICAgICAgICAgICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMudG90YWxUaW1lKHRoaXMudG90YWxEdXJhdGlvbigpICogdmFsdWUsIHN1cHByZXNzRXZlbnRzKSA6IHRoaXMudG90YWxEdXJhdGlvbigpID8gTWF0aC5taW4oMSwgdGhpcy5fdFRpbWUgLyB0aGlzLl90RHVyKSA6IHRoaXMucmF0aW87XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8ucHJvZ3Jlc3MgPSBmdW5jdGlvbiBwcm9ncmVzcyh2YWx1ZSwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLnRvdGFsVGltZSh0aGlzLmR1cmF0aW9uKCkgKiAodGhpcy5feW95byAmJiAhKHRoaXMuaXRlcmF0aW9uKCkgJiAxKSA/IDEgLSB2YWx1ZSA6IHZhbHVlKSArIF9lbGFwc2VkQ3ljbGVEdXJhdGlvbih0aGlzKSwgc3VwcHJlc3NFdmVudHMpIDogdGhpcy5kdXJhdGlvbigpID8gTWF0aC5taW4oMSwgdGhpcy5fdGltZSAvIHRoaXMuX2R1cikgOiB0aGlzLnJhdGlvO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLml0ZXJhdGlvbiA9IGZ1bmN0aW9uIGl0ZXJhdGlvbih2YWx1ZSwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgdmFyIGN5Y2xlRHVyYXRpb24gPSB0aGlzLmR1cmF0aW9uKCkgKyB0aGlzLl9yRGVsYXk7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLnRvdGFsVGltZSh0aGlzLl90aW1lICsgKHZhbHVlIC0gMSkgKiBjeWNsZUR1cmF0aW9uLCBzdXBwcmVzc0V2ZW50cykgOiB0aGlzLl9yZXBlYXQgPyBfYW5pbWF0aW9uQ3ljbGUodGhpcy5fdFRpbWUsIGN5Y2xlRHVyYXRpb24pICsgMSA6IDE7XG4gICAgICAgICAgICB9IC8vIHBvdGVudGlhbCBmdXR1cmUgYWRkaXRpb246XG4gICAgICAgICAgICAgIC8vIGlzUGxheWluZ0JhY2t3YXJkcygpIHtcbiAgICAgICAgICAgICAgLy8gXHRsZXQgYW5pbWF0aW9uID0gdGhpcyxcbiAgICAgICAgICAgICAgLy8gXHRcdG9yaWVudGF0aW9uID0gMTsgLy8gMSA9IGZvcndhcmQsIC0xID0gYmFja3dhcmRcbiAgICAgICAgICAgICAgLy8gXHR3aGlsZSAoYW5pbWF0aW9uKSB7XG4gICAgICAgICAgICAgIC8vIFx0XHRvcmllbnRhdGlvbiAqPSBhbmltYXRpb24ucmV2ZXJzZWQoKSB8fCAoYW5pbWF0aW9uLnJlcGVhdCgpICYmICEoYW5pbWF0aW9uLml0ZXJhdGlvbigpICYgMSkpID8gLTEgOiAxO1xuICAgICAgICAgICAgICAvLyBcdFx0YW5pbWF0aW9uID0gYW5pbWF0aW9uLnBhcmVudDtcbiAgICAgICAgICAgICAgLy8gXHR9XG4gICAgICAgICAgICAgIC8vIFx0cmV0dXJuIG9yaWVudGF0aW9uIDwgMDtcbiAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICA7XG5cbiAgICAgICAgICAgIF9wcm90by50aW1lU2NhbGUgPSBmdW5jdGlvbiB0aW1lU2NhbGUodmFsdWUpIHtcbiAgICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3J0cyA9PT0gLV90aW55TnVtID8gMCA6IHRoaXMuX3J0czsgLy8gcmVjb3JkZWQgdGltZVNjYWxlLiBTcGVjaWFsIGNhc2U6IGlmIHNvbWVvbmUgY2FsbHMgcmV2ZXJzZSgpIG9uIGFuIGFuaW1hdGlvbiB3aXRoIHRpbWVTY2FsZSBvZiAwLCB3ZSBhc3NpZ24gaXQgLV90aW55TnVtIHRvIHJlbWVtYmVyIGl0J3MgcmV2ZXJzZWQuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAodGhpcy5fcnRzID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdmFyIHRUaW1lID0gdGhpcy5wYXJlbnQgJiYgdGhpcy5fdHMgPyBfcGFyZW50VG9DaGlsZFRvdGFsVGltZSh0aGlzLnBhcmVudC5fdGltZSwgdGhpcykgOiB0aGlzLl90VGltZTsgLy8gbWFrZSBzdXJlIHRvIGRvIHRoZSBwYXJlbnRUb0NoaWxkVG90YWxUaW1lKCkgQkVGT1JFIHNldHRpbmcgdGhlIG5ldyBfdHMgYmVjYXVzZSB0aGUgb2xkIG9uZSBtdXN0IGJlIHVzZWQgaW4gdGhhdCBjYWxjdWxhdGlvbi5cbiAgICAgICAgICAgICAgLy8gcHJpb3JpdGl6ZSByZW5kZXJpbmcgd2hlcmUgdGhlIHBhcmVudCdzIHBsYXloZWFkIGxpbmVzIHVwIGluc3RlYWQgb2YgdGhpcy5fdFRpbWUgYmVjYXVzZSB0aGVyZSBjb3VsZCBiZSBhIHR3ZWVuIHRoYXQncyBhbmltYXRpbmcgYW5vdGhlciB0d2VlbidzIHRpbWVTY2FsZSBpbiB0aGUgc2FtZSByZW5kZXJpbmcgbG9vcCAoc2FtZSBwYXJlbnQpLCB0aHVzIGlmIHRoZSB0aW1lU2NhbGUgdHdlZW4gcmVuZGVycyBmaXJzdCwgaXQgd291bGQgYWx0ZXIgX3N0YXJ0IEJFRk9SRSBfdFRpbWUgd2FzIHNldCBvbiB0aGF0IHRpY2sgKGluIHRoZSByZW5kZXJpbmcgbG9vcCksIGVmZmVjdGl2ZWx5IGZyZWV6aW5nIGl0IHVudGlsIHRoZSB0aW1lU2NhbGUgdHdlZW4gZmluaXNoZXMuXG5cbiAgICAgICAgICAgICAgdGhpcy5fcnRzID0gK3ZhbHVlIHx8IDA7XG4gICAgICAgICAgICAgIHRoaXMuX3RzID0gdGhpcy5fcHMgfHwgdmFsdWUgPT09IC1fdGlueU51bSA/IDAgOiB0aGlzLl9ydHM7IC8vIF90cyBpcyB0aGUgZnVuY3Rpb25hbCB0aW1lU2NhbGUgd2hpY2ggd291bGQgYmUgMCBpZiB0aGUgYW5pbWF0aW9uIGlzIHBhdXNlZC5cblxuICAgICAgICAgICAgICByZXR1cm4gX3JlY2FjaGVBbmNlc3RvcnModGhpcy50b3RhbFRpbWUoX2NsYW1wKC10aGlzLl9kZWxheSwgdGhpcy5fdER1ciwgdFRpbWUpLCB0cnVlKSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8ucGF1c2VkID0gZnVuY3Rpb24gcGF1c2VkKHZhbHVlKSB7XG4gICAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9wcztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICh0aGlzLl9wcyAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wcyA9IHZhbHVlO1xuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICB0aGlzLl9wVGltZSA9IHRoaXMuX3RUaW1lIHx8IE1hdGgubWF4KC10aGlzLl9kZWxheSwgdGhpcy5yYXdUaW1lKCkpOyAvLyBpZiB0aGUgcGF1c2Ugb2NjdXJzIGR1cmluZyB0aGUgZGVsYXkgcGhhc2UsIG1ha2Ugc3VyZSB0aGF0J3MgZmFjdG9yZWQgaW4gd2hlbiByZXN1bWluZy5cblxuICAgICAgICAgICAgICAgICAgdGhpcy5fdHMgPSB0aGlzLl9hY3QgPSAwOyAvLyBfdHMgaXMgdGhlIGZ1bmN0aW9uYWwgdGltZVNjYWxlLCBzbyBhIHBhdXNlZCB0d2VlbiB3b3VsZCBlZmZlY3RpdmVseSBoYXZlIGEgdGltZVNjYWxlIG9mIDAuIFdlIHJlY29yZCB0aGUgXCJyZWFsXCIgdGltZVNjYWxlIGFzIF9ydHMgKHJlY29yZGVkIHRpbWUgc2NhbGUpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIF93YWtlKCk7XG5cbiAgICAgICAgICAgICAgICAgIHRoaXMuX3RzID0gdGhpcy5fcnRzOyAvL29ubHkgZGVmZXIgdG8gX3BUaW1lIChwYXVzZVRpbWUpIGlmIHRUaW1lIGlzIHplcm8uIFJlbWVtYmVyLCBzb21lb25lIGNvdWxkIHBhdXNlKCkgYW4gYW5pbWF0aW9uLCB0aGVuIHNjcnViIHRoZSBwbGF5aGVhZCBhbmQgcmVzdW1lKCkuIElmIHRoZSBwYXJlbnQgZG9lc24ndCBoYXZlIHNtb290aENoaWxkVGltaW5nLCB3ZSByZW5kZXIgYXQgdGhlIHJhd1RpbWUoKSBiZWNhdXNlIHRoZSBzdGFydFRpbWUgd29uJ3QgZ2V0IHVwZGF0ZWQuXG5cbiAgICAgICAgICAgICAgICAgIHRoaXMudG90YWxUaW1lKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5zbW9vdGhDaGlsZFRpbWluZyA/IHRoaXMucmF3VGltZSgpIDogdGhpcy5fdFRpbWUgfHwgdGhpcy5fcFRpbWUsIHRoaXMucHJvZ3Jlc3MoKSA9PT0gMSAmJiAodGhpcy5fdFRpbWUgLT0gX3RpbnlOdW0pICYmIE1hdGguYWJzKHRoaXMuX3pUaW1lKSAhPT0gX3RpbnlOdW0pOyAvLyBlZGdlIGNhc2U6IGFuaW1hdGlvbi5wcm9ncmVzcygxKS5wYXVzZSgpLnBsYXkoKSB3b3VsZG4ndCByZW5kZXIgYWdhaW4gYmVjYXVzZSB0aGUgcGxheWhlYWQgaXMgYWxyZWFkeSBhdCB0aGUgZW5kLCBidXQgdGhlIGNhbGwgdG8gdG90YWxUaW1lKCkgYmVsb3cgd2lsbCBhZGQgaXQgYmFjayB0byBpdHMgcGFyZW50Li4uYW5kIG5vdCByZW1vdmUgaXQgYWdhaW4gKHNpbmNlIHJlbW92aW5nIG9ubHkgaGFwcGVucyB1cG9uIHJlbmRlcmluZyBhdCBhIG5ldyB0aW1lKS4gT2Zmc2V0dGluZyB0aGUgX3RUaW1lIHNsaWdodGx5IGlzIGRvbmUgc2ltcGx5IHRvIGNhdXNlIHRoZSBmaW5hbCByZW5kZXIgaW4gdG90YWxUaW1lKCkgdGhhdCdsbCBwb3AgaXQgb2ZmIGl0cyB0aW1lbGluZSAoaWYgYXV0b1JlbW92ZUNoaWxkcmVuIGlzIHRydWUsIG9mIGNvdXJzZSkuIENoZWNrIHRvIG1ha2Ugc3VyZSBfelRpbWUgaXNuJ3QgLV90aW55TnVtIHRvIGF2b2lkIGFuIGVkZ2UgY2FzZSB3aGVyZSB0aGUgcGxheWhlYWQgaXMgcHVzaGVkIHRvIHRoZSBlbmQgYnV0IElOU0lERSBhIHR3ZWVuL2NhbGxiYWNrLCB0aGUgdGltZWxpbmUgaXRzZWxmIGlzIHBhdXNlZCB0aHVzIGhhbHRpbmcgcmVuZGVyaW5nIGFuZCBsZWF2aW5nIGEgZmV3IHVucmVuZGVyZWQuIFdoZW4gcmVzdW1pbmcsIGl0IHdvdWxkbid0IHJlbmRlciB0aG9zZSBvdGhlcndpc2UuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8uc3RhcnRUaW1lID0gZnVuY3Rpb24gc3RhcnRUaW1lKHZhbHVlKSB7XG4gICAgICAgICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhcnQgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnQgfHwgdGhpcy5fZHA7XG4gICAgICAgICAgICAgICAgcGFyZW50ICYmIChwYXJlbnQuX3NvcnQgfHwgIXRoaXMucGFyZW50KSAmJiBfYWRkVG9UaW1lbGluZShwYXJlbnQsIHRoaXMsIHZhbHVlIC0gdGhpcy5fZGVsYXkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3N0YXJ0O1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLmVuZFRpbWUgPSBmdW5jdGlvbiBlbmRUaW1lKGluY2x1ZGVSZXBlYXRzKSB7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLl9zdGFydCArIChfaXNOb3RGYWxzZShpbmNsdWRlUmVwZWF0cykgPyB0aGlzLnRvdGFsRHVyYXRpb24oKSA6IHRoaXMuZHVyYXRpb24oKSkgLyBNYXRoLmFicyh0aGlzLl90cyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8ucmF3VGltZSA9IGZ1bmN0aW9uIHJhd1RpbWUod3JhcFJlcGVhdHMpIHtcbiAgICAgICAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50IHx8IHRoaXMuX2RwOyAvLyBfZHAgPSBkZXRhdGNoZWQgcGFyZW50XG5cbiAgICAgICAgICAgICAgcmV0dXJuICFwYXJlbnQgPyB0aGlzLl90VGltZSA6IHdyYXBSZXBlYXRzICYmICghdGhpcy5fdHMgfHwgdGhpcy5fcmVwZWF0ICYmIHRoaXMuX3RpbWUgJiYgdGhpcy50b3RhbFByb2dyZXNzKCkgPCAxKSA/IHRoaXMuX3RUaW1lICUgKHRoaXMuX2R1ciArIHRoaXMuX3JEZWxheSkgOiAhdGhpcy5fdHMgPyB0aGlzLl90VGltZSA6IF9wYXJlbnRUb0NoaWxkVG90YWxUaW1lKHBhcmVudC5yYXdUaW1lKHdyYXBSZXBlYXRzKSwgdGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8uZ2xvYmFsVGltZSA9IGZ1bmN0aW9uIGdsb2JhbFRpbWUocmF3VGltZSkge1xuICAgICAgICAgICAgICB2YXIgYW5pbWF0aW9uID0gdGhpcyxcbiAgICAgICAgICAgICAgICB0aW1lID0gYXJndW1lbnRzLmxlbmd0aCA/IHJhd1RpbWUgOiBhbmltYXRpb24ucmF3VGltZSgpO1xuXG4gICAgICAgICAgICAgIHdoaWxlIChhbmltYXRpb24pIHtcbiAgICAgICAgICAgICAgICB0aW1lID0gYW5pbWF0aW9uLl9zdGFydCArIHRpbWUgLyAoYW5pbWF0aW9uLl90cyB8fCAxKTtcbiAgICAgICAgICAgICAgICBhbmltYXRpb24gPSBhbmltYXRpb24uX2RwO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRpbWU7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8ucmVwZWF0ID0gZnVuY3Rpb24gcmVwZWF0KHZhbHVlKSB7XG4gICAgICAgICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVwZWF0ID0gdmFsdWUgPT09IEluZmluaXR5ID8gLTIgOiB2YWx1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX29uVXBkYXRlVG90YWxEdXJhdGlvbih0aGlzKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZXBlYXQgPT09IC0yID8gSW5maW5pdHkgOiB0aGlzLl9yZXBlYXQ7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8ucmVwZWF0RGVsYXkgPSBmdW5jdGlvbiByZXBlYXREZWxheSh2YWx1ZSkge1xuICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3JEZWxheSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBfb25VcGRhdGVUb3RhbER1cmF0aW9uKHRoaXMpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3JEZWxheTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by55b3lvID0gZnVuY3Rpb24geW95byh2YWx1ZSkge1xuICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3lveW8gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLl95b3lvO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLnNlZWsgPSBmdW5jdGlvbiBzZWVrKHBvc2l0aW9uLCBzdXBwcmVzc0V2ZW50cykge1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b3RhbFRpbWUoX3BhcnNlUG9zaXRpb24odGhpcywgcG9zaXRpb24pLCBfaXNOb3RGYWxzZShzdXBwcmVzc0V2ZW50cykpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLnJlc3RhcnQgPSBmdW5jdGlvbiByZXN0YXJ0KGluY2x1ZGVEZWxheSwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGxheSgpLnRvdGFsVGltZShpbmNsdWRlRGVsYXkgPyAtdGhpcy5fZGVsYXkgOiAwLCBfaXNOb3RGYWxzZShzdXBwcmVzc0V2ZW50cykpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLnBsYXkgPSBmdW5jdGlvbiBwbGF5KGZyb20sIHN1cHByZXNzRXZlbnRzKSB7XG4gICAgICAgICAgICAgIGZyb20gIT0gbnVsbCAmJiB0aGlzLnNlZWsoZnJvbSwgc3VwcHJlc3NFdmVudHMpO1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXZlcnNlZChmYWxzZSkucGF1c2VkKGZhbHNlKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by5yZXZlcnNlID0gZnVuY3Rpb24gcmV2ZXJzZShmcm9tLCBzdXBwcmVzc0V2ZW50cykge1xuICAgICAgICAgICAgICBmcm9tICE9IG51bGwgJiYgdGhpcy5zZWVrKGZyb20gfHwgdGhpcy50b3RhbER1cmF0aW9uKCksIHN1cHByZXNzRXZlbnRzKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmV2ZXJzZWQodHJ1ZSkucGF1c2VkKGZhbHNlKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by5wYXVzZSA9IGZ1bmN0aW9uIHBhdXNlKGF0VGltZSwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgYXRUaW1lICE9IG51bGwgJiYgdGhpcy5zZWVrKGF0VGltZSwgc3VwcHJlc3NFdmVudHMpO1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wYXVzZWQodHJ1ZSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8ucmVzdW1lID0gZnVuY3Rpb24gcmVzdW1lKCkge1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wYXVzZWQoZmFsc2UpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLnJldmVyc2VkID0gZnVuY3Rpb24gcmV2ZXJzZWQodmFsdWUpIHtcbiAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAhIXZhbHVlICE9PSB0aGlzLnJldmVyc2VkKCkgJiYgdGhpcy50aW1lU2NhbGUoLXRoaXMuX3J0cyB8fCAodmFsdWUgPyAtX3RpbnlOdW0gOiAwKSk7IC8vIGluIGNhc2UgdGltZVNjYWxlIGlzIHplcm8sIHJldmVyc2luZyB3b3VsZCBoYXZlIG5vIGVmZmVjdCBzbyB3ZSB1c2UgX3RpbnlOdW0uXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLl9ydHMgPCAwO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLmludmFsaWRhdGUgPSBmdW5jdGlvbiBpbnZhbGlkYXRlKCkge1xuICAgICAgICAgICAgICB0aGlzLl9pbml0dGVkID0gdGhpcy5fYWN0ID0gMDtcbiAgICAgICAgICAgICAgdGhpcy5felRpbWUgPSAtX3RpbnlOdW07XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLmlzQWN0aXZlID0gZnVuY3Rpb24gaXNBY3RpdmUoKSB7XG4gICAgICAgICAgICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudCB8fCB0aGlzLl9kcCxcbiAgICAgICAgICAgICAgICBzdGFydCA9IHRoaXMuX3N0YXJ0LFxuICAgICAgICAgICAgICAgIHJhd1RpbWU7XG4gICAgICAgICAgICAgIHJldHVybiAhISghcGFyZW50IHx8IHRoaXMuX3RzICYmIHRoaXMuX2luaXR0ZWQgJiYgcGFyZW50LmlzQWN0aXZlKCkgJiYgKHJhd1RpbWUgPSBwYXJlbnQucmF3VGltZSh0cnVlKSkgPj0gc3RhcnQgJiYgcmF3VGltZSA8IHRoaXMuZW5kVGltZSh0cnVlKSAtIF90aW55TnVtKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by5ldmVudENhbGxiYWNrID0gZnVuY3Rpb24gZXZlbnRDYWxsYmFjayh0eXBlLCBjYWxsYmFjaywgcGFyYW1zKSB7XG4gICAgICAgICAgICAgIHZhciB2YXJzID0gdGhpcy52YXJzO1xuXG4gICAgICAgICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgIGRlbGV0ZSB2YXJzW3R5cGVdO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICB2YXJzW3R5cGVdID0gY2FsbGJhY2s7XG4gICAgICAgICAgICAgICAgICBwYXJhbXMgJiYgKHZhcnNbdHlwZSArIFwiUGFyYW1zXCJdID0gcGFyYW1zKTtcbiAgICAgICAgICAgICAgICAgIHR5cGUgPT09IFwib25VcGRhdGVcIiAmJiAodGhpcy5fb25VcGRhdGUgPSBjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gdmFyc1t0eXBlXTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90by50aGVuID0gZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCkge1xuICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICAgICAgICAgIHZhciBmID0gX2lzRnVuY3Rpb24ob25GdWxmaWxsZWQpID8gb25GdWxmaWxsZWQgOiBfcGFzc1Rocm91Z2gsXG4gICAgICAgICAgICAgICAgICBfcmVzb2x2ZSA9IGZ1bmN0aW9uIF9yZXNvbHZlKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgX3RoZW4gPSBzZWxmLnRoZW47XG4gICAgICAgICAgICAgICAgICAgIHNlbGYudGhlbiA9IG51bGw7IC8vIHRlbXBvcmFyaWx5IG51bGwgdGhlIHRoZW4oKSBtZXRob2QgdG8gYXZvaWQgYW4gaW5maW5pdGUgbG9vcCAoc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmVlbnNvY2svR1NBUC9pc3N1ZXMvMzIyKVxuXG4gICAgICAgICAgICAgICAgICAgIF9pc0Z1bmN0aW9uKGYpICYmIChmID0gZihzZWxmKSkgJiYgKGYudGhlbiB8fCBmID09PSBzZWxmKSAmJiAoc2VsZi50aGVuID0gX3RoZW4pO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGYpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnRoZW4gPSBfdGhlbjtcbiAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5faW5pdHRlZCAmJiBzZWxmLnRvdGFsUHJvZ3Jlc3MoKSA9PT0gMSAmJiBzZWxmLl90cyA+PSAwIHx8ICFzZWxmLl90VGltZSAmJiBzZWxmLl90cyA8IDApIHtcbiAgICAgICAgICAgICAgICAgIF9yZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHNlbGYuX3Byb20gPSBfcmVzb2x2ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvLmtpbGwgPSBmdW5jdGlvbiBraWxsKCkge1xuICAgICAgICAgICAgICBfaW50ZXJydXB0KHRoaXMpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmV0dXJuIEFuaW1hdGlvbjtcbiAgICAgICAgICB9KCk7XG5cbiAgICAgICAgZXhwb3J0cy5BbmltYXRpb24gPSBBbmltYXRpb247XG5cbiAgICAgICAgX3NldERlZmF1bHRzKEFuaW1hdGlvbi5wcm90b3R5cGUsIHtcbiAgICAgICAgICBfdGltZTogMCxcbiAgICAgICAgICBfc3RhcnQ6IDAsXG4gICAgICAgICAgX2VuZDogMCxcbiAgICAgICAgICBfdFRpbWU6IDAsXG4gICAgICAgICAgX3REdXI6IDAsXG4gICAgICAgICAgX2RpcnR5OiAwLFxuICAgICAgICAgIF9yZXBlYXQ6IDAsXG4gICAgICAgICAgX3lveW86IGZhbHNlLFxuICAgICAgICAgIHBhcmVudDogbnVsbCxcbiAgICAgICAgICBfaW5pdHRlZDogZmFsc2UsXG4gICAgICAgICAgX3JEZWxheTogMCxcbiAgICAgICAgICBfdHM6IDEsXG4gICAgICAgICAgX2RwOiAwLFxuICAgICAgICAgIHJhdGlvOiAwLFxuICAgICAgICAgIF96VGltZTogLV90aW55TnVtLFxuICAgICAgICAgIF9wcm9tOiAwLFxuICAgICAgICAgIF9wczogZmFsc2UsXG4gICAgICAgICAgX3J0czogMVxuICAgICAgICB9KTtcbiAgICAgICAgLypcbiAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgKiBUSU1FTElORVxuICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAqL1xuXG5cbiAgICAgICAgdmFyIFRpbWVsaW5lID1cbiAgICAgICAgICAvKiNfX1BVUkVfXyovXG4gICAgICAgICAgZnVuY3Rpb24gKF9BbmltYXRpb24pIHtcbiAgICAgICAgICAgIF9pbmhlcml0c0xvb3NlKFRpbWVsaW5lLCBfQW5pbWF0aW9uKTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gVGltZWxpbmUodmFycywgdGltZSkge1xuICAgICAgICAgICAgICB2YXIgX3RoaXM7XG5cbiAgICAgICAgICAgICAgaWYgKHZhcnMgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICAgIHZhcnMgPSB7fTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIF90aGlzID0gX0FuaW1hdGlvbi5jYWxsKHRoaXMsIHZhcnMsIHRpbWUpIHx8IHRoaXM7XG4gICAgICAgICAgICAgIF90aGlzLmxhYmVscyA9IHt9O1xuICAgICAgICAgICAgICBfdGhpcy5zbW9vdGhDaGlsZFRpbWluZyA9ICEhdmFycy5zbW9vdGhDaGlsZFRpbWluZztcbiAgICAgICAgICAgICAgX3RoaXMuYXV0b1JlbW92ZUNoaWxkcmVuID0gISF2YXJzLmF1dG9SZW1vdmVDaGlsZHJlbjtcbiAgICAgICAgICAgICAgX3RoaXMuX3NvcnQgPSBfaXNOb3RGYWxzZSh2YXJzLnNvcnRDaGlsZHJlbik7XG4gICAgICAgICAgICAgIF90aGlzLnBhcmVudCAmJiBfcG9zdEFkZENoZWNrcyhfdGhpcy5wYXJlbnQsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICAgICAgICAgICAgdmFycy5zY3JvbGxUcmlnZ2VyICYmIF9zY3JvbGxUcmlnZ2VyKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCB2YXJzLnNjcm9sbFRyaWdnZXIpO1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBfcHJvdG8yID0gVGltZWxpbmUucHJvdG90eXBlO1xuXG4gICAgICAgICAgICBfcHJvdG8yLnRvID0gZnVuY3Rpb24gdG8odGFyZ2V0cywgdmFycywgcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgbmV3IFR3ZWVuKHRhcmdldHMsIF9wYXJzZVZhcnMoYXJndW1lbnRzLCAwLCB0aGlzKSwgX3BhcnNlUG9zaXRpb24odGhpcywgX2lzTnVtYmVyKHZhcnMpID8gYXJndW1lbnRzWzNdIDogcG9zaXRpb24pKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLmZyb20gPSBmdW5jdGlvbiBmcm9tKHRhcmdldHMsIHZhcnMsIHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgIG5ldyBUd2Vlbih0YXJnZXRzLCBfcGFyc2VWYXJzKGFyZ3VtZW50cywgMSwgdGhpcyksIF9wYXJzZVBvc2l0aW9uKHRoaXMsIF9pc051bWJlcih2YXJzKSA/IGFyZ3VtZW50c1szXSA6IHBvc2l0aW9uKSk7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5mcm9tVG8gPSBmdW5jdGlvbiBmcm9tVG8odGFyZ2V0cywgZnJvbVZhcnMsIHRvVmFycywgcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgbmV3IFR3ZWVuKHRhcmdldHMsIF9wYXJzZVZhcnMoYXJndW1lbnRzLCAyLCB0aGlzKSwgX3BhcnNlUG9zaXRpb24odGhpcywgX2lzTnVtYmVyKGZyb21WYXJzKSA/IGFyZ3VtZW50c1s0XSA6IHBvc2l0aW9uKSk7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5zZXQgPSBmdW5jdGlvbiBzZXQodGFyZ2V0cywgdmFycywgcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgdmFycy5kdXJhdGlvbiA9IDA7XG4gICAgICAgICAgICAgIHZhcnMucGFyZW50ID0gdGhpcztcbiAgICAgICAgICAgICAgX2luaGVyaXREZWZhdWx0cyh2YXJzKS5yZXBlYXREZWxheSB8fCAodmFycy5yZXBlYXQgPSAwKTtcbiAgICAgICAgICAgICAgdmFycy5pbW1lZGlhdGVSZW5kZXIgPSAhIXZhcnMuaW1tZWRpYXRlUmVuZGVyO1xuICAgICAgICAgICAgICBuZXcgVHdlZW4odGFyZ2V0cywgdmFycywgX3BhcnNlUG9zaXRpb24odGhpcywgcG9zaXRpb24pLCAxKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLmNhbGwgPSBmdW5jdGlvbiBjYWxsKGNhbGxiYWNrLCBwYXJhbXMsIHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfYWRkVG9UaW1lbGluZSh0aGlzLCBUd2Vlbi5kZWxheWVkQ2FsbCgwLCBjYWxsYmFjaywgcGFyYW1zKSwgX3BhcnNlUG9zaXRpb24odGhpcywgcG9zaXRpb24pKTtcbiAgICAgICAgICAgIH0gLy9PTkxZIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5ISBNYXliZSBkZWxldGU/XG4gICAgICAgICAgICAgIDtcblxuICAgICAgICAgICAgX3Byb3RvMi5zdGFnZ2VyVG8gPSBmdW5jdGlvbiBzdGFnZ2VyVG8odGFyZ2V0cywgZHVyYXRpb24sIHZhcnMsIHN0YWdnZXIsIHBvc2l0aW9uLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zKSB7XG4gICAgICAgICAgICAgIHZhcnMuZHVyYXRpb24gPSBkdXJhdGlvbjtcbiAgICAgICAgICAgICAgdmFycy5zdGFnZ2VyID0gdmFycy5zdGFnZ2VyIHx8IHN0YWdnZXI7XG4gICAgICAgICAgICAgIHZhcnMub25Db21wbGV0ZSA9IG9uQ29tcGxldGVBbGw7XG4gICAgICAgICAgICAgIHZhcnMub25Db21wbGV0ZVBhcmFtcyA9IG9uQ29tcGxldGVBbGxQYXJhbXM7XG4gICAgICAgICAgICAgIHZhcnMucGFyZW50ID0gdGhpcztcbiAgICAgICAgICAgICAgbmV3IFR3ZWVuKHRhcmdldHMsIHZhcnMsIF9wYXJzZVBvc2l0aW9uKHRoaXMsIHBvc2l0aW9uKSk7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5zdGFnZ2VyRnJvbSA9IGZ1bmN0aW9uIHN0YWdnZXJGcm9tKHRhcmdldHMsIGR1cmF0aW9uLCB2YXJzLCBzdGFnZ2VyLCBwb3NpdGlvbiwgb25Db21wbGV0ZUFsbCwgb25Db21wbGV0ZUFsbFBhcmFtcykge1xuICAgICAgICAgICAgICB2YXJzLnJ1bkJhY2t3YXJkcyA9IDE7XG4gICAgICAgICAgICAgIF9pbmhlcml0RGVmYXVsdHModmFycykuaW1tZWRpYXRlUmVuZGVyID0gX2lzTm90RmFsc2UodmFycy5pbW1lZGlhdGVSZW5kZXIpO1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zdGFnZ2VyVG8odGFyZ2V0cywgZHVyYXRpb24sIHZhcnMsIHN0YWdnZXIsIHBvc2l0aW9uLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90bzIuc3RhZ2dlckZyb21UbyA9IGZ1bmN0aW9uIHN0YWdnZXJGcm9tVG8odGFyZ2V0cywgZHVyYXRpb24sIGZyb21WYXJzLCB0b1ZhcnMsIHN0YWdnZXIsIHBvc2l0aW9uLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zKSB7XG4gICAgICAgICAgICAgIHRvVmFycy5zdGFydEF0ID0gZnJvbVZhcnM7XG4gICAgICAgICAgICAgIF9pbmhlcml0RGVmYXVsdHModG9WYXJzKS5pbW1lZGlhdGVSZW5kZXIgPSBfaXNOb3RGYWxzZSh0b1ZhcnMuaW1tZWRpYXRlUmVuZGVyKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RhZ2dlclRvKHRhcmdldHMsIGR1cmF0aW9uLCB0b1ZhcnMsIHN0YWdnZXIsIHBvc2l0aW9uLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHRvdGFsVGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKSB7XG4gICAgICAgICAgICAgIHZhciBwcmV2VGltZSA9IHRoaXMuX3RpbWUsXG4gICAgICAgICAgICAgICAgdER1ciA9IHRoaXMuX2RpcnR5ID8gdGhpcy50b3RhbER1cmF0aW9uKCkgOiB0aGlzLl90RHVyLFxuICAgICAgICAgICAgICAgIGR1ciA9IHRoaXMuX2R1cixcbiAgICAgICAgICAgICAgICB0VGltZSA9IHRoaXMgIT09IF9nbG9iYWxUaW1lbGluZSAmJiB0b3RhbFRpbWUgPiB0RHVyIC0gX3RpbnlOdW0gJiYgdG90YWxUaW1lID49IDAgPyB0RHVyIDogdG90YWxUaW1lIDwgX3RpbnlOdW0gPyAwIDogdG90YWxUaW1lLFxuICAgICAgICAgICAgICAgIGNyb3NzaW5nU3RhcnQgPSB0aGlzLl96VGltZSA8IDAgIT09IHRvdGFsVGltZSA8IDAgJiYgKHRoaXMuX2luaXR0ZWQgfHwgIWR1ciksXG4gICAgICAgICAgICAgICAgdGltZSxcbiAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICBuZXh0LFxuICAgICAgICAgICAgICAgIGl0ZXJhdGlvbixcbiAgICAgICAgICAgICAgICBjeWNsZUR1cmF0aW9uLFxuICAgICAgICAgICAgICAgIHByZXZQYXVzZWQsXG4gICAgICAgICAgICAgICAgcGF1c2VUd2VlbixcbiAgICAgICAgICAgICAgICB0aW1lU2NhbGUsXG4gICAgICAgICAgICAgICAgcHJldlN0YXJ0LFxuICAgICAgICAgICAgICAgIHByZXZJdGVyYXRpb24sXG4gICAgICAgICAgICAgICAgeW95byxcbiAgICAgICAgICAgICAgICBpc1lveW87XG5cbiAgICAgICAgICAgICAgaWYgKHRUaW1lICE9PSB0aGlzLl90VGltZSB8fCBmb3JjZSB8fCBjcm9zc2luZ1N0YXJ0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHByZXZUaW1lICE9PSB0aGlzLl90aW1lICYmIGR1cikge1xuICAgICAgICAgICAgICAgICAgLy9pZiB0b3RhbER1cmF0aW9uKCkgZmluZHMgYSBjaGlsZCB3aXRoIGEgbmVnYXRpdmUgc3RhcnRUaW1lIGFuZCBzbW9vdGhDaGlsZFRpbWluZyBpcyB0cnVlLCB0aGluZ3MgZ2V0IHNoaWZ0ZWQgYXJvdW5kIGludGVybmFsbHkgc28gd2UgbmVlZCB0byBhZGp1c3QgdGhlIHRpbWUgYWNjb3JkaW5nbHkuIEZvciBleGFtcGxlLCBpZiBhIHR3ZWVuIHN0YXJ0cyBhdCAtMzAgd2UgbXVzdCBzaGlmdCBFVkVSWVRISU5HIGZvcndhcmQgMzAgc2Vjb25kcyBhbmQgbW92ZSB0aGlzIHRpbWVsaW5lJ3Mgc3RhcnRUaW1lIGJhY2t3YXJkIGJ5IDMwIHNlY29uZHMgc28gdGhhdCB0aGluZ3MgYWxpZ24gd2l0aCB0aGUgcGxheWhlYWQgKG5vIGp1bXApLlxuICAgICAgICAgICAgICAgICAgdFRpbWUgKz0gdGhpcy5fdGltZSAtIHByZXZUaW1lO1xuICAgICAgICAgICAgICAgICAgdG90YWxUaW1lICs9IHRoaXMuX3RpbWUgLSBwcmV2VGltZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aW1lID0gdFRpbWU7XG4gICAgICAgICAgICAgICAgcHJldlN0YXJ0ID0gdGhpcy5fc3RhcnQ7XG4gICAgICAgICAgICAgICAgdGltZVNjYWxlID0gdGhpcy5fdHM7XG4gICAgICAgICAgICAgICAgcHJldlBhdXNlZCA9ICF0aW1lU2NhbGU7XG5cbiAgICAgICAgICAgICAgICBpZiAoY3Jvc3NpbmdTdGFydCkge1xuICAgICAgICAgICAgICAgICAgZHVyIHx8IChwcmV2VGltZSA9IHRoaXMuX3pUaW1lKTsgLy93aGVuIHRoZSBwbGF5aGVhZCBhcnJpdmVzIGF0IEVYQUNUTFkgdGltZSAwIChyaWdodCBvbiB0b3ApIG9mIGEgemVyby1kdXJhdGlvbiB0aW1lbGluZSwgd2UgbmVlZCB0byBkaXNjZXJuIGlmIGV2ZW50cyBhcmUgc3VwcHJlc3NlZCBzbyB0aGF0IHdoZW4gdGhlIHBsYXloZWFkIG1vdmVzIGFnYWluIChuZXh0IHRpbWUpLCBpdCdsbCB0cmlnZ2VyIHRoZSBjYWxsYmFjay4gSWYgZXZlbnRzIGFyZSBOT1Qgc3VwcHJlc3NlZCwgb2J2aW91c2x5IHRoZSBjYWxsYmFjayB3b3VsZCBiZSB0cmlnZ2VyZWQgaW4gdGhpcyByZW5kZXIuIEJhc2ljYWxseSwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlIGVpdGhlciB3aGVuIHRoZSBwbGF5aGVhZCBBUlJJVkVTIG9yIExFQVZFUyB0aGlzIGV4YWN0IHNwb3QsIG5vdCBib3RoLiBJbWFnaW5lIGRvaW5nIGEgdGltZWxpbmUuc2VlaygwKSBhbmQgdGhlcmUncyBhIGNhbGxiYWNrIHRoYXQgc2l0cyBhdCAwLiBTaW5jZSBldmVudHMgYXJlIHN1cHByZXNzZWQgb24gdGhhdCBzZWVrKCkgYnkgZGVmYXVsdCwgbm90aGluZyB3aWxsIGZpcmUsIGJ1dCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBvZmYgb2YgdGhhdCBwb3NpdGlvbiwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlLiBUaGlzIGJlaGF2aW9yIGlzIHdoYXQgcGVvcGxlIGludHVpdGl2ZWx5IGV4cGVjdC5cblxuICAgICAgICAgICAgICAgICAgKHRvdGFsVGltZSB8fCAhc3VwcHJlc3NFdmVudHMpICYmICh0aGlzLl96VGltZSA9IHRvdGFsVGltZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX3JlcGVhdCkge1xuICAgICAgICAgICAgICAgICAgLy9hZGp1c3QgdGhlIHRpbWUgZm9yIHJlcGVhdHMgYW5kIHlveW9zXG4gICAgICAgICAgICAgICAgICB5b3lvID0gdGhpcy5feW95bztcbiAgICAgICAgICAgICAgICAgIGN5Y2xlRHVyYXRpb24gPSBkdXIgKyB0aGlzLl9yRGVsYXk7XG5cbiAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9yZXBlYXQgPCAtMSAmJiB0b3RhbFRpbWUgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvdGFsVGltZShjeWNsZUR1cmF0aW9uICogMTAwICsgdG90YWxUaW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICB0aW1lID0gX3JvdW5kKHRUaW1lICUgY3ljbGVEdXJhdGlvbik7IC8vcm91bmQgdG8gYXZvaWQgZmxvYXRpbmcgcG9pbnQgZXJyb3JzLiAoNCAlIDAuOCBzaG91bGQgYmUgMCBidXQgc29tZSBicm93c2VycyByZXBvcnQgaXQgYXMgMC43OTk5OTk5OSEpXG5cbiAgICAgICAgICAgICAgICAgIGlmICh0VGltZSA9PT0gdER1cikge1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGUgdER1ciA9PT0gdFRpbWUgaXMgZm9yIGVkZ2UgY2FzZXMgd2hlcmUgdGhlcmUncyBhIGxlbmd0aHkgZGVjaW1hbCBvbiB0aGUgZHVyYXRpb24gYW5kIGl0IG1heSByZWFjaCB0aGUgdmVyeSBlbmQgYnV0IHRoZSB0aW1lIGlzIHJlbmRlcmVkIGFzIG5vdC1xdWl0ZS10aGVyZSAocmVtZW1iZXIsIHREdXIgaXMgcm91bmRlZCB0byA0IGRlY2ltYWxzIHdoZXJlYXMgZHVyIGlzbid0KVxuICAgICAgICAgICAgICAgICAgICBpdGVyYXRpb24gPSB0aGlzLl9yZXBlYXQ7XG4gICAgICAgICAgICAgICAgICAgIHRpbWUgPSBkdXI7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVyYXRpb24gPSB+fih0VGltZSAvIGN5Y2xlRHVyYXRpb24pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVyYXRpb24gJiYgaXRlcmF0aW9uID09PSB0VGltZSAvIGN5Y2xlRHVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICB0aW1lID0gZHVyO1xuICAgICAgICAgICAgICAgICAgICAgIGl0ZXJhdGlvbi0tO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGltZSA+IGR1ciAmJiAodGltZSA9IGR1cik7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIHByZXZJdGVyYXRpb24gPSBfYW5pbWF0aW9uQ3ljbGUodGhpcy5fdFRpbWUsIGN5Y2xlRHVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgIXByZXZUaW1lICYmIHRoaXMuX3RUaW1lICYmIHByZXZJdGVyYXRpb24gIT09IGl0ZXJhdGlvbiAmJiAocHJldkl0ZXJhdGlvbiA9IGl0ZXJhdGlvbik7IC8vIGVkZ2UgY2FzZSAtIGlmIHNvbWVvbmUgZG9lcyBhZGRQYXVzZSgpIGF0IHRoZSB2ZXJ5IGJlZ2lubmluZyBvZiBhIHJlcGVhdGluZyB0aW1lbGluZSwgdGhhdCBwYXVzZSBpcyB0ZWNobmljYWxseSBhdCB0aGUgc2FtZSBzcG90IGFzIHRoZSBlbmQgd2hpY2ggY2F1c2VzIHRoaXMuX3RpbWUgdG8gZ2V0IHNldCB0byAwIHdoZW4gdGhlIHRvdGFsVGltZSB3b3VsZCBub3JtYWxseSBwbGFjZSB0aGUgcGxheWhlYWQgYXQgdGhlIGVuZC4gU2VlIGh0dHBzOi8vZ3JlZW5zb2NrLmNvbS9mb3J1bXMvdG9waWMvMjM4MjMtY2xvc2luZy1uYXYtYW5pbWF0aW9uLW5vdC13b3JraW5nLW9uLWllLWFuZC1pcGhvbmUtNi1tYXliZS1vdGhlci1vbGRlci1icm93c2VyLz90YWI9Y29tbWVudHMjY29tbWVudC0xMTMwMDVcblxuICAgICAgICAgICAgICAgICAgaWYgKHlveW8gJiYgaXRlcmF0aW9uICYgMSkge1xuICAgICAgICAgICAgICAgICAgICB0aW1lID0gZHVyIC0gdGltZTtcbiAgICAgICAgICAgICAgICAgICAgaXNZb3lvID0gMTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgICBtYWtlIHN1cmUgY2hpbGRyZW4gYXQgdGhlIGVuZC9iZWdpbm5pbmcgb2YgdGhlIHRpbWVsaW5lIGFyZSByZW5kZXJlZCBwcm9wZXJseS4gSWYsIGZvciBleGFtcGxlLFxuICAgICAgICAgICAgICAgICAgYSAzLXNlY29uZCBsb25nIHRpbWVsaW5lIHJlbmRlcmVkIGF0IDIuOSBzZWNvbmRzIHByZXZpb3VzbHksIGFuZCBub3cgcmVuZGVycyBhdCAzLjIgc2Vjb25kcyAod2hpY2hcbiAgICAgICAgICAgICAgICAgIHdvdWxkIGdldCB0cmFuc2xhdGVkIHRvIDIuOCBzZWNvbmRzIGlmIHRoZSB0aW1lbGluZSB5b3lvcyBvciAwLjIgc2Vjb25kcyBpZiBpdCBqdXN0IHJlcGVhdHMpLCB0aGVyZVxuICAgICAgICAgICAgICAgICAgY291bGQgYmUgYSBjYWxsYmFjayBvciBhIHNob3J0IHR3ZWVuIHRoYXQncyBhdCAyLjk1IG9yIDMgc2Vjb25kcyBpbiB3aGljaCB3b3VsZG4ndCByZW5kZXIuIFNvXG4gICAgICAgICAgICAgICAgICB3ZSBuZWVkIHRvIHB1c2ggdGhlIHRpbWVsaW5lIHRvIHRoZSBlbmQgKGFuZC9vciBiZWdpbm5pbmcgZGVwZW5kaW5nIG9uIGl0cyB5b3lvIHZhbHVlKS4gQWxzbyB3ZSBtdXN0XG4gICAgICAgICAgICAgICAgICBlbnN1cmUgdGhhdCB6ZXJvLWR1cmF0aW9uIHR3ZWVucyBhdCB0aGUgdmVyeSBiZWdpbm5pbmcgb3IgZW5kIG9mIHRoZSBUaW1lbGluZSB3b3JrLlxuICAgICAgICAgICAgICAgICAgKi9cblxuXG4gICAgICAgICAgICAgICAgICBpZiAoaXRlcmF0aW9uICE9PSBwcmV2SXRlcmF0aW9uICYmICF0aGlzLl9sb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXdpbmRpbmcgPSB5b3lvICYmIHByZXZJdGVyYXRpb24gJiAxLFxuICAgICAgICAgICAgICAgICAgICAgIGRvZXNXcmFwID0gcmV3aW5kaW5nID09PSAoeW95byAmJiBpdGVyYXRpb24gJiAxKTtcbiAgICAgICAgICAgICAgICAgICAgaXRlcmF0aW9uIDwgcHJldkl0ZXJhdGlvbiAmJiAocmV3aW5kaW5nID0gIXJld2luZGluZyk7XG4gICAgICAgICAgICAgICAgICAgIHByZXZUaW1lID0gcmV3aW5kaW5nID8gMCA6IGR1cjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbG9jayA9IDE7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyKHByZXZUaW1lIHx8IChpc1lveW8gPyAwIDogX3JvdW5kKGl0ZXJhdGlvbiAqIGN5Y2xlRHVyYXRpb24pKSwgc3VwcHJlc3NFdmVudHMsICFkdXIpLl9sb2NrID0gMDtcbiAgICAgICAgICAgICAgICAgICAgIXN1cHByZXNzRXZlbnRzICYmIHRoaXMucGFyZW50ICYmIF9jYWxsYmFjayh0aGlzLCBcIm9uUmVwZWF0XCIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnZhcnMucmVwZWF0UmVmcmVzaCAmJiAhaXNZb3lvICYmICh0aGlzLmludmFsaWRhdGUoKS5fbG9jayA9IDEpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmV2VGltZSAhPT0gdGhpcy5fdGltZSB8fCBwcmV2UGF1c2VkICE9PSAhdGhpcy5fdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGR1ciA9IHRoaXMuX2R1cjsgLy8gaW4gY2FzZSB0aGUgZHVyYXRpb24gY2hhbmdlZCBpbiB0aGUgb25SZXBlYXRcblxuICAgICAgICAgICAgICAgICAgICB0RHVyID0gdGhpcy5fdER1cjtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZG9lc1dyYXApIHtcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9sb2NrID0gMjtcbiAgICAgICAgICAgICAgICAgICAgICBwcmV2VGltZSA9IHJld2luZGluZyA/IGR1ciA6IC0wLjAwMDE7XG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIocHJldlRpbWUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmFycy5yZXBlYXRSZWZyZXNoICYmICFpc1lveW8gJiYgdGhpcy5pbnZhbGlkYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9sb2NrID0gMDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX3RzICYmICFwcmV2UGF1c2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIH0gLy9pbiBvcmRlciBmb3IgeW95b0Vhc2UgdG8gd29yayBwcm9wZXJseSB3aGVuIHRoZXJlJ3MgYSBzdGFnZ2VyLCB3ZSBtdXN0IHN3YXAgb3V0IHRoZSBlYXNlIGluIGVhY2ggc3ViLXR3ZWVuLlxuXG5cbiAgICAgICAgICAgICAgICAgICAgX3Byb3BhZ2F0ZVlveW9FYXNlKHRoaXMsIGlzWW95byk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2hhc1BhdXNlICYmICF0aGlzLl9mb3JjaW5nICYmIHRoaXMuX2xvY2sgPCAyKSB7XG4gICAgICAgICAgICAgICAgICBwYXVzZVR3ZWVuID0gX2ZpbmROZXh0UGF1c2VUd2Vlbih0aGlzLCBfcm91bmQocHJldlRpbWUpLCBfcm91bmQodGltZSkpO1xuXG4gICAgICAgICAgICAgICAgICBpZiAocGF1c2VUd2Vlbikge1xuICAgICAgICAgICAgICAgICAgICB0VGltZSAtPSB0aW1lIC0gKHRpbWUgPSBwYXVzZVR3ZWVuLl9zdGFydCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5fdFRpbWUgPSB0VGltZTtcbiAgICAgICAgICAgICAgICB0aGlzLl90aW1lID0gdGltZTtcbiAgICAgICAgICAgICAgICB0aGlzLl9hY3QgPSAhdGltZVNjYWxlOyAvL2FzIGxvbmcgYXMgaXQncyBub3QgcGF1c2VkLCBmb3JjZSBpdCB0byBiZSBhY3RpdmUgc28gdGhhdCBpZiB0aGUgdXNlciByZW5kZXJzIGluZGVwZW5kZW50IG9mIHRoZSBwYXJlbnQgdGltZWxpbmUsIGl0J2xsIGJlIGZvcmNlZCB0byByZS1yZW5kZXIgb24gdGhlIG5leHQgdGljay5cblxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5faW5pdHRlZCkge1xuICAgICAgICAgICAgICAgICAgdGhpcy5fb25VcGRhdGUgPSB0aGlzLnZhcnMub25VcGRhdGU7XG4gICAgICAgICAgICAgICAgICB0aGlzLl9pbml0dGVkID0gMTtcbiAgICAgICAgICAgICAgICAgIHRoaXMuX3pUaW1lID0gdG90YWxUaW1lO1xuICAgICAgICAgICAgICAgICAgcHJldlRpbWUgPSAwOyAvLyB1cG9uIGluaXQsIHRoZSBwbGF5aGVhZCBzaG91bGQgYWx3YXlzIGdvIGZvcndhcmQ7IHNvbWVvbmUgY291bGQgaW52YWxpZGF0ZSgpIGEgY29tcGxldGVkIHRpbWVsaW5lIGFuZCB0aGVuIGlmIHRoZXkgcmVzdGFydCgpLCB0aGF0IHdvdWxkIG1ha2UgY2hpbGQgdHdlZW5zIHJlbmRlciBpbiByZXZlcnNlIG9yZGVyIHdoaWNoIGNvdWxkIGxvY2sgaW4gdGhlIHdyb25nIHN0YXJ0aW5nIHZhbHVlcyBpZiB0aGV5IGJ1aWxkIG9uIGVhY2ggb3RoZXIsIGxpa2UgdGwudG8ob2JqLCB7eDogMTAwfSkudG8ob2JqLCB7eDogMH0pLlxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICFwcmV2VGltZSAmJiAodGltZSB8fCAhZHVyICYmIHRvdGFsVGltZSA+PSAwKSAmJiAhc3VwcHJlc3NFdmVudHMgJiYgX2NhbGxiYWNrKHRoaXMsIFwib25TdGFydFwiKTtcblxuICAgICAgICAgICAgICAgIGlmICh0aW1lID49IHByZXZUaW1lICYmIHRvdGFsVGltZSA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICBjaGlsZCA9IHRoaXMuX2ZpcnN0O1xuXG4gICAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dCA9IGNoaWxkLl9uZXh0O1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICgoY2hpbGQuX2FjdCB8fCB0aW1lID49IGNoaWxkLl9zdGFydCkgJiYgY2hpbGQuX3RzICYmIHBhdXNlVHdlZW4gIT09IGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkLnBhcmVudCAhPT0gdGhpcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYW4gZXh0cmVtZSBlZGdlIGNhc2UgLSB0aGUgY2hpbGQncyByZW5kZXIgY291bGQgZG8gc29tZXRoaW5nIGxpa2Uga2lsbCgpIHRoZSBcIm5leHRcIiBvbmUgaW4gdGhlIGxpbmtlZCBsaXN0LCBvciByZXBhcmVudCBpdC4gSW4gdGhhdCBjYXNlIHdlIG11c3QgcmUtaW5pdGlhdGUgdGhlIHdob2xlIHJlbmRlciB0byBiZSBzYWZlLlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyKHRvdGFsVGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5yZW5kZXIoY2hpbGQuX3RzID4gMCA/ICh0aW1lIC0gY2hpbGQuX3N0YXJ0KSAqIGNoaWxkLl90cyA6IChjaGlsZC5fZGlydHkgPyBjaGlsZC50b3RhbER1cmF0aW9uKCkgOiBjaGlsZC5fdER1cikgKyAodGltZSAtIGNoaWxkLl9zdGFydCkgKiBjaGlsZC5fdHMsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICBpZiAodGltZSAhPT0gdGhpcy5fdGltZSB8fCAhdGhpcy5fdHMgJiYgIXByZXZQYXVzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaW4gY2FzZSBhIHR3ZWVuIHBhdXNlcyBvciBzZWVrcyB0aGUgdGltZWxpbmUgd2hlbiByZW5kZXJpbmcsIGxpa2UgaW5zaWRlIG9mIGFuIG9uVXBkYXRlL29uQ29tcGxldGVcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlVHdlZW4gPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dCAmJiAodFRpbWUgKz0gdGhpcy5felRpbWUgPSAtX3RpbnlOdW0pOyAvLyBpdCBkaWRuJ3QgZmluaXNoIHJlbmRlcmluZywgc28gZmxhZyB6VGltZSBhcyBuZWdhdGl2ZSBzbyB0aGF0IHNvIHRoYXQgdGhlIG5leHQgdGltZSByZW5kZXIoKSBpcyBjYWxsZWQgaXQnbGwgYmUgZm9yY2VkICh0byByZW5kZXIgYW55IHJlbWFpbmluZyBjaGlsZHJlbilcblxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBuZXh0O1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBjaGlsZCA9IHRoaXMuX2xhc3Q7XG4gICAgICAgICAgICAgICAgICB2YXIgYWRqdXN0ZWRUaW1lID0gdG90YWxUaW1lIDwgMCA/IHRvdGFsVGltZSA6IHRpbWU7IC8vd2hlbiB0aGUgcGxheWhlYWQgZ29lcyBiYWNrd2FyZCBiZXlvbmQgdGhlIHN0YXJ0IG9mIHRoaXMgdGltZWxpbmUsIHdlIG11c3QgcGFzcyB0aGF0IGluZm9ybWF0aW9uIGRvd24gdG8gdGhlIGNoaWxkIGFuaW1hdGlvbnMgc28gdGhhdCB6ZXJvLWR1cmF0aW9uIHR3ZWVucyBrbm93IHdoZXRoZXIgdG8gcmVuZGVyIHRoZWlyIHN0YXJ0aW5nIG9yIGVuZGluZyB2YWx1ZXMuXG5cbiAgICAgICAgICAgICAgICAgIHdoaWxlIChjaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICBuZXh0ID0gY2hpbGQuX3ByZXY7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKChjaGlsZC5fYWN0IHx8IGFkanVzdGVkVGltZSA8PSBjaGlsZC5fZW5kKSAmJiBjaGlsZC5fdHMgJiYgcGF1c2VUd2VlbiAhPT0gY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQucGFyZW50ICE9PSB0aGlzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbiBleHRyZW1lIGVkZ2UgY2FzZSAtIHRoZSBjaGlsZCdzIHJlbmRlciBjb3VsZCBkbyBzb21ldGhpbmcgbGlrZSBraWxsKCkgdGhlIFwibmV4dFwiIG9uZSBpbiB0aGUgbGlua2VkIGxpc3QsIG9yIHJlcGFyZW50IGl0LiBJbiB0aGF0IGNhc2Ugd2UgbXVzdCByZS1pbml0aWF0ZSB0aGUgd2hvbGUgcmVuZGVyIHRvIGJlIHNhZmUuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXIodG90YWxUaW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLnJlbmRlcihjaGlsZC5fdHMgPiAwID8gKGFkanVzdGVkVGltZSAtIGNoaWxkLl9zdGFydCkgKiBjaGlsZC5fdHMgOiAoY2hpbGQuX2RpcnR5ID8gY2hpbGQudG90YWxEdXJhdGlvbigpIDogY2hpbGQuX3REdXIpICsgKGFkanVzdGVkVGltZSAtIGNoaWxkLl9zdGFydCkgKiBjaGlsZC5fdHMsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICBpZiAodGltZSAhPT0gdGhpcy5fdGltZSB8fCAhdGhpcy5fdHMgJiYgIXByZXZQYXVzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaW4gY2FzZSBhIHR3ZWVuIHBhdXNlcyBvciBzZWVrcyB0aGUgdGltZWxpbmUgd2hlbiByZW5kZXJpbmcsIGxpa2UgaW5zaWRlIG9mIGFuIG9uVXBkYXRlL29uQ29tcGxldGVcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlVHdlZW4gPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dCAmJiAodFRpbWUgKz0gdGhpcy5felRpbWUgPSBhZGp1c3RlZFRpbWUgPyAtX3RpbnlOdW0gOiBfdGlueU51bSk7IC8vIGl0IGRpZG4ndCBmaW5pc2ggcmVuZGVyaW5nLCBzbyBhZGp1c3QgelRpbWUgc28gdGhhdCBzbyB0aGF0IHRoZSBuZXh0IHRpbWUgcmVuZGVyKCkgaXMgY2FsbGVkIGl0J2xsIGJlIGZvcmNlZCAodG8gcmVuZGVyIGFueSByZW1haW5pbmcgY2hpbGRyZW4pXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gbmV4dDtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAocGF1c2VUd2VlbiAmJiAhc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMucGF1c2UoKTtcbiAgICAgICAgICAgICAgICAgIHBhdXNlVHdlZW4ucmVuZGVyKHRpbWUgPj0gcHJldlRpbWUgPyAwIDogLV90aW55TnVtKS5felRpbWUgPSB0aW1lID49IHByZXZUaW1lID8gMSA6IC0xO1xuXG4gICAgICAgICAgICAgICAgICBpZiAodGhpcy5fdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy90aGUgY2FsbGJhY2sgcmVzdW1lZCBwbGF5YmFjayEgU28gc2luY2Ugd2UgbWF5IGhhdmUgaGVsZCBiYWNrIHRoZSBwbGF5aGVhZCBkdWUgdG8gd2hlcmUgdGhlIHBhdXNlIGlzIHBvc2l0aW9uZWQsIGdvIGFoZWFkIGFuZCBqdW1wIHRvIHdoZXJlIGl0J3MgU1VQUE9TRUQgdG8gYmUgKGlmIG5vIHBhdXNlIGhhcHBlbmVkKS5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fc3RhcnQgPSBwcmV2U3RhcnQ7IC8vaWYgdGhlIHBhdXNlIHdhcyBhdCBhbiBlYXJsaWVyIHRpbWUgYW5kIHRoZSB1c2VyIHJlc3VtZWQgaW4gdGhlIGNhbGxiYWNrLCBpdCBjb3VsZCByZXBvc2l0aW9uIHRoZSB0aW1lbGluZSAoY2hhbmdpbmcgaXRzIHN0YXJ0VGltZSksIHRocm93aW5nIHRoaW5ncyBvZmYgc2xpZ2h0bHksIHNvIHdlIG1ha2Ugc3VyZSB0aGUgX3N0YXJ0IGRvZXNuJ3Qgc2hpZnQuXG5cbiAgICAgICAgICAgICAgICAgICAgX3NldEVuZCh0aGlzKTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXIodG90YWxUaW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuX29uVXBkYXRlICYmICFzdXBwcmVzc0V2ZW50cyAmJiBfY2FsbGJhY2sodGhpcywgXCJvblVwZGF0ZVwiLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBpZiAodFRpbWUgPT09IHREdXIgJiYgdER1ciA+PSB0aGlzLnRvdGFsRHVyYXRpb24oKSB8fCAhdFRpbWUgJiYgcHJldlRpbWUpIGlmIChwcmV2U3RhcnQgPT09IHRoaXMuX3N0YXJ0IHx8IE1hdGguYWJzKHRpbWVTY2FsZSkgIT09IE1hdGguYWJzKHRoaXMuX3RzKSkgaWYgKCF0aGlzLl9sb2NrKSB7XG4gICAgICAgICAgICAgICAgICAodG90YWxUaW1lIHx8ICFkdXIpICYmICh0VGltZSA9PT0gdER1ciAmJiB0aGlzLl90cyA+IDAgfHwgIXRUaW1lICYmIHRoaXMuX3RzIDwgMCkgJiYgX3JlbW92ZUZyb21QYXJlbnQodGhpcywgMSk7IC8vIGRvbid0IHJlbW92ZSBpZiB0aGUgdGltZWxpbmUgaXMgcmV2ZXJzZWQgYW5kIHRoZSBwbGF5aGVhZCBpc24ndCBhdCAwLCBvdGhlcndpc2UgdGwucHJvZ3Jlc3MoMSkucmV2ZXJzZSgpIHdvbid0IHdvcmsuIE9ubHkgcmVtb3ZlIGlmIHRoZSBwbGF5aGVhZCBpcyBhdCB0aGUgZW5kIGFuZCB0aW1lU2NhbGUgaXMgcG9zaXRpdmUsIG9yIGlmIHRoZSBwbGF5aGVhZCBpcyBhdCAwIGFuZCB0aGUgdGltZVNjYWxlIGlzIG5lZ2F0aXZlLlxuXG4gICAgICAgICAgICAgICAgICBpZiAoIXN1cHByZXNzRXZlbnRzICYmICEodG90YWxUaW1lIDwgMCAmJiAhcHJldlRpbWUpICYmICh0VGltZSB8fCBwcmV2VGltZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgX2NhbGxiYWNrKHRoaXMsIHRUaW1lID09PSB0RHVyID8gXCJvbkNvbXBsZXRlXCIgOiBcIm9uUmV2ZXJzZUNvbXBsZXRlXCIsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Byb20gJiYgISh0VGltZSA8IHREdXIgJiYgdGhpcy50aW1lU2NhbGUoKSA+IDApICYmIHRoaXMuX3Byb20oKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90bzIuYWRkID0gZnVuY3Rpb24gYWRkKGNoaWxkLCBwb3NpdGlvbikge1xuICAgICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgICBfaXNOdW1iZXIocG9zaXRpb24pIHx8IChwb3NpdGlvbiA9IF9wYXJzZVBvc2l0aW9uKHRoaXMsIHBvc2l0aW9uKSk7XG5cbiAgICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBBbmltYXRpb24pKSB7XG4gICAgICAgICAgICAgICAgaWYgKF9pc0FycmF5KGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgY2hpbGQuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuYWRkKG9iaiwgcG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoX2lzU3RyaW5nKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWRkTGFiZWwoY2hpbGQsIHBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoX2lzRnVuY3Rpb24oY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICBjaGlsZCA9IFR3ZWVuLmRlbGF5ZWRDYWxsKDAsIGNoaWxkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMgIT09IGNoaWxkID8gX2FkZFRvVGltZWxpbmUodGhpcywgY2hpbGQsIHBvc2l0aW9uKSA6IHRoaXM7IC8vZG9uJ3QgYWxsb3cgYSB0aW1lbGluZSB0byBiZSBhZGRlZCB0byBpdHNlbGYgYXMgYSBjaGlsZCFcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90bzIuZ2V0Q2hpbGRyZW4gPSBmdW5jdGlvbiBnZXRDaGlsZHJlbihuZXN0ZWQsIHR3ZWVucywgdGltZWxpbmVzLCBpZ25vcmVCZWZvcmVUaW1lKSB7XG4gICAgICAgICAgICAgIGlmIChuZXN0ZWQgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICAgIG5lc3RlZCA9IHRydWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAodHdlZW5zID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgICB0d2VlbnMgPSB0cnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKHRpbWVsaW5lcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgdGltZWxpbmVzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChpZ25vcmVCZWZvcmVUaW1lID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgICBpZ25vcmVCZWZvcmVUaW1lID0gLV9iaWdOdW07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB2YXIgYSA9IFtdLFxuICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5fZmlyc3Q7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkLl9zdGFydCA+PSBpZ25vcmVCZWZvcmVUaW1lKSB7XG4gICAgICAgICAgICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBUd2Vlbikge1xuICAgICAgICAgICAgICAgICAgICB0d2VlbnMgJiYgYS5wdXNoKGNoaWxkKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVsaW5lcyAmJiBhLnB1c2goY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICBuZXN0ZWQgJiYgYS5wdXNoLmFwcGx5KGEsIGNoaWxkLmdldENoaWxkcmVuKHRydWUsIHR3ZWVucywgdGltZWxpbmVzKSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5fbmV4dDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5nZXRCeUlkID0gZnVuY3Rpb24gZ2V0QnlJZChpZCkge1xuICAgICAgICAgICAgICB2YXIgYW5pbWF0aW9ucyA9IHRoaXMuZ2V0Q2hpbGRyZW4oMSwgMSwgMSksXG4gICAgICAgICAgICAgICAgaSA9IGFuaW1hdGlvbnMubGVuZ3RoO1xuXG4gICAgICAgICAgICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgICAgICAgICBpZiAoYW5pbWF0aW9uc1tpXS52YXJzLmlkID09PSBpZCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGFuaW1hdGlvbnNbaV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZShjaGlsZCkge1xuICAgICAgICAgICAgICBpZiAoX2lzU3RyaW5nKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbW92ZUxhYmVsKGNoaWxkKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChfaXNGdW5jdGlvbihjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5raWxsVHdlZW5zT2YoY2hpbGQpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgX3JlbW92ZUxpbmtlZExpc3RJdGVtKHRoaXMsIGNoaWxkKTtcblxuICAgICAgICAgICAgICBpZiAoY2hpbGQgPT09IHRoaXMuX3JlY2VudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3JlY2VudCA9IHRoaXMuX2xhc3Q7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gX3VuY2FjaGUodGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLnRvdGFsVGltZSA9IGZ1bmN0aW9uIHRvdGFsVGltZShfdG90YWxUaW1lMiwgc3VwcHJlc3NFdmVudHMpIHtcbiAgICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RUaW1lO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdGhpcy5fZm9yY2luZyA9IDE7XG5cbiAgICAgICAgICAgICAgaWYgKCF0aGlzLl9kcCAmJiB0aGlzLl90cykge1xuICAgICAgICAgICAgICAgIC8vc3BlY2lhbCBjYXNlIGZvciB0aGUgZ2xvYmFsIHRpbWVsaW5lIChvciBhbnkgb3RoZXIgdGhhdCBoYXMgbm8gcGFyZW50IG9yIGRldGFjaGVkIHBhcmVudCkuXG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhcnQgPSBfcm91bmQoX3RpY2tlci50aW1lIC0gKHRoaXMuX3RzID4gMCA/IF90b3RhbFRpbWUyIC8gdGhpcy5fdHMgOiAodGhpcy50b3RhbER1cmF0aW9uKCkgLSBfdG90YWxUaW1lMikgLyAtdGhpcy5fdHMpKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIF9BbmltYXRpb24ucHJvdG90eXBlLnRvdGFsVGltZS5jYWxsKHRoaXMsIF90b3RhbFRpbWUyLCBzdXBwcmVzc0V2ZW50cyk7XG5cbiAgICAgICAgICAgICAgdGhpcy5fZm9yY2luZyA9IDA7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5hZGRMYWJlbCA9IGZ1bmN0aW9uIGFkZExhYmVsKGxhYmVsLCBwb3NpdGlvbikge1xuICAgICAgICAgICAgICB0aGlzLmxhYmVsc1tsYWJlbF0gPSBfcGFyc2VQb3NpdGlvbih0aGlzLCBwb3NpdGlvbik7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5yZW1vdmVMYWJlbCA9IGZ1bmN0aW9uIHJlbW92ZUxhYmVsKGxhYmVsKSB7XG4gICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmxhYmVsc1tsYWJlbF07XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5hZGRQYXVzZSA9IGZ1bmN0aW9uIGFkZFBhdXNlKHBvc2l0aW9uLCBjYWxsYmFjaywgcGFyYW1zKSB7XG4gICAgICAgICAgICAgIHZhciB0ID0gVHdlZW4uZGVsYXllZENhbGwoMCwgY2FsbGJhY2sgfHwgX2VtcHR5RnVuYywgcGFyYW1zKTtcbiAgICAgICAgICAgICAgdC5kYXRhID0gXCJpc1BhdXNlXCI7XG4gICAgICAgICAgICAgIHRoaXMuX2hhc1BhdXNlID0gMTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9hZGRUb1RpbWVsaW5lKHRoaXMsIHQsIF9wYXJzZVBvc2l0aW9uKHRoaXMsIHBvc2l0aW9uKSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLnJlbW92ZVBhdXNlID0gZnVuY3Rpb24gcmVtb3ZlUGF1c2UocG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgdmFyIGNoaWxkID0gdGhpcy5fZmlyc3Q7XG4gICAgICAgICAgICAgIHBvc2l0aW9uID0gX3BhcnNlUG9zaXRpb24odGhpcywgcG9zaXRpb24pO1xuXG4gICAgICAgICAgICAgIHdoaWxlIChjaGlsZCkge1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5fc3RhcnQgPT09IHBvc2l0aW9uICYmIGNoaWxkLmRhdGEgPT09IFwiaXNQYXVzZVwiKSB7XG4gICAgICAgICAgICAgICAgICBfcmVtb3ZlRnJvbVBhcmVudChjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5fbmV4dDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5raWxsVHdlZW5zT2YgPSBmdW5jdGlvbiBraWxsVHdlZW5zT2YodGFyZ2V0cywgcHJvcHMsIG9ubHlBY3RpdmUpIHtcbiAgICAgICAgICAgICAgdmFyIHR3ZWVucyA9IHRoaXMuZ2V0VHdlZW5zT2YodGFyZ2V0cywgb25seUFjdGl2ZSksXG4gICAgICAgICAgICAgICAgaSA9IHR3ZWVucy5sZW5ndGg7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgICAgIF9vdmVyd3JpdGluZ1R3ZWVuICE9PSB0d2VlbnNbaV0gJiYgdHdlZW5zW2ldLmtpbGwodGFyZ2V0cywgcHJvcHMpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLmdldFR3ZWVuc09mID0gZnVuY3Rpb24gZ2V0VHdlZW5zT2YodGFyZ2V0cywgb25seUFjdGl2ZSkge1xuICAgICAgICAgICAgICB2YXIgYSA9IFtdLFxuICAgICAgICAgICAgICAgIHBhcnNlZFRhcmdldHMgPSB0b0FycmF5KHRhcmdldHMpLFxuICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5fZmlyc3QsXG4gICAgICAgICAgICAgICAgaXNHbG9iYWxUaW1lID0gX2lzTnVtYmVyKG9ubHlBY3RpdmUpLFxuICAgICAgICAgICAgICAgIC8vIGEgbnVtYmVyIGlzIGludGVycHJldGVkIGFzIGEgZ2xvYmFsIHRpbWUuIElmIHRoZSBhbmltYXRpb24gc3BhbnNcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjtcblxuICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBUd2Vlbikge1xuICAgICAgICAgICAgICAgICAgaWYgKF9hcnJheUNvbnRhaW5zQW55KGNoaWxkLl90YXJnZXRzLCBwYXJzZWRUYXJnZXRzKSAmJiAoaXNHbG9iYWxUaW1lID8gKCFfb3ZlcndyaXRpbmdUd2VlbiB8fCBjaGlsZC5faW5pdHRlZCAmJiBjaGlsZC5fdHMpICYmIGNoaWxkLmdsb2JhbFRpbWUoMCkgPD0gb25seUFjdGl2ZSAmJiBjaGlsZC5nbG9iYWxUaW1lKGNoaWxkLnRvdGFsRHVyYXRpb24oKSkgPiBvbmx5QWN0aXZlIDogIW9ubHlBY3RpdmUgfHwgY2hpbGQuaXNBY3RpdmUoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gbm90ZTogaWYgdGhpcyBpcyBmb3Igb3ZlcndyaXRpbmcsIGl0IHNob3VsZCBvbmx5IGJlIGZvciB0d2VlbnMgdGhhdCBhcmVuJ3QgcGF1c2VkIGFuZCBhcmUgaW5pdHRlZC5cbiAgICAgICAgICAgICAgICAgICAgYS5wdXNoKGNoaWxkKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKChjaGlsZHJlbiA9IGNoaWxkLmdldFR3ZWVuc09mKHBhcnNlZFRhcmdldHMsIG9ubHlBY3RpdmUpKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgIGEucHVzaC5hcHBseShhLCBjaGlsZHJlbik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5fbmV4dDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICAgICAgfSAvLyBwb3RlbnRpYWwgZnV0dXJlIGZlYXR1cmUgLSB0YXJnZXRzKCkgb24gdGltZWxpbmVzXG4gICAgICAgICAgICAgIC8vIHRhcmdldHMoKSB7XG4gICAgICAgICAgICAgIC8vIFx0bGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgICAvLyBcdHRoaXMuZ2V0Q2hpbGRyZW4odHJ1ZSwgdHJ1ZSwgZmFsc2UpLmZvckVhY2godCA9PiByZXN1bHQucHVzaCguLi50LnRhcmdldHMoKSkpO1xuICAgICAgICAgICAgICAvLyBcdHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgO1xuXG4gICAgICAgICAgICBfcHJvdG8yLnR3ZWVuVG8gPSBmdW5jdGlvbiB0d2VlblRvKHBvc2l0aW9uLCB2YXJzKSB7XG4gICAgICAgICAgICAgIHZhcnMgPSB2YXJzIHx8IHt9O1xuXG4gICAgICAgICAgICAgIHZhciB0bCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgZW5kVGltZSA9IF9wYXJzZVBvc2l0aW9uKHRsLCBwb3NpdGlvbiksXG4gICAgICAgICAgICAgICAgX3ZhcnMgPSB2YXJzLFxuICAgICAgICAgICAgICAgIHN0YXJ0QXQgPSBfdmFycy5zdGFydEF0LFxuICAgICAgICAgICAgICAgIF9vblN0YXJ0ID0gX3ZhcnMub25TdGFydCxcbiAgICAgICAgICAgICAgICBvblN0YXJ0UGFyYW1zID0gX3ZhcnMub25TdGFydFBhcmFtcyxcbiAgICAgICAgICAgICAgICBpbW1lZGlhdGVSZW5kZXIgPSBfdmFycy5pbW1lZGlhdGVSZW5kZXIsXG4gICAgICAgICAgICAgICAgdHdlZW4gPSBUd2Vlbi50byh0bCwgX3NldERlZmF1bHRzKHtcbiAgICAgICAgICAgICAgICAgIGVhc2U6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgbGF6eTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICBpbW1lZGlhdGVSZW5kZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgdGltZTogZW5kVGltZSxcbiAgICAgICAgICAgICAgICAgIG92ZXJ3cml0ZTogXCJhdXRvXCIsXG4gICAgICAgICAgICAgICAgICBkdXJhdGlvbjogdmFycy5kdXJhdGlvbiB8fCBNYXRoLmFicygoZW5kVGltZSAtIChzdGFydEF0ICYmIFwidGltZVwiIGluIHN0YXJ0QXQgPyBzdGFydEF0LnRpbWUgOiB0bC5fdGltZSkpIC8gdGwudGltZVNjYWxlKCkpIHx8IF90aW55TnVtLFxuICAgICAgICAgICAgICAgICAgb25TdGFydDogZnVuY3Rpb24gb25TdGFydCgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGwucGF1c2UoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGR1cmF0aW9uID0gdmFycy5kdXJhdGlvbiB8fCBNYXRoLmFicygoZW5kVGltZSAtIHRsLl90aW1lKSAvIHRsLnRpbWVTY2FsZSgpKTtcbiAgICAgICAgICAgICAgICAgICAgdHdlZW4uX2R1ciAhPT0gZHVyYXRpb24gJiYgX3NldER1cmF0aW9uKHR3ZWVuLCBkdXJhdGlvbiwgMCwgMSkucmVuZGVyKHR3ZWVuLl90aW1lLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgX29uU3RhcnQgJiYgX29uU3RhcnQuYXBwbHkodHdlZW4sIG9uU3RhcnRQYXJhbXMgfHwgW10pOyAvL2luIGNhc2UgdGhlIHVzZXIgaGFkIGFuIG9uU3RhcnQgaW4gdGhlIHZhcnMgLSB3ZSBkb24ndCB3YW50IHRvIG92ZXJ3cml0ZSBpdC5cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCB2YXJzKSk7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIGltbWVkaWF0ZVJlbmRlciA/IHR3ZWVuLnJlbmRlcigwKSA6IHR3ZWVuO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi50d2VlbkZyb21UbyA9IGZ1bmN0aW9uIHR3ZWVuRnJvbVRvKGZyb21Qb3NpdGlvbiwgdG9Qb3NpdGlvbiwgdmFycykge1xuICAgICAgICAgICAgICByZXR1cm4gdGhpcy50d2VlblRvKHRvUG9zaXRpb24sIF9zZXREZWZhdWx0cyh7XG4gICAgICAgICAgICAgICAgc3RhcnRBdDoge1xuICAgICAgICAgICAgICAgICAgdGltZTogX3BhcnNlUG9zaXRpb24odGhpcywgZnJvbVBvc2l0aW9uKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSwgdmFycykpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5yZWNlbnQgPSBmdW5jdGlvbiByZWNlbnQoKSB7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZWNlbnQ7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLm5leHRMYWJlbCA9IGZ1bmN0aW9uIG5leHRMYWJlbChhZnRlclRpbWUpIHtcbiAgICAgICAgICAgICAgaWYgKGFmdGVyVGltZSA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgYWZ0ZXJUaW1lID0gdGhpcy5fdGltZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJldHVybiBfZ2V0TGFiZWxJbkRpcmVjdGlvbih0aGlzLCBfcGFyc2VQb3NpdGlvbih0aGlzLCBhZnRlclRpbWUpKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90bzIucHJldmlvdXNMYWJlbCA9IGZ1bmN0aW9uIHByZXZpb3VzTGFiZWwoYmVmb3JlVGltZSkge1xuICAgICAgICAgICAgICBpZiAoYmVmb3JlVGltZSA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgYmVmb3JlVGltZSA9IHRoaXMuX3RpbWU7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gX2dldExhYmVsSW5EaXJlY3Rpb24odGhpcywgX3BhcnNlUG9zaXRpb24odGhpcywgYmVmb3JlVGltZSksIDEpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5jdXJyZW50TGFiZWwgPSBmdW5jdGlvbiBjdXJyZW50TGFiZWwodmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLnNlZWsodmFsdWUsIHRydWUpIDogdGhpcy5wcmV2aW91c0xhYmVsKHRoaXMuX3RpbWUgKyBfdGlueU51bSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLnNoaWZ0Q2hpbGRyZW4gPSBmdW5jdGlvbiBzaGlmdENoaWxkcmVuKGFtb3VudCwgYWRqdXN0TGFiZWxzLCBpZ25vcmVCZWZvcmVUaW1lKSB7XG4gICAgICAgICAgICAgIGlmIChpZ25vcmVCZWZvcmVUaW1lID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgICBpZ25vcmVCZWZvcmVUaW1lID0gMDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHZhciBjaGlsZCA9IHRoaXMuX2ZpcnN0LFxuICAgICAgICAgICAgICAgIGxhYmVscyA9IHRoaXMubGFiZWxzLFxuICAgICAgICAgICAgICAgIHA7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkLl9zdGFydCA+PSBpZ25vcmVCZWZvcmVUaW1lKSB7XG4gICAgICAgICAgICAgICAgICBjaGlsZC5fc3RhcnQgKz0gYW1vdW50O1xuICAgICAgICAgICAgICAgICAgY2hpbGQuX2VuZCArPSBhbW91bnQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5fbmV4dDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChhZGp1c3RMYWJlbHMpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHAgaW4gbGFiZWxzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAobGFiZWxzW3BdID49IGlnbm9yZUJlZm9yZVRpbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxzW3BdICs9IGFtb3VudDtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gX3VuY2FjaGUodGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8yLmludmFsaWRhdGUgPSBmdW5jdGlvbiBpbnZhbGlkYXRlKCkge1xuICAgICAgICAgICAgICB2YXIgY2hpbGQgPSB0aGlzLl9maXJzdDtcbiAgICAgICAgICAgICAgdGhpcy5fbG9jayA9IDA7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQuaW52YWxpZGF0ZSgpO1xuICAgICAgICAgICAgICAgIGNoaWxkID0gY2hpbGQuX25leHQ7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gX0FuaW1hdGlvbi5wcm90b3R5cGUuaW52YWxpZGF0ZS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi5jbGVhciA9IGZ1bmN0aW9uIGNsZWFyKGluY2x1ZGVMYWJlbHMpIHtcbiAgICAgICAgICAgICAgaWYgKGluY2x1ZGVMYWJlbHMgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICAgIGluY2x1ZGVMYWJlbHMgPSB0cnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdmFyIGNoaWxkID0gdGhpcy5fZmlyc3QsXG4gICAgICAgICAgICAgICAgbmV4dDtcblxuICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBuZXh0ID0gY2hpbGQuX25leHQ7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmUoY2hpbGQpO1xuICAgICAgICAgICAgICAgIGNoaWxkID0gbmV4dDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHRoaXMuX2RwICYmICh0aGlzLl90aW1lID0gdGhpcy5fdFRpbWUgPSB0aGlzLl9wVGltZSA9IDApO1xuICAgICAgICAgICAgICBpbmNsdWRlTGFiZWxzICYmICh0aGlzLmxhYmVscyA9IHt9KTtcbiAgICAgICAgICAgICAgcmV0dXJuIF91bmNhY2hlKHRoaXMpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMi50b3RhbER1cmF0aW9uID0gZnVuY3Rpb24gdG90YWxEdXJhdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgICB2YXIgbWF4ID0gMCxcbiAgICAgICAgICAgICAgICBzZWxmID0gdGhpcyxcbiAgICAgICAgICAgICAgICBjaGlsZCA9IHNlbGYuX2xhc3QsXG4gICAgICAgICAgICAgICAgcHJldlN0YXJ0ID0gX2JpZ051bSxcbiAgICAgICAgICAgICAgICBwcmV2LFxuICAgICAgICAgICAgICAgIHN0YXJ0LFxuICAgICAgICAgICAgICAgIHBhcmVudDtcblxuICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLnRpbWVTY2FsZSgoc2VsZi5fcmVwZWF0IDwgMCA/IHNlbGYuZHVyYXRpb24oKSA6IHNlbGYudG90YWxEdXJhdGlvbigpKSAvIChzZWxmLnJldmVyc2VkKCkgPyAtdmFsdWUgOiB2YWx1ZSkpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKHNlbGYuX2RpcnR5KSB7XG4gICAgICAgICAgICAgICAgcGFyZW50ID0gc2VsZi5wYXJlbnQ7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgIHByZXYgPSBjaGlsZC5fcHJldjsgLy9yZWNvcmQgaXQgaGVyZSBpbiBjYXNlIHRoZSB0d2VlbiBjaGFuZ2VzIHBvc2l0aW9uIGluIHRoZSBzZXF1ZW5jZS4uLlxuXG4gICAgICAgICAgICAgICAgICBjaGlsZC5fZGlydHkgJiYgY2hpbGQudG90YWxEdXJhdGlvbigpOyAvL2NvdWxkIGNoYW5nZSB0aGUgdHdlZW4uX3N0YXJ0VGltZSwgc28gbWFrZSBzdXJlIHRoZSBhbmltYXRpb24ncyBjYWNoZSBpcyBjbGVhbiBiZWZvcmUgYW5hbHl6aW5nIGl0LlxuXG4gICAgICAgICAgICAgICAgICBzdGFydCA9IGNoaWxkLl9zdGFydDtcblxuICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0ID4gcHJldlN0YXJ0ICYmIHNlbGYuX3NvcnQgJiYgY2hpbGQuX3RzICYmICFzZWxmLl9sb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vaW4gY2FzZSBvbmUgb2YgdGhlIHR3ZWVucyBzaGlmdGVkIG91dCBvZiBvcmRlciwgaXQgbmVlZHMgdG8gYmUgcmUtaW5zZXJ0ZWQgaW50byB0aGUgY29ycmVjdCBwb3NpdGlvbiBpbiB0aGUgc2VxdWVuY2VcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fbG9jayA9IDE7IC8vcHJldmVudCBlbmRsZXNzIHJlY3Vyc2l2ZSBjYWxscyAtIHRoZXJlIGFyZSBtZXRob2RzIHRoYXQgZ2V0IHRyaWdnZXJlZCB0aGF0IGNoZWNrIGR1cmF0aW9uL3RvdGFsRHVyYXRpb24gd2hlbiB3ZSBhZGQoKS5cblxuICAgICAgICAgICAgICAgICAgICBfYWRkVG9UaW1lbGluZShzZWxmLCBjaGlsZCwgc3RhcnQgLSBjaGlsZC5fZGVsYXksIDEpLl9sb2NrID0gMDtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXZTdGFydCA9IHN0YXJ0O1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgPCAwICYmIGNoaWxkLl90cykge1xuICAgICAgICAgICAgICAgICAgICAvL2NoaWxkcmVuIGFyZW4ndCBhbGxvd2VkIHRvIGhhdmUgbmVnYXRpdmUgc3RhcnRUaW1lcyB1bmxlc3Mgc21vb3RoQ2hpbGRUaW1pbmcgaXMgdHJ1ZSwgc28gYWRqdXN0IGhlcmUgaWYgb25lIGlzIGZvdW5kLlxuICAgICAgICAgICAgICAgICAgICBtYXggLT0gc3RhcnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJlbnQgJiYgIXNlbGYuX2RwIHx8IHBhcmVudCAmJiBwYXJlbnQuc21vb3RoQ2hpbGRUaW1pbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9zdGFydCArPSBzdGFydCAvIHNlbGYuX3RzO1xuICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX3RpbWUgLT0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgICAgc2VsZi5fdFRpbWUgLT0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBzZWxmLnNoaWZ0Q2hpbGRyZW4oLXN0YXJ0LCBmYWxzZSwgLTFlOTk5KTtcbiAgICAgICAgICAgICAgICAgICAgcHJldlN0YXJ0ID0gMDtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgY2hpbGQuX2VuZCA+IG1heCAmJiBjaGlsZC5fdHMgJiYgKG1heCA9IGNoaWxkLl9lbmQpO1xuICAgICAgICAgICAgICAgICAgY2hpbGQgPSBwcmV2O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIF9zZXREdXJhdGlvbihzZWxmLCBzZWxmID09PSBfZ2xvYmFsVGltZWxpbmUgJiYgc2VsZi5fdGltZSA+IG1heCA/IHNlbGYuX3RpbWUgOiBtYXgsIDEsIDEpO1xuXG4gICAgICAgICAgICAgICAgc2VsZi5fZGlydHkgPSAwO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHNlbGYuX3REdXI7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBUaW1lbGluZS51cGRhdGVSb290ID0gZnVuY3Rpb24gdXBkYXRlUm9vdCh0aW1lKSB7XG4gICAgICAgICAgICAgIGlmIChfZ2xvYmFsVGltZWxpbmUuX3RzKSB7XG4gICAgICAgICAgICAgICAgX2xhenlTYWZlUmVuZGVyKF9nbG9iYWxUaW1lbGluZSwgX3BhcmVudFRvQ2hpbGRUb3RhbFRpbWUodGltZSwgX2dsb2JhbFRpbWVsaW5lKSk7XG5cbiAgICAgICAgICAgICAgICBfbGFzdFJlbmRlcmVkRnJhbWUgPSBfdGlja2VyLmZyYW1lO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKF90aWNrZXIuZnJhbWUgPj0gX25leHRHQ0ZyYW1lKSB7XG4gICAgICAgICAgICAgICAgX25leHRHQ0ZyYW1lICs9IF9jb25maWcuYXV0b1NsZWVwIHx8IDEyMDtcbiAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBfZ2xvYmFsVGltZWxpbmUuX2ZpcnN0O1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGQgfHwgIWNoaWxkLl90cykgaWYgKF9jb25maWcuYXV0b1NsZWVwICYmIF90aWNrZXIuX2xpc3RlbmVycy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQgJiYgIWNoaWxkLl90cykge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZCA9IGNoaWxkLl9uZXh0O1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBjaGlsZCB8fCBfdGlja2VyLnNsZWVwKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gVGltZWxpbmU7XG4gICAgICAgICAgfShBbmltYXRpb24pO1xuXG4gICAgICAgIGV4cG9ydHMuVGltZWxpbmVMaXRlID0gZXhwb3J0cy5UaW1lbGluZU1heCA9IGV4cG9ydHMuVGltZWxpbmUgPSBUaW1lbGluZTtcblxuICAgICAgICBfc2V0RGVmYXVsdHMoVGltZWxpbmUucHJvdG90eXBlLCB7XG4gICAgICAgICAgX2xvY2s6IDAsXG4gICAgICAgICAgX2hhc1BhdXNlOiAwLFxuICAgICAgICAgIF9mb3JjaW5nOiAwXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBfYWRkQ29tcGxleFN0cmluZ1Byb3BUd2VlbiA9IGZ1bmN0aW9uIF9hZGRDb21wbGV4U3RyaW5nUHJvcFR3ZWVuKHRhcmdldCwgcHJvcCwgc3RhcnQsIGVuZCwgc2V0dGVyLCBzdHJpbmdGaWx0ZXIsIGZ1bmNQYXJhbSkge1xuICAgICAgICAgIC8vbm90ZTogd2UgY2FsbCBfYWRkQ29tcGxleFN0cmluZ1Byb3BUd2Vlbi5jYWxsKHR3ZWVuSW5zdGFuY2UuLi4pIHRvIGVuc3VyZSB0aGF0IGl0J3Mgc2NvcGVkIHByb3Blcmx5LiBXZSBtYXkgY2FsbCBpdCBmcm9tIHdpdGhpbiBhIHBsdWdpbiB0b28sIHRodXMgXCJ0aGlzXCIgd291bGQgcmVmZXIgdG8gdGhlIHBsdWdpbi5cbiAgICAgICAgICB2YXIgcHQgPSBuZXcgUHJvcFR3ZWVuKHRoaXMuX3B0LCB0YXJnZXQsIHByb3AsIDAsIDEsIF9yZW5kZXJDb21wbGV4U3RyaW5nLCBudWxsLCBzZXR0ZXIpLFxuICAgICAgICAgICAgaW5kZXggPSAwLFxuICAgICAgICAgICAgbWF0Y2hJbmRleCA9IDAsXG4gICAgICAgICAgICByZXN1bHQsXG4gICAgICAgICAgICBzdGFydE51bXMsXG4gICAgICAgICAgICBjb2xvcixcbiAgICAgICAgICAgIGVuZE51bSxcbiAgICAgICAgICAgIGNodW5rLFxuICAgICAgICAgICAgc3RhcnROdW0sXG4gICAgICAgICAgICBoYXNSYW5kb20sXG4gICAgICAgICAgICBhO1xuICAgICAgICAgIHB0LmIgPSBzdGFydDtcbiAgICAgICAgICBwdC5lID0gZW5kO1xuICAgICAgICAgIHN0YXJ0ICs9IFwiXCI7IC8vZW5zdXJlIHZhbHVlcyBhcmUgc3RyaW5nc1xuXG4gICAgICAgICAgZW5kICs9IFwiXCI7XG5cbiAgICAgICAgICBpZiAoaGFzUmFuZG9tID0gfmVuZC5pbmRleE9mKFwicmFuZG9tKFwiKSkge1xuICAgICAgICAgICAgZW5kID0gX3JlcGxhY2VSYW5kb20oZW5kKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc3RyaW5nRmlsdGVyKSB7XG4gICAgICAgICAgICBhID0gW3N0YXJ0LCBlbmRdO1xuICAgICAgICAgICAgc3RyaW5nRmlsdGVyKGEsIHRhcmdldCwgcHJvcCk7IC8vcGFzcyBhbiBhcnJheSB3aXRoIHRoZSBzdGFydGluZyBhbmQgZW5kaW5nIHZhbHVlcyBhbmQgbGV0IHRoZSBmaWx0ZXIgZG8gd2hhdGV2ZXIgaXQgbmVlZHMgdG8gdGhlIHZhbHVlcy5cblxuICAgICAgICAgICAgc3RhcnQgPSBhWzBdO1xuICAgICAgICAgICAgZW5kID0gYVsxXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzdGFydE51bXMgPSBzdGFydC5tYXRjaChfY29tcGxleFN0cmluZ051bUV4cCkgfHwgW107XG5cbiAgICAgICAgICB3aGlsZSAocmVzdWx0ID0gX2NvbXBsZXhTdHJpbmdOdW1FeHAuZXhlYyhlbmQpKSB7XG4gICAgICAgICAgICBlbmROdW0gPSByZXN1bHRbMF07XG4gICAgICAgICAgICBjaHVuayA9IGVuZC5zdWJzdHJpbmcoaW5kZXgsIHJlc3VsdC5pbmRleCk7XG5cbiAgICAgICAgICAgIGlmIChjb2xvcikge1xuICAgICAgICAgICAgICBjb2xvciA9IChjb2xvciArIDEpICUgNTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2h1bmsuc3Vic3RyKC01KSA9PT0gXCJyZ2JhKFwiKSB7XG4gICAgICAgICAgICAgIGNvbG9yID0gMTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGVuZE51bSAhPT0gc3RhcnROdW1zW21hdGNoSW5kZXgrK10pIHtcbiAgICAgICAgICAgICAgc3RhcnROdW0gPSBwYXJzZUZsb2F0KHN0YXJ0TnVtc1ttYXRjaEluZGV4IC0gMV0pIHx8IDA7IC8vdGhlc2UgbmVzdGVkIFByb3BUd2VlbnMgYXJlIGhhbmRsZWQgaW4gYSBzcGVjaWFsIHdheSAtIHdlJ2xsIG5ldmVyIGFjdHVhbGx5IGNhbGwgYSByZW5kZXIgb3Igc2V0dGVyIG1ldGhvZCBvbiB0aGVtLiBXZSdsbCBqdXN0IGxvb3AgdGhyb3VnaCB0aGVtIGluIHRoZSBwYXJlbnQgY29tcGxleCBzdHJpbmcgUHJvcFR3ZWVuJ3MgcmVuZGVyIG1ldGhvZC5cblxuICAgICAgICAgICAgICBwdC5fcHQgPSB7XG4gICAgICAgICAgICAgICAgX25leHQ6IHB0Ll9wdCxcbiAgICAgICAgICAgICAgICBwOiBjaHVuayB8fCBtYXRjaEluZGV4ID09PSAxID8gY2h1bmsgOiBcIixcIixcbiAgICAgICAgICAgICAgICAvL25vdGU6IFNWRyBzcGVjIGFsbG93cyBvbWlzc2lvbiBvZiBjb21tYS9zcGFjZSB3aGVuIGEgbmVnYXRpdmUgc2lnbiBpcyB3ZWRnZWQgYmV0d2VlbiB0d28gbnVtYmVycywgbGlrZSAyLjUtNS4zIGluc3RlYWQgb2YgMi41LC01LjMgYnV0IHdoZW4gdHdlZW5pbmcsIHRoZSBuZWdhdGl2ZSB2YWx1ZSBtYXkgc3dpdGNoIHRvIHBvc2l0aXZlLCBzbyB3ZSBpbnNlcnQgdGhlIGNvbW1hIGp1c3QgaW4gY2FzZS5cbiAgICAgICAgICAgICAgICBzOiBzdGFydE51bSxcbiAgICAgICAgICAgICAgICBjOiBlbmROdW0uY2hhckF0KDEpID09PSBcIj1cIiA/IHBhcnNlRmxvYXQoZW5kTnVtLnN1YnN0cigyKSkgKiAoZW5kTnVtLmNoYXJBdCgwKSA9PT0gXCItXCIgPyAtMSA6IDEpIDogcGFyc2VGbG9hdChlbmROdW0pIC0gc3RhcnROdW0sXG4gICAgICAgICAgICAgICAgbTogY29sb3IgJiYgY29sb3IgPCA0ID8gTWF0aC5yb3VuZCA6IDBcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgaW5kZXggPSBfY29tcGxleFN0cmluZ051bUV4cC5sYXN0SW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcHQuYyA9IGluZGV4IDwgZW5kLmxlbmd0aCA/IGVuZC5zdWJzdHJpbmcoaW5kZXgsIGVuZC5sZW5ndGgpIDogXCJcIjsgLy93ZSB1c2UgdGhlIFwiY1wiIG9mIHRoZSBQcm9wVHdlZW4gdG8gc3RvcmUgdGhlIGZpbmFsIHBhcnQgb2YgdGhlIHN0cmluZyAoYWZ0ZXIgdGhlIGxhc3QgbnVtYmVyKVxuXG4gICAgICAgICAgcHQuZnAgPSBmdW5jUGFyYW07XG5cbiAgICAgICAgICBpZiAoX3JlbEV4cC50ZXN0KGVuZCkgfHwgaGFzUmFuZG9tKSB7XG4gICAgICAgICAgICBwdC5lID0gMDsgLy9pZiB0aGUgZW5kIHN0cmluZyBjb250YWlucyByZWxhdGl2ZSB2YWx1ZXMgb3IgZHluYW1pYyByYW5kb20oLi4uKSB2YWx1ZXMsIGRlbGV0ZSB0aGUgZW5kIGl0IHNvIHRoYXQgb24gdGhlIGZpbmFsIHJlbmRlciB3ZSBkb24ndCBhY3R1YWxseSBzZXQgaXQgdG8gdGhlIHN0cmluZyB3aXRoICs9IG9yIC09IGNoYXJhY3RlcnMgKGZvcmNlcyBpdCB0byB1c2UgdGhlIGNhbGN1bGF0ZWQgdmFsdWUpLlxuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuX3B0ID0gcHQ7IC8vc3RhcnQgdGhlIGxpbmtlZCBsaXN0IHdpdGggdGhpcyBuZXcgUHJvcFR3ZWVuLiBSZW1lbWJlciwgd2UgY2FsbCBfYWRkQ29tcGxleFN0cmluZ1Byb3BUd2Vlbi5jYWxsKHR3ZWVuSW5zdGFuY2UuLi4pIHRvIGVuc3VyZSB0aGF0IGl0J3Mgc2NvcGVkIHByb3Blcmx5LiBXZSBtYXkgY2FsbCBpdCBmcm9tIHdpdGhpbiBhIHBsdWdpbiB0b28sIHRodXMgXCJ0aGlzXCIgd291bGQgcmVmZXIgdG8gdGhlIHBsdWdpbi5cblxuICAgICAgICAgIHJldHVybiBwdDtcbiAgICAgICAgfSxcbiAgICAgICAgICBfYWRkUHJvcFR3ZWVuID0gZnVuY3Rpb24gX2FkZFByb3BUd2Vlbih0YXJnZXQsIHByb3AsIHN0YXJ0LCBlbmQsIGluZGV4LCB0YXJnZXRzLCBtb2RpZmllciwgc3RyaW5nRmlsdGVyLCBmdW5jUGFyYW0pIHtcbiAgICAgICAgICAgIF9pc0Z1bmN0aW9uKGVuZCkgJiYgKGVuZCA9IGVuZChpbmRleCB8fCAwLCB0YXJnZXQsIHRhcmdldHMpKTtcbiAgICAgICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSB0YXJnZXRbcHJvcF0sXG4gICAgICAgICAgICAgIHBhcnNlZFN0YXJ0ID0gc3RhcnQgIT09IFwiZ2V0XCIgPyBzdGFydCA6ICFfaXNGdW5jdGlvbihjdXJyZW50VmFsdWUpID8gY3VycmVudFZhbHVlIDogZnVuY1BhcmFtID8gdGFyZ2V0W3Byb3AuaW5kZXhPZihcInNldFwiKSB8fCAhX2lzRnVuY3Rpb24odGFyZ2V0W1wiZ2V0XCIgKyBwcm9wLnN1YnN0cigzKV0pID8gcHJvcCA6IFwiZ2V0XCIgKyBwcm9wLnN1YnN0cigzKV0oZnVuY1BhcmFtKSA6IHRhcmdldFtwcm9wXSgpLFxuICAgICAgICAgICAgICBzZXR0ZXIgPSAhX2lzRnVuY3Rpb24oY3VycmVudFZhbHVlKSA/IF9zZXR0ZXJQbGFpbiA6IGZ1bmNQYXJhbSA/IF9zZXR0ZXJGdW5jV2l0aFBhcmFtIDogX3NldHRlckZ1bmMsXG4gICAgICAgICAgICAgIHB0O1xuXG4gICAgICAgICAgICBpZiAoX2lzU3RyaW5nKGVuZCkpIHtcbiAgICAgICAgICAgICAgaWYgKH5lbmQuaW5kZXhPZihcInJhbmRvbShcIikpIHtcbiAgICAgICAgICAgICAgICBlbmQgPSBfcmVwbGFjZVJhbmRvbShlbmQpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKGVuZC5jaGFyQXQoMSkgPT09IFwiPVwiKSB7XG4gICAgICAgICAgICAgICAgZW5kID0gcGFyc2VGbG9hdChwYXJzZWRTdGFydCkgKyBwYXJzZUZsb2F0KGVuZC5zdWJzdHIoMikpICogKGVuZC5jaGFyQXQoMCkgPT09IFwiLVwiID8gLTEgOiAxKSArIChnZXRVbml0KHBhcnNlZFN0YXJ0KSB8fCAwKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocGFyc2VkU3RhcnQgIT09IGVuZCkge1xuICAgICAgICAgICAgICBpZiAoIWlzTmFOKHBhcnNlZFN0YXJ0ICogZW5kKSkge1xuICAgICAgICAgICAgICAgIHB0ID0gbmV3IFByb3BUd2Vlbih0aGlzLl9wdCwgdGFyZ2V0LCBwcm9wLCArcGFyc2VkU3RhcnQgfHwgMCwgZW5kIC0gKHBhcnNlZFN0YXJ0IHx8IDApLCB0eXBlb2YgY3VycmVudFZhbHVlID09PSBcImJvb2xlYW5cIiA/IF9yZW5kZXJCb29sZWFuIDogX3JlbmRlclBsYWluLCAwLCBzZXR0ZXIpO1xuICAgICAgICAgICAgICAgIGZ1bmNQYXJhbSAmJiAocHQuZnAgPSBmdW5jUGFyYW0pO1xuICAgICAgICAgICAgICAgIG1vZGlmaWVyICYmIHB0Lm1vZGlmaWVyKG1vZGlmaWVyLCB0aGlzLCB0YXJnZXQpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9wdCA9IHB0O1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgIWN1cnJlbnRWYWx1ZSAmJiAhKHByb3AgaW4gdGFyZ2V0KSAmJiBfbWlzc2luZ1BsdWdpbihwcm9wLCBlbmQpO1xuICAgICAgICAgICAgICByZXR1cm4gX2FkZENvbXBsZXhTdHJpbmdQcm9wVHdlZW4uY2FsbCh0aGlzLCB0YXJnZXQsIHByb3AsIHBhcnNlZFN0YXJ0LCBlbmQsIHNldHRlciwgc3RyaW5nRmlsdGVyIHx8IF9jb25maWcuc3RyaW5nRmlsdGVyLCBmdW5jUGFyYW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgLy9jcmVhdGVzIGEgY29weSBvZiB0aGUgdmFycyBvYmplY3QgYW5kIHByb2Nlc3NlcyBhbnkgZnVuY3Rpb24tYmFzZWQgdmFsdWVzIChwdXR0aW5nIHRoZSByZXN1bHRpbmcgdmFsdWVzIGRpcmVjdGx5IGludG8gdGhlIGNvcHkpIGFzIHdlbGwgYXMgc3RyaW5ncyB3aXRoIFwicmFuZG9tKClcIiBpbiB0aGVtLiBJdCBkb2VzIE5PVCBwcm9jZXNzIHJlbGF0aXZlIHZhbHVlcy5cbiAgICAgICAgICBfcHJvY2Vzc1ZhcnMgPSBmdW5jdGlvbiBfcHJvY2Vzc1ZhcnModmFycywgaW5kZXgsIHRhcmdldCwgdGFyZ2V0cywgdHdlZW4pIHtcbiAgICAgICAgICAgIF9pc0Z1bmN0aW9uKHZhcnMpICYmICh2YXJzID0gX3BhcnNlRnVuY09yU3RyaW5nKHZhcnMsIHR3ZWVuLCBpbmRleCwgdGFyZ2V0LCB0YXJnZXRzKSk7XG5cbiAgICAgICAgICAgIGlmICghX2lzT2JqZWN0KHZhcnMpIHx8IHZhcnMuc3R5bGUgJiYgdmFycy5ub2RlVHlwZSB8fCBfaXNBcnJheSh2YXJzKSB8fCBfaXNUeXBlZEFycmF5KHZhcnMpKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfaXNTdHJpbmcodmFycykgPyBfcGFyc2VGdW5jT3JTdHJpbmcodmFycywgdHdlZW4sIGluZGV4LCB0YXJnZXQsIHRhcmdldHMpIDogdmFycztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGNvcHkgPSB7fSxcbiAgICAgICAgICAgICAgcDtcblxuICAgICAgICAgICAgZm9yIChwIGluIHZhcnMpIHtcbiAgICAgICAgICAgICAgY29weVtwXSA9IF9wYXJzZUZ1bmNPclN0cmluZyh2YXJzW3BdLCB0d2VlbiwgaW5kZXgsIHRhcmdldCwgdGFyZ2V0cyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjb3B5O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2NoZWNrUGx1Z2luID0gZnVuY3Rpb24gX2NoZWNrUGx1Z2luKHByb3BlcnR5LCB2YXJzLCB0d2VlbiwgaW5kZXgsIHRhcmdldCwgdGFyZ2V0cykge1xuICAgICAgICAgICAgdmFyIHBsdWdpbiwgcHQsIHB0TG9va3VwLCBpO1xuXG4gICAgICAgICAgICBpZiAoX3BsdWdpbnNbcHJvcGVydHldICYmIChwbHVnaW4gPSBuZXcgX3BsdWdpbnNbcHJvcGVydHldKCkpLmluaXQodGFyZ2V0LCBwbHVnaW4ucmF3VmFycyA/IHZhcnNbcHJvcGVydHldIDogX3Byb2Nlc3NWYXJzKHZhcnNbcHJvcGVydHldLCBpbmRleCwgdGFyZ2V0LCB0YXJnZXRzLCB0d2VlbiksIHR3ZWVuLCBpbmRleCwgdGFyZ2V0cykgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgIHR3ZWVuLl9wdCA9IHB0ID0gbmV3IFByb3BUd2Vlbih0d2Vlbi5fcHQsIHRhcmdldCwgcHJvcGVydHksIDAsIDEsIHBsdWdpbi5yZW5kZXIsIHBsdWdpbiwgMCwgcGx1Z2luLnByaW9yaXR5KTtcblxuICAgICAgICAgICAgICBpZiAodHdlZW4gIT09IF9xdWlja1R3ZWVuKSB7XG4gICAgICAgICAgICAgICAgcHRMb29rdXAgPSB0d2Vlbi5fcHRMb29rdXBbdHdlZW4uX3RhcmdldHMuaW5kZXhPZih0YXJnZXQpXTsgLy9ub3RlOiB3ZSBjYW4ndCB1c2UgdHdlZW4uX3B0TG9va3VwW2luZGV4XSBiZWNhdXNlIGZvciBzdGFnZ2VyZWQgdHdlZW5zLCB0aGUgaW5kZXggZnJvbSB0aGUgZnVsbFRhcmdldHMgYXJyYXkgd29uJ3QgbWF0Y2ggd2hhdCBpdCBpcyBpbiBlYWNoIGluZGl2aWR1YWwgdHdlZW4gdGhhdCBzcGF3bnMgZnJvbSB0aGUgc3RhZ2dlci5cblxuICAgICAgICAgICAgICAgIGkgPSBwbHVnaW4uX3Byb3BzLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgICAgICAgICAgIHB0TG9va3VwW3BsdWdpbi5fcHJvcHNbaV1dID0gcHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBwbHVnaW47XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfb3ZlcndyaXRpbmdUd2VlbixcbiAgICAgICAgICAvL3N0b3JlIGEgcmVmZXJlbmNlIHRlbXBvcmFyaWx5IHNvIHdlIGNhbiBhdm9pZCBvdmVyd3JpdGluZyBpdHNlbGYuXG4gICAgICAgICAgX2luaXRUd2VlbiA9IGZ1bmN0aW9uIF9pbml0VHdlZW4odHdlZW4sIHRpbWUpIHtcbiAgICAgICAgICAgIHZhciB2YXJzID0gdHdlZW4udmFycyxcbiAgICAgICAgICAgICAgZWFzZSA9IHZhcnMuZWFzZSxcbiAgICAgICAgICAgICAgc3RhcnRBdCA9IHZhcnMuc3RhcnRBdCxcbiAgICAgICAgICAgICAgaW1tZWRpYXRlUmVuZGVyID0gdmFycy5pbW1lZGlhdGVSZW5kZXIsXG4gICAgICAgICAgICAgIGxhenkgPSB2YXJzLmxhenksXG4gICAgICAgICAgICAgIG9uVXBkYXRlID0gdmFycy5vblVwZGF0ZSxcbiAgICAgICAgICAgICAgb25VcGRhdGVQYXJhbXMgPSB2YXJzLm9uVXBkYXRlUGFyYW1zLFxuICAgICAgICAgICAgICBjYWxsYmFja1Njb3BlID0gdmFycy5jYWxsYmFja1Njb3BlLFxuICAgICAgICAgICAgICBydW5CYWNrd2FyZHMgPSB2YXJzLnJ1bkJhY2t3YXJkcyxcbiAgICAgICAgICAgICAgeW95b0Vhc2UgPSB2YXJzLnlveW9FYXNlLFxuICAgICAgICAgICAgICBrZXlmcmFtZXMgPSB2YXJzLmtleWZyYW1lcyxcbiAgICAgICAgICAgICAgYXV0b1JldmVydCA9IHZhcnMuYXV0b1JldmVydCxcbiAgICAgICAgICAgICAgZHVyID0gdHdlZW4uX2R1cixcbiAgICAgICAgICAgICAgcHJldlN0YXJ0QXQgPSB0d2Vlbi5fc3RhcnRBdCxcbiAgICAgICAgICAgICAgdGFyZ2V0cyA9IHR3ZWVuLl90YXJnZXRzLFxuICAgICAgICAgICAgICBwYXJlbnQgPSB0d2Vlbi5wYXJlbnQsXG4gICAgICAgICAgICAgIGZ1bGxUYXJnZXRzID0gcGFyZW50ICYmIHBhcmVudC5kYXRhID09PSBcIm5lc3RlZFwiID8gcGFyZW50LnBhcmVudC5fdGFyZ2V0cyA6IHRhcmdldHMsXG4gICAgICAgICAgICAgIGF1dG9PdmVyd3JpdGUgPSB0d2Vlbi5fb3ZlcndyaXRlID09PSBcImF1dG9cIiAmJiAhX3N1cHByZXNzT3ZlcndyaXRlcyxcbiAgICAgICAgICAgICAgdGwgPSB0d2Vlbi50aW1lbGluZSxcbiAgICAgICAgICAgICAgY2xlYW5WYXJzLFxuICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICBwLFxuICAgICAgICAgICAgICBwdCxcbiAgICAgICAgICAgICAgdGFyZ2V0LFxuICAgICAgICAgICAgICBoYXNQcmlvcml0eSxcbiAgICAgICAgICAgICAgZ3NEYXRhLFxuICAgICAgICAgICAgICBoYXJuZXNzLFxuICAgICAgICAgICAgICBwbHVnaW4sXG4gICAgICAgICAgICAgIHB0TG9va3VwLFxuICAgICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICAgICAgaGFybmVzc1ZhcnMsXG4gICAgICAgICAgICAgIG92ZXJ3cml0dGVuO1xuICAgICAgICAgICAgdGwgJiYgKCFrZXlmcmFtZXMgfHwgIWVhc2UpICYmIChlYXNlID0gXCJub25lXCIpO1xuICAgICAgICAgICAgdHdlZW4uX2Vhc2UgPSBfcGFyc2VFYXNlKGVhc2UsIF9kZWZhdWx0cy5lYXNlKTtcbiAgICAgICAgICAgIHR3ZWVuLl95RWFzZSA9IHlveW9FYXNlID8gX2ludmVydEVhc2UoX3BhcnNlRWFzZSh5b3lvRWFzZSA9PT0gdHJ1ZSA/IGVhc2UgOiB5b3lvRWFzZSwgX2RlZmF1bHRzLmVhc2UpKSA6IDA7XG5cbiAgICAgICAgICAgIGlmICh5b3lvRWFzZSAmJiB0d2Vlbi5feW95byAmJiAhdHdlZW4uX3JlcGVhdCkge1xuICAgICAgICAgICAgICAvL3RoZXJlIG11c3QgaGF2ZSBiZWVuIGEgcGFyZW50IHRpbWVsaW5lIHdpdGggeW95bzp0cnVlIHRoYXQgaXMgY3VycmVudGx5IGluIGl0cyB5b3lvIHBoYXNlLCBzbyBmbGlwIHRoZSBlYXNlcy5cbiAgICAgICAgICAgICAgeW95b0Vhc2UgPSB0d2Vlbi5feUVhc2U7XG4gICAgICAgICAgICAgIHR3ZWVuLl95RWFzZSA9IHR3ZWVuLl9lYXNlO1xuICAgICAgICAgICAgICB0d2Vlbi5fZWFzZSA9IHlveW9FYXNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIXRsKSB7XG4gICAgICAgICAgICAgIC8vaWYgdGhlcmUncyBhbiBpbnRlcm5hbCB0aW1lbGluZSwgc2tpcCBhbGwgdGhlIHBhcnNpbmcgYmVjYXVzZSB3ZSBwYXNzZWQgdGhhdCB0YXNrIGRvd24gdGhlIGNoYWluLlxuICAgICAgICAgICAgICBoYXJuZXNzID0gdGFyZ2V0c1swXSA/IF9nZXRDYWNoZSh0YXJnZXRzWzBdKS5oYXJuZXNzIDogMDtcbiAgICAgICAgICAgICAgaGFybmVzc1ZhcnMgPSBoYXJuZXNzICYmIHZhcnNbaGFybmVzcy5wcm9wXTsgLy9zb21lb25lIG1heSBuZWVkIHRvIHNwZWNpZnkgQ1NTLXNwZWNpZmljIHZhbHVlcyBBTkQgbm9uLUNTUyB2YWx1ZXMsIGxpa2UgaWYgdGhlIGVsZW1lbnQgaGFzIGFuIFwieFwiIHByb3BlcnR5IHBsdXMgaXQncyBhIHN0YW5kYXJkIERPTSBlbGVtZW50LiBXZSBhbGxvdyBwZW9wbGUgdG8gZGlzdGluZ3Vpc2ggYnkgd3JhcHBpbmcgcGx1Z2luLXNwZWNpZmljIHN0dWZmIGluIGEgY3NzOnt9IG9iamVjdCBmb3IgZXhhbXBsZS5cblxuICAgICAgICAgICAgICBjbGVhblZhcnMgPSBfY29weUV4Y2x1ZGluZyh2YXJzLCBfcmVzZXJ2ZWRQcm9wcyk7XG4gICAgICAgICAgICAgIHByZXZTdGFydEF0ICYmIHByZXZTdGFydEF0LnJlbmRlcigtMSwgdHJ1ZSkua2lsbCgpO1xuXG4gICAgICAgICAgICAgIGlmIChzdGFydEF0KSB7XG4gICAgICAgICAgICAgICAgX3JlbW92ZUZyb21QYXJlbnQodHdlZW4uX3N0YXJ0QXQgPSBUd2Vlbi5zZXQodGFyZ2V0cywgX3NldERlZmF1bHRzKHtcbiAgICAgICAgICAgICAgICAgIGRhdGE6IFwiaXNTdGFydFwiLFxuICAgICAgICAgICAgICAgICAgb3ZlcndyaXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIHBhcmVudDogcGFyZW50LFxuICAgICAgICAgICAgICAgICAgaW1tZWRpYXRlUmVuZGVyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgbGF6eTogX2lzTm90RmFsc2UobGF6eSksXG4gICAgICAgICAgICAgICAgICBzdGFydEF0OiBudWxsLFxuICAgICAgICAgICAgICAgICAgZGVsYXk6IDAsXG4gICAgICAgICAgICAgICAgICBvblVwZGF0ZTogb25VcGRhdGUsXG4gICAgICAgICAgICAgICAgICBvblVwZGF0ZVBhcmFtczogb25VcGRhdGVQYXJhbXMsXG4gICAgICAgICAgICAgICAgICBjYWxsYmFja1Njb3BlOiBjYWxsYmFja1Njb3BlLFxuICAgICAgICAgICAgICAgICAgc3RhZ2dlcjogMFxuICAgICAgICAgICAgICAgIH0sIHN0YXJ0QXQpKSk7IC8vY29weSB0aGUgcHJvcGVydGllcy92YWx1ZXMgaW50byBhIG5ldyBvYmplY3QgdG8gYXZvaWQgY29sbGlzaW9ucywgbGlrZSB2YXIgdG8gPSB7eDowfSwgZnJvbSA9IHt4OjUwMH07IHRpbWVsaW5lLmZyb21UbyhlLCBmcm9tLCB0bykuZnJvbVRvKGUsIHRvLCBmcm9tKTtcblxuXG4gICAgICAgICAgICAgICAgaWYgKGltbWVkaWF0ZVJlbmRlcikge1xuICAgICAgICAgICAgICAgICAgaWYgKHRpbWUgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1dG9SZXZlcnQgfHwgKHR3ZWVuLl9zdGFydEF0ID0gMCk7IC8vdHdlZW5zIHRoYXQgcmVuZGVyIGltbWVkaWF0ZWx5IChsaWtlIG1vc3QgZnJvbSgpIGFuZCBmcm9tVG8oKSB0d2VlbnMpIHNob3VsZG4ndCByZXZlcnQgd2hlbiB0aGVpciBwYXJlbnQgdGltZWxpbmUncyBwbGF5aGVhZCBnb2VzIGJhY2t3YXJkIHBhc3QgdGhlIHN0YXJ0VGltZSBiZWNhdXNlIHRoZSBpbml0aWFsIHJlbmRlciBjb3VsZCBoYXZlIGhhcHBlbmVkIGFueXRpbWUgYW5kIGl0IHNob3VsZG4ndCBiZSBkaXJlY3RseSBjb3JyZWxhdGVkIHRvIHRoaXMgdHdlZW4ncyBzdGFydFRpbWUuIEltYWdpbmUgc2V0dGluZyB1cCBhIGNvbXBsZXggYW5pbWF0aW9uIHdoZXJlIHRoZSBiZWdpbm5pbmcgc3RhdGVzIG9mIHZhcmlvdXMgb2JqZWN0cyBhcmUgcmVuZGVyZWQgaW1tZWRpYXRlbHkgYnV0IHRoZSB0d2VlbiBkb2Vzbid0IGhhcHBlbiBmb3IgcXVpdGUgc29tZSB0aW1lIC0gaWYgd2UgcmV2ZXJ0IHRvIHRoZSBzdGFydGluZyB2YWx1ZXMgYXMgc29vbiBhcyB0aGUgcGxheWhlYWQgZ29lcyBiYWNrd2FyZCBwYXN0IHRoZSB0d2VlbidzIHN0YXJ0VGltZSwgaXQgd2lsbCB0aHJvdyB0aGluZ3Mgb2ZmIHZpc3VhbGx5LiBSZXZlcnNpb24gc2hvdWxkIG9ubHkgaGFwcGVuIGluIFRpbWVsaW5lIGluc3RhbmNlcyB3aGVyZSBpbW1lZGlhdGVSZW5kZXIgd2FzIGZhbHNlIG9yIHdoZW4gYXV0b1JldmVydCBpcyBleHBsaWNpdGx5IHNldCB0byB0cnVlLlxuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkdXIgJiYgISh0aW1lIDwgMCAmJiBwcmV2U3RhcnRBdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGltZSAmJiAodHdlZW4uX3pUaW1lID0gdGltZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjsgLy93ZSBza2lwIGluaXRpYWxpemF0aW9uIGhlcmUgc28gdGhhdCBvdmVyd3JpdGluZyBkb2Vzbid0IG9jY3VyIHVudGlsIHRoZSB0d2VlbiBhY3R1YWxseSBiZWdpbnMuIE90aGVyd2lzZSwgaWYgeW91IGNyZWF0ZSBzZXZlcmFsIGltbWVkaWF0ZVJlbmRlcjp0cnVlIHR3ZWVucyBvZiB0aGUgc2FtZSB0YXJnZXQvcHJvcGVydGllcyB0byBkcm9wIGludG8gYSBUaW1lbGluZSwgdGhlIGxhc3Qgb25lIGNyZWF0ZWQgd291bGQgb3ZlcndyaXRlIHRoZSBmaXJzdCBvbmVzIGJlY2F1c2UgdGhleSBkaWRuJ3QgZ2V0IHBsYWNlZCBpbnRvIHRoZSB0aW1lbGluZSB5ZXQgYmVmb3JlIHRoZSBmaXJzdCByZW5kZXIgb2NjdXJzIGFuZCBraWNrcyBpbiBvdmVyd3JpdGluZy5cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAocnVuQmFja3dhcmRzICYmIGR1cikge1xuICAgICAgICAgICAgICAgIC8vZnJvbSgpIHR3ZWVucyBtdXN0IGJlIGhhbmRsZWQgdW5pcXVlbHk6IHRoZWlyIGJlZ2lubmluZyB2YWx1ZXMgbXVzdCBiZSByZW5kZXJlZCBidXQgd2UgZG9uJ3Qgd2FudCBvdmVyd3JpdGluZyB0byBvY2N1ciB5ZXQgKHdoZW4gdGltZSBpcyBzdGlsbCAwKS4gV2FpdCB1bnRpbCB0aGUgdHdlZW4gYWN0dWFsbHkgYmVnaW5zIGJlZm9yZSBkb2luZyBhbGwgdGhlIHJvdXRpbmVzIGxpa2Ugb3ZlcndyaXRpbmcuIEF0IHRoYXQgdGltZSwgd2Ugc2hvdWxkIHJlbmRlciBhdCB0aGUgRU5EIG9mIHRoZSB0d2VlbiB0byBlbnN1cmUgdGhhdCB0aGluZ3MgaW5pdGlhbGl6ZSBjb3JyZWN0bHkgKHJlbWVtYmVyLCBmcm9tKCkgdHdlZW5zIGdvIGJhY2t3YXJkcylcbiAgICAgICAgICAgICAgICBpZiAocHJldlN0YXJ0QXQpIHtcbiAgICAgICAgICAgICAgICAgICFhdXRvUmV2ZXJ0ICYmICh0d2Vlbi5fc3RhcnRBdCA9IDApO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICB0aW1lICYmIChpbW1lZGlhdGVSZW5kZXIgPSBmYWxzZSk7IC8vaW4gcmFyZSBjYXNlcyAobGlrZSBpZiBhIGZyb20oKSB0d2VlbiBydW5zIGFuZCB0aGVuIGlzIGludmFsaWRhdGUoKS1lZCksIGltbWVkaWF0ZVJlbmRlciBjb3VsZCBiZSB0cnVlIGJ1dCB0aGUgaW5pdGlhbCBmb3JjZWQtcmVuZGVyIGdldHMgc2tpcHBlZCwgc28gdGhlcmUncyBubyBuZWVkIHRvIGZvcmNlIHRoZSByZW5kZXIgaW4gdGhpcyBjb250ZXh0IHdoZW4gdGhlIF90aW1lIGlzIGdyZWF0ZXIgdGhhbiAwXG5cbiAgICAgICAgICAgICAgICAgIHAgPSBfc2V0RGVmYXVsdHMoe1xuICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBcImlzRnJvbVN0YXJ0XCIsXG4gICAgICAgICAgICAgICAgICAgIC8vd2UgdGFnIHRoZSB0d2VlbiB3aXRoIGFzIFwiaXNGcm9tU3RhcnRcIiBzbyB0aGF0IGlmIFtpbnNpZGUgYSBwbHVnaW5dIHdlIG5lZWQgdG8gb25seSBkbyBzb21ldGhpbmcgYXQgdGhlIHZlcnkgRU5EIG9mIGEgdHdlZW4sIHdlIGhhdmUgYSB3YXkgb2YgaWRlbnRpZnlpbmcgdGhpcyB0d2VlbiBhcyBtZXJlbHkgdGhlIG9uZSB0aGF0J3Mgc2V0dGluZyB0aGUgYmVnaW5uaW5nIHZhbHVlcyBmb3IgYSBcImZyb20oKVwiIHR3ZWVuLiBGb3IgZXhhbXBsZSwgY2xlYXJQcm9wcyBpbiBDU1NQbHVnaW4gc2hvdWxkIG9ubHkgZ2V0IGFwcGxpZWQgYXQgdGhlIHZlcnkgRU5EIG9mIGEgdHdlZW4gYW5kIHdpdGhvdXQgdGhpcyB0YWcsIGZyb20oLi4ue2hlaWdodDoxMDAsIGNsZWFyUHJvcHM6XCJoZWlnaHRcIiwgZGVsYXk6MX0pIHdvdWxkIHdpcGUgdGhlIGhlaWdodCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB0d2VlbiBhbmQgYWZ0ZXIgMSBzZWNvbmQsIGl0J2Qga2ljayBiYWNrIGluLlxuICAgICAgICAgICAgICAgICAgICBsYXp5OiBpbW1lZGlhdGVSZW5kZXIgJiYgX2lzTm90RmFsc2UobGF6eSksXG4gICAgICAgICAgICAgICAgICAgIGltbWVkaWF0ZVJlbmRlcjogaW1tZWRpYXRlUmVuZGVyLFxuICAgICAgICAgICAgICAgICAgICAvL3plcm8tZHVyYXRpb24gdHdlZW5zIHJlbmRlciBpbW1lZGlhdGVseSBieSBkZWZhdWx0LCBidXQgaWYgd2UncmUgbm90IHNwZWNpZmljYWxseSBpbnN0cnVjdGVkIHRvIHJlbmRlciB0aGlzIHR3ZWVuIGltbWVkaWF0ZWx5LCB3ZSBzaG91bGQgc2tpcCB0aGlzIGFuZCBtZXJlbHkgX2luaXQoKSB0byByZWNvcmQgdGhlIHN0YXJ0aW5nIHZhbHVlcyAocmVuZGVyaW5nIHRoZW0gaW1tZWRpYXRlbHkgd291bGQgcHVzaCB0aGVtIHRvIGNvbXBsZXRpb24gd2hpY2ggaXMgd2FzdGVmdWwgaW4gdGhhdCBjYXNlIC0gd2UnZCBoYXZlIHRvIHJlbmRlcigtMSkgaW1tZWRpYXRlbHkgYWZ0ZXIpXG4gICAgICAgICAgICAgICAgICAgIHN0YWdnZXI6IDAsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudDogcGFyZW50IC8vZW5zdXJlcyB0aGF0IG5lc3RlZCB0d2VlbnMgdGhhdCBoYWQgYSBzdGFnZ2VyIGFyZSBoYW5kbGVkIHByb3Blcmx5LCBsaWtlIGdzYXAuZnJvbShcIi5jbGFzc1wiLCB7eTpnc2FwLnV0aWxzLndyYXAoWy0xMDAsMTAwXSl9KVxuXG4gICAgICAgICAgICAgICAgICB9LCBjbGVhblZhcnMpO1xuICAgICAgICAgICAgICAgICAgaGFybmVzc1ZhcnMgJiYgKHBbaGFybmVzcy5wcm9wXSA9IGhhcm5lc3NWYXJzKTsgLy8gaW4gY2FzZSBzb21lb25lIGRvZXMgc29tZXRoaW5nIGxpa2UgLmZyb20oLi4uLCB7Y3NzOnt9fSlcblxuICAgICAgICAgICAgICAgICAgX3JlbW92ZUZyb21QYXJlbnQodHdlZW4uX3N0YXJ0QXQgPSBUd2Vlbi5zZXQodGFyZ2V0cywgcCkpO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoIWltbWVkaWF0ZVJlbmRlcikge1xuICAgICAgICAgICAgICAgICAgICBfaW5pdFR3ZWVuKHR3ZWVuLl9zdGFydEF0LCBfdGlueU51bSk7IC8vZW5zdXJlcyB0aGF0IHRoZSBpbml0aWFsIHZhbHVlcyBhcmUgcmVjb3JkZWRcblxuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICghdGltZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdHdlZW4uX3B0ID0gMDtcbiAgICAgICAgICAgICAgbGF6eSA9IGR1ciAmJiBfaXNOb3RGYWxzZShsYXp5KSB8fCBsYXp5ICYmICFkdXI7XG5cbiAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRhcmdldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQgPSB0YXJnZXRzW2ldO1xuICAgICAgICAgICAgICAgIGdzRGF0YSA9IHRhcmdldC5fZ3NhcCB8fCBfaGFybmVzcyh0YXJnZXRzKVtpXS5fZ3NhcDtcbiAgICAgICAgICAgICAgICB0d2Vlbi5fcHRMb29rdXBbaV0gPSBwdExvb2t1cCA9IHt9O1xuICAgICAgICAgICAgICAgIF9sYXp5TG9va3VwW2dzRGF0YS5pZF0gJiYgX2xhenlUd2VlbnMubGVuZ3RoICYmIF9sYXp5UmVuZGVyKCk7IC8vaWYgb3RoZXIgdHdlZW5zIG9mIHRoZSBzYW1lIHRhcmdldCBoYXZlIHJlY2VudGx5IGluaXR0ZWQgYnV0IGhhdmVuJ3QgcmVuZGVyZWQgeWV0LCB3ZSd2ZSBnb3QgdG8gZm9yY2UgdGhlIHJlbmRlciBzbyB0aGF0IHRoZSBzdGFydGluZyB2YWx1ZXMgYXJlIGNvcnJlY3QgKGltYWdpbmUgcG9wdWxhdGluZyBhIHRpbWVsaW5lIHdpdGggYSBidW5jaCBvZiBzZXF1ZW50aWFsIHR3ZWVucyBhbmQgdGhlbiBqdW1waW5nIHRvIHRoZSBlbmQpXG5cbiAgICAgICAgICAgICAgICBpbmRleCA9IGZ1bGxUYXJnZXRzID09PSB0YXJnZXRzID8gaSA6IGZ1bGxUYXJnZXRzLmluZGV4T2YodGFyZ2V0KTtcblxuICAgICAgICAgICAgICAgIGlmIChoYXJuZXNzICYmIChwbHVnaW4gPSBuZXcgaGFybmVzcygpKS5pbml0KHRhcmdldCwgaGFybmVzc1ZhcnMgfHwgY2xlYW5WYXJzLCB0d2VlbiwgaW5kZXgsIGZ1bGxUYXJnZXRzKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgIHR3ZWVuLl9wdCA9IHB0ID0gbmV3IFByb3BUd2Vlbih0d2Vlbi5fcHQsIHRhcmdldCwgcGx1Z2luLm5hbWUsIDAsIDEsIHBsdWdpbi5yZW5kZXIsIHBsdWdpbiwgMCwgcGx1Z2luLnByaW9yaXR5KTtcblxuICAgICAgICAgICAgICAgICAgcGx1Z2luLl9wcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHB0TG9va3VwW25hbWVdID0gcHQ7XG4gICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgcGx1Z2luLnByaW9yaXR5ICYmIChoYXNQcmlvcml0eSA9IDEpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghaGFybmVzcyB8fCBoYXJuZXNzVmFycykge1xuICAgICAgICAgICAgICAgICAgZm9yIChwIGluIGNsZWFuVmFycykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoX3BsdWdpbnNbcF0gJiYgKHBsdWdpbiA9IF9jaGVja1BsdWdpbihwLCBjbGVhblZhcnMsIHR3ZWVuLCBpbmRleCwgdGFyZ2V0LCBmdWxsVGFyZ2V0cykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcGx1Z2luLnByaW9yaXR5ICYmIChoYXNQcmlvcml0eSA9IDEpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgIHB0TG9va3VwW3BdID0gcHQgPSBfYWRkUHJvcFR3ZWVuLmNhbGwodHdlZW4sIHRhcmdldCwgcCwgXCJnZXRcIiwgY2xlYW5WYXJzW3BdLCBpbmRleCwgZnVsbFRhcmdldHMsIDAsIHZhcnMuc3RyaW5nRmlsdGVyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHR3ZWVuLl9vcCAmJiB0d2Vlbi5fb3BbaV0gJiYgdHdlZW4ua2lsbCh0YXJnZXQsIHR3ZWVuLl9vcFtpXSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoYXV0b092ZXJ3cml0ZSAmJiB0d2Vlbi5fcHQpIHtcbiAgICAgICAgICAgICAgICAgIF9vdmVyd3JpdGluZ1R3ZWVuID0gdHdlZW47XG5cbiAgICAgICAgICAgICAgICAgIF9nbG9iYWxUaW1lbGluZS5raWxsVHdlZW5zT2YodGFyZ2V0LCBwdExvb2t1cCwgdHdlZW4uZ2xvYmFsVGltZSgwKSk7IC8vQWxzbyBtYWtlIHN1cmUgdGhlIG92ZXJ3cml0aW5nIGRvZXNuJ3Qgb3ZlcndyaXRlIFRISVMgdHdlZW4hISFcblxuXG4gICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbiA9ICF0d2Vlbi5wYXJlbnQ7XG4gICAgICAgICAgICAgICAgICBfb3ZlcndyaXRpbmdUd2VlbiA9IDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdHdlZW4uX3B0ICYmIGxhenkgJiYgKF9sYXp5TG9va3VwW2dzRGF0YS5pZF0gPSAxKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGhhc1ByaW9yaXR5ICYmIF9zb3J0UHJvcFR3ZWVuc0J5UHJpb3JpdHkodHdlZW4pO1xuICAgICAgICAgICAgICB0d2Vlbi5fb25Jbml0ICYmIHR3ZWVuLl9vbkluaXQodHdlZW4pOyAvL3BsdWdpbnMgbGlrZSBSb3VuZFByb3BzIG11c3Qgd2FpdCB1bnRpbCBBTEwgb2YgdGhlIFByb3BUd2VlbnMgYXJlIGluc3RhbnRpYXRlZC4gSW4gdGhlIHBsdWdpbidzIGluaXQoKSBmdW5jdGlvbiwgaXQgc2V0cyB0aGUgX29uSW5pdCBvbiB0aGUgdHdlZW4gaW5zdGFuY2UuIE1heSBub3QgYmUgcHJldHR5L2ludHVpdGl2ZSwgYnV0IGl0J3MgZmFzdCBhbmQga2VlcHMgZmlsZSBzaXplIGRvd24uXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHR3ZWVuLl9mcm9tID0gIXRsICYmICEhdmFycy5ydW5CYWNrd2FyZHM7IC8vbmVzdGVkIHRpbWVsaW5lcyBzaG91bGQgbmV2ZXIgcnVuIGJhY2t3YXJkcyAtIHRoZSBiYWNrd2FyZHMtbmVzcyBpcyBpbiB0aGUgY2hpbGQgdHdlZW5zLlxuXG4gICAgICAgICAgICB0d2Vlbi5fb25VcGRhdGUgPSBvblVwZGF0ZTtcbiAgICAgICAgICAgIHR3ZWVuLl9pbml0dGVkID0gKCF0d2Vlbi5fb3AgfHwgdHdlZW4uX3B0KSAmJiAhb3ZlcndyaXR0ZW47IC8vIGlmIG92ZXJ3cml0dGVuUHJvcHMgcmVzdWx0ZWQgaW4gdGhlIGVudGlyZSB0d2VlbiBiZWluZyBraWxsZWQsIGRvIE5PVCBmbGFnIGl0IGFzIGluaXR0ZWQgb3IgZWxzZSBpdCBtYXkgcmVuZGVyIGZvciBvbmUgdGljay5cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hZGRBbGlhc2VzVG9WYXJzID0gZnVuY3Rpb24gX2FkZEFsaWFzZXNUb1ZhcnModGFyZ2V0cywgdmFycykge1xuICAgICAgICAgICAgdmFyIGhhcm5lc3MgPSB0YXJnZXRzWzBdID8gX2dldENhY2hlKHRhcmdldHNbMF0pLmhhcm5lc3MgOiAwLFxuICAgICAgICAgICAgICBwcm9wZXJ0eUFsaWFzZXMgPSBoYXJuZXNzICYmIGhhcm5lc3MuYWxpYXNlcyxcbiAgICAgICAgICAgICAgY29weSxcbiAgICAgICAgICAgICAgcCxcbiAgICAgICAgICAgICAgaSxcbiAgICAgICAgICAgICAgYWxpYXNlcztcblxuICAgICAgICAgICAgaWYgKCFwcm9wZXJ0eUFsaWFzZXMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHZhcnM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvcHkgPSBfbWVyZ2Uoe30sIHZhcnMpO1xuXG4gICAgICAgICAgICBmb3IgKHAgaW4gcHJvcGVydHlBbGlhc2VzKSB7XG4gICAgICAgICAgICAgIGlmIChwIGluIGNvcHkpIHtcbiAgICAgICAgICAgICAgICBhbGlhc2VzID0gcHJvcGVydHlBbGlhc2VzW3BdLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgICAgICAgICBpID0gYWxpYXNlcy5sZW5ndGg7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgICAgICBjb3B5W2FsaWFzZXNbaV1dID0gY29weVtwXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNvcHk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcGFyc2VGdW5jT3JTdHJpbmcgPSBmdW5jdGlvbiBfcGFyc2VGdW5jT3JTdHJpbmcodmFsdWUsIHR3ZWVuLCBpLCB0YXJnZXQsIHRhcmdldHMpIHtcbiAgICAgICAgICAgIHJldHVybiBfaXNGdW5jdGlvbih2YWx1ZSkgPyB2YWx1ZS5jYWxsKHR3ZWVuLCBpLCB0YXJnZXQsIHRhcmdldHMpIDogX2lzU3RyaW5nKHZhbHVlKSAmJiB+dmFsdWUuaW5kZXhPZihcInJhbmRvbShcIikgPyBfcmVwbGFjZVJhbmRvbSh2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zdGFnZ2VyVHdlZW5Qcm9wcyA9IF9jYWxsYmFja05hbWVzICsgXCJyZXBlYXQscmVwZWF0RGVsYXkseW95byxyZXBlYXRSZWZyZXNoLHlveW9FYXNlXCIsXG4gICAgICAgICAgX3N0YWdnZXJQcm9wc1RvU2tpcCA9IChfc3RhZ2dlclR3ZWVuUHJvcHMgKyBcIixpZCxzdGFnZ2VyLGRlbGF5LGR1cmF0aW9uLHBhdXNlZCxzY3JvbGxUcmlnZ2VyXCIpLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgLypcbiAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICogVFdFRU5cbiAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICovXG5cblxuICAgICAgICBleHBvcnRzLl9jaGVja1BsdWdpbiA9IF9jaGVja1BsdWdpbjtcblxuICAgICAgICB2YXIgVHdlZW4gPVxuICAgICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgICBmdW5jdGlvbiAoX0FuaW1hdGlvbjIpIHtcbiAgICAgICAgICAgIF9pbmhlcml0c0xvb3NlKFR3ZWVuLCBfQW5pbWF0aW9uMik7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIFR3ZWVuKHRhcmdldHMsIHZhcnMsIHRpbWUsIHNraXBJbmhlcml0KSB7XG4gICAgICAgICAgICAgIHZhciBfdGhpczM7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YXJzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgICAgdGltZS5kdXJhdGlvbiA9IHZhcnM7XG4gICAgICAgICAgICAgICAgdmFycyA9IHRpbWU7XG4gICAgICAgICAgICAgICAgdGltZSA9IG51bGw7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBfdGhpczMgPSBfQW5pbWF0aW9uMi5jYWxsKHRoaXMsIHNraXBJbmhlcml0ID8gdmFycyA6IF9pbmhlcml0RGVmYXVsdHModmFycyksIHRpbWUpIHx8IHRoaXM7XG4gICAgICAgICAgICAgIHZhciBfdGhpczMkdmFycyA9IF90aGlzMy52YXJzLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uID0gX3RoaXMzJHZhcnMuZHVyYXRpb24sXG4gICAgICAgICAgICAgICAgZGVsYXkgPSBfdGhpczMkdmFycy5kZWxheSxcbiAgICAgICAgICAgICAgICBpbW1lZGlhdGVSZW5kZXIgPSBfdGhpczMkdmFycy5pbW1lZGlhdGVSZW5kZXIsXG4gICAgICAgICAgICAgICAgc3RhZ2dlciA9IF90aGlzMyR2YXJzLnN0YWdnZXIsXG4gICAgICAgICAgICAgICAgb3ZlcndyaXRlID0gX3RoaXMzJHZhcnMub3ZlcndyaXRlLFxuICAgICAgICAgICAgICAgIGtleWZyYW1lcyA9IF90aGlzMyR2YXJzLmtleWZyYW1lcyxcbiAgICAgICAgICAgICAgICBkZWZhdWx0cyA9IF90aGlzMyR2YXJzLmRlZmF1bHRzLFxuICAgICAgICAgICAgICAgIHNjcm9sbFRyaWdnZXIgPSBfdGhpczMkdmFycy5zY3JvbGxUcmlnZ2VyLFxuICAgICAgICAgICAgICAgIHlveW9FYXNlID0gX3RoaXMzJHZhcnMueW95b0Vhc2UsXG4gICAgICAgICAgICAgICAgcGFyZW50ID0gX3RoaXMzLnBhcmVudCxcbiAgICAgICAgICAgICAgICBwYXJzZWRUYXJnZXRzID0gKF9pc0FycmF5KHRhcmdldHMpIHx8IF9pc1R5cGVkQXJyYXkodGFyZ2V0cykgPyBfaXNOdW1iZXIodGFyZ2V0c1swXSkgOiBcImxlbmd0aFwiIGluIHZhcnMpID8gW3RhcmdldHNdIDogdG9BcnJheSh0YXJnZXRzKSxcbiAgICAgICAgICAgICAgICB0bCxcbiAgICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICAgIGNvcHksXG4gICAgICAgICAgICAgICAgbCxcbiAgICAgICAgICAgICAgICBwLFxuICAgICAgICAgICAgICAgIGN1clRhcmdldCxcbiAgICAgICAgICAgICAgICBzdGFnZ2VyRnVuYyxcbiAgICAgICAgICAgICAgICBzdGFnZ2VyVmFyc1RvTWVyZ2U7XG4gICAgICAgICAgICAgIF90aGlzMy5fdGFyZ2V0cyA9IHBhcnNlZFRhcmdldHMubGVuZ3RoID8gX2hhcm5lc3MocGFyc2VkVGFyZ2V0cykgOiBfd2FybihcIkdTQVAgdGFyZ2V0IFwiICsgdGFyZ2V0cyArIFwiIG5vdCBmb3VuZC4gaHR0cHM6Ly9ncmVlbnNvY2suY29tXCIsICFfY29uZmlnLm51bGxUYXJnZXRXYXJuKSB8fCBbXTtcbiAgICAgICAgICAgICAgX3RoaXMzLl9wdExvb2t1cCA9IFtdOyAvL1Byb3BUd2VlbiBsb29rdXAuIEFuIGFycmF5IGNvbnRhaW5pbmcgYW4gb2JqZWN0IGZvciBlYWNoIHRhcmdldCwgaGF2aW5nIGtleXMgZm9yIGVhY2ggdHdlZW5pbmcgcHJvcGVydHlcblxuICAgICAgICAgICAgICBfdGhpczMuX292ZXJ3cml0ZSA9IG92ZXJ3cml0ZTtcblxuICAgICAgICAgICAgICBpZiAoa2V5ZnJhbWVzIHx8IHN0YWdnZXIgfHwgX2lzRnVuY09yU3RyaW5nKGR1cmF0aW9uKSB8fCBfaXNGdW5jT3JTdHJpbmcoZGVsYXkpKSB7XG4gICAgICAgICAgICAgICAgdmFycyA9IF90aGlzMy52YXJzO1xuICAgICAgICAgICAgICAgIHRsID0gX3RoaXMzLnRpbWVsaW5lID0gbmV3IFRpbWVsaW5lKHtcbiAgICAgICAgICAgICAgICAgIGRhdGE6IFwibmVzdGVkXCIsXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0czogZGVmYXVsdHMgfHwge31cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0bC5raWxsKCk7XG4gICAgICAgICAgICAgICAgdGwucGFyZW50ID0gdGwuX2RwID0gX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpczMpO1xuICAgICAgICAgICAgICAgIHRsLl9zdGFydCA9IDA7XG5cbiAgICAgICAgICAgICAgICBpZiAoa2V5ZnJhbWVzKSB7XG4gICAgICAgICAgICAgICAgICBfc2V0RGVmYXVsdHModGwudmFycy5kZWZhdWx0cywge1xuICAgICAgICAgICAgICAgICAgICBlYXNlOiBcIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgIGtleWZyYW1lcy5mb3JFYWNoKGZ1bmN0aW9uIChmcmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGwudG8ocGFyc2VkVGFyZ2V0cywgZnJhbWUsIFwiPlwiKTtcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBsID0gcGFyc2VkVGFyZ2V0cy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICBzdGFnZ2VyRnVuYyA9IHN0YWdnZXIgPyBkaXN0cmlidXRlKHN0YWdnZXIpIDogX2VtcHR5RnVuYztcblxuICAgICAgICAgICAgICAgICAgaWYgKF9pc09iamVjdChzdGFnZ2VyKSkge1xuICAgICAgICAgICAgICAgICAgICAvL3VzZXJzIGNhbiBwYXNzIGluIGNhbGxiYWNrcyBsaWtlIG9uU3RhcnQvb25Db21wbGV0ZSBpbiB0aGUgc3RhZ2dlciBvYmplY3QuIFRoZXNlIHNob3VsZCBmaXJlIHdpdGggZWFjaCBpbmRpdmlkdWFsIHR3ZWVuLlxuICAgICAgICAgICAgICAgICAgICBmb3IgKHAgaW4gc3RhZ2dlcikge1xuICAgICAgICAgICAgICAgICAgICAgIGlmICh+X3N0YWdnZXJUd2VlblByb3BzLmluZGV4T2YocCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YWdnZXJWYXJzVG9NZXJnZSB8fCAoc3RhZ2dlclZhcnNUb01lcmdlID0ge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhZ2dlclZhcnNUb01lcmdlW3BdID0gc3RhZ2dlcltwXTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjb3B5ID0ge307XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yIChwIGluIHZhcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoX3N0YWdnZXJQcm9wc1RvU2tpcC5pbmRleE9mKHApIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29weVtwXSA9IHZhcnNbcF07XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgY29weS5zdGFnZ2VyID0gMDtcbiAgICAgICAgICAgICAgICAgICAgeW95b0Vhc2UgJiYgKGNvcHkueW95b0Vhc2UgPSB5b3lvRWFzZSk7XG4gICAgICAgICAgICAgICAgICAgIHN0YWdnZXJWYXJzVG9NZXJnZSAmJiBfbWVyZ2UoY29weSwgc3RhZ2dlclZhcnNUb01lcmdlKTtcbiAgICAgICAgICAgICAgICAgICAgY3VyVGFyZ2V0ID0gcGFyc2VkVGFyZ2V0c1tpXTsgLy9kb24ndCBqdXN0IGNvcHkgZHVyYXRpb24gb3IgZGVsYXkgYmVjYXVzZSBpZiB0aGV5J3JlIGEgc3RyaW5nIG9yIGZ1bmN0aW9uLCB3ZSdkIGVuZCB1cCBpbiBhbiBpbmZpbml0ZSBsb29wIGJlY2F1c2UgX2lzRnVuY09yU3RyaW5nKCkgd291bGQgZXZhbHVhdGUgYXMgdHJ1ZSBpbiB0aGUgY2hpbGQgdHdlZW5zLCBlbnRlcmluZyB0aGlzIGxvb3AsIGV0Yy4gU28gd2UgcGFyc2UgdGhlIHZhbHVlIHN0cmFpZ2h0IGZyb20gdmFycyBhbmQgZGVmYXVsdCB0byAwLlxuXG4gICAgICAgICAgICAgICAgICAgIGNvcHkuZHVyYXRpb24gPSArX3BhcnNlRnVuY09yU3RyaW5nKGR1cmF0aW9uLCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzMyksIGksIGN1clRhcmdldCwgcGFyc2VkVGFyZ2V0cyk7XG4gICAgICAgICAgICAgICAgICAgIGNvcHkuZGVsYXkgPSAoK19wYXJzZUZ1bmNPclN0cmluZyhkZWxheSwgX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpczMpLCBpLCBjdXJUYXJnZXQsIHBhcnNlZFRhcmdldHMpIHx8IDApIC0gX3RoaXMzLl9kZWxheTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoIXN0YWdnZXIgJiYgbCA9PT0gMSAmJiBjb3B5LmRlbGF5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gaWYgc29tZW9uZSBkb2VzIGRlbGF5OlwicmFuZG9tKDEsIDUpXCIsIHJlcGVhdDotMSwgZm9yIGV4YW1wbGUsIHRoZSBkZWxheSBzaG91bGRuJ3QgYmUgaW5zaWRlIHRoZSByZXBlYXQuXG4gICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLl9kZWxheSA9IGRlbGF5ID0gY29weS5kZWxheTtcbiAgICAgICAgICAgICAgICAgICAgICBfdGhpczMuX3N0YXJ0ICs9IGRlbGF5O1xuICAgICAgICAgICAgICAgICAgICAgIGNvcHkuZGVsYXkgPSAwO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGwudG8oY3VyVGFyZ2V0LCBjb3B5LCBzdGFnZ2VyRnVuYyhpLCBjdXJUYXJnZXQsIHBhcnNlZFRhcmdldHMpKTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgdGwuZHVyYXRpb24oKSA/IGR1cmF0aW9uID0gZGVsYXkgPSAwIDogX3RoaXMzLnRpbWVsaW5lID0gMDsgLy8gaWYgdGhlIHRpbWVsaW5lJ3MgZHVyYXRpb24gaXMgMCwgd2UgZG9uJ3QgbmVlZCBhIHRpbWVsaW5lIGludGVybmFsbHkhXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZHVyYXRpb24gfHwgX3RoaXMzLmR1cmF0aW9uKGR1cmF0aW9uID0gdGwuZHVyYXRpb24oKSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgX3RoaXMzLnRpbWVsaW5lID0gMDsgLy9zcGVlZCBvcHRpbWl6YXRpb24sIGZhc3RlciBsb29rdXBzIChubyBnb2luZyB1cCB0aGUgcHJvdG90eXBlIGNoYWluKVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKG92ZXJ3cml0ZSA9PT0gdHJ1ZSAmJiAhX3N1cHByZXNzT3ZlcndyaXRlcykge1xuICAgICAgICAgICAgICAgIF9vdmVyd3JpdGluZ1R3ZWVuID0gX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpczMpO1xuXG4gICAgICAgICAgICAgICAgX2dsb2JhbFRpbWVsaW5lLmtpbGxUd2VlbnNPZihwYXJzZWRUYXJnZXRzKTtcblxuICAgICAgICAgICAgICAgIF9vdmVyd3JpdGluZ1R3ZWVuID0gMDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHBhcmVudCAmJiBfcG9zdEFkZENoZWNrcyhwYXJlbnQsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMzKSk7XG5cbiAgICAgICAgICAgICAgaWYgKGltbWVkaWF0ZVJlbmRlciB8fCAhZHVyYXRpb24gJiYgIWtleWZyYW1lcyAmJiBfdGhpczMuX3N0YXJ0ID09PSBfcm91bmQocGFyZW50Ll90aW1lKSAmJiBfaXNOb3RGYWxzZShpbW1lZGlhdGVSZW5kZXIpICYmIF9oYXNOb1BhdXNlZEFuY2VzdG9ycyhfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzMykpICYmIHBhcmVudC5kYXRhICE9PSBcIm5lc3RlZFwiKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMzLl90VGltZSA9IC1fdGlueU51bTsgLy9mb3JjZXMgYSByZW5kZXIgd2l0aG91dCBoYXZpbmcgdG8gc2V0IHRoZSByZW5kZXIoKSBcImZvcmNlXCIgcGFyYW1ldGVyIHRvIHRydWUgYmVjYXVzZSB3ZSB3YW50IHRvIGFsbG93IGxhenlpbmcgYnkgZGVmYXVsdCAodXNpbmcgdGhlIFwiZm9yY2VcIiBwYXJhbWV0ZXIgYWx3YXlzIGZvcmNlcyBhbiBpbW1lZGlhdGUgZnVsbCByZW5kZXIpXG5cbiAgICAgICAgICAgICAgICBfdGhpczMucmVuZGVyKE1hdGgubWF4KDAsIC1kZWxheSkpOyAvL2luIGNhc2UgZGVsYXkgaXMgbmVnYXRpdmVcblxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgc2Nyb2xsVHJpZ2dlciAmJiBfc2Nyb2xsVHJpZ2dlcihfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzMyksIHNjcm9sbFRyaWdnZXIpO1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgX3Byb3RvMyA9IFR3ZWVuLnByb3RvdHlwZTtcblxuICAgICAgICAgICAgX3Byb3RvMy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIodG90YWxUaW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpIHtcbiAgICAgICAgICAgICAgdmFyIHByZXZUaW1lID0gdGhpcy5fdGltZSxcbiAgICAgICAgICAgICAgICB0RHVyID0gdGhpcy5fdER1cixcbiAgICAgICAgICAgICAgICBkdXIgPSB0aGlzLl9kdXIsXG4gICAgICAgICAgICAgICAgdFRpbWUgPSB0b3RhbFRpbWUgPiB0RHVyIC0gX3RpbnlOdW0gJiYgdG90YWxUaW1lID49IDAgPyB0RHVyIDogdG90YWxUaW1lIDwgX3RpbnlOdW0gPyAwIDogdG90YWxUaW1lLFxuICAgICAgICAgICAgICAgIHRpbWUsXG4gICAgICAgICAgICAgICAgcHQsXG4gICAgICAgICAgICAgICAgaXRlcmF0aW9uLFxuICAgICAgICAgICAgICAgIGN5Y2xlRHVyYXRpb24sXG4gICAgICAgICAgICAgICAgcHJldkl0ZXJhdGlvbixcbiAgICAgICAgICAgICAgICBpc1lveW8sXG4gICAgICAgICAgICAgICAgcmF0aW8sXG4gICAgICAgICAgICAgICAgdGltZWxpbmUsXG4gICAgICAgICAgICAgICAgeW95b0Vhc2U7XG5cbiAgICAgICAgICAgICAgaWYgKCFkdXIpIHtcbiAgICAgICAgICAgICAgICBfcmVuZGVyWmVyb0R1cmF0aW9uVHdlZW4odGhpcywgdG90YWxUaW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRUaW1lICE9PSB0aGlzLl90VGltZSB8fCAhdG90YWxUaW1lIHx8IGZvcmNlIHx8ICF0aGlzLl9pbml0dGVkICYmIHRoaXMuX3RUaW1lIHx8IHRoaXMuX3N0YXJ0QXQgJiYgdGhpcy5felRpbWUgPCAwICE9PSB0b3RhbFRpbWUgPCAwKSB7XG4gICAgICAgICAgICAgICAgLy90aGlzIHNlbnNlcyBpZiB3ZSdyZSBjcm9zc2luZyBvdmVyIHRoZSBzdGFydCB0aW1lLCBpbiB3aGljaCBjYXNlIHdlIG11c3QgcmVjb3JkIF96VGltZSBhbmQgZm9yY2UgdGhlIHJlbmRlciwgYnV0IHdlIGRvIGl0IGluIHRoaXMgbGVuZ3RoeSBjb25kaXRpb25hbCB3YXkgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMgKHVzdWFsbHkgd2UgY2FuIHNraXAgdGhlIGNhbGN1bGF0aW9ucyk6IHRoaXMuX2luaXR0ZWQgJiYgKHRoaXMuX3pUaW1lIDwgMCkgIT09ICh0b3RhbFRpbWUgPCAwKVxuICAgICAgICAgICAgICAgIHRpbWUgPSB0VGltZTtcbiAgICAgICAgICAgICAgICB0aW1lbGluZSA9IHRoaXMudGltZWxpbmU7XG5cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fcmVwZWF0KSB7XG4gICAgICAgICAgICAgICAgICAvL2FkanVzdCB0aGUgdGltZSBmb3IgcmVwZWF0cyBhbmQgeW95b3NcbiAgICAgICAgICAgICAgICAgIGN5Y2xlRHVyYXRpb24gPSBkdXIgKyB0aGlzLl9yRGVsYXk7XG5cbiAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9yZXBlYXQgPCAtMSAmJiB0b3RhbFRpbWUgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvdGFsVGltZShjeWNsZUR1cmF0aW9uICogMTAwICsgdG90YWxUaW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICB0aW1lID0gX3JvdW5kKHRUaW1lICUgY3ljbGVEdXJhdGlvbik7IC8vcm91bmQgdG8gYXZvaWQgZmxvYXRpbmcgcG9pbnQgZXJyb3JzLiAoNCAlIDAuOCBzaG91bGQgYmUgMCBidXQgc29tZSBicm93c2VycyByZXBvcnQgaXQgYXMgMC43OTk5OTk5OSEpXG5cbiAgICAgICAgICAgICAgICAgIGlmICh0VGltZSA9PT0gdER1cikge1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGUgdER1ciA9PT0gdFRpbWUgaXMgZm9yIGVkZ2UgY2FzZXMgd2hlcmUgdGhlcmUncyBhIGxlbmd0aHkgZGVjaW1hbCBvbiB0aGUgZHVyYXRpb24gYW5kIGl0IG1heSByZWFjaCB0aGUgdmVyeSBlbmQgYnV0IHRoZSB0aW1lIGlzIHJlbmRlcmVkIGFzIG5vdC1xdWl0ZS10aGVyZSAocmVtZW1iZXIsIHREdXIgaXMgcm91bmRlZCB0byA0IGRlY2ltYWxzIHdoZXJlYXMgZHVyIGlzbid0KVxuICAgICAgICAgICAgICAgICAgICBpdGVyYXRpb24gPSB0aGlzLl9yZXBlYXQ7XG4gICAgICAgICAgICAgICAgICAgIHRpbWUgPSBkdXI7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVyYXRpb24gPSB+fih0VGltZSAvIGN5Y2xlRHVyYXRpb24pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVyYXRpb24gJiYgaXRlcmF0aW9uID09PSB0VGltZSAvIGN5Y2xlRHVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICB0aW1lID0gZHVyO1xuICAgICAgICAgICAgICAgICAgICAgIGl0ZXJhdGlvbi0tO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGltZSA+IGR1ciAmJiAodGltZSA9IGR1cik7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGlzWW95byA9IHRoaXMuX3lveW8gJiYgaXRlcmF0aW9uICYgMTtcblxuICAgICAgICAgICAgICAgICAgaWYgKGlzWW95bykge1xuICAgICAgICAgICAgICAgICAgICB5b3lvRWFzZSA9IHRoaXMuX3lFYXNlO1xuICAgICAgICAgICAgICAgICAgICB0aW1lID0gZHVyIC0gdGltZTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgcHJldkl0ZXJhdGlvbiA9IF9hbmltYXRpb25DeWNsZSh0aGlzLl90VGltZSwgY3ljbGVEdXJhdGlvbik7XG5cbiAgICAgICAgICAgICAgICAgIGlmICh0aW1lID09PSBwcmV2VGltZSAmJiAhZm9yY2UgJiYgdGhpcy5faW5pdHRlZCkge1xuICAgICAgICAgICAgICAgICAgICAvL2NvdWxkIGJlIGR1cmluZyB0aGUgcmVwZWF0RGVsYXkgcGFydC4gTm8gbmVlZCB0byByZW5kZXIgYW5kIGZpcmUgY2FsbGJhY2tzLlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgaWYgKGl0ZXJhdGlvbiAhPT0gcHJldkl0ZXJhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB0aW1lbGluZSAmJiB0aGlzLl95RWFzZSAmJiBfcHJvcGFnYXRlWW95b0Vhc2UodGltZWxpbmUsIGlzWW95byk7IC8vcmVwZWF0UmVmcmVzaCBmdW5jdGlvbmFsaXR5XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFycy5yZXBlYXRSZWZyZXNoICYmICFpc1lveW8gJiYgIXRoaXMuX2xvY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9sb2NrID0gZm9yY2UgPSAxOyAvL2ZvcmNlLCBvdGhlcndpc2UgaWYgbGF6eSBpcyB0cnVlLCB0aGUgX2F0dGVtcHRJbml0VHdlZW4oKSB3aWxsIHJldHVybiBhbmQgd2UnbGwganVtcCBvdXQgYW5kIGdldCBjYXVnaHQgYm91bmNpbmcgb24gZWFjaCB0aWNrLlxuXG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIoX3JvdW5kKGN5Y2xlRHVyYXRpb24gKiBpdGVyYXRpb24pLCB0cnVlKS5pbnZhbGlkYXRlKCkuX2xvY2sgPSAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9pbml0dGVkKSB7XG4gICAgICAgICAgICAgICAgICBpZiAoX2F0dGVtcHRJbml0VHdlZW4odGhpcywgdG90YWxUaW1lIDwgMCA/IHRvdGFsVGltZSA6IHRpbWUsIGZvcmNlLCBzdXBwcmVzc0V2ZW50cykpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fdFRpbWUgPSAwOyAvLyBpbiBjb25zdHJ1Y3RvciBpZiBpbW1lZGlhdGVSZW5kZXIgaXMgdHJ1ZSwgd2Ugc2V0IF90VGltZSB0byAtX3RpbnlOdW0gdG8gaGF2ZSB0aGUgcGxheWhlYWQgY3Jvc3MgdGhlIHN0YXJ0aW5nIHBvaW50IGJ1dCB3ZSBjYW4ndCBsZWF2ZSBfdFRpbWUgYXMgYSBuZWdhdGl2ZSBudW1iZXIuXG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGlmIChkdXIgIT09IHRoaXMuX2R1cikge1xuICAgICAgICAgICAgICAgICAgICAvLyB3aGlsZSBpbml0dGluZywgYSBwbHVnaW4gbGlrZSBJbmVydGlhUGx1Z2luIG1pZ2h0IGFsdGVyIHRoZSBkdXJhdGlvbiwgc28gcmVydW4gZnJvbSB0aGUgc3RhcnQgdG8gZW5zdXJlIGV2ZXJ5dGhpbmcgcmVuZGVycyBhcyBpdCBzaG91bGQuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlcih0b3RhbFRpbWUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5fdFRpbWUgPSB0VGltZTtcbiAgICAgICAgICAgICAgICB0aGlzLl90aW1lID0gdGltZTtcblxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5fYWN0ICYmIHRoaXMuX3RzKSB7XG4gICAgICAgICAgICAgICAgICB0aGlzLl9hY3QgPSAxOyAvL2FzIGxvbmcgYXMgaXQncyBub3QgcGF1c2VkLCBmb3JjZSBpdCB0byBiZSBhY3RpdmUgc28gdGhhdCBpZiB0aGUgdXNlciByZW5kZXJzIGluZGVwZW5kZW50IG9mIHRoZSBwYXJlbnQgdGltZWxpbmUsIGl0J2xsIGJlIGZvcmNlZCB0byByZS1yZW5kZXIgb24gdGhlIG5leHQgdGljay5cblxuICAgICAgICAgICAgICAgICAgdGhpcy5fbGF6eSA9IDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5yYXRpbyA9IHJhdGlvID0gKHlveW9FYXNlIHx8IHRoaXMuX2Vhc2UpKHRpbWUgLyBkdXIpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2Zyb20pIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMucmF0aW8gPSByYXRpbyA9IDEgLSByYXRpbztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aW1lICYmICFwcmV2VGltZSAmJiAhc3VwcHJlc3NFdmVudHMgJiYgX2NhbGxiYWNrKHRoaXMsIFwib25TdGFydFwiKTtcbiAgICAgICAgICAgICAgICBwdCA9IHRoaXMuX3B0O1xuXG4gICAgICAgICAgICAgICAgd2hpbGUgKHB0KSB7XG4gICAgICAgICAgICAgICAgICBwdC5yKHJhdGlvLCBwdC5kKTtcbiAgICAgICAgICAgICAgICAgIHB0ID0gcHQuX25leHQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGltZWxpbmUgJiYgdGltZWxpbmUucmVuZGVyKHRvdGFsVGltZSA8IDAgPyB0b3RhbFRpbWUgOiAhdGltZSAmJiBpc1lveW8gPyAtX3RpbnlOdW0gOiB0aW1lbGluZS5fZHVyICogcmF0aW8sIHN1cHByZXNzRXZlbnRzLCBmb3JjZSkgfHwgdGhpcy5fc3RhcnRBdCAmJiAodGhpcy5felRpbWUgPSB0b3RhbFRpbWUpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX29uVXBkYXRlICYmICFzdXBwcmVzc0V2ZW50cykge1xuICAgICAgICAgICAgICAgICAgdG90YWxUaW1lIDwgMCAmJiB0aGlzLl9zdGFydEF0ICYmIHRoaXMuX3N0YXJ0QXQucmVuZGVyKHRvdGFsVGltZSwgdHJ1ZSwgZm9yY2UpOyAvL25vdGU6IGZvciBwZXJmb3JtYW5jZSByZWFzb25zLCB3ZSB0dWNrIHRoaXMgY29uZGl0aW9uYWwgbG9naWMgaW5zaWRlIGxlc3MgdHJhdmVsZWQgYXJlYXMgKG1vc3QgdHdlZW5zIGRvbid0IGhhdmUgYW4gb25VcGRhdGUpLiBXZSdkIGp1c3QgaGF2ZSBpdCBhdCB0aGUgZW5kIGJlZm9yZSB0aGUgb25Db21wbGV0ZSwgYnV0IHRoZSB2YWx1ZXMgc2hvdWxkIGJlIHVwZGF0ZWQgYmVmb3JlIGFueSBvblVwZGF0ZSBpcyBjYWxsZWQsIHNvIHdlIEFMU08gcHV0IGl0IGhlcmUgYW5kIHRoZW4gaWYgaXQncyBub3QgY2FsbGVkLCB3ZSBkbyBzbyBsYXRlciBuZWFyIHRoZSBvbkNvbXBsZXRlLlxuXG4gICAgICAgICAgICAgICAgICBfY2FsbGJhY2sodGhpcywgXCJvblVwZGF0ZVwiKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9yZXBlYXQgJiYgaXRlcmF0aW9uICE9PSBwcmV2SXRlcmF0aW9uICYmIHRoaXMudmFycy5vblJlcGVhdCAmJiAhc3VwcHJlc3NFdmVudHMgJiYgdGhpcy5wYXJlbnQgJiYgX2NhbGxiYWNrKHRoaXMsIFwib25SZXBlYXRcIik7XG5cbiAgICAgICAgICAgICAgICBpZiAoKHRUaW1lID09PSB0aGlzLl90RHVyIHx8ICF0VGltZSkgJiYgdGhpcy5fdFRpbWUgPT09IHRUaW1lKSB7XG4gICAgICAgICAgICAgICAgICB0b3RhbFRpbWUgPCAwICYmIHRoaXMuX3N0YXJ0QXQgJiYgIXRoaXMuX29uVXBkYXRlICYmIHRoaXMuX3N0YXJ0QXQucmVuZGVyKHRvdGFsVGltZSwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAodG90YWxUaW1lIHx8ICFkdXIpICYmICh0VGltZSA9PT0gdGhpcy5fdER1ciAmJiB0aGlzLl90cyA+IDAgfHwgIXRUaW1lICYmIHRoaXMuX3RzIDwgMCkgJiYgX3JlbW92ZUZyb21QYXJlbnQodGhpcywgMSk7IC8vIGRvbid0IHJlbW92ZSBpZiB3ZSdyZSByZW5kZXJpbmcgYXQgZXhhY3RseSBhIHRpbWUgb2YgMCwgYXMgdGhlcmUgY291bGQgYmUgYXV0b1JldmVydCB2YWx1ZXMgdGhhdCBzaG91bGQgZ2V0IHNldCBvbiB0aGUgbmV4dCB0aWNrIChpZiB0aGUgcGxheWhlYWQgZ29lcyBiYWNrd2FyZCBiZXlvbmQgdGhlIHN0YXJ0VGltZSwgbmVnYXRpdmUgdG90YWxUaW1lKS4gRG9uJ3QgcmVtb3ZlIGlmIHRoZSB0aW1lbGluZSBpcyByZXZlcnNlZCBhbmQgdGhlIHBsYXloZWFkIGlzbid0IGF0IDAsIG90aGVyd2lzZSB0bC5wcm9ncmVzcygxKS5yZXZlcnNlKCkgd29uJ3Qgd29yay4gT25seSByZW1vdmUgaWYgdGhlIHBsYXloZWFkIGlzIGF0IHRoZSBlbmQgYW5kIHRpbWVTY2FsZSBpcyBwb3NpdGl2ZSwgb3IgaWYgdGhlIHBsYXloZWFkIGlzIGF0IDAgYW5kIHRoZSB0aW1lU2NhbGUgaXMgbmVnYXRpdmUuXG5cbiAgICAgICAgICAgICAgICAgIGlmICghc3VwcHJlc3NFdmVudHMgJiYgISh0b3RhbFRpbWUgPCAwICYmICFwcmV2VGltZSkgJiYgKHRUaW1lIHx8IHByZXZUaW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiBwcmV2VGltZSBhbmQgdFRpbWUgYXJlIHplcm8sIHdlIHNob3VsZG4ndCBmaXJlIHRoZSBvblJldmVyc2VDb21wbGV0ZS4gVGhpcyBjb3VsZCBoYXBwZW4gaWYgeW91IGdzYXAudG8oLi4uIHtwYXVzZWQ6dHJ1ZX0pLnBsYXkoKTtcbiAgICAgICAgICAgICAgICAgICAgX2NhbGxiYWNrKHRoaXMsIHRUaW1lID09PSB0RHVyID8gXCJvbkNvbXBsZXRlXCIgOiBcIm9uUmV2ZXJzZUNvbXBsZXRlXCIsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Byb20gJiYgISh0VGltZSA8IHREdXIgJiYgdGhpcy50aW1lU2NhbGUoKSA+IDApICYmIHRoaXMuX3Byb20oKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9wcm90bzMudGFyZ2V0cyA9IGZ1bmN0aW9uIHRhcmdldHMoKSB7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLl90YXJnZXRzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgX3Byb3RvMy5pbnZhbGlkYXRlID0gZnVuY3Rpb24gaW52YWxpZGF0ZSgpIHtcbiAgICAgICAgICAgICAgdGhpcy5fcHQgPSB0aGlzLl9vcCA9IHRoaXMuX3N0YXJ0QXQgPSB0aGlzLl9vblVwZGF0ZSA9IHRoaXMuX2xhenkgPSB0aGlzLnJhdGlvID0gMDtcbiAgICAgICAgICAgICAgdGhpcy5fcHRMb29rdXAgPSBbXTtcbiAgICAgICAgICAgICAgdGhpcy50aW1lbGluZSAmJiB0aGlzLnRpbWVsaW5lLmludmFsaWRhdGUoKTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9BbmltYXRpb24yLnByb3RvdHlwZS5pbnZhbGlkYXRlLmNhbGwodGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfcHJvdG8zLmtpbGwgPSBmdW5jdGlvbiBraWxsKHRhcmdldHMsIHZhcnMpIHtcbiAgICAgICAgICAgICAgaWYgKHZhcnMgPT09IHZvaWQgMCkge1xuICAgICAgICAgICAgICAgIHZhcnMgPSBcImFsbFwiO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCF0YXJnZXRzICYmICghdmFycyB8fCB2YXJzID09PSBcImFsbFwiKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xhenkgPSB0aGlzLl9wdCA9IDA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50ID8gX2ludGVycnVwdCh0aGlzKSA6IHRoaXM7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAodGhpcy50aW1lbGluZSkge1xuICAgICAgICAgICAgICAgIHZhciB0RHVyID0gdGhpcy50aW1lbGluZS50b3RhbER1cmF0aW9uKCk7XG4gICAgICAgICAgICAgICAgdGhpcy50aW1lbGluZS5raWxsVHdlZW5zT2YodGFyZ2V0cywgdmFycywgX292ZXJ3cml0aW5nVHdlZW4gJiYgX292ZXJ3cml0aW5nVHdlZW4udmFycy5vdmVyd3JpdGUgIT09IHRydWUpLl9maXJzdCB8fCBfaW50ZXJydXB0KHRoaXMpOyAvLyBpZiBub3RoaW5nIGlzIGxlZnQgdHdlZW5pbmcsIGludGVycnVwdC5cblxuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50ICYmIHREdXIgIT09IHRoaXMudGltZWxpbmUudG90YWxEdXJhdGlvbigpICYmIF9zZXREdXJhdGlvbih0aGlzLCB0aGlzLl9kdXIgKiB0aGlzLnRpbWVsaW5lLl90RHVyIC8gdER1ciwgMCwgMSk7IC8vIGlmIGEgbmVzdGVkIHR3ZWVuIGlzIGtpbGxlZCB0aGF0IGNoYW5nZXMgdGhlIGR1cmF0aW9uLCBpdCBzaG91bGQgYWZmZWN0IHRoaXMgdHdlZW4ncyBkdXJhdGlvbi4gV2UgbXVzdCB1c2UgdGhlIHJhdGlvLCB0aG91Z2gsIGJlY2F1c2Ugc29tZXRpbWVzIHRoZSBpbnRlcm5hbCB0aW1lbGluZSBpcyBzdHJldGNoZWQgbGlrZSBmb3Iga2V5ZnJhbWVzIHdoZXJlIHRoZXkgZG9uJ3QgYWxsIGFkZCB1cCB0byB3aGF0ZXZlciB0aGUgcGFyZW50IHR3ZWVuJ3MgZHVyYXRpb24gd2FzIHNldCB0by5cblxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdmFyIHBhcnNlZFRhcmdldHMgPSB0aGlzLl90YXJnZXRzLFxuICAgICAgICAgICAgICAgIGtpbGxpbmdUYXJnZXRzID0gdGFyZ2V0cyA/IHRvQXJyYXkodGFyZ2V0cykgOiBwYXJzZWRUYXJnZXRzLFxuICAgICAgICAgICAgICAgIHByb3BUd2Vlbkxvb2t1cCA9IHRoaXMuX3B0TG9va3VwLFxuICAgICAgICAgICAgICAgIGZpcnN0UFQgPSB0aGlzLl9wdCxcbiAgICAgICAgICAgICAgICBvdmVyd3JpdHRlblByb3BzLFxuICAgICAgICAgICAgICAgIGN1ckxvb2t1cCxcbiAgICAgICAgICAgICAgICBjdXJPdmVyd3JpdGVQcm9wcyxcbiAgICAgICAgICAgICAgICBwcm9wcyxcbiAgICAgICAgICAgICAgICBwLFxuICAgICAgICAgICAgICAgIHB0LFxuICAgICAgICAgICAgICAgIGk7XG5cbiAgICAgICAgICAgICAgaWYgKCghdmFycyB8fCB2YXJzID09PSBcImFsbFwiKSAmJiBfYXJyYXlzTWF0Y2gocGFyc2VkVGFyZ2V0cywga2lsbGluZ1RhcmdldHMpKSB7XG4gICAgICAgICAgICAgICAgdmFycyA9PT0gXCJhbGxcIiAmJiAodGhpcy5fcHQgPSAwKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2ludGVycnVwdCh0aGlzKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG92ZXJ3cml0dGVuUHJvcHMgPSB0aGlzLl9vcCA9IHRoaXMuX29wIHx8IFtdO1xuXG4gICAgICAgICAgICAgIGlmICh2YXJzICE9PSBcImFsbFwiKSB7XG4gICAgICAgICAgICAgICAgLy9zbyBwZW9wbGUgY2FuIHBhc3MgaW4gYSBjb21tYS1kZWxpbWl0ZWQgbGlzdCBvZiBwcm9wZXJ0eSBuYW1lc1xuICAgICAgICAgICAgICAgIGlmIChfaXNTdHJpbmcodmFycykpIHtcbiAgICAgICAgICAgICAgICAgIHAgPSB7fTtcblxuICAgICAgICAgICAgICAgICAgX2ZvckVhY2hOYW1lKHZhcnMsIGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwW25hbWVdID0gMTtcbiAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICB2YXJzID0gcDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXJzID0gX2FkZEFsaWFzZXNUb1ZhcnMocGFyc2VkVGFyZ2V0cywgdmFycyk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpID0gcGFyc2VkVGFyZ2V0cy5sZW5ndGg7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgICAgIGlmICh+a2lsbGluZ1RhcmdldHMuaW5kZXhPZihwYXJzZWRUYXJnZXRzW2ldKSkge1xuICAgICAgICAgICAgICAgICAgY3VyTG9va3VwID0gcHJvcFR3ZWVuTG9va3VwW2ldO1xuXG4gICAgICAgICAgICAgICAgICBpZiAodmFycyA9PT0gXCJhbGxcIikge1xuICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlblByb3BzW2ldID0gdmFycztcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMgPSBjdXJMb29rdXA7XG4gICAgICAgICAgICAgICAgICAgIGN1ck92ZXJ3cml0ZVByb3BzID0ge307XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjdXJPdmVyd3JpdGVQcm9wcyA9IG92ZXJ3cml0dGVuUHJvcHNbaV0gPSBvdmVyd3JpdHRlblByb3BzW2ldIHx8IHt9O1xuICAgICAgICAgICAgICAgICAgICBwcm9wcyA9IHZhcnM7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGZvciAocCBpbiBwcm9wcykge1xuICAgICAgICAgICAgICAgICAgICBwdCA9IGN1ckxvb2t1cCAmJiBjdXJMb29rdXBbcF07XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHB0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKCEoXCJraWxsXCIgaW4gcHQuZCkgfHwgcHQuZC5raWxsKHApID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfcmVtb3ZlTGlua2VkTGlzdEl0ZW0odGhpcywgcHQsIFwiX3B0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBjdXJMb29rdXBbcF07XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VyT3ZlcndyaXRlUHJvcHMgIT09IFwiYWxsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjdXJPdmVyd3JpdGVQcm9wc1twXSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB0aGlzLl9pbml0dGVkICYmICF0aGlzLl9wdCAmJiBmaXJzdFBUICYmIF9pbnRlcnJ1cHQodGhpcyk7IC8vaWYgYWxsIHR3ZWVuaW5nIHByb3BlcnRpZXMgYXJlIGtpbGxlZCwga2lsbCB0aGUgdHdlZW4uIFdpdGhvdXQgdGhpcyBsaW5lLCBpZiB0aGVyZSdzIGEgdHdlZW4gd2l0aCBtdWx0aXBsZSB0YXJnZXRzIGFuZCB0aGVuIHlvdSBraWxsVHdlZW5zT2YoKSBlYWNoIHRhcmdldCBpbmRpdmlkdWFsbHksIHRoZSB0d2VlbiB3b3VsZCB0ZWNobmljYWxseSBzdGlsbCByZW1haW4gYWN0aXZlIGFuZCBmaXJlIGl0cyBvbkNvbXBsZXRlIGV2ZW4gdGhvdWdoIHRoZXJlIGFyZW4ndCBhbnkgbW9yZSBwcm9wZXJ0aWVzIHR3ZWVuaW5nLlxuXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgVHdlZW4udG8gPSBmdW5jdGlvbiB0byh0YXJnZXRzLCB2YXJzKSB7XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgVHdlZW4odGFyZ2V0cywgdmFycywgYXJndW1lbnRzWzJdKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIFR3ZWVuLmZyb20gPSBmdW5jdGlvbiBmcm9tKHRhcmdldHMsIHZhcnMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBUd2Vlbih0YXJnZXRzLCBfcGFyc2VWYXJzKGFyZ3VtZW50cywgMSkpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgVHdlZW4uZGVsYXllZENhbGwgPSBmdW5jdGlvbiBkZWxheWVkQ2FsbChkZWxheSwgY2FsbGJhY2ssIHBhcmFtcywgc2NvcGUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBUd2VlbihjYWxsYmFjaywgMCwge1xuICAgICAgICAgICAgICAgIGltbWVkaWF0ZVJlbmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgbGF6eTogZmFsc2UsXG4gICAgICAgICAgICAgICAgb3ZlcndyaXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkZWxheTogZGVsYXksXG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZTogY2FsbGJhY2ssXG4gICAgICAgICAgICAgICAgb25SZXZlcnNlQ29tcGxldGU6IGNhbGxiYWNrLFxuICAgICAgICAgICAgICAgIG9uQ29tcGxldGVQYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgICAgICBvblJldmVyc2VDb21wbGV0ZVBhcmFtczogcGFyYW1zLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrU2NvcGU6IHNjb3BlXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgVHdlZW4uZnJvbVRvID0gZnVuY3Rpb24gZnJvbVRvKHRhcmdldHMsIGZyb21WYXJzLCB0b1ZhcnMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBUd2Vlbih0YXJnZXRzLCBfcGFyc2VWYXJzKGFyZ3VtZW50cywgMikpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgVHdlZW4uc2V0ID0gZnVuY3Rpb24gc2V0KHRhcmdldHMsIHZhcnMpIHtcbiAgICAgICAgICAgICAgdmFycy5kdXJhdGlvbiA9IDA7XG4gICAgICAgICAgICAgIHZhcnMucmVwZWF0RGVsYXkgfHwgKHZhcnMucmVwZWF0ID0gMCk7XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgVHdlZW4odGFyZ2V0cywgdmFycyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBUd2Vlbi5raWxsVHdlZW5zT2YgPSBmdW5jdGlvbiBraWxsVHdlZW5zT2YodGFyZ2V0cywgcHJvcHMsIG9ubHlBY3RpdmUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9nbG9iYWxUaW1lbGluZS5raWxsVHdlZW5zT2YodGFyZ2V0cywgcHJvcHMsIG9ubHlBY3RpdmUpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmV0dXJuIFR3ZWVuO1xuICAgICAgICAgIH0oQW5pbWF0aW9uKTtcblxuICAgICAgICBleHBvcnRzLlR3ZWVuTGl0ZSA9IGV4cG9ydHMuVHdlZW5NYXggPSBleHBvcnRzLlR3ZWVuID0gVHdlZW47XG5cbiAgICAgICAgX3NldERlZmF1bHRzKFR3ZWVuLnByb3RvdHlwZSwge1xuICAgICAgICAgIF90YXJnZXRzOiBbXSxcbiAgICAgICAgICBfbGF6eTogMCxcbiAgICAgICAgICBfc3RhcnRBdDogMCxcbiAgICAgICAgICBfb3A6IDAsXG4gICAgICAgICAgX29uSW5pdDogMFxuICAgICAgICB9KTsgLy9hZGQgdGhlIHBlcnRpbmVudCB0aW1lbGluZSBtZXRob2RzIHRvIFR3ZWVuIGluc3RhbmNlcyBzbyB0aGF0IHVzZXJzIGNhbiBjaGFpbiBjb252ZW5pZW50bHkgYW5kIGNyZWF0ZSBhIHRpbWVsaW5lIGF1dG9tYXRpY2FsbHkuIChyZW1vdmVkIGR1ZSB0byBjb25jZXJucyB0aGF0IGl0J2QgdWx0aW1hdGVseSBhZGQgdG8gbW9yZSBjb25mdXNpb24gZXNwZWNpYWxseSBmb3IgYmVnaW5uZXJzKVxuICAgICAgICAvLyBfZm9yRWFjaE5hbWUoXCJ0byxmcm9tLGZyb21UbyxzZXQsY2FsbCxhZGQsYWRkTGFiZWwsYWRkUGF1c2VcIiwgbmFtZSA9PiB7XG4gICAgICAgIC8vIFx0VHdlZW4ucHJvdG90eXBlW25hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFx0XHRsZXQgdGwgPSBuZXcgVGltZWxpbmUoKTtcbiAgICAgICAgLy8gXHRcdHJldHVybiBfYWRkVG9UaW1lbGluZSh0bCwgdGhpcylbbmFtZV0uYXBwbHkodGwsIHRvQXJyYXkoYXJndW1lbnRzKSk7XG4gICAgICAgIC8vIFx0fVxuICAgICAgICAvLyB9KTtcbiAgICAgICAgLy9mb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eS4gTGV2ZXJhZ2UgdGhlIHRpbWVsaW5lIGNhbGxzLlxuXG5cbiAgICAgICAgX2ZvckVhY2hOYW1lKFwic3RhZ2dlclRvLHN0YWdnZXJGcm9tLHN0YWdnZXJGcm9tVG9cIiwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICBUd2VlbltuYW1lXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0bCA9IG5ldyBUaW1lbGluZSgpLFxuICAgICAgICAgICAgICBwYXJhbXMgPSBfc2xpY2UuY2FsbChhcmd1bWVudHMsIDApO1xuXG4gICAgICAgICAgICBwYXJhbXMuc3BsaWNlKG5hbWUgPT09IFwic3RhZ2dlckZyb21Ub1wiID8gNSA6IDQsIDAsIDApO1xuICAgICAgICAgICAgcmV0dXJuIHRsW25hbWVdLmFwcGx5KHRsLCBwYXJhbXMpO1xuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICAvKlxuICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgKiBQUk9QVFdFRU5cbiAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICovXG5cblxuICAgICAgICB2YXIgX3NldHRlclBsYWluID0gZnVuY3Rpb24gX3NldHRlclBsYWluKHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHRhcmdldFtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgICBfc2V0dGVyRnVuYyA9IGZ1bmN0aW9uIF9zZXR0ZXJGdW5jKHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5XSh2YWx1ZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfc2V0dGVyRnVuY1dpdGhQYXJhbSA9IGZ1bmN0aW9uIF9zZXR0ZXJGdW5jV2l0aFBhcmFtKHRhcmdldCwgcHJvcGVydHksIHZhbHVlLCBkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5XShkYXRhLmZwLCB2YWx1ZSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfc2V0dGVyQXR0cmlidXRlID0gZnVuY3Rpb24gX3NldHRlckF0dHJpYnV0ZSh0YXJnZXQsIHByb3BlcnR5LCB2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5zZXRBdHRyaWJ1dGUocHJvcGVydHksIHZhbHVlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9nZXRTZXR0ZXIgPSBmdW5jdGlvbiBfZ2V0U2V0dGVyKHRhcmdldCwgcHJvcGVydHkpIHtcbiAgICAgICAgICAgIHJldHVybiBfaXNGdW5jdGlvbih0YXJnZXRbcHJvcGVydHldKSA/IF9zZXR0ZXJGdW5jIDogX2lzVW5kZWZpbmVkKHRhcmdldFtwcm9wZXJ0eV0pICYmIHRhcmdldC5zZXRBdHRyaWJ1dGUgPyBfc2V0dGVyQXR0cmlidXRlIDogX3NldHRlclBsYWluO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3JlbmRlclBsYWluID0gZnVuY3Rpb24gX3JlbmRlclBsYWluKHJhdGlvLCBkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YS5zZXQoZGF0YS50LCBkYXRhLnAsIE1hdGgucm91bmQoKGRhdGEucyArIGRhdGEuYyAqIHJhdGlvKSAqIDEwMDAwKSAvIDEwMDAwLCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9yZW5kZXJCb29sZWFuID0gZnVuY3Rpb24gX3JlbmRlckJvb2xlYW4ocmF0aW8sIGRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBkYXRhLnNldChkYXRhLnQsIGRhdGEucCwgISEoZGF0YS5zICsgZGF0YS5jICogcmF0aW8pLCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9yZW5kZXJDb21wbGV4U3RyaW5nID0gZnVuY3Rpb24gX3JlbmRlckNvbXBsZXhTdHJpbmcocmF0aW8sIGRhdGEpIHtcbiAgICAgICAgICAgIHZhciBwdCA9IGRhdGEuX3B0LFxuICAgICAgICAgICAgICBzID0gXCJcIjtcblxuICAgICAgICAgICAgaWYgKCFyYXRpbyAmJiBkYXRhLmIpIHtcbiAgICAgICAgICAgICAgLy9iID0gYmVnaW5uaW5nIHN0cmluZ1xuICAgICAgICAgICAgICBzID0gZGF0YS5iO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChyYXRpbyA9PT0gMSAmJiBkYXRhLmUpIHtcbiAgICAgICAgICAgICAgLy9lID0gZW5kaW5nIHN0cmluZ1xuICAgICAgICAgICAgICBzID0gZGF0YS5lO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgd2hpbGUgKHB0KSB7XG4gICAgICAgICAgICAgICAgcyA9IHB0LnAgKyAocHQubSA/IHB0Lm0ocHQucyArIHB0LmMgKiByYXRpbykgOiBNYXRoLnJvdW5kKChwdC5zICsgcHQuYyAqIHJhdGlvKSAqIDEwMDAwKSAvIDEwMDAwKSArIHM7IC8vd2UgdXNlIHRoZSBcInBcIiBwcm9wZXJ0eSBmb3IgdGhlIHRleHQgaW5iZXR3ZWVuIChsaWtlIGEgc3VmZml4KS4gQW5kIGluIHRoZSBjb250ZXh0IG9mIGEgY29tcGxleCBzdHJpbmcsIHRoZSBtb2RpZmllciAobSkgaXMgdHlwaWNhbGx5IGp1c3QgTWF0aC5yb3VuZCgpLCBsaWtlIGZvciBSR0IgY29sb3JzLlxuXG4gICAgICAgICAgICAgICAgcHQgPSBwdC5fbmV4dDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHMgKz0gZGF0YS5jOyAvL3dlIHVzZSB0aGUgXCJjXCIgb2YgdGhlIFByb3BUd2VlbiB0byBzdG9yZSB0aGUgZmluYWwgY2h1bmsgb2Ygbm9uLW51bWVyaWMgdGV4dC5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZGF0YS5zZXQoZGF0YS50LCBkYXRhLnAsIHMsIGRhdGEpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3JlbmRlclByb3BUd2VlbnMgPSBmdW5jdGlvbiBfcmVuZGVyUHJvcFR3ZWVucyhyYXRpbywgZGF0YSkge1xuICAgICAgICAgICAgdmFyIHB0ID0gZGF0YS5fcHQ7XG5cbiAgICAgICAgICAgIHdoaWxlIChwdCkge1xuICAgICAgICAgICAgICBwdC5yKHJhdGlvLCBwdC5kKTtcbiAgICAgICAgICAgICAgcHQgPSBwdC5fbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hZGRQbHVnaW5Nb2RpZmllciA9IGZ1bmN0aW9uIF9hZGRQbHVnaW5Nb2RpZmllcihtb2RpZmllciwgdHdlZW4sIHRhcmdldCwgcHJvcGVydHkpIHtcbiAgICAgICAgICAgIHZhciBwdCA9IHRoaXMuX3B0LFxuICAgICAgICAgICAgICBuZXh0O1xuXG4gICAgICAgICAgICB3aGlsZSAocHQpIHtcbiAgICAgICAgICAgICAgbmV4dCA9IHB0Ll9uZXh0O1xuICAgICAgICAgICAgICBwdC5wID09PSBwcm9wZXJ0eSAmJiBwdC5tb2RpZmllcihtb2RpZmllciwgdHdlZW4sIHRhcmdldCk7XG4gICAgICAgICAgICAgIHB0ID0gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9raWxsUHJvcFR3ZWVuc09mID0gZnVuY3Rpb24gX2tpbGxQcm9wVHdlZW5zT2YocHJvcGVydHkpIHtcbiAgICAgICAgICAgIHZhciBwdCA9IHRoaXMuX3B0LFxuICAgICAgICAgICAgICBoYXNOb25EZXBlbmRlbnRSZW1haW5pbmcsXG4gICAgICAgICAgICAgIG5leHQ7XG5cbiAgICAgICAgICAgIHdoaWxlIChwdCkge1xuICAgICAgICAgICAgICBuZXh0ID0gcHQuX25leHQ7XG5cbiAgICAgICAgICAgICAgaWYgKHB0LnAgPT09IHByb3BlcnR5ICYmICFwdC5vcCB8fCBwdC5vcCA9PT0gcHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgICBfcmVtb3ZlTGlua2VkTGlzdEl0ZW0odGhpcywgcHQsIFwiX3B0XCIpO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFwdC5kZXApIHtcbiAgICAgICAgICAgICAgICBoYXNOb25EZXBlbmRlbnRSZW1haW5pbmcgPSAxO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcHQgPSBuZXh0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gIWhhc05vbkRlcGVuZGVudFJlbWFpbmluZztcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXR0ZXJXaXRoTW9kaWZpZXIgPSBmdW5jdGlvbiBfc2V0dGVyV2l0aE1vZGlmaWVyKHRhcmdldCwgcHJvcGVydHksIHZhbHVlLCBkYXRhKSB7XG4gICAgICAgICAgICBkYXRhLm1TZXQodGFyZ2V0LCBwcm9wZXJ0eSwgZGF0YS5tLmNhbGwoZGF0YS50d2VlbiwgdmFsdWUsIGRhdGEubXQpLCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zb3J0UHJvcFR3ZWVuc0J5UHJpb3JpdHkgPSBmdW5jdGlvbiBfc29ydFByb3BUd2VlbnNCeVByaW9yaXR5KHBhcmVudCkge1xuICAgICAgICAgICAgdmFyIHB0ID0gcGFyZW50Ll9wdCxcbiAgICAgICAgICAgICAgbmV4dCxcbiAgICAgICAgICAgICAgcHQyLFxuICAgICAgICAgICAgICBmaXJzdCxcbiAgICAgICAgICAgICAgbGFzdDsgLy9zb3J0cyB0aGUgUHJvcFR3ZWVuIGxpbmtlZCBsaXN0IGluIG9yZGVyIG9mIHByaW9yaXR5IGJlY2F1c2Ugc29tZSBwbHVnaW5zIG5lZWQgdG8gZG8gdGhlaXIgd29yayBhZnRlciBBTEwgb2YgdGhlIFByb3BUd2VlbnMgd2VyZSBjcmVhdGVkIChsaWtlIFJvdW5kUHJvcHNQbHVnaW4gYW5kIE1vZGlmaWVyc1BsdWdpbilcblxuICAgICAgICAgICAgd2hpbGUgKHB0KSB7XG4gICAgICAgICAgICAgIG5leHQgPSBwdC5fbmV4dDtcbiAgICAgICAgICAgICAgcHQyID0gZmlyc3Q7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKHB0MiAmJiBwdDIucHIgPiBwdC5wcikge1xuICAgICAgICAgICAgICAgIHB0MiA9IHB0Mi5fbmV4dDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChwdC5fcHJldiA9IHB0MiA/IHB0Mi5fcHJldiA6IGxhc3QpIHtcbiAgICAgICAgICAgICAgICBwdC5fcHJldi5fbmV4dCA9IHB0O1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZpcnN0ID0gcHQ7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAocHQuX25leHQgPSBwdDIpIHtcbiAgICAgICAgICAgICAgICBwdDIuX3ByZXYgPSBwdDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsYXN0ID0gcHQ7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBwdCA9IG5leHQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhcmVudC5fcHQgPSBmaXJzdDtcbiAgICAgICAgICB9OyAvL1Byb3BUd2VlbiBrZXk6IHQgPSB0YXJnZXQsIHAgPSBwcm9wLCByID0gcmVuZGVyZXIsIGQgPSBkYXRhLCBzID0gc3RhcnQsIGMgPSBjaGFuZ2UsIG9wID0gb3ZlcndyaXRlUHJvcGVydHkgKE9OTFkgcG9wdWxhdGVkIHdoZW4gaXQncyBkaWZmZXJlbnQgdGhhbiBwKSwgcHIgPSBwcmlvcml0eSwgX25leHQvX3ByZXYgZm9yIHRoZSBsaW5rZWQgbGlzdCBzaWJsaW5ncywgc2V0ID0gc2V0dGVyLCBtID0gbW9kaWZpZXIsIG1TZXQgPSBtb2RpZmllclNldHRlciAodGhlIG9yaWdpbmFsIHNldHRlciwgYmVmb3JlIGEgbW9kaWZpZXIgd2FzIGFkZGVkKVxuXG5cbiAgICAgICAgZXhwb3J0cy5fc29ydFByb3BUd2VlbnNCeVByaW9yaXR5ID0gX3NvcnRQcm9wVHdlZW5zQnlQcmlvcml0eTtcbiAgICAgICAgZXhwb3J0cy5fcmVuZGVyQ29tcGxleFN0cmluZyA9IF9yZW5kZXJDb21wbGV4U3RyaW5nO1xuICAgICAgICBleHBvcnRzLl9nZXRTZXR0ZXIgPSBfZ2V0U2V0dGVyO1xuXG4gICAgICAgIHZhciBQcm9wVHdlZW4gPVxuICAgICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBQcm9wVHdlZW4obmV4dCwgdGFyZ2V0LCBwcm9wLCBzdGFydCwgY2hhbmdlLCByZW5kZXJlciwgZGF0YSwgc2V0dGVyLCBwcmlvcml0eSkge1xuICAgICAgICAgICAgICB0aGlzLnQgPSB0YXJnZXQ7XG4gICAgICAgICAgICAgIHRoaXMucyA9IHN0YXJ0O1xuICAgICAgICAgICAgICB0aGlzLmMgPSBjaGFuZ2U7XG4gICAgICAgICAgICAgIHRoaXMucCA9IHByb3A7XG4gICAgICAgICAgICAgIHRoaXMuciA9IHJlbmRlcmVyIHx8IF9yZW5kZXJQbGFpbjtcbiAgICAgICAgICAgICAgdGhpcy5kID0gZGF0YSB8fCB0aGlzO1xuICAgICAgICAgICAgICB0aGlzLnNldCA9IHNldHRlciB8fCBfc2V0dGVyUGxhaW47XG4gICAgICAgICAgICAgIHRoaXMucHIgPSBwcmlvcml0eSB8fCAwO1xuICAgICAgICAgICAgICB0aGlzLl9uZXh0ID0gbmV4dDtcblxuICAgICAgICAgICAgICBpZiAobmV4dCkge1xuICAgICAgICAgICAgICAgIG5leHQuX3ByZXYgPSB0aGlzO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBfcHJvdG80ID0gUHJvcFR3ZWVuLnByb3RvdHlwZTtcblxuICAgICAgICAgICAgX3Byb3RvNC5tb2RpZmllciA9IGZ1bmN0aW9uIG1vZGlmaWVyKGZ1bmMsIHR3ZWVuLCB0YXJnZXQpIHtcbiAgICAgICAgICAgICAgdGhpcy5tU2V0ID0gdGhpcy5tU2V0IHx8IHRoaXMuc2V0OyAvL2luIGNhc2UgaXQgd2FzIGFscmVhZHkgc2V0IChhIFByb3BUd2VlbiBjYW4gb25seSBoYXZlIG9uZSBtb2RpZmllcilcblxuICAgICAgICAgICAgICB0aGlzLnNldCA9IF9zZXR0ZXJXaXRoTW9kaWZpZXI7XG4gICAgICAgICAgICAgIHRoaXMubSA9IGZ1bmM7XG4gICAgICAgICAgICAgIHRoaXMubXQgPSB0YXJnZXQ7IC8vbW9kaWZpZXIgdGFyZ2V0XG5cbiAgICAgICAgICAgICAgdGhpcy50d2VlbiA9IHR3ZWVuO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmV0dXJuIFByb3BUd2VlbjtcbiAgICAgICAgICB9KCk7IC8vSW5pdGlhbGl6YXRpb24gdGFza3NcblxuXG4gICAgICAgIGV4cG9ydHMuUHJvcFR3ZWVuID0gUHJvcFR3ZWVuO1xuXG4gICAgICAgIF9mb3JFYWNoTmFtZShfY2FsbGJhY2tOYW1lcyArIFwicGFyZW50LGR1cmF0aW9uLGVhc2UsZGVsYXksb3ZlcndyaXRlLHJ1bkJhY2t3YXJkcyxzdGFydEF0LHlveW8saW1tZWRpYXRlUmVuZGVyLHJlcGVhdCxyZXBlYXREZWxheSxkYXRhLHBhdXNlZCxyZXZlcnNlZCxsYXp5LGNhbGxiYWNrU2NvcGUsc3RyaW5nRmlsdGVyLGlkLHlveW9FYXNlLHN0YWdnZXIsaW5oZXJpdCxyZXBlYXRSZWZyZXNoLGtleWZyYW1lcyxhdXRvUmV2ZXJ0LHNjcm9sbFRyaWdnZXJcIiwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gX3Jlc2VydmVkUHJvcHNbbmFtZV0gPSAxO1xuICAgICAgICB9KTtcblxuICAgICAgICBfZ2xvYmFscy5Ud2Vlbk1heCA9IF9nbG9iYWxzLlR3ZWVuTGl0ZSA9IFR3ZWVuO1xuICAgICAgICBfZ2xvYmFscy5UaW1lbGluZUxpdGUgPSBfZ2xvYmFscy5UaW1lbGluZU1heCA9IFRpbWVsaW5lO1xuICAgICAgICBfZ2xvYmFsVGltZWxpbmUgPSBuZXcgVGltZWxpbmUoe1xuICAgICAgICAgIHNvcnRDaGlsZHJlbjogZmFsc2UsXG4gICAgICAgICAgZGVmYXVsdHM6IF9kZWZhdWx0cyxcbiAgICAgICAgICBhdXRvUmVtb3ZlQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgaWQ6IFwicm9vdFwiLFxuICAgICAgICAgIHNtb290aENoaWxkVGltaW5nOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBfY29uZmlnLnN0cmluZ0ZpbHRlciA9IF9jb2xvclN0cmluZ0ZpbHRlcjtcbiAgICAgICAgLypcbiAgICAgICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICogR1NBUFxuICAgICAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgKi9cblxuICAgICAgICB2YXIgX2dzYXAgPSB7XG4gICAgICAgICAgcmVnaXN0ZXJQbHVnaW46IGZ1bmN0aW9uIHJlZ2lzdGVyUGx1Z2luKCkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXJncy5mb3JFYWNoKGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9jcmVhdGVQbHVnaW4oY29uZmlnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgdGltZWxpbmU6IGZ1bmN0aW9uIHRpbWVsaW5lKHZhcnMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVGltZWxpbmUodmFycyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXRUd2VlbnNPZjogZnVuY3Rpb24gZ2V0VHdlZW5zT2YodGFyZ2V0cywgb25seUFjdGl2ZSkge1xuICAgICAgICAgICAgcmV0dXJuIF9nbG9iYWxUaW1lbGluZS5nZXRUd2VlbnNPZih0YXJnZXRzLCBvbmx5QWN0aXZlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdldFByb3BlcnR5OiBmdW5jdGlvbiBnZXRQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5LCB1bml0LCB1bmNhY2hlKSB7XG4gICAgICAgICAgICBfaXNTdHJpbmcodGFyZ2V0KSAmJiAodGFyZ2V0ID0gdG9BcnJheSh0YXJnZXQpWzBdKTsgLy9pbiBjYXNlIHNlbGVjdG9yIHRleHQgb3IgYW4gYXJyYXkgaXMgcGFzc2VkIGluXG5cbiAgICAgICAgICAgIHZhciBnZXR0ZXIgPSBfZ2V0Q2FjaGUodGFyZ2V0IHx8IHt9KS5nZXQsXG4gICAgICAgICAgICAgIGZvcm1hdCA9IHVuaXQgPyBfcGFzc1Rocm91Z2ggOiBfbnVtZXJpY0lmUG9zc2libGU7XG5cbiAgICAgICAgICAgIHVuaXQgPT09IFwibmF0aXZlXCIgJiYgKHVuaXQgPSBcIlwiKTtcbiAgICAgICAgICAgIHJldHVybiAhdGFyZ2V0ID8gdGFyZ2V0IDogIXByb3BlcnR5ID8gZnVuY3Rpb24gKHByb3BlcnR5LCB1bml0LCB1bmNhY2hlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBmb3JtYXQoKF9wbHVnaW5zW3Byb3BlcnR5XSAmJiBfcGx1Z2luc1twcm9wZXJ0eV0uZ2V0IHx8IGdldHRlcikodGFyZ2V0LCBwcm9wZXJ0eSwgdW5pdCwgdW5jYWNoZSkpO1xuICAgICAgICAgICAgfSA6IGZvcm1hdCgoX3BsdWdpbnNbcHJvcGVydHldICYmIF9wbHVnaW5zW3Byb3BlcnR5XS5nZXQgfHwgZ2V0dGVyKSh0YXJnZXQsIHByb3BlcnR5LCB1bml0LCB1bmNhY2hlKSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBxdWlja1NldHRlcjogZnVuY3Rpb24gcXVpY2tTZXR0ZXIodGFyZ2V0LCBwcm9wZXJ0eSwgdW5pdCkge1xuICAgICAgICAgICAgdGFyZ2V0ID0gdG9BcnJheSh0YXJnZXQpO1xuXG4gICAgICAgICAgICBpZiAodGFyZ2V0Lmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgdmFyIHNldHRlcnMgPSB0YXJnZXQubWFwKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdzYXAucXVpY2tTZXR0ZXIodCwgcHJvcGVydHksIHVuaXQpO1xuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBsID0gc2V0dGVycy5sZW5ndGg7XG4gICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgaSA9IGw7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgICAgICBzZXR0ZXJzW2ldKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldFswXSB8fCB7fTtcblxuICAgICAgICAgICAgdmFyIFBsdWdpbiA9IF9wbHVnaW5zW3Byb3BlcnR5XSxcbiAgICAgICAgICAgICAgY2FjaGUgPSBfZ2V0Q2FjaGUodGFyZ2V0KSxcbiAgICAgICAgICAgICAgcCA9IGNhY2hlLmhhcm5lc3MgJiYgKGNhY2hlLmhhcm5lc3MuYWxpYXNlcyB8fCB7fSlbcHJvcGVydHldIHx8IHByb3BlcnR5LFxuICAgICAgICAgICAgICAvLyBpbiBjYXNlIGl0J3MgYW4gYWxpYXMsIGxpa2UgXCJyb3RhdGVcIiBmb3IgXCJyb3RhdGlvblwiLlxuICAgICAgICAgICAgICBzZXR0ZXIgPSBQbHVnaW4gPyBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgcCA9IG5ldyBQbHVnaW4oKTtcbiAgICAgICAgICAgICAgICBfcXVpY2tUd2Vlbi5fcHQgPSAwO1xuICAgICAgICAgICAgICAgIHAuaW5pdCh0YXJnZXQsIHVuaXQgPyB2YWx1ZSArIHVuaXQgOiB2YWx1ZSwgX3F1aWNrVHdlZW4sIDAsIFt0YXJnZXRdKTtcbiAgICAgICAgICAgICAgICBwLnJlbmRlcigxLCBwKTtcbiAgICAgICAgICAgICAgICBfcXVpY2tUd2Vlbi5fcHQgJiYgX3JlbmRlclByb3BUd2VlbnMoMSwgX3F1aWNrVHdlZW4pO1xuICAgICAgICAgICAgICB9IDogY2FjaGUuc2V0KHRhcmdldCwgcCk7XG5cbiAgICAgICAgICAgIHJldHVybiBQbHVnaW4gPyBzZXR0ZXIgOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHNldHRlcih0YXJnZXQsIHAsIHVuaXQgPyB2YWx1ZSArIHVuaXQgOiB2YWx1ZSwgY2FjaGUsIDEpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGlzVHdlZW5pbmc6IGZ1bmN0aW9uIGlzVHdlZW5pbmcodGFyZ2V0cykge1xuICAgICAgICAgICAgcmV0dXJuIF9nbG9iYWxUaW1lbGluZS5nZXRUd2VlbnNPZih0YXJnZXRzLCB0cnVlKS5sZW5ndGggPiAwO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZGVmYXVsdHM6IGZ1bmN0aW9uIGRlZmF1bHRzKHZhbHVlKSB7XG4gICAgICAgICAgICB2YWx1ZSAmJiB2YWx1ZS5lYXNlICYmICh2YWx1ZS5lYXNlID0gX3BhcnNlRWFzZSh2YWx1ZS5lYXNlLCBfZGVmYXVsdHMuZWFzZSkpO1xuICAgICAgICAgICAgcmV0dXJuIF9tZXJnZURlZXAoX2RlZmF1bHRzLCB2YWx1ZSB8fCB7fSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZyh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIF9tZXJnZURlZXAoX2NvbmZpZywgdmFsdWUgfHwge30pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcmVnaXN0ZXJFZmZlY3Q6IGZ1bmN0aW9uIHJlZ2lzdGVyRWZmZWN0KF9yZWYyKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYyLm5hbWUsXG4gICAgICAgICAgICAgIGVmZmVjdCA9IF9yZWYyLmVmZmVjdCxcbiAgICAgICAgICAgICAgcGx1Z2lucyA9IF9yZWYyLnBsdWdpbnMsXG4gICAgICAgICAgICAgIGRlZmF1bHRzID0gX3JlZjIuZGVmYXVsdHMsXG4gICAgICAgICAgICAgIGV4dGVuZFRpbWVsaW5lID0gX3JlZjIuZXh0ZW5kVGltZWxpbmU7XG4gICAgICAgICAgICAocGx1Z2lucyB8fCBcIlwiKS5zcGxpdChcIixcIikuZm9yRWFjaChmdW5jdGlvbiAocGx1Z2luTmFtZSkge1xuICAgICAgICAgICAgICByZXR1cm4gcGx1Z2luTmFtZSAmJiAhX3BsdWdpbnNbcGx1Z2luTmFtZV0gJiYgIV9nbG9iYWxzW3BsdWdpbk5hbWVdICYmIF93YXJuKG5hbWUgKyBcIiBlZmZlY3QgcmVxdWlyZXMgXCIgKyBwbHVnaW5OYW1lICsgXCIgcGx1Z2luLlwiKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBfZWZmZWN0c1tuYW1lXSA9IGZ1bmN0aW9uICh0YXJnZXRzLCB2YXJzLCB0bCkge1xuICAgICAgICAgICAgICByZXR1cm4gZWZmZWN0KHRvQXJyYXkodGFyZ2V0cyksIF9zZXREZWZhdWx0cyh2YXJzIHx8IHt9LCBkZWZhdWx0cyksIHRsKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmIChleHRlbmRUaW1lbGluZSkge1xuICAgICAgICAgICAgICBUaW1lbGluZS5wcm90b3R5cGVbbmFtZV0gPSBmdW5jdGlvbiAodGFyZ2V0cywgdmFycywgcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5hZGQoX2VmZmVjdHNbbmFtZV0odGFyZ2V0cywgX2lzT2JqZWN0KHZhcnMpID8gdmFycyA6IChwb3NpdGlvbiA9IHZhcnMpICYmIHt9LCB0aGlzKSwgcG9zaXRpb24pO1xuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcmVnaXN0ZXJFYXNlOiBmdW5jdGlvbiByZWdpc3RlckVhc2UobmFtZSwgZWFzZSkge1xuICAgICAgICAgICAgX2Vhc2VNYXBbbmFtZV0gPSBfcGFyc2VFYXNlKGVhc2UpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcGFyc2VFYXNlOiBmdW5jdGlvbiBwYXJzZUVhc2UoZWFzZSwgZGVmYXVsdEVhc2UpIHtcbiAgICAgICAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gX3BhcnNlRWFzZShlYXNlLCBkZWZhdWx0RWFzZSkgOiBfZWFzZU1hcDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdldEJ5SWQ6IGZ1bmN0aW9uIGdldEJ5SWQoaWQpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ2xvYmFsVGltZWxpbmUuZ2V0QnlJZChpZCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBleHBvcnRSb290OiBmdW5jdGlvbiBleHBvcnRSb290KHZhcnMsIGluY2x1ZGVEZWxheWVkQ2FsbHMpIHtcbiAgICAgICAgICAgIGlmICh2YXJzID09PSB2b2lkIDApIHtcbiAgICAgICAgICAgICAgdmFycyA9IHt9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdGwgPSBuZXcgVGltZWxpbmUodmFycyksXG4gICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICBuZXh0O1xuICAgICAgICAgICAgdGwuc21vb3RoQ2hpbGRUaW1pbmcgPSBfaXNOb3RGYWxzZSh2YXJzLnNtb290aENoaWxkVGltaW5nKTtcblxuICAgICAgICAgICAgX2dsb2JhbFRpbWVsaW5lLnJlbW92ZSh0bCk7XG5cbiAgICAgICAgICAgIHRsLl9kcCA9IDA7IC8vb3RoZXJ3aXNlIGl0J2xsIGdldCByZS1hY3RpdmF0ZWQgd2hlbiBhZGRpbmcgY2hpbGRyZW4gYW5kIGJlIHJlLWludHJvZHVjZWQgaW50byBfZ2xvYmFsVGltZWxpbmUncyBsaW5rZWQgbGlzdCAodGhlbiBhZGRlZCB0byBpdHNlbGYpLlxuXG4gICAgICAgICAgICB0bC5fdGltZSA9IHRsLl90VGltZSA9IF9nbG9iYWxUaW1lbGluZS5fdGltZTtcbiAgICAgICAgICAgIGNoaWxkID0gX2dsb2JhbFRpbWVsaW5lLl9maXJzdDtcblxuICAgICAgICAgICAgd2hpbGUgKGNoaWxkKSB7XG4gICAgICAgICAgICAgIG5leHQgPSBjaGlsZC5fbmV4dDtcblxuICAgICAgICAgICAgICBpZiAoaW5jbHVkZURlbGF5ZWRDYWxscyB8fCAhKCFjaGlsZC5fZHVyICYmIGNoaWxkIGluc3RhbmNlb2YgVHdlZW4gJiYgY2hpbGQudmFycy5vbkNvbXBsZXRlID09PSBjaGlsZC5fdGFyZ2V0c1swXSkpIHtcbiAgICAgICAgICAgICAgICBfYWRkVG9UaW1lbGluZSh0bCwgY2hpbGQsIGNoaWxkLl9zdGFydCAtIGNoaWxkLl9kZWxheSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBjaGlsZCA9IG5leHQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF9hZGRUb1RpbWVsaW5lKF9nbG9iYWxUaW1lbGluZSwgdGwsIDApO1xuXG4gICAgICAgICAgICByZXR1cm4gdGw7XG4gICAgICAgICAgfSxcbiAgICAgICAgICB1dGlsczoge1xuICAgICAgICAgICAgd3JhcDogd3JhcCxcbiAgICAgICAgICAgIHdyYXBZb3lvOiB3cmFwWW95byxcbiAgICAgICAgICAgIGRpc3RyaWJ1dGU6IGRpc3RyaWJ1dGUsXG4gICAgICAgICAgICByYW5kb206IHJhbmRvbSxcbiAgICAgICAgICAgIHNuYXA6IHNuYXAsXG4gICAgICAgICAgICBub3JtYWxpemU6IG5vcm1hbGl6ZSxcbiAgICAgICAgICAgIGdldFVuaXQ6IGdldFVuaXQsXG4gICAgICAgICAgICBjbGFtcDogY2xhbXAsXG4gICAgICAgICAgICBzcGxpdENvbG9yOiBzcGxpdENvbG9yLFxuICAgICAgICAgICAgdG9BcnJheTogdG9BcnJheSxcbiAgICAgICAgICAgIG1hcFJhbmdlOiBtYXBSYW5nZSxcbiAgICAgICAgICAgIHBpcGU6IHBpcGUsXG4gICAgICAgICAgICB1bml0aXplOiB1bml0aXplLFxuICAgICAgICAgICAgaW50ZXJwb2xhdGU6IGludGVycG9sYXRlLFxuICAgICAgICAgICAgc2h1ZmZsZTogc2h1ZmZsZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgaW5zdGFsbDogX2luc3RhbGwsXG4gICAgICAgICAgZWZmZWN0czogX2VmZmVjdHMsXG4gICAgICAgICAgdGlja2VyOiBfdGlja2VyLFxuICAgICAgICAgIHVwZGF0ZVJvb3Q6IFRpbWVsaW5lLnVwZGF0ZVJvb3QsXG4gICAgICAgICAgcGx1Z2luczogX3BsdWdpbnMsXG4gICAgICAgICAgZ2xvYmFsVGltZWxpbmU6IF9nbG9iYWxUaW1lbGluZSxcbiAgICAgICAgICBjb3JlOiB7XG4gICAgICAgICAgICBQcm9wVHdlZW46IFByb3BUd2VlbixcbiAgICAgICAgICAgIGdsb2JhbHM6IF9hZGRHbG9iYWwsXG4gICAgICAgICAgICBUd2VlbjogVHdlZW4sXG4gICAgICAgICAgICBUaW1lbGluZTogVGltZWxpbmUsXG4gICAgICAgICAgICBBbmltYXRpb246IEFuaW1hdGlvbixcbiAgICAgICAgICAgIGdldENhY2hlOiBfZ2V0Q2FjaGUsXG4gICAgICAgICAgICBfcmVtb3ZlTGlua2VkTGlzdEl0ZW06IF9yZW1vdmVMaW5rZWRMaXN0SXRlbSxcbiAgICAgICAgICAgIHN1cHByZXNzT3ZlcndyaXRlczogZnVuY3Rpb24gc3VwcHJlc3NPdmVyd3JpdGVzKHZhbHVlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfc3VwcHJlc3NPdmVyd3JpdGVzID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIF9mb3JFYWNoTmFtZShcInRvLGZyb20sZnJvbVRvLGRlbGF5ZWRDYWxsLHNldCxraWxsVHdlZW5zT2ZcIiwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gX2dzYXBbbmFtZV0gPSBUd2VlbltuYW1lXTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgX3RpY2tlci5hZGQoVGltZWxpbmUudXBkYXRlUm9vdCk7XG5cbiAgICAgICAgX3F1aWNrVHdlZW4gPSBfZ3NhcC50byh7fSwge1xuICAgICAgICAgIGR1cmF0aW9uOiAwXG4gICAgICAgIH0pOyAvLyAtLS0tIEVYVFJBIFBMVUdJTlMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgICAgICB2YXIgX2dldFBsdWdpblByb3BUd2VlbiA9IGZ1bmN0aW9uIF9nZXRQbHVnaW5Qcm9wVHdlZW4ocGx1Z2luLCBwcm9wKSB7XG4gICAgICAgICAgdmFyIHB0ID0gcGx1Z2luLl9wdDtcblxuICAgICAgICAgIHdoaWxlIChwdCAmJiBwdC5wICE9PSBwcm9wICYmIHB0Lm9wICE9PSBwcm9wICYmIHB0LmZwICE9PSBwcm9wKSB7XG4gICAgICAgICAgICBwdCA9IHB0Ll9uZXh0O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBwdDtcbiAgICAgICAgfSxcbiAgICAgICAgICBfYWRkTW9kaWZpZXJzID0gZnVuY3Rpb24gX2FkZE1vZGlmaWVycyh0d2VlbiwgbW9kaWZpZXJzKSB7XG4gICAgICAgICAgICB2YXIgdGFyZ2V0cyA9IHR3ZWVuLl90YXJnZXRzLFxuICAgICAgICAgICAgICBwLFxuICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICBwdDtcblxuICAgICAgICAgICAgZm9yIChwIGluIG1vZGlmaWVycykge1xuICAgICAgICAgICAgICBpID0gdGFyZ2V0cy5sZW5ndGg7XG5cbiAgICAgICAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgICAgIHB0ID0gdHdlZW4uX3B0TG9va3VwW2ldW3BdO1xuXG4gICAgICAgICAgICAgICAgaWYgKHB0ICYmIChwdCA9IHB0LmQpKSB7XG4gICAgICAgICAgICAgICAgICBpZiAocHQuX3B0KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlzIGEgcGx1Z2luXG4gICAgICAgICAgICAgICAgICAgIHB0ID0gX2dldFBsdWdpblByb3BUd2VlbihwdCwgcCk7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIHB0ICYmIHB0Lm1vZGlmaWVyICYmIHB0Lm1vZGlmaWVyKG1vZGlmaWVyc1twXSwgdHdlZW4sIHRhcmdldHNbaV0sIHApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgX2J1aWxkTW9kaWZpZXJQbHVnaW4gPSBmdW5jdGlvbiBfYnVpbGRNb2RpZmllclBsdWdpbihuYW1lLCBtb2RpZmllcikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgcmF3VmFyczogMSxcbiAgICAgICAgICAgICAgLy9kb24ndCBwcmUtcHJvY2VzcyBmdW5jdGlvbi1iYXNlZCB2YWx1ZXMgb3IgXCJyYW5kb20oKVwiIHN0cmluZ3MuXG4gICAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQodGFyZ2V0LCB2YXJzLCB0d2Vlbikge1xuICAgICAgICAgICAgICAgIHR3ZWVuLl9vbkluaXQgPSBmdW5jdGlvbiAodHdlZW4pIHtcbiAgICAgICAgICAgICAgICAgIHZhciB0ZW1wLCBwO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoX2lzU3RyaW5nKHZhcnMpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlbXAgPSB7fTtcblxuICAgICAgICAgICAgICAgICAgICBfZm9yRWFjaE5hbWUodmFycywgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVtcFtuYW1lXSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIH0pOyAvL2lmIHRoZSB1c2VyIHBhc3NlcyBpbiBhIGNvbW1hLWRlbGltaXRlZCBsaXN0IG9mIHByb3BlcnR5IG5hbWVzIHRvIHJvdW5kUHJvcHMsIGxpa2UgXCJ4LHlcIiwgd2Ugcm91bmQgdG8gd2hvbGUgbnVtYmVycy5cblxuXG4gICAgICAgICAgICAgICAgICAgIHZhcnMgPSB0ZW1wO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBpZiAobW9kaWZpZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGVtcCA9IHt9O1xuXG4gICAgICAgICAgICAgICAgICAgIGZvciAocCBpbiB2YXJzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgdGVtcFtwXSA9IG1vZGlmaWVyKHZhcnNbcF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdmFycyA9IHRlbXA7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIF9hZGRNb2RpZmllcnModHdlZW4sIHZhcnMpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfTsgLy9yZWdpc3RlciBjb3JlIHBsdWdpbnNcblxuXG4gICAgICAgIHZhciBnc2FwID0gX2dzYXAucmVnaXN0ZXJQbHVnaW4oe1xuICAgICAgICAgIG5hbWU6IFwiYXR0clwiLFxuICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQodGFyZ2V0LCB2YXJzLCB0d2VlbiwgaW5kZXgsIHRhcmdldHMpIHtcbiAgICAgICAgICAgIHZhciBwLCBwdDtcblxuICAgICAgICAgICAgZm9yIChwIGluIHZhcnMpIHtcbiAgICAgICAgICAgICAgcHQgPSB0aGlzLmFkZCh0YXJnZXQsIFwic2V0QXR0cmlidXRlXCIsICh0YXJnZXQuZ2V0QXR0cmlidXRlKHApIHx8IDApICsgXCJcIiwgdmFyc1twXSwgaW5kZXgsIHRhcmdldHMsIDAsIDAsIHApO1xuICAgICAgICAgICAgICBwdCAmJiAocHQub3AgPSBwKTtcblxuICAgICAgICAgICAgICB0aGlzLl9wcm9wcy5wdXNoKHApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiZW5kQXJyYXlcIixcbiAgICAgICAgICBpbml0OiBmdW5jdGlvbiBpbml0KHRhcmdldCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBpID0gdmFsdWUubGVuZ3RoO1xuXG4gICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgIHRoaXMuYWRkKHRhcmdldCwgaSwgdGFyZ2V0W2ldIHx8IDAsIHZhbHVlW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIF9idWlsZE1vZGlmaWVyUGx1Z2luKFwicm91bmRQcm9wc1wiLCBfcm91bmRNb2RpZmllciksIF9idWlsZE1vZGlmaWVyUGx1Z2luKFwibW9kaWZpZXJzXCIpLCBfYnVpbGRNb2RpZmllclBsdWdpbihcInNuYXBcIiwgc25hcCkpIHx8IF9nc2FwOyAvL3RvIHByZXZlbnQgdGhlIGNvcmUgcGx1Z2lucyBmcm9tIGJlaW5nIGRyb3BwZWQgdmlhIGFnZ3Jlc3NpdmUgdHJlZSBzaGFraW5nLCB3ZSBtdXN0IGluY2x1ZGUgdGhlbSBpbiB0aGUgdmFyaWFibGUgZGVjbGFyYXRpb24gaW4gdGhpcyB3YXkuXG5cblxuICAgICAgICBleHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmdzYXAgPSBnc2FwO1xuICAgICAgICBUd2Vlbi52ZXJzaW9uID0gVGltZWxpbmUudmVyc2lvbiA9IGdzYXAudmVyc2lvbiA9IFwiMy42LjBcIjtcbiAgICAgICAgX2NvcmVSZWFkeSA9IDE7XG5cbiAgICAgICAgaWYgKF93aW5kb3dFeGlzdHMoKSkge1xuICAgICAgICAgIF93YWtlKCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgUG93ZXIwID0gX2Vhc2VNYXAuUG93ZXIwLFxuICAgICAgICAgIFBvd2VyMSA9IF9lYXNlTWFwLlBvd2VyMSxcbiAgICAgICAgICBQb3dlcjIgPSBfZWFzZU1hcC5Qb3dlcjIsXG4gICAgICAgICAgUG93ZXIzID0gX2Vhc2VNYXAuUG93ZXIzLFxuICAgICAgICAgIFBvd2VyNCA9IF9lYXNlTWFwLlBvd2VyNCxcbiAgICAgICAgICBMaW5lYXIgPSBfZWFzZU1hcC5MaW5lYXIsXG4gICAgICAgICAgUXVhZCA9IF9lYXNlTWFwLlF1YWQsXG4gICAgICAgICAgQ3ViaWMgPSBfZWFzZU1hcC5DdWJpYyxcbiAgICAgICAgICBRdWFydCA9IF9lYXNlTWFwLlF1YXJ0LFxuICAgICAgICAgIFF1aW50ID0gX2Vhc2VNYXAuUXVpbnQsXG4gICAgICAgICAgU3Ryb25nID0gX2Vhc2VNYXAuU3Ryb25nLFxuICAgICAgICAgIEVsYXN0aWMgPSBfZWFzZU1hcC5FbGFzdGljLFxuICAgICAgICAgIEJhY2sgPSBfZWFzZU1hcC5CYWNrLFxuICAgICAgICAgIFN0ZXBwZWRFYXNlID0gX2Vhc2VNYXAuU3RlcHBlZEVhc2UsXG4gICAgICAgICAgQm91bmNlID0gX2Vhc2VNYXAuQm91bmNlLFxuICAgICAgICAgIFNpbmUgPSBfZWFzZU1hcC5TaW5lLFxuICAgICAgICAgIEV4cG8gPSBfZWFzZU1hcC5FeHBvLFxuICAgICAgICAgIENpcmMgPSBfZWFzZU1hcC5DaXJjO1xuICAgICAgICBleHBvcnRzLkNpcmMgPSBDaXJjO1xuICAgICAgICBleHBvcnRzLkV4cG8gPSBFeHBvO1xuICAgICAgICBleHBvcnRzLlNpbmUgPSBTaW5lO1xuICAgICAgICBleHBvcnRzLkJvdW5jZSA9IEJvdW5jZTtcbiAgICAgICAgZXhwb3J0cy5TdGVwcGVkRWFzZSA9IFN0ZXBwZWRFYXNlO1xuICAgICAgICBleHBvcnRzLkJhY2sgPSBCYWNrO1xuICAgICAgICBleHBvcnRzLkVsYXN0aWMgPSBFbGFzdGljO1xuICAgICAgICBleHBvcnRzLlN0cm9uZyA9IFN0cm9uZztcbiAgICAgICAgZXhwb3J0cy5RdWludCA9IFF1aW50O1xuICAgICAgICBleHBvcnRzLlF1YXJ0ID0gUXVhcnQ7XG4gICAgICAgIGV4cG9ydHMuQ3ViaWMgPSBDdWJpYztcbiAgICAgICAgZXhwb3J0cy5RdWFkID0gUXVhZDtcbiAgICAgICAgZXhwb3J0cy5MaW5lYXIgPSBMaW5lYXI7XG4gICAgICAgIGV4cG9ydHMuUG93ZXI0ID0gUG93ZXI0O1xuICAgICAgICBleHBvcnRzLlBvd2VyMyA9IFBvd2VyMztcbiAgICAgICAgZXhwb3J0cy5Qb3dlcjIgPSBQb3dlcjI7XG4gICAgICAgIGV4cG9ydHMuUG93ZXIxID0gUG93ZXIxO1xuICAgICAgICBleHBvcnRzLlBvd2VyMCA9IFBvd2VyMDtcbiAgICAgIH0sIHt9XSwgXCJicDRaXCI6IFtmdW5jdGlvbiAocmVxdWlyZSwgbW9kdWxlLCBleHBvcnRzKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBleHBvcnRzLmNoZWNrUHJlZml4ID0gZXhwb3J0cy5fY3JlYXRlRWxlbWVudCA9IGV4cG9ydHMuX2dldEJCb3ggPSBleHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLkNTU1BsdWdpbiA9IHZvaWQgMDtcblxuICAgICAgICB2YXIgX2dzYXBDb3JlID0gcmVxdWlyZShcIi4vZ3NhcC1jb3JlLmpzXCIpO1xuXG4gICAgICAgIC8qIVxuICAgICAgICAgKiBDU1NQbHVnaW4gMy42LjBcbiAgICAgICAgICogaHR0cHM6Ly9ncmVlbnNvY2suY29tXG4gICAgICAgICAqXG4gICAgICAgICAqIENvcHlyaWdodCAyMDA4LTIwMjEsIEdyZWVuU29jay4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAgICAgICAgICogU3ViamVjdCB0byB0aGUgdGVybXMgYXQgaHR0cHM6Ly9ncmVlbnNvY2suY29tL3N0YW5kYXJkLWxpY2Vuc2Ugb3IgZm9yXG4gICAgICAgICAqIENsdWIgR3JlZW5Tb2NrIG1lbWJlcnMsIHRoZSBhZ3JlZW1lbnQgaXNzdWVkIHdpdGggdGhhdCBtZW1iZXJzaGlwLlxuICAgICAgICAgKiBAYXV0aG9yOiBKYWNrIERveWxlLCBqYWNrQGdyZWVuc29jay5jb21cbiAgICAgICAgKi9cblxuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgICAgICB2YXIgX3dpbixcbiAgICAgICAgICBfZG9jLFxuICAgICAgICAgIF9kb2NFbGVtZW50LFxuICAgICAgICAgIF9wbHVnaW5Jbml0dGVkLFxuICAgICAgICAgIF90ZW1wRGl2LFxuICAgICAgICAgIF90ZW1wRGl2U3R5bGVyLFxuICAgICAgICAgIF9yZWNlbnRTZXR0ZXJQbHVnaW4sXG4gICAgICAgICAgX3dpbmRvd0V4aXN0cyA9IGZ1bmN0aW9uIF93aW5kb3dFeGlzdHMoKSB7XG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF90cmFuc2Zvcm1Qcm9wcyA9IHt9LFxuICAgICAgICAgIF9SQUQyREVHID0gMTgwIC8gTWF0aC5QSSxcbiAgICAgICAgICBfREVHMlJBRCA9IE1hdGguUEkgLyAxODAsXG4gICAgICAgICAgX2F0YW4yID0gTWF0aC5hdGFuMixcbiAgICAgICAgICBfYmlnTnVtID0gMWU4LFxuICAgICAgICAgIF9jYXBzRXhwID0gLyhbQS1aXSkvZyxcbiAgICAgICAgICBfaG9yaXpvbnRhbEV4cCA9IC8oPzpsZWZ0fHJpZ2h0fHdpZHRofG1hcmdpbnxwYWRkaW5nfHgpL2ksXG4gICAgICAgICAgX2NvbXBsZXhFeHAgPSAvW1xccyxcXChdXFxTLyxcbiAgICAgICAgICBfcHJvcGVydHlBbGlhc2VzID0ge1xuICAgICAgICAgICAgYXV0b0FscGhhOiBcIm9wYWNpdHksdmlzaWJpbGl0eVwiLFxuICAgICAgICAgICAgc2NhbGU6IFwic2NhbGVYLHNjYWxlWVwiLFxuICAgICAgICAgICAgYWxwaGE6IFwib3BhY2l0eVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVuZGVyQ1NTUHJvcCA9IGZ1bmN0aW9uIF9yZW5kZXJDU1NQcm9wKHJhdGlvLCBkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YS5zZXQoZGF0YS50LCBkYXRhLnAsIE1hdGgucm91bmQoKGRhdGEucyArIGRhdGEuYyAqIHJhdGlvKSAqIDEwMDAwKSAvIDEwMDAwICsgZGF0YS51LCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9yZW5kZXJQcm9wV2l0aEVuZCA9IGZ1bmN0aW9uIF9yZW5kZXJQcm9wV2l0aEVuZChyYXRpbywgZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIGRhdGEuc2V0KGRhdGEudCwgZGF0YS5wLCByYXRpbyA9PT0gMSA/IGRhdGEuZSA6IE1hdGgucm91bmQoKGRhdGEucyArIGRhdGEuYyAqIHJhdGlvKSAqIDEwMDAwKSAvIDEwMDAwICsgZGF0YS51LCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9yZW5kZXJDU1NQcm9wV2l0aEJlZ2lubmluZyA9IGZ1bmN0aW9uIF9yZW5kZXJDU1NQcm9wV2l0aEJlZ2lubmluZyhyYXRpbywgZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIGRhdGEuc2V0KGRhdGEudCwgZGF0YS5wLCByYXRpbyA/IE1hdGgucm91bmQoKGRhdGEucyArIGRhdGEuYyAqIHJhdGlvKSAqIDEwMDAwKSAvIDEwMDAwICsgZGF0YS51IDogZGF0YS5iLCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vaWYgdW5pdHMgY2hhbmdlLCB3ZSBuZWVkIGEgd2F5IHRvIHJlbmRlciB0aGUgb3JpZ2luYWwgdW5pdC92YWx1ZSB3aGVuIHRoZSB0d2VlbiBnb2VzIGFsbCB0aGUgd2F5IGJhY2sgdG8gdGhlIGJlZ2lubmluZyAocmF0aW86MClcbiAgICAgICAgICBfcmVuZGVyUm91bmRlZENTU1Byb3AgPSBmdW5jdGlvbiBfcmVuZGVyUm91bmRlZENTU1Byb3AocmF0aW8sIGRhdGEpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGRhdGEucyArIGRhdGEuYyAqIHJhdGlvO1xuICAgICAgICAgICAgZGF0YS5zZXQoZGF0YS50LCBkYXRhLnAsIH5+KHZhbHVlICsgKHZhbHVlIDwgMCA/IC0uNSA6IC41KSkgKyBkYXRhLnUsIGRhdGEpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3JlbmRlck5vblR3ZWVuaW5nVmFsdWUgPSBmdW5jdGlvbiBfcmVuZGVyTm9uVHdlZW5pbmdWYWx1ZShyYXRpbywgZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIGRhdGEuc2V0KGRhdGEudCwgZGF0YS5wLCByYXRpbyA/IGRhdGEuZSA6IGRhdGEuYiwgZGF0YSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVuZGVyTm9uVHdlZW5pbmdWYWx1ZU9ubHlBdEVuZCA9IGZ1bmN0aW9uIF9yZW5kZXJOb25Ud2VlbmluZ1ZhbHVlT25seUF0RW5kKHJhdGlvLCBkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YS5zZXQoZGF0YS50LCBkYXRhLnAsIHJhdGlvICE9PSAxID8gZGF0YS5iIDogZGF0YS5lLCBkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXR0ZXJDU1NTdHlsZSA9IGZ1bmN0aW9uIF9zZXR0ZXJDU1NTdHlsZSh0YXJnZXQsIHByb3BlcnR5LCB2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5zdHlsZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXR0ZXJDU1NQcm9wID0gZnVuY3Rpb24gX3NldHRlckNTU1Byb3AodGFyZ2V0LCBwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuc3R5bGUuc2V0UHJvcGVydHkocHJvcGVydHksIHZhbHVlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXR0ZXJUcmFuc2Zvcm0gPSBmdW5jdGlvbiBfc2V0dGVyVHJhbnNmb3JtKHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0Ll9nc2FwW3Byb3BlcnR5XSA9IHZhbHVlO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3NldHRlclNjYWxlID0gZnVuY3Rpb24gX3NldHRlclNjYWxlKHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0Ll9nc2FwLnNjYWxlWCA9IHRhcmdldC5fZ3NhcC5zY2FsZVkgPSB2YWx1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXR0ZXJTY2FsZVdpdGhSZW5kZXIgPSBmdW5jdGlvbiBfc2V0dGVyU2NhbGVXaXRoUmVuZGVyKHRhcmdldCwgcHJvcGVydHksIHZhbHVlLCBkYXRhLCByYXRpbykge1xuICAgICAgICAgICAgdmFyIGNhY2hlID0gdGFyZ2V0Ll9nc2FwO1xuICAgICAgICAgICAgY2FjaGUuc2NhbGVYID0gY2FjaGUuc2NhbGVZID0gdmFsdWU7XG4gICAgICAgICAgICBjYWNoZS5yZW5kZXJUcmFuc2Zvcm0ocmF0aW8sIGNhY2hlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9zZXR0ZXJUcmFuc2Zvcm1XaXRoUmVuZGVyID0gZnVuY3Rpb24gX3NldHRlclRyYW5zZm9ybVdpdGhSZW5kZXIodGFyZ2V0LCBwcm9wZXJ0eSwgdmFsdWUsIGRhdGEsIHJhdGlvKSB7XG4gICAgICAgICAgICB2YXIgY2FjaGUgPSB0YXJnZXQuX2dzYXA7XG4gICAgICAgICAgICBjYWNoZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGNhY2hlLnJlbmRlclRyYW5zZm9ybShyYXRpbywgY2FjaGUpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3RyYW5zZm9ybVByb3AgPSBcInRyYW5zZm9ybVwiLFxuICAgICAgICAgIF90cmFuc2Zvcm1PcmlnaW5Qcm9wID0gX3RyYW5zZm9ybVByb3AgKyBcIk9yaWdpblwiLFxuICAgICAgICAgIF9zdXBwb3J0czNELFxuICAgICAgICAgIF9jcmVhdGVFbGVtZW50ID0gZnVuY3Rpb24gX2NyZWF0ZUVsZW1lbnQodHlwZSwgbnMpIHtcbiAgICAgICAgICAgIHZhciBlID0gX2RvYy5jcmVhdGVFbGVtZW50TlMgPyBfZG9jLmNyZWF0ZUVsZW1lbnROUygobnMgfHwgXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIpLnJlcGxhY2UoL15odHRwcy8sIFwiaHR0cFwiKSwgdHlwZSkgOiBfZG9jLmNyZWF0ZUVsZW1lbnQodHlwZSk7IC8vc29tZSBzZXJ2ZXJzIHN3YXAgaW4gaHR0cHMgZm9yIGh0dHAgaW4gdGhlIG5hbWVzcGFjZSB3aGljaCBjYW4gYnJlYWsgdGhpbmdzLCBtYWtpbmcgXCJzdHlsZVwiIGluYWNjZXNzaWJsZS5cblxuICAgICAgICAgICAgcmV0dXJuIGUuc3R5bGUgPyBlIDogX2RvYy5jcmVhdGVFbGVtZW50KHR5cGUpOyAvL3NvbWUgZW52aXJvbm1lbnRzIHdvbid0IGFsbG93IGFjY2VzcyB0byB0aGUgZWxlbWVudCdzIHN0eWxlIHdoZW4gY3JlYXRlZCB3aXRoIGEgbmFtZXNwYWNlIGluIHdoaWNoIGNhc2Ugd2UgZGVmYXVsdCB0byB0aGUgc3RhbmRhcmQgY3JlYXRlRWxlbWVudCgpIHRvIHdvcmsgYXJvdW5kIHRoZSBpc3N1ZS4gQWxzbyBub3RlIHRoYXQgd2hlbiBHU0FQIGlzIGVtYmVkZGVkIGRpcmVjdGx5IGluc2lkZSBhbiBTVkcgZmlsZSwgY3JlYXRlRWxlbWVudCgpIHdvbid0IGFsbG93IGFjY2VzcyB0byB0aGUgc3R5bGUgb2JqZWN0IGluIEZpcmVmb3ggKHNlZSBodHRwczovL2dyZWVuc29jay5jb20vZm9ydW1zL3RvcGljLzIwMjE1LXByb2JsZW0tdXNpbmctdHdlZW5tYXgtaW4tc3RhbmRhbG9uZS1zZWxmLWNvbnRhaW5pbmctc3ZnLWZpbGUtZXJyLWNhbm5vdC1zZXQtcHJvcGVydHktY3NzdGV4dC1vZi11bmRlZmluZWQvKS5cbiAgICAgICAgICB9LFxuICAgICAgICAgIF9nZXRDb21wdXRlZFByb3BlcnR5ID0gZnVuY3Rpb24gX2dldENvbXB1dGVkUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eSwgc2tpcFByZWZpeEZhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgY3MgPSBnZXRDb21wdXRlZFN0eWxlKHRhcmdldCk7XG4gICAgICAgICAgICByZXR1cm4gY3NbcHJvcGVydHldIHx8IGNzLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHkucmVwbGFjZShfY2Fwc0V4cCwgXCItJDFcIikudG9Mb3dlckNhc2UoKSkgfHwgY3MuZ2V0UHJvcGVydHlWYWx1ZShwcm9wZXJ0eSkgfHwgIXNraXBQcmVmaXhGYWxsYmFjayAmJiBfZ2V0Q29tcHV0ZWRQcm9wZXJ0eSh0YXJnZXQsIF9jaGVja1Byb3BQcmVmaXgocHJvcGVydHkpIHx8IHByb3BlcnR5LCAxKSB8fCBcIlwiOyAvL2NzcyB2YXJpYWJsZXMgbWF5IG5vdCBuZWVkIGNhcHMgc3dhcHBlZCBvdXQgZm9yIGRhc2hlcyBhbmQgbG93ZXJjYXNlLlxuICAgICAgICAgIH0sXG4gICAgICAgICAgX3ByZWZpeGVzID0gXCJPLE1veixtcyxNcyxXZWJraXRcIi5zcGxpdChcIixcIiksXG4gICAgICAgICAgX2NoZWNrUHJvcFByZWZpeCA9IGZ1bmN0aW9uIF9jaGVja1Byb3BQcmVmaXgocHJvcGVydHksIGVsZW1lbnQsIHByZWZlclByZWZpeCkge1xuICAgICAgICAgICAgdmFyIGUgPSBlbGVtZW50IHx8IF90ZW1wRGl2LFxuICAgICAgICAgICAgICBzID0gZS5zdHlsZSxcbiAgICAgICAgICAgICAgaSA9IDU7XG5cbiAgICAgICAgICAgIGlmIChwcm9wZXJ0eSBpbiBzICYmICFwcmVmZXJQcmVmaXgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwcm9wZXJ0eSA9IHByb3BlcnR5LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJvcGVydHkuc3Vic3RyKDEpO1xuXG4gICAgICAgICAgICB3aGlsZSAoaS0tICYmICEoX3ByZWZpeGVzW2ldICsgcHJvcGVydHkgaW4gcykpIHsgfVxuXG4gICAgICAgICAgICByZXR1cm4gaSA8IDAgPyBudWxsIDogKGkgPT09IDMgPyBcIm1zXCIgOiBpID49IDAgPyBfcHJlZml4ZXNbaV0gOiBcIlwiKSArIHByb3BlcnR5O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2luaXRDb3JlID0gZnVuY3Rpb24gX2luaXRDb3JlKCkge1xuICAgICAgICAgICAgaWYgKF93aW5kb3dFeGlzdHMoKSAmJiB3aW5kb3cuZG9jdW1lbnQpIHtcbiAgICAgICAgICAgICAgX3dpbiA9IHdpbmRvdztcbiAgICAgICAgICAgICAgX2RvYyA9IF93aW4uZG9jdW1lbnQ7XG4gICAgICAgICAgICAgIF9kb2NFbGVtZW50ID0gX2RvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgICAgICAgIF90ZW1wRGl2ID0gX2NyZWF0ZUVsZW1lbnQoXCJkaXZcIikgfHwge1xuICAgICAgICAgICAgICAgIHN0eWxlOiB7fVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBfdGVtcERpdlN0eWxlciA9IF9jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgICBfdHJhbnNmb3JtUHJvcCA9IF9jaGVja1Byb3BQcmVmaXgoX3RyYW5zZm9ybVByb3ApO1xuICAgICAgICAgICAgICBfdHJhbnNmb3JtT3JpZ2luUHJvcCA9IF90cmFuc2Zvcm1Qcm9wICsgXCJPcmlnaW5cIjtcbiAgICAgICAgICAgICAgX3RlbXBEaXYuc3R5bGUuY3NzVGV4dCA9IFwiYm9yZGVyLXdpZHRoOjA7bGluZS1oZWlnaHQ6MDtwb3NpdGlvbjphYnNvbHV0ZTtwYWRkaW5nOjBcIjsgLy9tYWtlIHN1cmUgdG8gb3ZlcnJpZGUgY2VydGFpbiBwcm9wZXJ0aWVzIHRoYXQgbWF5IGNvbnRhbWluYXRlIG1lYXN1cmVtZW50cywgaW4gY2FzZSB0aGUgdXNlciBoYXMgb3ZlcnJlYWNoaW5nIHN0eWxlIHNoZWV0cy5cblxuICAgICAgICAgICAgICBfc3VwcG9ydHMzRCA9ICEhX2NoZWNrUHJvcFByZWZpeChcInBlcnNwZWN0aXZlXCIpO1xuICAgICAgICAgICAgICBfcGx1Z2luSW5pdHRlZCA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZ2V0QkJveEhhY2sgPSBmdW5jdGlvbiBfZ2V0QkJveEhhY2soc3dhcElmUG9zc2libGUpIHtcbiAgICAgICAgICAgIC8vd29ya3MgYXJvdW5kIGlzc3VlcyBpbiBzb21lIGJyb3dzZXJzIChsaWtlIEZpcmVmb3gpIHRoYXQgZG9uJ3QgY29ycmVjdGx5IHJlcG9ydCBnZXRCQm94KCkgb24gU1ZHIGVsZW1lbnRzIGluc2lkZSBhIDxkZWZzPiBlbGVtZW50IGFuZC9vciA8bWFzaz4uIFdlIHRyeSBjcmVhdGluZyBhbiBTVkcsIGFkZGluZyBpdCB0byB0aGUgZG9jdW1lbnRFbGVtZW50IGFuZCB0b3NzIHRoZSBlbGVtZW50IGluIHRoZXJlIHNvIHRoYXQgaXQncyBkZWZpbml0ZWx5IHBhcnQgb2YgdGhlIHJlbmRlcmluZyB0cmVlLCB0aGVuIGdyYWIgdGhlIGJib3ggYW5kIGlmIGl0IHdvcmtzLCB3ZSBhY3R1YWxseSBzd2FwIG91dCB0aGUgb3JpZ2luYWwgZ2V0QkJveCgpIG1ldGhvZCBmb3Igb3VyIG93biB0aGF0IGRvZXMgdGhlc2UgZXh0cmEgc3RlcHMgd2hlbmV2ZXIgZ2V0QkJveCBpcyBuZWVkZWQuIFRoaXMgaGVscHMgZW5zdXJlIHRoYXQgcGVyZm9ybWFuY2UgaXMgb3B0aW1hbCAob25seSBkbyBhbGwgdGhlc2UgZXh0cmEgc3RlcHMgd2hlbiBhYnNvbHV0ZWx5IG5lY2Vzc2FyeS4uLm1vc3QgZWxlbWVudHMgZG9uJ3QgbmVlZCBpdCkuXG4gICAgICAgICAgICB2YXIgc3ZnID0gX2NyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgdGhpcy5vd25lclNWR0VsZW1lbnQgJiYgdGhpcy5vd25lclNWR0VsZW1lbnQuZ2V0QXR0cmlidXRlKFwieG1sbnNcIikgfHwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKSxcbiAgICAgICAgICAgICAgb2xkUGFyZW50ID0gdGhpcy5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICBvbGRTaWJsaW5nID0gdGhpcy5uZXh0U2libGluZyxcbiAgICAgICAgICAgICAgb2xkQ1NTID0gdGhpcy5zdHlsZS5jc3NUZXh0LFxuICAgICAgICAgICAgICBiYm94O1xuXG4gICAgICAgICAgICBfZG9jRWxlbWVudC5hcHBlbmRDaGlsZChzdmcpO1xuXG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGhpcyk7XG4gICAgICAgICAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cbiAgICAgICAgICAgIGlmIChzd2FwSWZQb3NzaWJsZSkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGJib3ggPSB0aGlzLmdldEJCb3goKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9nc2FwQkJveCA9IHRoaXMuZ2V0QkJveDsgLy9zdG9yZSB0aGUgb3JpZ2luYWxcblxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QkJveCA9IF9nZXRCQm94SGFjaztcbiAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgeyB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX2dzYXBCQm94KSB7XG4gICAgICAgICAgICAgIGJib3ggPSB0aGlzLl9nc2FwQkJveCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAob2xkUGFyZW50KSB7XG4gICAgICAgICAgICAgIGlmIChvbGRTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgb2xkUGFyZW50Lmluc2VydEJlZm9yZSh0aGlzLCBvbGRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvbGRQYXJlbnQuYXBwZW5kQ2hpbGQodGhpcyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX2RvY0VsZW1lbnQucmVtb3ZlQ2hpbGQoc3ZnKTtcblxuICAgICAgICAgICAgdGhpcy5zdHlsZS5jc3NUZXh0ID0gb2xkQ1NTO1xuICAgICAgICAgICAgcmV0dXJuIGJib3g7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZ2V0QXR0cmlidXRlRmFsbGJhY2tzID0gZnVuY3Rpb24gX2dldEF0dHJpYnV0ZUZhbGxiYWNrcyh0YXJnZXQsIGF0dHJpYnV0ZXNBcnJheSkge1xuICAgICAgICAgICAgdmFyIGkgPSBhdHRyaWJ1dGVzQXJyYXkubGVuZ3RoO1xuXG4gICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgIGlmICh0YXJnZXQuaGFzQXR0cmlidXRlKGF0dHJpYnV0ZXNBcnJheVtpXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzQXJyYXlbaV0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfZ2V0QkJveCA9IGZ1bmN0aW9uIF9nZXRCQm94KHRhcmdldCkge1xuICAgICAgICAgICAgdmFyIGJvdW5kcztcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgYm91bmRzID0gdGFyZ2V0LmdldEJCb3goKTsgLy9GaXJlZm94IHRocm93cyBlcnJvcnMgaWYgeW91IHRyeSBjYWxsaW5nIGdldEJCb3goKSBvbiBhbiBTVkcgZWxlbWVudCB0aGF0J3Mgbm90IHJlbmRlcmVkIChsaWtlIGluIGEgPHN5bWJvbD4gb3IgPGRlZnM+KS4gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NjEyMTE4XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICBib3VuZHMgPSBfZ2V0QkJveEhhY2suY2FsbCh0YXJnZXQsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBib3VuZHMgJiYgKGJvdW5kcy53aWR0aCB8fCBib3VuZHMuaGVpZ2h0KSB8fCB0YXJnZXQuZ2V0QkJveCA9PT0gX2dldEJCb3hIYWNrIHx8IChib3VuZHMgPSBfZ2V0QkJveEhhY2suY2FsbCh0YXJnZXQsIHRydWUpKTsgLy9zb21lIGJyb3dzZXJzIChsaWtlIEZpcmVmb3gpIG1pc3JlcG9ydCB0aGUgYm91bmRzIGlmIHRoZSBlbGVtZW50IGhhcyB6ZXJvIHdpZHRoIGFuZCBoZWlnaHQgKGl0IGp1c3QgYXNzdW1lcyBpdCdzIGF0IHg6MCwgeTowKSwgdGh1cyB3ZSBuZWVkIHRvIG1hbnVhbGx5IGdyYWIgdGhlIHBvc2l0aW9uIGluIHRoYXQgY2FzZS5cblxuICAgICAgICAgICAgcmV0dXJuIGJvdW5kcyAmJiAhYm91bmRzLndpZHRoICYmICFib3VuZHMueCAmJiAhYm91bmRzLnkgPyB7XG4gICAgICAgICAgICAgIHg6ICtfZ2V0QXR0cmlidXRlRmFsbGJhY2tzKHRhcmdldCwgW1wieFwiLCBcImN4XCIsIFwieDFcIl0pIHx8IDAsXG4gICAgICAgICAgICAgIHk6ICtfZ2V0QXR0cmlidXRlRmFsbGJhY2tzKHRhcmdldCwgW1wieVwiLCBcImN5XCIsIFwieTFcIl0pIHx8IDAsXG4gICAgICAgICAgICAgIHdpZHRoOiAwLFxuICAgICAgICAgICAgICBoZWlnaHQ6IDBcbiAgICAgICAgICAgIH0gOiBib3VuZHM7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfaXNTVkcgPSBmdW5jdGlvbiBfaXNTVkcoZSkge1xuICAgICAgICAgICAgcmV0dXJuICEhKGUuZ2V0Q1RNICYmICghZS5wYXJlbnROb2RlIHx8IGUub3duZXJTVkdFbGVtZW50KSAmJiBfZ2V0QkJveChlKSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvL3JlcG9ydHMgaWYgdGhlIGVsZW1lbnQgaXMgYW4gU1ZHIG9uIHdoaWNoIGdldEJCb3goKSBhY3R1YWxseSB3b3Jrc1xuICAgICAgICAgIF9yZW1vdmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIF9yZW1vdmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5KSB7XG4gICAgICAgICAgICBpZiAocHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgdmFyIHN0eWxlID0gdGFyZ2V0LnN0eWxlO1xuXG4gICAgICAgICAgICAgIGlmIChwcm9wZXJ0eSBpbiBfdHJhbnNmb3JtUHJvcHMgJiYgcHJvcGVydHkgIT09IF90cmFuc2Zvcm1PcmlnaW5Qcm9wKSB7XG4gICAgICAgICAgICAgICAgcHJvcGVydHkgPSBfdHJhbnNmb3JtUHJvcDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChzdHlsZS5yZW1vdmVQcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wZXJ0eS5zdWJzdHIoMCwgMikgPT09IFwibXNcIiB8fCBwcm9wZXJ0eS5zdWJzdHIoMCwgNikgPT09IFwid2Via2l0XCIpIHtcbiAgICAgICAgICAgICAgICAgIC8vTWljcm9zb2Z0IGFuZCBzb21lIFdlYmtpdCBicm93c2VycyBkb24ndCBjb25mb3JtIHRvIHRoZSBzdGFuZGFyZCBvZiBjYXBpdGFsaXppbmcgdGhlIGZpcnN0IHByZWZpeCBjaGFyYWN0ZXIsIHNvIHdlIGFkanVzdCBzbyB0aGF0IHdoZW4gd2UgcHJlZml4IHRoZSBjYXBzIHdpdGggYSBkYXNoLCBpdCdzIGNvcnJlY3QgKG90aGVyd2lzZSBpdCdkIGJlIFwibXMtdHJhbnNmb3JtXCIgaW5zdGVhZCBvZiBcIi1tcy10cmFuc2Zvcm1cIiBmb3IgSUU5LCBmb3IgZXhhbXBsZSlcbiAgICAgICAgICAgICAgICAgIHByb3BlcnR5ID0gXCItXCIgKyBwcm9wZXJ0eTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzdHlsZS5yZW1vdmVQcm9wZXJ0eShwcm9wZXJ0eS5yZXBsYWNlKF9jYXBzRXhwLCBcIi0kMVwiKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL25vdGU6IG9sZCB2ZXJzaW9ucyBvZiBJRSB1c2UgXCJyZW1vdmVBdHRyaWJ1dGUoKVwiIGluc3RlYWQgb2YgXCJyZW1vdmVQcm9wZXJ0eSgpXCJcbiAgICAgICAgICAgICAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUocHJvcGVydHkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfYWRkTm9uVHdlZW5pbmdQVCA9IGZ1bmN0aW9uIF9hZGROb25Ud2VlbmluZ1BUKHBsdWdpbiwgdGFyZ2V0LCBwcm9wZXJ0eSwgYmVnaW5uaW5nLCBlbmQsIG9ubHlTZXRBdEVuZCkge1xuICAgICAgICAgICAgdmFyIHB0ID0gbmV3IF9nc2FwQ29yZS5Qcm9wVHdlZW4ocGx1Z2luLl9wdCwgdGFyZ2V0LCBwcm9wZXJ0eSwgMCwgMSwgb25seVNldEF0RW5kID8gX3JlbmRlck5vblR3ZWVuaW5nVmFsdWVPbmx5QXRFbmQgOiBfcmVuZGVyTm9uVHdlZW5pbmdWYWx1ZSk7XG4gICAgICAgICAgICBwbHVnaW4uX3B0ID0gcHQ7XG4gICAgICAgICAgICBwdC5iID0gYmVnaW5uaW5nO1xuICAgICAgICAgICAgcHQuZSA9IGVuZDtcblxuICAgICAgICAgICAgcGx1Z2luLl9wcm9wcy5wdXNoKHByb3BlcnR5KTtcblxuICAgICAgICAgICAgcmV0dXJuIHB0O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX25vbkNvbnZlcnRpYmxlVW5pdHMgPSB7XG4gICAgICAgICAgICBkZWc6IDEsXG4gICAgICAgICAgICByYWQ6IDEsXG4gICAgICAgICAgICB0dXJuOiAxXG4gICAgICAgICAgfSxcbiAgICAgICAgICAvL3Rha2VzIGEgc2luZ2xlIHZhbHVlIGxpa2UgMjBweCBhbmQgY29udmVydHMgaXQgdG8gdGhlIHVuaXQgc3BlY2lmaWVkLCBsaWtlIFwiJVwiLCByZXR1cm5pbmcgb25seSB0aGUgbnVtZXJpYyBhbW91bnQuXG4gICAgICAgICAgX2NvbnZlcnRUb1VuaXQgPSBmdW5jdGlvbiBfY29udmVydFRvVW5pdCh0YXJnZXQsIHByb3BlcnR5LCB2YWx1ZSwgdW5pdCkge1xuICAgICAgICAgICAgdmFyIGN1clZhbHVlID0gcGFyc2VGbG9hdCh2YWx1ZSkgfHwgMCxcbiAgICAgICAgICAgICAgY3VyVW5pdCA9ICh2YWx1ZSArIFwiXCIpLnRyaW0oKS5zdWJzdHIoKGN1clZhbHVlICsgXCJcIikubGVuZ3RoKSB8fCBcInB4XCIsXG4gICAgICAgICAgICAgIC8vIHNvbWUgYnJvd3NlcnMgbGVhdmUgZXh0cmEgd2hpdGVzcGFjZSBhdCB0aGUgYmVnaW5uaW5nIG9mIENTUyB2YXJpYWJsZXMsIGhlbmNlIHRoZSBuZWVkIHRvIHRyaW0oKVxuICAgICAgICAgICAgICBzdHlsZSA9IF90ZW1wRGl2LnN0eWxlLFxuICAgICAgICAgICAgICBob3Jpem9udGFsID0gX2hvcml6b250YWxFeHAudGVzdChwcm9wZXJ0eSksXG4gICAgICAgICAgICAgIGlzUm9vdFNWRyA9IHRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwic3ZnXCIsXG4gICAgICAgICAgICAgIG1lYXN1cmVQcm9wZXJ0eSA9IChpc1Jvb3RTVkcgPyBcImNsaWVudFwiIDogXCJvZmZzZXRcIikgKyAoaG9yaXpvbnRhbCA/IFwiV2lkdGhcIiA6IFwiSGVpZ2h0XCIpLFxuICAgICAgICAgICAgICBhbW91bnQgPSAxMDAsXG4gICAgICAgICAgICAgIHRvUGl4ZWxzID0gdW5pdCA9PT0gXCJweFwiLFxuICAgICAgICAgICAgICB0b1BlcmNlbnQgPSB1bml0ID09PSBcIiVcIixcbiAgICAgICAgICAgICAgcHgsXG4gICAgICAgICAgICAgIHBhcmVudCxcbiAgICAgICAgICAgICAgY2FjaGUsXG4gICAgICAgICAgICAgIGlzU1ZHO1xuXG4gICAgICAgICAgICBpZiAodW5pdCA9PT0gY3VyVW5pdCB8fCAhY3VyVmFsdWUgfHwgX25vbkNvbnZlcnRpYmxlVW5pdHNbdW5pdF0gfHwgX25vbkNvbnZlcnRpYmxlVW5pdHNbY3VyVW5pdF0pIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGN1clZhbHVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjdXJVbml0ICE9PSBcInB4XCIgJiYgIXRvUGl4ZWxzICYmIChjdXJWYWx1ZSA9IF9jb252ZXJ0VG9Vbml0KHRhcmdldCwgcHJvcGVydHksIHZhbHVlLCBcInB4XCIpKTtcbiAgICAgICAgICAgIGlzU1ZHID0gdGFyZ2V0LmdldENUTSAmJiBfaXNTVkcodGFyZ2V0KTtcblxuICAgICAgICAgICAgaWYgKCh0b1BlcmNlbnQgfHwgY3VyVW5pdCA9PT0gXCIlXCIpICYmIChfdHJhbnNmb3JtUHJvcHNbcHJvcGVydHldIHx8IH5wcm9wZXJ0eS5pbmRleE9mKFwiYWRpdXNcIikpKSB7XG4gICAgICAgICAgICAgIHB4ID0gaXNTVkcgPyB0YXJnZXQuZ2V0QkJveCgpW2hvcml6b250YWwgPyBcIndpZHRoXCIgOiBcImhlaWdodFwiXSA6IHRhcmdldFttZWFzdXJlUHJvcGVydHldO1xuICAgICAgICAgICAgICByZXR1cm4gKDAsIF9nc2FwQ29yZS5fcm91bmQpKHRvUGVyY2VudCA/IGN1clZhbHVlIC8gcHggKiBhbW91bnQgOiBjdXJWYWx1ZSAvIDEwMCAqIHB4KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3R5bGVbaG9yaXpvbnRhbCA/IFwid2lkdGhcIiA6IFwiaGVpZ2h0XCJdID0gYW1vdW50ICsgKHRvUGl4ZWxzID8gY3VyVW5pdCA6IHVuaXQpO1xuICAgICAgICAgICAgcGFyZW50ID0gfnByb3BlcnR5LmluZGV4T2YoXCJhZGl1c1wiKSB8fCB1bml0ID09PSBcImVtXCIgJiYgdGFyZ2V0LmFwcGVuZENoaWxkICYmICFpc1Jvb3RTVkcgPyB0YXJnZXQgOiB0YXJnZXQucGFyZW50Tm9kZTtcblxuICAgICAgICAgICAgaWYgKGlzU1ZHKSB7XG4gICAgICAgICAgICAgIHBhcmVudCA9ICh0YXJnZXQub3duZXJTVkdFbGVtZW50IHx8IHt9KS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIXBhcmVudCB8fCBwYXJlbnQgPT09IF9kb2MgfHwgIXBhcmVudC5hcHBlbmRDaGlsZCkge1xuICAgICAgICAgICAgICBwYXJlbnQgPSBfZG9jLmJvZHk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhY2hlID0gcGFyZW50Ll9nc2FwO1xuXG4gICAgICAgICAgICBpZiAoY2FjaGUgJiYgdG9QZXJjZW50ICYmIGNhY2hlLndpZHRoICYmIGhvcml6b250YWwgJiYgY2FjaGUudGltZSA9PT0gX2dzYXBDb3JlLl90aWNrZXIudGltZSkge1xuICAgICAgICAgICAgICByZXR1cm4gKDAsIF9nc2FwQ29yZS5fcm91bmQpKGN1clZhbHVlIC8gY2FjaGUud2lkdGggKiBhbW91bnQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgKHRvUGVyY2VudCB8fCBjdXJVbml0ID09PSBcIiVcIikgJiYgKHN0eWxlLnBvc2l0aW9uID0gX2dldENvbXB1dGVkUHJvcGVydHkodGFyZ2V0LCBcInBvc2l0aW9uXCIpKTtcbiAgICAgICAgICAgICAgcGFyZW50ID09PSB0YXJnZXQgJiYgKHN0eWxlLnBvc2l0aW9uID0gXCJzdGF0aWNcIik7IC8vIGxpa2UgZm9yIGJvcmRlclJhZGl1cywgaWYgaXQncyBhICUgd2UgbXVzdCBoYXZlIGl0IHJlbGF0aXZlIHRvIHRoZSB0YXJnZXQgaXRzZWxmIGJ1dCB0aGF0IG1heSBub3QgaGF2ZSBwb3NpdGlvbjogcmVsYXRpdmUgb3IgcG9zaXRpb246IGFic29sdXRlIGluIHdoaWNoIGNhc2UgaXQnZCBnbyB1cCB0aGUgY2hhaW4gdW50aWwgaXQgZmluZHMgaXRzIG9mZnNldFBhcmVudCAoYmFkKS4gcG9zaXRpb246IHN0YXRpYyBwcm90ZWN0cyBhZ2FpbnN0IHRoYXQuXG5cbiAgICAgICAgICAgICAgcGFyZW50LmFwcGVuZENoaWxkKF90ZW1wRGl2KTtcbiAgICAgICAgICAgICAgcHggPSBfdGVtcERpdlttZWFzdXJlUHJvcGVydHldO1xuICAgICAgICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQoX3RlbXBEaXYpO1xuICAgICAgICAgICAgICBzdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcblxuICAgICAgICAgICAgICBpZiAoaG9yaXpvbnRhbCAmJiB0b1BlcmNlbnQpIHtcbiAgICAgICAgICAgICAgICBjYWNoZSA9ICgwLCBfZ3NhcENvcmUuX2dldENhY2hlKShwYXJlbnQpO1xuICAgICAgICAgICAgICAgIGNhY2hlLnRpbWUgPSBfZ3NhcENvcmUuX3RpY2tlci50aW1lO1xuICAgICAgICAgICAgICAgIGNhY2hlLndpZHRoID0gcGFyZW50W21lYXN1cmVQcm9wZXJ0eV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuICgwLCBfZ3NhcENvcmUuX3JvdW5kKSh0b1BpeGVscyA/IHB4ICogY3VyVmFsdWUgLyBhbW91bnQgOiBweCAmJiBjdXJWYWx1ZSA/IGFtb3VudCAvIHB4ICogY3VyVmFsdWUgOiAwKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9nZXQgPSBmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHVuaXQsIHVuY2FjaGUpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZTtcbiAgICAgICAgICAgIF9wbHVnaW5Jbml0dGVkIHx8IF9pbml0Q29yZSgpO1xuXG4gICAgICAgICAgICBpZiAocHJvcGVydHkgaW4gX3Byb3BlcnR5QWxpYXNlcyAmJiBwcm9wZXJ0eSAhPT0gXCJ0cmFuc2Zvcm1cIikge1xuICAgICAgICAgICAgICBwcm9wZXJ0eSA9IF9wcm9wZXJ0eUFsaWFzZXNbcHJvcGVydHldO1xuXG4gICAgICAgICAgICAgIGlmICh+cHJvcGVydHkuaW5kZXhPZihcIixcIikpIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eSA9IHByb3BlcnR5LnNwbGl0KFwiLFwiKVswXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoX3RyYW5zZm9ybVByb3BzW3Byb3BlcnR5XSAmJiBwcm9wZXJ0eSAhPT0gXCJ0cmFuc2Zvcm1cIikge1xuICAgICAgICAgICAgICB2YWx1ZSA9IF9wYXJzZVRyYW5zZm9ybSh0YXJnZXQsIHVuY2FjaGUpO1xuICAgICAgICAgICAgICB2YWx1ZSA9IHByb3BlcnR5ICE9PSBcInRyYW5zZm9ybU9yaWdpblwiID8gdmFsdWVbcHJvcGVydHldIDogX2ZpcnN0VHdvT25seShfZ2V0Q29tcHV0ZWRQcm9wZXJ0eSh0YXJnZXQsIF90cmFuc2Zvcm1PcmlnaW5Qcm9wKSkgKyBcIiBcIiArIHZhbHVlLnpPcmlnaW4gKyBcInB4XCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB2YWx1ZSA9IHRhcmdldC5zdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gXCJhdXRvXCIgfHwgdW5jYWNoZSB8fCB+KHZhbHVlICsgXCJcIikuaW5kZXhPZihcImNhbGMoXCIpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBfc3BlY2lhbFByb3BzW3Byb3BlcnR5XSAmJiBfc3BlY2lhbFByb3BzW3Byb3BlcnR5XSh0YXJnZXQsIHByb3BlcnR5LCB1bml0KSB8fCBfZ2V0Q29tcHV0ZWRQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5KSB8fCAoMCwgX2dzYXBDb3JlLl9nZXRQcm9wZXJ0eSkodGFyZ2V0LCBwcm9wZXJ0eSkgfHwgKHByb3BlcnR5ID09PSBcIm9wYWNpdHlcIiA/IDEgOiAwKTsgLy8gbm90ZTogc29tZSBicm93c2VycywgbGlrZSBGaXJlZm94LCBkb24ndCByZXBvcnQgYm9yZGVyUmFkaXVzIGNvcnJlY3RseSEgSW5zdGVhZCwgaXQgb25seSByZXBvcnRzIGV2ZXJ5IGNvcm5lciBsaWtlICBib3JkZXJUb3BMZWZ0UmFkaXVzXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHVuaXQgJiYgIX4odmFsdWUgKyBcIlwiKS50cmltKCkuaW5kZXhPZihcIiBcIikgPyBfY29udmVydFRvVW5pdCh0YXJnZXQsIHByb3BlcnR5LCB2YWx1ZSwgdW5pdCkgKyB1bml0IDogdmFsdWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfdHdlZW5Db21wbGV4Q1NTU3RyaW5nID0gZnVuY3Rpb24gX3R3ZWVuQ29tcGxleENTU1N0cmluZyh0YXJnZXQsIHByb3AsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgICAgIC8vbm90ZTogd2UgY2FsbCBfdHdlZW5Db21wbGV4Q1NTU3RyaW5nLmNhbGwocGx1Z2luSW5zdGFuY2UuLi4pIHRvIGVuc3VyZSB0aGF0IGl0J3Mgc2NvcGVkIHByb3Blcmx5LiBXZSBtYXkgY2FsbCBpdCBmcm9tIHdpdGhpbiBhIHBsdWdpbiB0b28sIHRodXMgXCJ0aGlzXCIgd291bGQgcmVmZXIgdG8gdGhlIHBsdWdpbi5cbiAgICAgICAgICAgIGlmICghc3RhcnQgfHwgc3RhcnQgPT09IFwibm9uZVwiKSB7XG4gICAgICAgICAgICAgIC8vIHNvbWUgYnJvd3NlcnMgbGlrZSBTYWZhcmkgYWN0dWFsbHkgUFJFRkVSIHRoZSBwcmVmaXhlZCBwcm9wZXJ0eSBhbmQgbWlzLXJlcG9ydCB0aGUgdW5wcmVmaXhlZCB2YWx1ZSBsaWtlIGNsaXBQYXRoIChCVUcpLiBJbiBvdGhlciB3b3JkcywgZXZlbiB0aG91Z2ggY2xpcFBhdGggZXhpc3RzIGluIHRoZSBzdHlsZSAoXCJjbGlwUGF0aFwiIGluIHRhcmdldC5zdHlsZSkgYW5kIGl0J3Mgc2V0IGluIHRoZSBDU1MgcHJvcGVybHkgKGFsb25nIHdpdGggLXdlYmtpdC1jbGlwLXBhdGgpLCBTYWZhcmkgcmVwb3J0cyBjbGlwUGF0aCBhcyBcIm5vbmVcIiB3aGVyZWFzIFdlYmtpdENsaXBQYXRoIHJlcG9ydHMgYWNjdXJhdGVseSBsaWtlIFwiZWxsaXBzZSgxMDAlIDAlIGF0IDUwJSAwJSlcIiwgc28gaW4gdGhpcyBjYXNlIHdlIG11c3QgU1dJVENIIHRvIHVzaW5nIHRoZSBwcmVmaXhlZCBwcm9wZXJ0eSBpbnN0ZWFkLiBTZWUgaHR0cHM6Ly9ncmVlbnNvY2suY29tL2ZvcnVtcy90b3BpYy8xODMxMC1jbGlwcGF0aC1kb2VzbnQtd29yay1vbi1pb3MvXG4gICAgICAgICAgICAgIHZhciBwID0gX2NoZWNrUHJvcFByZWZpeChwcm9wLCB0YXJnZXQsIDEpLFxuICAgICAgICAgICAgICAgIHMgPSBwICYmIF9nZXRDb21wdXRlZFByb3BlcnR5KHRhcmdldCwgcCwgMSk7XG5cbiAgICAgICAgICAgICAgaWYgKHMgJiYgcyAhPT0gc3RhcnQpIHtcbiAgICAgICAgICAgICAgICBwcm9wID0gcDtcbiAgICAgICAgICAgICAgICBzdGFydCA9IHM7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gXCJib3JkZXJDb2xvclwiKSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBfZ2V0Q29tcHV0ZWRQcm9wZXJ0eSh0YXJnZXQsIFwiYm9yZGVyVG9wQ29sb3JcIik7IC8vIEZpcmVmb3ggYnVnOiBhbHdheXMgcmVwb3J0cyBcImJvcmRlckNvbG9yXCIgYXMgXCJcIiwgc28gd2UgbXVzdCBmYWxsIGJhY2sgdG8gYm9yZGVyVG9wQ29sb3IuIFNlZSBodHRwczovL2dyZWVuc29jay5jb20vZm9ydW1zL3RvcGljLzI0NTgzLWhvdy10by1yZXR1cm4tY29sb3JzLXRoYXQtaS1oYWQtYWZ0ZXItcmV2ZXJzZS9cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcHQgPSBuZXcgX2dzYXBDb3JlLlByb3BUd2Vlbih0aGlzLl9wdCwgdGFyZ2V0LnN0eWxlLCBwcm9wLCAwLCAxLCBfZ3NhcENvcmUuX3JlbmRlckNvbXBsZXhTdHJpbmcpLFxuICAgICAgICAgICAgICBpbmRleCA9IDAsXG4gICAgICAgICAgICAgIG1hdGNoSW5kZXggPSAwLFxuICAgICAgICAgICAgICBhLFxuICAgICAgICAgICAgICByZXN1bHQsXG4gICAgICAgICAgICAgIHN0YXJ0VmFsdWVzLFxuICAgICAgICAgICAgICBzdGFydE51bSxcbiAgICAgICAgICAgICAgY29sb3IsXG4gICAgICAgICAgICAgIHN0YXJ0VmFsdWUsXG4gICAgICAgICAgICAgIGVuZFZhbHVlLFxuICAgICAgICAgICAgICBlbmROdW0sXG4gICAgICAgICAgICAgIGNodW5rLFxuICAgICAgICAgICAgICBlbmRVbml0LFxuICAgICAgICAgICAgICBzdGFydFVuaXQsXG4gICAgICAgICAgICAgIHJlbGF0aXZlLFxuICAgICAgICAgICAgICBlbmRWYWx1ZXM7XG4gICAgICAgICAgICBwdC5iID0gc3RhcnQ7XG4gICAgICAgICAgICBwdC5lID0gZW5kO1xuICAgICAgICAgICAgc3RhcnQgKz0gXCJcIjsgLy9lbnN1cmUgdmFsdWVzIGFyZSBzdHJpbmdzXG5cbiAgICAgICAgICAgIGVuZCArPSBcIlwiO1xuXG4gICAgICAgICAgICBpZiAoZW5kID09PSBcImF1dG9cIikge1xuICAgICAgICAgICAgICB0YXJnZXQuc3R5bGVbcHJvcF0gPSBlbmQ7XG4gICAgICAgICAgICAgIGVuZCA9IF9nZXRDb21wdXRlZFByb3BlcnR5KHRhcmdldCwgcHJvcCkgfHwgZW5kO1xuICAgICAgICAgICAgICB0YXJnZXQuc3R5bGVbcHJvcF0gPSBzdGFydDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYSA9IFtzdGFydCwgZW5kXTtcbiAgICAgICAgICAgICgwLCBfZ3NhcENvcmUuX2NvbG9yU3RyaW5nRmlsdGVyKShhKTsgLy9wYXNzIGFuIGFycmF5IHdpdGggdGhlIHN0YXJ0aW5nIGFuZCBlbmRpbmcgdmFsdWVzIGFuZCBsZXQgdGhlIGZpbHRlciBkbyB3aGF0ZXZlciBpdCBuZWVkcyB0byB0aGUgdmFsdWVzLiBJZiBjb2xvcnMgYXJlIGZvdW5kLCBpdCByZXR1cm5zIHRydWUgYW5kIHRoZW4gd2UgbXVzdCBtYXRjaCB3aGVyZSB0aGUgY29sb3Igc2hvd3MgdXAgb3JkZXItd2lzZSBiZWNhdXNlIGZvciB0aGluZ3MgbGlrZSBib3hTaGFkb3csIHNvbWV0aW1lcyB0aGUgYnJvd3NlciBwcm92aWRlcyB0aGUgY29tcHV0ZWQgdmFsdWVzIHdpdGggdGhlIGNvbG9yIEZJUlNULCBidXQgdGhlIHVzZXIgcHJvdmlkZXMgaXQgd2l0aCB0aGUgY29sb3IgTEFTVCwgc28gZmxpcCB0aGVtIGlmIG5lY2Vzc2FyeS4gU2FtZSBmb3IgZHJvcC1zaGFkb3coKS5cblxuICAgICAgICAgICAgc3RhcnQgPSBhWzBdO1xuICAgICAgICAgICAgZW5kID0gYVsxXTtcbiAgICAgICAgICAgIHN0YXJ0VmFsdWVzID0gc3RhcnQubWF0Y2goX2dzYXBDb3JlLl9udW1XaXRoVW5pdEV4cCkgfHwgW107XG4gICAgICAgICAgICBlbmRWYWx1ZXMgPSBlbmQubWF0Y2goX2dzYXBDb3JlLl9udW1XaXRoVW5pdEV4cCkgfHwgW107XG5cbiAgICAgICAgICAgIGlmIChlbmRWYWx1ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIHdoaWxlIChyZXN1bHQgPSBfZ3NhcENvcmUuX251bVdpdGhVbml0RXhwLmV4ZWMoZW5kKSkge1xuICAgICAgICAgICAgICAgIGVuZFZhbHVlID0gcmVzdWx0WzBdO1xuICAgICAgICAgICAgICAgIGNodW5rID0gZW5kLnN1YnN0cmluZyhpbmRleCwgcmVzdWx0LmluZGV4KTtcblxuICAgICAgICAgICAgICAgIGlmIChjb2xvcikge1xuICAgICAgICAgICAgICAgICAgY29sb3IgPSAoY29sb3IgKyAxKSAlIDU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjaHVuay5zdWJzdHIoLTUpID09PSBcInJnYmEoXCIgfHwgY2h1bmsuc3Vic3RyKC01KSA9PT0gXCJoc2xhKFwiKSB7XG4gICAgICAgICAgICAgICAgICBjb2xvciA9IDE7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGVuZFZhbHVlICE9PSAoc3RhcnRWYWx1ZSA9IHN0YXJ0VmFsdWVzW21hdGNoSW5kZXgrK10gfHwgXCJcIikpIHtcbiAgICAgICAgICAgICAgICAgIHN0YXJ0TnVtID0gcGFyc2VGbG9hdChzdGFydFZhbHVlKSB8fCAwO1xuICAgICAgICAgICAgICAgICAgc3RhcnRVbml0ID0gc3RhcnRWYWx1ZS5zdWJzdHIoKHN0YXJ0TnVtICsgXCJcIikubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgIHJlbGF0aXZlID0gZW5kVmFsdWUuY2hhckF0KDEpID09PSBcIj1cIiA/ICsoZW5kVmFsdWUuY2hhckF0KDApICsgXCIxXCIpIDogMDtcblxuICAgICAgICAgICAgICAgICAgaWYgKHJlbGF0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgIGVuZFZhbHVlID0gZW5kVmFsdWUuc3Vic3RyKDIpO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBlbmROdW0gPSBwYXJzZUZsb2F0KGVuZFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgIGVuZFVuaXQgPSBlbmRWYWx1ZS5zdWJzdHIoKGVuZE51bSArIFwiXCIpLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICBpbmRleCA9IF9nc2FwQ29yZS5fbnVtV2l0aFVuaXRFeHAubGFzdEluZGV4IC0gZW5kVW5pdC5sZW5ndGg7XG5cbiAgICAgICAgICAgICAgICAgIGlmICghZW5kVW5pdCkge1xuICAgICAgICAgICAgICAgICAgICAvL2lmIHNvbWV0aGluZyBsaWtlIFwicGVyc3BlY3RpdmU6MzAwXCIgaXMgcGFzc2VkIGluIGFuZCB3ZSBtdXN0IGFkZCBhIHVuaXQgdG8gdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICBlbmRVbml0ID0gZW5kVW5pdCB8fCBfZ3NhcENvcmUuX2NvbmZpZy51bml0c1twcm9wXSB8fCBzdGFydFVuaXQ7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSBlbmQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgZW5kICs9IGVuZFVuaXQ7XG4gICAgICAgICAgICAgICAgICAgICAgcHQuZSArPSBlbmRVbml0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGlmIChzdGFydFVuaXQgIT09IGVuZFVuaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnROdW0gPSBfY29udmVydFRvVW5pdCh0YXJnZXQsIHByb3AsIHN0YXJ0VmFsdWUsIGVuZFVuaXQpIHx8IDA7XG4gICAgICAgICAgICAgICAgICB9IC8vdGhlc2UgbmVzdGVkIFByb3BUd2VlbnMgYXJlIGhhbmRsZWQgaW4gYSBzcGVjaWFsIHdheSAtIHdlJ2xsIG5ldmVyIGFjdHVhbGx5IGNhbGwgYSByZW5kZXIgb3Igc2V0dGVyIG1ldGhvZCBvbiB0aGVtLiBXZSdsbCBqdXN0IGxvb3AgdGhyb3VnaCB0aGVtIGluIHRoZSBwYXJlbnQgY29tcGxleCBzdHJpbmcgUHJvcFR3ZWVuJ3MgcmVuZGVyIG1ldGhvZC5cblxuXG4gICAgICAgICAgICAgICAgICBwdC5fcHQgPSB7XG4gICAgICAgICAgICAgICAgICAgIF9uZXh0OiBwdC5fcHQsXG4gICAgICAgICAgICAgICAgICAgIHA6IGNodW5rIHx8IG1hdGNoSW5kZXggPT09IDEgPyBjaHVuayA6IFwiLFwiLFxuICAgICAgICAgICAgICAgICAgICAvL25vdGU6IFNWRyBzcGVjIGFsbG93cyBvbWlzc2lvbiBvZiBjb21tYS9zcGFjZSB3aGVuIGEgbmVnYXRpdmUgc2lnbiBpcyB3ZWRnZWQgYmV0d2VlbiB0d28gbnVtYmVycywgbGlrZSAyLjUtNS4zIGluc3RlYWQgb2YgMi41LC01LjMgYnV0IHdoZW4gdHdlZW5pbmcsIHRoZSBuZWdhdGl2ZSB2YWx1ZSBtYXkgc3dpdGNoIHRvIHBvc2l0aXZlLCBzbyB3ZSBpbnNlcnQgdGhlIGNvbW1hIGp1c3QgaW4gY2FzZS5cbiAgICAgICAgICAgICAgICAgICAgczogc3RhcnROdW0sXG4gICAgICAgICAgICAgICAgICAgIGM6IHJlbGF0aXZlID8gcmVsYXRpdmUgKiBlbmROdW0gOiBlbmROdW0gLSBzdGFydE51bSxcbiAgICAgICAgICAgICAgICAgICAgbTogY29sb3IgJiYgY29sb3IgPCA0IHx8IHByb3AgPT09IFwiekluZGV4XCIgPyBNYXRoLnJvdW5kIDogMFxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBwdC5jID0gaW5kZXggPCBlbmQubGVuZ3RoID8gZW5kLnN1YnN0cmluZyhpbmRleCwgZW5kLmxlbmd0aCkgOiBcIlwiOyAvL3dlIHVzZSB0aGUgXCJjXCIgb2YgdGhlIFByb3BUd2VlbiB0byBzdG9yZSB0aGUgZmluYWwgcGFydCBvZiB0aGUgc3RyaW5nIChhZnRlciB0aGUgbGFzdCBudW1iZXIpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwdC5yID0gcHJvcCA9PT0gXCJkaXNwbGF5XCIgJiYgZW5kID09PSBcIm5vbmVcIiA/IF9yZW5kZXJOb25Ud2VlbmluZ1ZhbHVlT25seUF0RW5kIDogX3JlbmRlck5vblR3ZWVuaW5nVmFsdWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF9nc2FwQ29yZS5fcmVsRXhwLnRlc3QoZW5kKSAmJiAocHQuZSA9IDApOyAvL2lmIHRoZSBlbmQgc3RyaW5nIGNvbnRhaW5zIHJlbGF0aXZlIHZhbHVlcyBvciBkeW5hbWljIHJhbmRvbSguLi4pIHZhbHVlcywgZGVsZXRlIHRoZSBlbmQgaXQgc28gdGhhdCBvbiB0aGUgZmluYWwgcmVuZGVyIHdlIGRvbid0IGFjdHVhbGx5IHNldCBpdCB0byB0aGUgc3RyaW5nIHdpdGggKz0gb3IgLT0gY2hhcmFjdGVycyAoZm9yY2VzIGl0IHRvIHVzZSB0aGUgY2FsY3VsYXRlZCB2YWx1ZSkuXG5cbiAgICAgICAgICAgIHRoaXMuX3B0ID0gcHQ7IC8vc3RhcnQgdGhlIGxpbmtlZCBsaXN0IHdpdGggdGhpcyBuZXcgUHJvcFR3ZWVuLiBSZW1lbWJlciwgd2UgY2FsbCBfdHdlZW5Db21wbGV4Q1NTU3RyaW5nLmNhbGwocGx1Z2luSW5zdGFuY2UuLi4pIHRvIGVuc3VyZSB0aGF0IGl0J3Mgc2NvcGVkIHByb3Blcmx5LiBXZSBtYXkgY2FsbCBpdCBmcm9tIHdpdGhpbiBhbm90aGVyIHBsdWdpbiB0b28sIHRodXMgXCJ0aGlzXCIgd291bGQgcmVmZXIgdG8gdGhlIHBsdWdpbi5cblxuICAgICAgICAgICAgcmV0dXJuIHB0O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2tleXdvcmRUb1BlcmNlbnQgPSB7XG4gICAgICAgICAgICB0b3A6IFwiMCVcIixcbiAgICAgICAgICAgIGJvdHRvbTogXCIxMDAlXCIsXG4gICAgICAgICAgICBsZWZ0OiBcIjAlXCIsXG4gICAgICAgICAgICByaWdodDogXCIxMDAlXCIsXG4gICAgICAgICAgICBjZW50ZXI6IFwiNTAlXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9jb252ZXJ0S2V5d29yZHNUb1BlcmNlbnRhZ2VzID0gZnVuY3Rpb24gX2NvbnZlcnRLZXl3b3Jkc1RvUGVyY2VudGFnZXModmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBzcGxpdCA9IHZhbHVlLnNwbGl0KFwiIFwiKSxcbiAgICAgICAgICAgICAgeCA9IHNwbGl0WzBdLFxuICAgICAgICAgICAgICB5ID0gc3BsaXRbMV0gfHwgXCI1MCVcIjtcblxuICAgICAgICAgICAgaWYgKHggPT09IFwidG9wXCIgfHwgeCA9PT0gXCJib3R0b21cIiB8fCB5ID09PSBcImxlZnRcIiB8fCB5ID09PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICAgICAgLy90aGUgdXNlciBwcm92aWRlZCB0aGVtIGluIHRoZSB3cm9uZyBvcmRlciwgc28gZmxpcCB0aGVtXG4gICAgICAgICAgICAgIHZhbHVlID0geDtcbiAgICAgICAgICAgICAgeCA9IHk7XG4gICAgICAgICAgICAgIHkgPSB2YWx1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3BsaXRbMF0gPSBfa2V5d29yZFRvUGVyY2VudFt4XSB8fCB4O1xuICAgICAgICAgICAgc3BsaXRbMV0gPSBfa2V5d29yZFRvUGVyY2VudFt5XSB8fCB5O1xuICAgICAgICAgICAgcmV0dXJuIHNwbGl0LmpvaW4oXCIgXCIpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3JlbmRlckNsZWFyUHJvcHMgPSBmdW5jdGlvbiBfcmVuZGVyQ2xlYXJQcm9wcyhyYXRpbywgZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEudHdlZW4gJiYgZGF0YS50d2Vlbi5fdGltZSA9PT0gZGF0YS50d2Vlbi5fZHVyKSB7XG4gICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBkYXRhLnQsXG4gICAgICAgICAgICAgICAgc3R5bGUgPSB0YXJnZXQuc3R5bGUsXG4gICAgICAgICAgICAgICAgcHJvcHMgPSBkYXRhLnUsXG4gICAgICAgICAgICAgICAgY2FjaGUgPSB0YXJnZXQuX2dzYXAsXG4gICAgICAgICAgICAgICAgcHJvcCxcbiAgICAgICAgICAgICAgICBjbGVhclRyYW5zZm9ybXMsXG4gICAgICAgICAgICAgICAgaTtcblxuICAgICAgICAgICAgICBpZiAocHJvcHMgPT09IFwiYWxsXCIgfHwgcHJvcHMgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBzdHlsZS5jc3NUZXh0ID0gXCJcIjtcbiAgICAgICAgICAgICAgICBjbGVhclRyYW5zZm9ybXMgPSAxO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHByb3BzID0gcHJvcHMuc3BsaXQoXCIsXCIpO1xuICAgICAgICAgICAgICAgIGkgPSBwcm9wcy5sZW5ndGg7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAoLS1pID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgIHByb3AgPSBwcm9wc1tpXTtcblxuICAgICAgICAgICAgICAgICAgaWYgKF90cmFuc2Zvcm1Qcm9wc1twcm9wXSkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRyYW5zZm9ybXMgPSAxO1xuICAgICAgICAgICAgICAgICAgICBwcm9wID0gcHJvcCA9PT0gXCJ0cmFuc2Zvcm1PcmlnaW5cIiA/IF90cmFuc2Zvcm1PcmlnaW5Qcm9wIDogX3RyYW5zZm9ybVByb3A7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIF9yZW1vdmVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChjbGVhclRyYW5zZm9ybXMpIHtcbiAgICAgICAgICAgICAgICBfcmVtb3ZlUHJvcGVydHkodGFyZ2V0LCBfdHJhbnNmb3JtUHJvcCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoY2FjaGUpIHtcbiAgICAgICAgICAgICAgICAgIGNhY2hlLnN2ZyAmJiB0YXJnZXQucmVtb3ZlQXR0cmlidXRlKFwidHJhbnNmb3JtXCIpO1xuXG4gICAgICAgICAgICAgICAgICBfcGFyc2VUcmFuc2Zvcm0odGFyZ2V0LCAxKTsgLy8gZm9yY2UgYWxsIHRoZSBjYWNoZWQgdmFsdWVzIGJhY2sgdG8gXCJub3JtYWxcIi9pZGVudGl0eSwgb3RoZXJ3aXNlIGlmIHRoZXJlJ3MgYW5vdGhlciB0d2VlbiB0aGF0J3MgYWxyZWFkeSBzZXQgdG8gcmVuZGVyIHRyYW5zZm9ybXMgb24gdGhpcyBlbGVtZW50LCBpdCBjb3VsZCBkaXNwbGF5IHRoZSB3cm9uZyB2YWx1ZXMuXG5cblxuICAgICAgICAgICAgICAgICAgY2FjaGUudW5jYWNoZSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvLyBub3RlOiBzcGVjaWFsUHJvcHMgc2hvdWxkIHJldHVybiAxIGlmIChhbmQgb25seSBpZikgdGhleSBoYXZlIGEgbm9uLXplcm8gcHJpb3JpdHkuIEl0IGluZGljYXRlcyB3ZSBuZWVkIHRvIHNvcnQgdGhlIGxpbmtlZCBsaXN0LlxuICAgICAgICAgIF9zcGVjaWFsUHJvcHMgPSB7XG4gICAgICAgICAgICBjbGVhclByb3BzOiBmdW5jdGlvbiBjbGVhclByb3BzKHBsdWdpbiwgdGFyZ2V0LCBwcm9wZXJ0eSwgZW5kVmFsdWUsIHR3ZWVuKSB7XG4gICAgICAgICAgICAgIGlmICh0d2Vlbi5kYXRhICE9PSBcImlzRnJvbVN0YXJ0XCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgcHQgPSBwbHVnaW4uX3B0ID0gbmV3IF9nc2FwQ29yZS5Qcm9wVHdlZW4ocGx1Z2luLl9wdCwgdGFyZ2V0LCBwcm9wZXJ0eSwgMCwgMCwgX3JlbmRlckNsZWFyUHJvcHMpO1xuICAgICAgICAgICAgICAgIHB0LnUgPSBlbmRWYWx1ZTtcbiAgICAgICAgICAgICAgICBwdC5wciA9IC0xMDtcbiAgICAgICAgICAgICAgICBwdC50d2VlbiA9IHR3ZWVuO1xuXG4gICAgICAgICAgICAgICAgcGx1Z2luLl9wcm9wcy5wdXNoKHByb3BlcnR5KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvKiBjbGFzc05hbWUgZmVhdHVyZSAoYWJvdXQgMC40a2IgZ3ppcHBlZCkuXG4gICAgICAgICAgICAsIGNsYXNzTmFtZShwbHVnaW4sIHRhcmdldCwgcHJvcGVydHksIGVuZFZhbHVlLCB0d2Vlbikge1xuICAgICAgICAgICAgICBsZXQgX3JlbmRlckNsYXNzTmFtZSA9IChyYXRpbywgZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgZGF0YS5jc3MucmVuZGVyKHJhdGlvLCBkYXRhLmNzcyk7XG4gICAgICAgICAgICAgICAgICBpZiAoIXJhdGlvIHx8IHJhdGlvID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpbmxpbmUgPSBkYXRhLnJtdixcbiAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSBkYXRhLnQsXG4gICAgICAgICAgICAgICAgICAgICAgcDtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHJhdGlvID8gZGF0YS5lIDogZGF0YS5iKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChwIGluIGlubGluZSkge1xuICAgICAgICAgICAgICAgICAgICAgIF9yZW1vdmVQcm9wZXJ0eSh0YXJnZXQsIHApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBfZ2V0QWxsU3R5bGVzID0gKHRhcmdldCkgPT4ge1xuICAgICAgICAgICAgICAgICAgbGV0IHN0eWxlcyA9IHt9LFxuICAgICAgICAgICAgICAgICAgICBjb21wdXRlZCA9IGdldENvbXB1dGVkU3R5bGUodGFyZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgcDtcbiAgICAgICAgICAgICAgICAgIGZvciAocCBpbiBjb21wdXRlZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4ocCkgJiYgcCAhPT0gXCJjc3NUZXh0XCIgJiYgcCAhPT0gXCJsZW5ndGhcIikge1xuICAgICAgICAgICAgICAgICAgICAgIHN0eWxlc1twXSA9IGNvbXB1dGVkW3BdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBfc2V0RGVmYXVsdHMoc3R5bGVzLCBfcGFyc2VUcmFuc2Zvcm0odGFyZ2V0LCAxKSk7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gc3R5bGVzO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3RhcnRDbGFzc0xpc3QgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIiksXG4gICAgICAgICAgICAgICAgc3R5bGUgPSB0YXJnZXQuc3R5bGUsXG4gICAgICAgICAgICAgICAgY3NzVGV4dCA9IHN0eWxlLmNzc1RleHQsXG4gICAgICAgICAgICAgICAgY2FjaGUgPSB0YXJnZXQuX2dzYXAsXG4gICAgICAgICAgICAgICAgY2xhc3NQVCA9IGNhY2hlLmNsYXNzUFQsXG4gICAgICAgICAgICAgICAgaW5saW5lVG9SZW1vdmVBdEVuZCA9IHt9LFxuICAgICAgICAgICAgICAgIGRhdGEgPSB7dDp0YXJnZXQsIHBsdWdpbjpwbHVnaW4sIHJtdjppbmxpbmVUb1JlbW92ZUF0RW5kLCBiOnN0YXJ0Q2xhc3NMaXN0LCBlOihlbmRWYWx1ZS5jaGFyQXQoMSkgIT09IFwiPVwiKSA/IGVuZFZhbHVlIDogc3RhcnRDbGFzc0xpc3QucmVwbGFjZShuZXcgUmVnRXhwKFwiKD86XFxcXHN8XilcIiArIGVuZFZhbHVlLnN1YnN0cigyKSArIFwiKD8hW1xcXFx3LV0pXCIpLCBcIlwiKSArICgoZW5kVmFsdWUuY2hhckF0KDApID09PSBcIitcIikgPyBcIiBcIiArIGVuZFZhbHVlLnN1YnN0cigyKSA6IFwiXCIpfSxcbiAgICAgICAgICAgICAgICBjaGFuZ2luZ1ZhcnMgPSB7fSxcbiAgICAgICAgICAgICAgICBzdGFydFZhcnMgPSBfZ2V0QWxsU3R5bGVzKHRhcmdldCksXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtUmVsYXRlZCA9IC8odHJhbnNmb3JtfHBlcnNwZWN0aXZlKS9pLFxuICAgICAgICAgICAgICAgIGVuZFZhcnMsIHA7XG4gICAgICAgICAgICAgIGlmIChjbGFzc1BUKSB7XG4gICAgICAgICAgICAgICAgY2xhc3NQVC5yKDEsIGNsYXNzUFQuZCk7XG4gICAgICAgICAgICAgICAgX3JlbW92ZUxpbmtlZExpc3RJdGVtKGNsYXNzUFQuZC5wbHVnaW4sIGNsYXNzUFQsIFwiX3B0XCIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRhcmdldC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBkYXRhLmUpO1xuICAgICAgICAgICAgICBlbmRWYXJzID0gX2dldEFsbFN0eWxlcyh0YXJnZXQsIHRydWUpO1xuICAgICAgICAgICAgICB0YXJnZXQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgc3RhcnRDbGFzc0xpc3QpO1xuICAgICAgICAgICAgICBmb3IgKHAgaW4gZW5kVmFycykge1xuICAgICAgICAgICAgICAgIGlmIChlbmRWYXJzW3BdICE9PSBzdGFydFZhcnNbcF0gJiYgIXRyYW5zZm9ybVJlbGF0ZWQudGVzdChwKSkge1xuICAgICAgICAgICAgICAgICAgY2hhbmdpbmdWYXJzW3BdID0gZW5kVmFyc1twXTtcbiAgICAgICAgICAgICAgICAgIGlmICghc3R5bGVbcF0gJiYgc3R5bGVbcF0gIT09IFwiMFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlubGluZVRvUmVtb3ZlQXRFbmRbcF0gPSAxO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjYWNoZS5jbGFzc1BUID0gcGx1Z2luLl9wdCA9IG5ldyBQcm9wVHdlZW4ocGx1Z2luLl9wdCwgdGFyZ2V0LCBcImNsYXNzTmFtZVwiLCAwLCAwLCBfcmVuZGVyQ2xhc3NOYW1lLCBkYXRhLCAwLCAtMTEpO1xuICAgICAgICAgICAgICBpZiAoc3R5bGUuY3NzVGV4dCAhPT0gY3NzVGV4dCkgeyAvL29ubHkgYXBwbHkgaWYgdGhpbmdzIGNoYW5nZS4gT3RoZXJ3aXNlLCBpbiBjYXNlcyBsaWtlIGEgYmFja2dyb3VuZC1pbWFnZSB0aGF0J3MgcHVsbGVkIGR5bmFtaWNhbGx5LCBpdCBjb3VsZCBjYXVzZSBhIHJlZnJlc2guIFNlZSBodHRwczovL2dyZWVuc29jay5jb20vZm9ydW1zL3RvcGljLzIwMzY4LXBvc3NpYmxlLWdzYXAtYnVnLXN3aXRjaGluZy1jbGFzc25hbWVzLWluLWNocm9tZS8uXG4gICAgICAgICAgICAgICAgc3R5bGUuY3NzVGV4dCA9IGNzc1RleHQ7IC8vd2UgcmVjb3JkZWQgY3NzVGV4dCBiZWZvcmUgd2Ugc3dhcHBlZCBjbGFzc2VzIGFuZCByYW4gX2dldEFsbFN0eWxlcygpIGJlY2F1c2UgaW4gY2FzZXMgd2hlbiBhIGNsYXNzTmFtZSB0d2VlbiBpcyBvdmVyd3JpdHRlbiwgd2UgcmVtb3ZlIGFsbCB0aGUgcmVsYXRlZCB0d2VlbmluZyBwcm9wZXJ0aWVzIGZyb20gdGhhdCBjbGFzcyBjaGFuZ2UgKG90aGVyd2lzZSBjbGFzcy1zcGVjaWZpYyBzdHVmZiBjYW4ndCBvdmVycmlkZSBwcm9wZXJ0aWVzIHdlJ3ZlIGRpcmVjdGx5IHNldCBvbiB0aGUgdGFyZ2V0J3Mgc3R5bGUgb2JqZWN0IGR1ZSB0byBzcGVjaWZpY2l0eSkuXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgX3BhcnNlVHJhbnNmb3JtKHRhcmdldCwgdHJ1ZSk7IC8vdG8gY2xlYXIgdGhlIGNhY2hpbmcgb2YgdHJhbnNmb3Jtc1xuICAgICAgICAgICAgICBkYXRhLmNzcyA9IG5ldyBnc2FwLnBsdWdpbnMuY3NzKCk7XG4gICAgICAgICAgICAgIGRhdGEuY3NzLmluaXQodGFyZ2V0LCBjaGFuZ2luZ1ZhcnMsIHR3ZWVuKTtcbiAgICAgICAgICAgICAgcGx1Z2luLl9wcm9wcy5wdXNoKC4uLmRhdGEuY3NzLl9wcm9wcyk7XG4gICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKi9cblxuICAgICAgICAgIH0sXG5cbiAgICAgICAgICAvKlxuICAgICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgICogVFJBTlNGT1JNU1xuICAgICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgICovXG4gICAgICAgICAgX2lkZW50aXR5MkRNYXRyaXggPSBbMSwgMCwgMCwgMSwgMCwgMF0sXG4gICAgICAgICAgX3JvdGF0aW9uYWxQcm9wZXJ0aWVzID0ge30sXG4gICAgICAgICAgX2lzTnVsbFRyYW5zZm9ybSA9IGZ1bmN0aW9uIF9pc051bGxUcmFuc2Zvcm0odmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gXCJtYXRyaXgoMSwgMCwgMCwgMSwgMCwgMClcIiB8fCB2YWx1ZSA9PT0gXCJub25lXCIgfHwgIXZhbHVlO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2dldENvbXB1dGVkVHJhbnNmb3JtTWF0cml4QXNBcnJheSA9IGZ1bmN0aW9uIF9nZXRDb21wdXRlZFRyYW5zZm9ybU1hdHJpeEFzQXJyYXkodGFyZ2V0KSB7XG4gICAgICAgICAgICB2YXIgbWF0cml4U3RyaW5nID0gX2dldENvbXB1dGVkUHJvcGVydHkodGFyZ2V0LCBfdHJhbnNmb3JtUHJvcCk7XG5cbiAgICAgICAgICAgIHJldHVybiBfaXNOdWxsVHJhbnNmb3JtKG1hdHJpeFN0cmluZykgPyBfaWRlbnRpdHkyRE1hdHJpeCA6IG1hdHJpeFN0cmluZy5zdWJzdHIoNykubWF0Y2goX2dzYXBDb3JlLl9udW1FeHApLm1hcChfZ3NhcENvcmUuX3JvdW5kKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9nZXRNYXRyaXggPSBmdW5jdGlvbiBfZ2V0TWF0cml4KHRhcmdldCwgZm9yY2UyRCkge1xuICAgICAgICAgICAgdmFyIGNhY2hlID0gdGFyZ2V0Ll9nc2FwIHx8ICgwLCBfZ3NhcENvcmUuX2dldENhY2hlKSh0YXJnZXQpLFxuICAgICAgICAgICAgICBzdHlsZSA9IHRhcmdldC5zdHlsZSxcbiAgICAgICAgICAgICAgbWF0cml4ID0gX2dldENvbXB1dGVkVHJhbnNmb3JtTWF0cml4QXNBcnJheSh0YXJnZXQpLFxuICAgICAgICAgICAgICBwYXJlbnQsXG4gICAgICAgICAgICAgIG5leHRTaWJsaW5nLFxuICAgICAgICAgICAgICB0ZW1wLFxuICAgICAgICAgICAgICBhZGRlZFRvRE9NO1xuXG4gICAgICAgICAgICBpZiAoY2FjaGUuc3ZnICYmIHRhcmdldC5nZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIikpIHtcbiAgICAgICAgICAgICAgdGVtcCA9IHRhcmdldC50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpLm1hdHJpeDsgLy9lbnN1cmVzIHRoYXQgZXZlbiBjb21wbGV4IHZhbHVlcyBsaWtlIFwidHJhbnNsYXRlKDUwLDYwKSByb3RhdGUoMTM1LDAsMClcIiBhcmUgcGFyc2VkIGJlY2F1c2UgaXQgbWFzaGVzIGl0IGludG8gYSBtYXRyaXguXG5cbiAgICAgICAgICAgICAgbWF0cml4ID0gW3RlbXAuYSwgdGVtcC5iLCB0ZW1wLmMsIHRlbXAuZCwgdGVtcC5lLCB0ZW1wLmZdO1xuICAgICAgICAgICAgICByZXR1cm4gbWF0cml4LmpvaW4oXCIsXCIpID09PSBcIjEsMCwwLDEsMCwwXCIgPyBfaWRlbnRpdHkyRE1hdHJpeCA6IG1hdHJpeDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWF0cml4ID09PSBfaWRlbnRpdHkyRE1hdHJpeCAmJiAhdGFyZ2V0Lm9mZnNldFBhcmVudCAmJiB0YXJnZXQgIT09IF9kb2NFbGVtZW50ICYmICFjYWNoZS5zdmcpIHtcbiAgICAgICAgICAgICAgLy9ub3RlOiBpZiBvZmZzZXRQYXJlbnQgaXMgbnVsbCwgdGhhdCBtZWFucyB0aGUgZWxlbWVudCBpc24ndCBpbiB0aGUgbm9ybWFsIGRvY3VtZW50IGZsb3csIGxpa2UgaWYgaXQgaGFzIGRpc3BsYXk6bm9uZSBvciBvbmUgb2YgaXRzIGFuY2VzdG9ycyBoYXMgZGlzcGxheTpub25lKS4gRmlyZWZveCByZXR1cm5zIG51bGwgZm9yIGdldENvbXB1dGVkU3R5bGUoKSBpZiB0aGUgZWxlbWVudCBpcyBpbiBhbiBpZnJhbWUgdGhhdCBoYXMgZGlzcGxheTpub25lLiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD01NDgzOTdcbiAgICAgICAgICAgICAgLy9icm93c2VycyBkb24ndCByZXBvcnQgdHJhbnNmb3JtcyBhY2N1cmF0ZWx5IHVubGVzcyB0aGUgZWxlbWVudCBpcyBpbiB0aGUgRE9NIGFuZCBoYXMgYSBkaXNwbGF5IHZhbHVlIHRoYXQncyBub3QgXCJub25lXCIuIEZpcmVmb3ggYW5kIE1pY3Jvc29mdCBicm93c2VycyBoYXZlIGEgcGFydGlhbCBidWcgd2hlcmUgdGhleSdsbCByZXBvcnQgdHJhbnNmb3JtcyBldmVuIGlmIGRpc3BsYXk6bm9uZSBCVVQgbm90IGFueSBwZXJjZW50YWdlLWJhc2VkIHZhbHVlcyBsaWtlIHRyYW5zbGF0ZSgtNTAlLCA4cHgpIHdpbGwgYmUgcmVwb3J0ZWQgYXMgaWYgaXQncyB0cmFuc2xhdGUoMCwgOHB4KS5cbiAgICAgICAgICAgICAgdGVtcCA9IHN0eWxlLmRpc3BsYXk7XG4gICAgICAgICAgICAgIHN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICAgIHBhcmVudCA9IHRhcmdldC5wYXJlbnROb2RlO1xuXG4gICAgICAgICAgICAgIGlmICghcGFyZW50IHx8ICF0YXJnZXQub2Zmc2V0UGFyZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gbm90ZTogaW4gMy4zLjAgd2Ugc3dpdGNoZWQgdGFyZ2V0Lm9mZnNldFBhcmVudCB0byBfZG9jLmJvZHkuY29udGFpbnModGFyZ2V0KSB0byBhdm9pZCBbc29tZXRpbWVzIHVubmVjZXNzYXJ5XSBNdXRhdGlvbk9ic2VydmVyIGNhbGxzIGJ1dCB0aGF0IHdhc24ndCBhZGVxdWF0ZSBiZWNhdXNlIHRoZXJlIGFyZSBlZGdlIGNhc2VzIHdoZXJlIG5lc3RlZCBwb3NpdGlvbjogZml4ZWQgZWxlbWVudHMgbmVlZCB0byBnZXQgcmVwYXJlbnRlZCB0byBhY2N1cmF0ZWx5IHNlbnNlIHRyYW5zZm9ybXMuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZ3JlZW5zb2NrL0dTQVAvaXNzdWVzLzM4OCBhbmQgaHR0cHM6Ly9naXRodWIuY29tL2dyZWVuc29jay9HU0FQL2lzc3Vlcy8zNzVcbiAgICAgICAgICAgICAgICBhZGRlZFRvRE9NID0gMTsgLy9mbGFnXG5cbiAgICAgICAgICAgICAgICBuZXh0U2libGluZyA9IHRhcmdldC5uZXh0U2libGluZztcblxuICAgICAgICAgICAgICAgIF9kb2NFbGVtZW50LmFwcGVuZENoaWxkKHRhcmdldCk7IC8vd2UgbXVzdCBhZGQgaXQgdG8gdGhlIERPTSBpbiBvcmRlciB0byBnZXQgdmFsdWVzIHByb3Blcmx5XG5cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG1hdHJpeCA9IF9nZXRDb21wdXRlZFRyYW5zZm9ybU1hdHJpeEFzQXJyYXkodGFyZ2V0KTtcbiAgICAgICAgICAgICAgdGVtcCA/IHN0eWxlLmRpc3BsYXkgPSB0ZW1wIDogX3JlbW92ZVByb3BlcnR5KHRhcmdldCwgXCJkaXNwbGF5XCIpO1xuXG4gICAgICAgICAgICAgIGlmIChhZGRlZFRvRE9NKSB7XG4gICAgICAgICAgICAgICAgbmV4dFNpYmxpbmcgPyBwYXJlbnQuaW5zZXJ0QmVmb3JlKHRhcmdldCwgbmV4dFNpYmxpbmcpIDogcGFyZW50ID8gcGFyZW50LmFwcGVuZENoaWxkKHRhcmdldCkgOiBfZG9jRWxlbWVudC5yZW1vdmVDaGlsZCh0YXJnZXQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBmb3JjZTJEICYmIG1hdHJpeC5sZW5ndGggPiA2ID8gW21hdHJpeFswXSwgbWF0cml4WzFdLCBtYXRyaXhbNF0sIG1hdHJpeFs1XSwgbWF0cml4WzEyXSwgbWF0cml4WzEzXV0gOiBtYXRyaXg7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfYXBwbHlTVkdPcmlnaW4gPSBmdW5jdGlvbiBfYXBwbHlTVkdPcmlnaW4odGFyZ2V0LCBvcmlnaW4sIG9yaWdpbklzQWJzb2x1dGUsIHNtb290aCwgbWF0cml4QXJyYXksIHBsdWdpblRvQWRkUHJvcFR3ZWVuc1RvKSB7XG4gICAgICAgICAgICB2YXIgY2FjaGUgPSB0YXJnZXQuX2dzYXAsXG4gICAgICAgICAgICAgIG1hdHJpeCA9IG1hdHJpeEFycmF5IHx8IF9nZXRNYXRyaXgodGFyZ2V0LCB0cnVlKSxcbiAgICAgICAgICAgICAgeE9yaWdpbk9sZCA9IGNhY2hlLnhPcmlnaW4gfHwgMCxcbiAgICAgICAgICAgICAgeU9yaWdpbk9sZCA9IGNhY2hlLnlPcmlnaW4gfHwgMCxcbiAgICAgICAgICAgICAgeE9mZnNldE9sZCA9IGNhY2hlLnhPZmZzZXQgfHwgMCxcbiAgICAgICAgICAgICAgeU9mZnNldE9sZCA9IGNhY2hlLnlPZmZzZXQgfHwgMCxcbiAgICAgICAgICAgICAgYSA9IG1hdHJpeFswXSxcbiAgICAgICAgICAgICAgYiA9IG1hdHJpeFsxXSxcbiAgICAgICAgICAgICAgYyA9IG1hdHJpeFsyXSxcbiAgICAgICAgICAgICAgZCA9IG1hdHJpeFszXSxcbiAgICAgICAgICAgICAgdHggPSBtYXRyaXhbNF0sXG4gICAgICAgICAgICAgIHR5ID0gbWF0cml4WzVdLFxuICAgICAgICAgICAgICBvcmlnaW5TcGxpdCA9IG9yaWdpbi5zcGxpdChcIiBcIiksXG4gICAgICAgICAgICAgIHhPcmlnaW4gPSBwYXJzZUZsb2F0KG9yaWdpblNwbGl0WzBdKSB8fCAwLFxuICAgICAgICAgICAgICB5T3JpZ2luID0gcGFyc2VGbG9hdChvcmlnaW5TcGxpdFsxXSkgfHwgMCxcbiAgICAgICAgICAgICAgYm91bmRzLFxuICAgICAgICAgICAgICBkZXRlcm1pbmFudCxcbiAgICAgICAgICAgICAgeCxcbiAgICAgICAgICAgICAgeTtcblxuICAgICAgICAgICAgaWYgKCFvcmlnaW5Jc0Fic29sdXRlKSB7XG4gICAgICAgICAgICAgIGJvdW5kcyA9IF9nZXRCQm94KHRhcmdldCk7XG4gICAgICAgICAgICAgIHhPcmlnaW4gPSBib3VuZHMueCArICh+b3JpZ2luU3BsaXRbMF0uaW5kZXhPZihcIiVcIikgPyB4T3JpZ2luIC8gMTAwICogYm91bmRzLndpZHRoIDogeE9yaWdpbik7XG4gICAgICAgICAgICAgIHlPcmlnaW4gPSBib3VuZHMueSArICh+KG9yaWdpblNwbGl0WzFdIHx8IG9yaWdpblNwbGl0WzBdKS5pbmRleE9mKFwiJVwiKSA/IHlPcmlnaW4gLyAxMDAgKiBib3VuZHMuaGVpZ2h0IDogeU9yaWdpbik7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1hdHJpeCAhPT0gX2lkZW50aXR5MkRNYXRyaXggJiYgKGRldGVybWluYW50ID0gYSAqIGQgLSBiICogYykpIHtcbiAgICAgICAgICAgICAgLy9pZiBpdCdzIHplcm8gKGxpa2UgaWYgc2NhbGVYIGFuZCBzY2FsZVkgYXJlIHplcm8pLCBza2lwIGl0IHRvIGF2b2lkIGVycm9ycyB3aXRoIGRpdmlkaW5nIGJ5IHplcm8uXG4gICAgICAgICAgICAgIHggPSB4T3JpZ2luICogKGQgLyBkZXRlcm1pbmFudCkgKyB5T3JpZ2luICogKC1jIC8gZGV0ZXJtaW5hbnQpICsgKGMgKiB0eSAtIGQgKiB0eCkgLyBkZXRlcm1pbmFudDtcbiAgICAgICAgICAgICAgeSA9IHhPcmlnaW4gKiAoLWIgLyBkZXRlcm1pbmFudCkgKyB5T3JpZ2luICogKGEgLyBkZXRlcm1pbmFudCkgLSAoYSAqIHR5IC0gYiAqIHR4KSAvIGRldGVybWluYW50O1xuICAgICAgICAgICAgICB4T3JpZ2luID0geDtcbiAgICAgICAgICAgICAgeU9yaWdpbiA9IHk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzbW9vdGggfHwgc21vb3RoICE9PSBmYWxzZSAmJiBjYWNoZS5zbW9vdGgpIHtcbiAgICAgICAgICAgICAgdHggPSB4T3JpZ2luIC0geE9yaWdpbk9sZDtcbiAgICAgICAgICAgICAgdHkgPSB5T3JpZ2luIC0geU9yaWdpbk9sZDtcbiAgICAgICAgICAgICAgY2FjaGUueE9mZnNldCA9IHhPZmZzZXRPbGQgKyAodHggKiBhICsgdHkgKiBjKSAtIHR4O1xuICAgICAgICAgICAgICBjYWNoZS55T2Zmc2V0ID0geU9mZnNldE9sZCArICh0eCAqIGIgKyB0eSAqIGQpIC0gdHk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjYWNoZS54T2Zmc2V0ID0gY2FjaGUueU9mZnNldCA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhY2hlLnhPcmlnaW4gPSB4T3JpZ2luO1xuICAgICAgICAgICAgY2FjaGUueU9yaWdpbiA9IHlPcmlnaW47XG4gICAgICAgICAgICBjYWNoZS5zbW9vdGggPSAhIXNtb290aDtcbiAgICAgICAgICAgIGNhY2hlLm9yaWdpbiA9IG9yaWdpbjtcbiAgICAgICAgICAgIGNhY2hlLm9yaWdpbklzQWJzb2x1dGUgPSAhIW9yaWdpbklzQWJzb2x1dGU7XG4gICAgICAgICAgICB0YXJnZXQuc3R5bGVbX3RyYW5zZm9ybU9yaWdpblByb3BdID0gXCIwcHggMHB4XCI7IC8vb3RoZXJ3aXNlLCBpZiBzb21lb25lIHNldHMgIGFuIG9yaWdpbiB2aWEgQ1NTLCBpdCB3aWxsIGxpa2VseSBpbnRlcmZlcmUgd2l0aCB0aGUgU1ZHIHRyYW5zZm9ybSBhdHRyaWJ1dGUgb25lcyAoYmVjYXVzZSByZW1lbWJlciwgd2UncmUgYmFraW5nIHRoZSBvcmlnaW4gaW50byB0aGUgbWF0cml4KCkgdmFsdWUpLlxuXG4gICAgICAgICAgICBpZiAocGx1Z2luVG9BZGRQcm9wVHdlZW5zVG8pIHtcbiAgICAgICAgICAgICAgX2FkZE5vblR3ZWVuaW5nUFQocGx1Z2luVG9BZGRQcm9wVHdlZW5zVG8sIGNhY2hlLCBcInhPcmlnaW5cIiwgeE9yaWdpbk9sZCwgeE9yaWdpbik7XG5cbiAgICAgICAgICAgICAgX2FkZE5vblR3ZWVuaW5nUFQocGx1Z2luVG9BZGRQcm9wVHdlZW5zVG8sIGNhY2hlLCBcInlPcmlnaW5cIiwgeU9yaWdpbk9sZCwgeU9yaWdpbik7XG5cbiAgICAgICAgICAgICAgX2FkZE5vblR3ZWVuaW5nUFQocGx1Z2luVG9BZGRQcm9wVHdlZW5zVG8sIGNhY2hlLCBcInhPZmZzZXRcIiwgeE9mZnNldE9sZCwgY2FjaGUueE9mZnNldCk7XG5cbiAgICAgICAgICAgICAgX2FkZE5vblR3ZWVuaW5nUFQocGx1Z2luVG9BZGRQcm9wVHdlZW5zVG8sIGNhY2hlLCBcInlPZmZzZXRcIiwgeU9mZnNldE9sZCwgY2FjaGUueU9mZnNldCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRhcmdldC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN2Zy1vcmlnaW5cIiwgeE9yaWdpbiArIFwiIFwiICsgeU9yaWdpbik7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcGFyc2VUcmFuc2Zvcm0gPSBmdW5jdGlvbiBfcGFyc2VUcmFuc2Zvcm0odGFyZ2V0LCB1bmNhY2hlKSB7XG4gICAgICAgICAgICB2YXIgY2FjaGUgPSB0YXJnZXQuX2dzYXAgfHwgbmV3IF9nc2FwQ29yZS5HU0NhY2hlKHRhcmdldCk7XG5cbiAgICAgICAgICAgIGlmIChcInhcIiBpbiBjYWNoZSAmJiAhdW5jYWNoZSAmJiAhY2FjaGUudW5jYWNoZSkge1xuICAgICAgICAgICAgICByZXR1cm4gY2FjaGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBzdHlsZSA9IHRhcmdldC5zdHlsZSxcbiAgICAgICAgICAgICAgaW52ZXJ0ZWRTY2FsZVggPSBjYWNoZS5zY2FsZVggPCAwLFxuICAgICAgICAgICAgICBweCA9IFwicHhcIixcbiAgICAgICAgICAgICAgZGVnID0gXCJkZWdcIixcbiAgICAgICAgICAgICAgb3JpZ2luID0gX2dldENvbXB1dGVkUHJvcGVydHkodGFyZ2V0LCBfdHJhbnNmb3JtT3JpZ2luUHJvcCkgfHwgXCIwXCIsXG4gICAgICAgICAgICAgIHgsXG4gICAgICAgICAgICAgIHksXG4gICAgICAgICAgICAgIHosXG4gICAgICAgICAgICAgIHNjYWxlWCxcbiAgICAgICAgICAgICAgc2NhbGVZLFxuICAgICAgICAgICAgICByb3RhdGlvbixcbiAgICAgICAgICAgICAgcm90YXRpb25YLFxuICAgICAgICAgICAgICByb3RhdGlvblksXG4gICAgICAgICAgICAgIHNrZXdYLFxuICAgICAgICAgICAgICBza2V3WSxcbiAgICAgICAgICAgICAgcGVyc3BlY3RpdmUsXG4gICAgICAgICAgICAgIHhPcmlnaW4sXG4gICAgICAgICAgICAgIHlPcmlnaW4sXG4gICAgICAgICAgICAgIG1hdHJpeCxcbiAgICAgICAgICAgICAgYW5nbGUsXG4gICAgICAgICAgICAgIGNvcyxcbiAgICAgICAgICAgICAgc2luLFxuICAgICAgICAgICAgICBhLFxuICAgICAgICAgICAgICBiLFxuICAgICAgICAgICAgICBjLFxuICAgICAgICAgICAgICBkLFxuICAgICAgICAgICAgICBhMTIsXG4gICAgICAgICAgICAgIGEyMixcbiAgICAgICAgICAgICAgdDEsXG4gICAgICAgICAgICAgIHQyLFxuICAgICAgICAgICAgICB0MyxcbiAgICAgICAgICAgICAgYTEzLFxuICAgICAgICAgICAgICBhMjMsXG4gICAgICAgICAgICAgIGEzMyxcbiAgICAgICAgICAgICAgYTQyLFxuICAgICAgICAgICAgICBhNDMsXG4gICAgICAgICAgICAgIGEzMjtcbiAgICAgICAgICAgIHggPSB5ID0geiA9IHJvdGF0aW9uID0gcm90YXRpb25YID0gcm90YXRpb25ZID0gc2tld1ggPSBza2V3WSA9IHBlcnNwZWN0aXZlID0gMDtcbiAgICAgICAgICAgIHNjYWxlWCA9IHNjYWxlWSA9IDE7XG4gICAgICAgICAgICBjYWNoZS5zdmcgPSAhISh0YXJnZXQuZ2V0Q1RNICYmIF9pc1NWRyh0YXJnZXQpKTtcbiAgICAgICAgICAgIG1hdHJpeCA9IF9nZXRNYXRyaXgodGFyZ2V0LCBjYWNoZS5zdmcpO1xuXG4gICAgICAgICAgICBpZiAoY2FjaGUuc3ZnKSB7XG4gICAgICAgICAgICAgIHQxID0gIWNhY2hlLnVuY2FjaGUgJiYgdGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtc3ZnLW9yaWdpblwiKTtcblxuICAgICAgICAgICAgICBfYXBwbHlTVkdPcmlnaW4odGFyZ2V0LCB0MSB8fCBvcmlnaW4sICEhdDEgfHwgY2FjaGUub3JpZ2luSXNBYnNvbHV0ZSwgY2FjaGUuc21vb3RoICE9PSBmYWxzZSwgbWF0cml4KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgeE9yaWdpbiA9IGNhY2hlLnhPcmlnaW4gfHwgMDtcbiAgICAgICAgICAgIHlPcmlnaW4gPSBjYWNoZS55T3JpZ2luIHx8IDA7XG5cbiAgICAgICAgICAgIGlmIChtYXRyaXggIT09IF9pZGVudGl0eTJETWF0cml4KSB7XG4gICAgICAgICAgICAgIGEgPSBtYXRyaXhbMF07IC8vYTExXG5cbiAgICAgICAgICAgICAgYiA9IG1hdHJpeFsxXTsgLy9hMjFcblxuICAgICAgICAgICAgICBjID0gbWF0cml4WzJdOyAvL2EzMVxuXG4gICAgICAgICAgICAgIGQgPSBtYXRyaXhbM107IC8vYTQxXG5cbiAgICAgICAgICAgICAgeCA9IGExMiA9IG1hdHJpeFs0XTtcbiAgICAgICAgICAgICAgeSA9IGEyMiA9IG1hdHJpeFs1XTsgLy8yRCBtYXRyaXhcblxuICAgICAgICAgICAgICBpZiAobWF0cml4Lmxlbmd0aCA9PT0gNikge1xuICAgICAgICAgICAgICAgIHNjYWxlWCA9IE1hdGguc3FydChhICogYSArIGIgKiBiKTtcbiAgICAgICAgICAgICAgICBzY2FsZVkgPSBNYXRoLnNxcnQoZCAqIGQgKyBjICogYyk7XG4gICAgICAgICAgICAgICAgcm90YXRpb24gPSBhIHx8IGIgPyBfYXRhbjIoYiwgYSkgKiBfUkFEMkRFRyA6IDA7IC8vbm90ZTogaWYgc2NhbGVYIGlzIDAsIHdlIGNhbm5vdCBhY2N1cmF0ZWx5IG1lYXN1cmUgcm90YXRpb24uIFNhbWUgZm9yIHNrZXdYIHdpdGggYSBzY2FsZVkgb2YgMC4gVGhlcmVmb3JlLCB3ZSBkZWZhdWx0IHRvIHRoZSBwcmV2aW91c2x5IHJlY29yZGVkIHZhbHVlIChvciB6ZXJvIGlmIHRoYXQgZG9lc24ndCBleGlzdCkuXG5cbiAgICAgICAgICAgICAgICBza2V3WCA9IGMgfHwgZCA/IF9hdGFuMihjLCBkKSAqIF9SQUQyREVHICsgcm90YXRpb24gOiAwO1xuICAgICAgICAgICAgICAgIHNrZXdYICYmIChzY2FsZVkgKj0gTWF0aC5jb3Moc2tld1ggKiBfREVHMlJBRCkpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNhY2hlLnN2Zykge1xuICAgICAgICAgICAgICAgICAgeCAtPSB4T3JpZ2luIC0gKHhPcmlnaW4gKiBhICsgeU9yaWdpbiAqIGMpO1xuICAgICAgICAgICAgICAgICAgeSAtPSB5T3JpZ2luIC0gKHhPcmlnaW4gKiBiICsgeU9yaWdpbiAqIGQpO1xuICAgICAgICAgICAgICAgIH0gLy8zRCBtYXRyaXhcblxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGEzMiA9IG1hdHJpeFs2XTtcbiAgICAgICAgICAgICAgICBhNDIgPSBtYXRyaXhbN107XG4gICAgICAgICAgICAgICAgYTEzID0gbWF0cml4WzhdO1xuICAgICAgICAgICAgICAgIGEyMyA9IG1hdHJpeFs5XTtcbiAgICAgICAgICAgICAgICBhMzMgPSBtYXRyaXhbMTBdO1xuICAgICAgICAgICAgICAgIGE0MyA9IG1hdHJpeFsxMV07XG4gICAgICAgICAgICAgICAgeCA9IG1hdHJpeFsxMl07XG4gICAgICAgICAgICAgICAgeSA9IG1hdHJpeFsxM107XG4gICAgICAgICAgICAgICAgeiA9IG1hdHJpeFsxNF07XG4gICAgICAgICAgICAgICAgYW5nbGUgPSBfYXRhbjIoYTMyLCBhMzMpO1xuICAgICAgICAgICAgICAgIHJvdGF0aW9uWCA9IGFuZ2xlICogX1JBRDJERUc7IC8vcm90YXRpb25YXG5cbiAgICAgICAgICAgICAgICBpZiAoYW5nbGUpIHtcbiAgICAgICAgICAgICAgICAgIGNvcyA9IE1hdGguY29zKC1hbmdsZSk7XG4gICAgICAgICAgICAgICAgICBzaW4gPSBNYXRoLnNpbigtYW5nbGUpO1xuICAgICAgICAgICAgICAgICAgdDEgPSBhMTIgKiBjb3MgKyBhMTMgKiBzaW47XG4gICAgICAgICAgICAgICAgICB0MiA9IGEyMiAqIGNvcyArIGEyMyAqIHNpbjtcbiAgICAgICAgICAgICAgICAgIHQzID0gYTMyICogY29zICsgYTMzICogc2luO1xuICAgICAgICAgICAgICAgICAgYTEzID0gYTEyICogLXNpbiArIGExMyAqIGNvcztcbiAgICAgICAgICAgICAgICAgIGEyMyA9IGEyMiAqIC1zaW4gKyBhMjMgKiBjb3M7XG4gICAgICAgICAgICAgICAgICBhMzMgPSBhMzIgKiAtc2luICsgYTMzICogY29zO1xuICAgICAgICAgICAgICAgICAgYTQzID0gYTQyICogLXNpbiArIGE0MyAqIGNvcztcbiAgICAgICAgICAgICAgICAgIGExMiA9IHQxO1xuICAgICAgICAgICAgICAgICAgYTIyID0gdDI7XG4gICAgICAgICAgICAgICAgICBhMzIgPSB0MztcbiAgICAgICAgICAgICAgICB9IC8vcm90YXRpb25ZXG5cblxuICAgICAgICAgICAgICAgIGFuZ2xlID0gX2F0YW4yKC1jLCBhMzMpO1xuICAgICAgICAgICAgICAgIHJvdGF0aW9uWSA9IGFuZ2xlICogX1JBRDJERUc7XG5cbiAgICAgICAgICAgICAgICBpZiAoYW5nbGUpIHtcbiAgICAgICAgICAgICAgICAgIGNvcyA9IE1hdGguY29zKC1hbmdsZSk7XG4gICAgICAgICAgICAgICAgICBzaW4gPSBNYXRoLnNpbigtYW5nbGUpO1xuICAgICAgICAgICAgICAgICAgdDEgPSBhICogY29zIC0gYTEzICogc2luO1xuICAgICAgICAgICAgICAgICAgdDIgPSBiICogY29zIC0gYTIzICogc2luO1xuICAgICAgICAgICAgICAgICAgdDMgPSBjICogY29zIC0gYTMzICogc2luO1xuICAgICAgICAgICAgICAgICAgYTQzID0gZCAqIHNpbiArIGE0MyAqIGNvcztcbiAgICAgICAgICAgICAgICAgIGEgPSB0MTtcbiAgICAgICAgICAgICAgICAgIGIgPSB0MjtcbiAgICAgICAgICAgICAgICAgIGMgPSB0MztcbiAgICAgICAgICAgICAgICB9IC8vcm90YXRpb25aXG5cblxuICAgICAgICAgICAgICAgIGFuZ2xlID0gX2F0YW4yKGIsIGEpO1xuICAgICAgICAgICAgICAgIHJvdGF0aW9uID0gYW5nbGUgKiBfUkFEMkRFRztcblxuICAgICAgICAgICAgICAgIGlmIChhbmdsZSkge1xuICAgICAgICAgICAgICAgICAgY29zID0gTWF0aC5jb3MoYW5nbGUpO1xuICAgICAgICAgICAgICAgICAgc2luID0gTWF0aC5zaW4oYW5nbGUpO1xuICAgICAgICAgICAgICAgICAgdDEgPSBhICogY29zICsgYiAqIHNpbjtcbiAgICAgICAgICAgICAgICAgIHQyID0gYTEyICogY29zICsgYTIyICogc2luO1xuICAgICAgICAgICAgICAgICAgYiA9IGIgKiBjb3MgLSBhICogc2luO1xuICAgICAgICAgICAgICAgICAgYTIyID0gYTIyICogY29zIC0gYTEyICogc2luO1xuICAgICAgICAgICAgICAgICAgYSA9IHQxO1xuICAgICAgICAgICAgICAgICAgYTEyID0gdDI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHJvdGF0aW9uWCAmJiBNYXRoLmFicyhyb3RhdGlvblgpICsgTWF0aC5hYnMocm90YXRpb24pID4gMzU5LjkpIHtcbiAgICAgICAgICAgICAgICAgIC8vd2hlbiByb3RhdGlvblkgaXMgc2V0LCBpdCB3aWxsIG9mdGVuIGJlIHBhcnNlZCBhcyAxODAgZGVncmVlcyBkaWZmZXJlbnQgdGhhbiBpdCBzaG91bGQgYmUsIGFuZCByb3RhdGlvblggYW5kIHJvdGF0aW9uIGJvdGggYmVpbmcgMTgwIChpdCBsb29rcyB0aGUgc2FtZSksIHNvIHdlIGFkanVzdCBmb3IgdGhhdCBoZXJlLlxuICAgICAgICAgICAgICAgICAgcm90YXRpb25YID0gcm90YXRpb24gPSAwO1xuICAgICAgICAgICAgICAgICAgcm90YXRpb25ZID0gMTgwIC0gcm90YXRpb25ZO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHNjYWxlWCA9ICgwLCBfZ3NhcENvcmUuX3JvdW5kKShNYXRoLnNxcnQoYSAqIGEgKyBiICogYiArIGMgKiBjKSk7XG4gICAgICAgICAgICAgICAgc2NhbGVZID0gKDAsIF9nc2FwQ29yZS5fcm91bmQpKE1hdGguc3FydChhMjIgKiBhMjIgKyBhMzIgKiBhMzIpKTtcbiAgICAgICAgICAgICAgICBhbmdsZSA9IF9hdGFuMihhMTIsIGEyMik7XG4gICAgICAgICAgICAgICAgc2tld1ggPSBNYXRoLmFicyhhbmdsZSkgPiAwLjAwMDIgPyBhbmdsZSAqIF9SQUQyREVHIDogMDtcbiAgICAgICAgICAgICAgICBwZXJzcGVjdGl2ZSA9IGE0MyA/IDEgLyAoYTQzIDwgMCA/IC1hNDMgOiBhNDMpIDogMDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChjYWNoZS5zdmcpIHtcbiAgICAgICAgICAgICAgICAvL3NlbnNlIGlmIHRoZXJlIGFyZSBDU1MgdHJhbnNmb3JtcyBhcHBsaWVkIG9uIGFuIFNWRyBlbGVtZW50IGluIHdoaWNoIGNhc2Ugd2UgbXVzdCBvdmVyd3JpdGUgdGhlbSB3aGVuIHJlbmRlcmluZy4gVGhlIHRyYW5zZm9ybSBhdHRyaWJ1dGUgaXMgbW9yZSByZWxpYWJsZSBjcm9zcy1icm93c2VyLCBidXQgd2UgY2FuJ3QganVzdCByZW1vdmUgdGhlIENTUyBvbmVzIGJlY2F1c2UgdGhleSBtYXkgYmUgYXBwbGllZCBpbiBhIENTUyBydWxlIHNvbWV3aGVyZSAobm90IGp1c3QgaW5saW5lKS5cbiAgICAgICAgICAgICAgICB0MSA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIik7XG4gICAgICAgICAgICAgICAgY2FjaGUuZm9yY2VDU1MgPSB0YXJnZXQuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIFwiXCIpIHx8ICFfaXNOdWxsVHJhbnNmb3JtKF9nZXRDb21wdXRlZFByb3BlcnR5KHRhcmdldCwgX3RyYW5zZm9ybVByb3ApKTtcbiAgICAgICAgICAgICAgICB0MSAmJiB0YXJnZXQuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHQxKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMoc2tld1gpID4gOTAgJiYgTWF0aC5hYnMoc2tld1gpIDwgMjcwKSB7XG4gICAgICAgICAgICAgIGlmIChpbnZlcnRlZFNjYWxlWCkge1xuICAgICAgICAgICAgICAgIHNjYWxlWCAqPSAtMTtcbiAgICAgICAgICAgICAgICBza2V3WCArPSByb3RhdGlvbiA8PSAwID8gMTgwIDogLTE4MDtcbiAgICAgICAgICAgICAgICByb3RhdGlvbiArPSByb3RhdGlvbiA8PSAwID8gMTgwIDogLTE4MDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzY2FsZVkgKj0gLTE7XG4gICAgICAgICAgICAgICAgc2tld1ggKz0gc2tld1ggPD0gMCA/IDE4MCA6IC0xODA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2FjaGUueCA9IHggLSAoKGNhY2hlLnhQZXJjZW50ID0geCAmJiAoY2FjaGUueFBlcmNlbnQgfHwgKE1hdGgucm91bmQodGFyZ2V0Lm9mZnNldFdpZHRoIC8gMikgPT09IE1hdGgucm91bmQoLXgpID8gLTUwIDogMCkpKSA/IHRhcmdldC5vZmZzZXRXaWR0aCAqIGNhY2hlLnhQZXJjZW50IC8gMTAwIDogMCkgKyBweDtcbiAgICAgICAgICAgIGNhY2hlLnkgPSB5IC0gKChjYWNoZS55UGVyY2VudCA9IHkgJiYgKGNhY2hlLnlQZXJjZW50IHx8IChNYXRoLnJvdW5kKHRhcmdldC5vZmZzZXRIZWlnaHQgLyAyKSA9PT0gTWF0aC5yb3VuZCgteSkgPyAtNTAgOiAwKSkpID8gdGFyZ2V0Lm9mZnNldEhlaWdodCAqIGNhY2hlLnlQZXJjZW50IC8gMTAwIDogMCkgKyBweDtcbiAgICAgICAgICAgIGNhY2hlLnogPSB6ICsgcHg7XG4gICAgICAgICAgICBjYWNoZS5zY2FsZVggPSAoMCwgX2dzYXBDb3JlLl9yb3VuZCkoc2NhbGVYKTtcbiAgICAgICAgICAgIGNhY2hlLnNjYWxlWSA9ICgwLCBfZ3NhcENvcmUuX3JvdW5kKShzY2FsZVkpO1xuICAgICAgICAgICAgY2FjaGUucm90YXRpb24gPSAoMCwgX2dzYXBDb3JlLl9yb3VuZCkocm90YXRpb24pICsgZGVnO1xuICAgICAgICAgICAgY2FjaGUucm90YXRpb25YID0gKDAsIF9nc2FwQ29yZS5fcm91bmQpKHJvdGF0aW9uWCkgKyBkZWc7XG4gICAgICAgICAgICBjYWNoZS5yb3RhdGlvblkgPSAoMCwgX2dzYXBDb3JlLl9yb3VuZCkocm90YXRpb25ZKSArIGRlZztcbiAgICAgICAgICAgIGNhY2hlLnNrZXdYID0gc2tld1ggKyBkZWc7XG4gICAgICAgICAgICBjYWNoZS5za2V3WSA9IHNrZXdZICsgZGVnO1xuICAgICAgICAgICAgY2FjaGUudHJhbnNmb3JtUGVyc3BlY3RpdmUgPSBwZXJzcGVjdGl2ZSArIHB4O1xuXG4gICAgICAgICAgICBpZiAoY2FjaGUuek9yaWdpbiA9IHBhcnNlRmxvYXQob3JpZ2luLnNwbGl0KFwiIFwiKVsyXSkgfHwgMCkge1xuICAgICAgICAgICAgICBzdHlsZVtfdHJhbnNmb3JtT3JpZ2luUHJvcF0gPSBfZmlyc3RUd29Pbmx5KG9yaWdpbik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhY2hlLnhPZmZzZXQgPSBjYWNoZS55T2Zmc2V0ID0gMDtcbiAgICAgICAgICAgIGNhY2hlLmZvcmNlM0QgPSBfZ3NhcENvcmUuX2NvbmZpZy5mb3JjZTNEO1xuICAgICAgICAgICAgY2FjaGUucmVuZGVyVHJhbnNmb3JtID0gY2FjaGUuc3ZnID8gX3JlbmRlclNWR1RyYW5zZm9ybXMgOiBfc3VwcG9ydHMzRCA/IF9yZW5kZXJDU1NUcmFuc2Zvcm1zIDogX3JlbmRlck5vbjNEVHJhbnNmb3JtcztcbiAgICAgICAgICAgIGNhY2hlLnVuY2FjaGUgPSAwO1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX2ZpcnN0VHdvT25seSA9IGZ1bmN0aW9uIF9maXJzdFR3b09ubHkodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiAodmFsdWUgPSB2YWx1ZS5zcGxpdChcIiBcIikpWzBdICsgXCIgXCIgKyB2YWx1ZVsxXTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vZm9yIGhhbmRsaW5nIHRyYW5zZm9ybU9yaWdpbiB2YWx1ZXMsIHN0cmlwcGluZyBvdXQgdGhlIDNyZCBkaW1lbnNpb25cbiAgICAgICAgICBfYWRkUHhUcmFuc2xhdGUgPSBmdW5jdGlvbiBfYWRkUHhUcmFuc2xhdGUodGFyZ2V0LCBzdGFydCwgdmFsdWUpIHtcbiAgICAgICAgICAgIHZhciB1bml0ID0gKDAsIF9nc2FwQ29yZS5nZXRVbml0KShzdGFydCk7XG4gICAgICAgICAgICByZXR1cm4gKDAsIF9nc2FwQ29yZS5fcm91bmQpKHBhcnNlRmxvYXQoc3RhcnQpICsgcGFyc2VGbG9hdChfY29udmVydFRvVW5pdCh0YXJnZXQsIFwieFwiLCB2YWx1ZSArIFwicHhcIiwgdW5pdCkpKSArIHVuaXQ7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfcmVuZGVyTm9uM0RUcmFuc2Zvcm1zID0gZnVuY3Rpb24gX3JlbmRlck5vbjNEVHJhbnNmb3JtcyhyYXRpbywgY2FjaGUpIHtcbiAgICAgICAgICAgIGNhY2hlLnogPSBcIjBweFwiO1xuICAgICAgICAgICAgY2FjaGUucm90YXRpb25ZID0gY2FjaGUucm90YXRpb25YID0gXCIwZGVnXCI7XG4gICAgICAgICAgICBjYWNoZS5mb3JjZTNEID0gMDtcblxuICAgICAgICAgICAgX3JlbmRlckNTU1RyYW5zZm9ybXMocmF0aW8sIGNhY2hlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIF96ZXJvRGVnID0gXCIwZGVnXCIsXG4gICAgICAgICAgX3plcm9QeCA9IFwiMHB4XCIsXG4gICAgICAgICAgX2VuZFBhcmVudGhlc2lzID0gXCIpIFwiLFxuICAgICAgICAgIF9yZW5kZXJDU1NUcmFuc2Zvcm1zID0gZnVuY3Rpb24gX3JlbmRlckNTU1RyYW5zZm9ybXMocmF0aW8sIGNhY2hlKSB7XG4gICAgICAgICAgICB2YXIgX3JlZiA9IGNhY2hlIHx8IHRoaXMsXG4gICAgICAgICAgICAgIHhQZXJjZW50ID0gX3JlZi54UGVyY2VudCxcbiAgICAgICAgICAgICAgeVBlcmNlbnQgPSBfcmVmLnlQZXJjZW50LFxuICAgICAgICAgICAgICB4ID0gX3JlZi54LFxuICAgICAgICAgICAgICB5ID0gX3JlZi55LFxuICAgICAgICAgICAgICB6ID0gX3JlZi56LFxuICAgICAgICAgICAgICByb3RhdGlvbiA9IF9yZWYucm90YXRpb24sXG4gICAgICAgICAgICAgIHJvdGF0aW9uWSA9IF9yZWYucm90YXRpb25ZLFxuICAgICAgICAgICAgICByb3RhdGlvblggPSBfcmVmLnJvdGF0aW9uWCxcbiAgICAgICAgICAgICAgc2tld1ggPSBfcmVmLnNrZXdYLFxuICAgICAgICAgICAgICBza2V3WSA9IF9yZWYuc2tld1ksXG4gICAgICAgICAgICAgIHNjYWxlWCA9IF9yZWYuc2NhbGVYLFxuICAgICAgICAgICAgICBzY2FsZVkgPSBfcmVmLnNjYWxlWSxcbiAgICAgICAgICAgICAgdHJhbnNmb3JtUGVyc3BlY3RpdmUgPSBfcmVmLnRyYW5zZm9ybVBlcnNwZWN0aXZlLFxuICAgICAgICAgICAgICBmb3JjZTNEID0gX3JlZi5mb3JjZTNELFxuICAgICAgICAgICAgICB0YXJnZXQgPSBfcmVmLnRhcmdldCxcbiAgICAgICAgICAgICAgek9yaWdpbiA9IF9yZWYuek9yaWdpbixcbiAgICAgICAgICAgICAgdHJhbnNmb3JtcyA9IFwiXCIsXG4gICAgICAgICAgICAgIHVzZTNEID0gZm9yY2UzRCA9PT0gXCJhdXRvXCIgJiYgcmF0aW8gJiYgcmF0aW8gIT09IDEgfHwgZm9yY2UzRCA9PT0gdHJ1ZTsgLy8gU2FmYXJpIGhhcyBhIGJ1ZyB0aGF0IGNhdXNlcyBpdCBub3QgdG8gcmVuZGVyIDNEIHRyYW5zZm9ybS1vcmlnaW4gdmFsdWVzIHByb3Blcmx5LCBzbyB3ZSBmb3JjZSB0aGUgeiBvcmlnaW4gdG8gMCwgcmVjb3JkIGl0IGluIHRoZSBjYWNoZSwgYW5kIHRoZW4gZG8gdGhlIG1hdGggaGVyZSB0byBvZmZzZXQgdGhlIHRyYW5zbGF0ZSB2YWx1ZXMgYWNjb3JkaW5nbHkgKGJhc2ljYWxseSBkbyB0aGUgM0QgdHJhbnNmb3JtLW9yaWdpbiBwYXJ0IG1hbnVhbGx5KVxuXG5cbiAgICAgICAgICAgIGlmICh6T3JpZ2luICYmIChyb3RhdGlvblggIT09IF96ZXJvRGVnIHx8IHJvdGF0aW9uWSAhPT0gX3plcm9EZWcpKSB7XG4gICAgICAgICAgICAgIHZhciBhbmdsZSA9IHBhcnNlRmxvYXQocm90YXRpb25ZKSAqIF9ERUcyUkFELFxuICAgICAgICAgICAgICAgIGExMyA9IE1hdGguc2luKGFuZ2xlKSxcbiAgICAgICAgICAgICAgICBhMzMgPSBNYXRoLmNvcyhhbmdsZSksXG4gICAgICAgICAgICAgICAgY29zO1xuXG4gICAgICAgICAgICAgIGFuZ2xlID0gcGFyc2VGbG9hdChyb3RhdGlvblgpICogX0RFRzJSQUQ7XG4gICAgICAgICAgICAgIGNvcyA9IE1hdGguY29zKGFuZ2xlKTtcbiAgICAgICAgICAgICAgeCA9IF9hZGRQeFRyYW5zbGF0ZSh0YXJnZXQsIHgsIGExMyAqIGNvcyAqIC16T3JpZ2luKTtcbiAgICAgICAgICAgICAgeSA9IF9hZGRQeFRyYW5zbGF0ZSh0YXJnZXQsIHksIC1NYXRoLnNpbihhbmdsZSkgKiAtek9yaWdpbik7XG4gICAgICAgICAgICAgIHogPSBfYWRkUHhUcmFuc2xhdGUodGFyZ2V0LCB6LCBhMzMgKiBjb3MgKiAtek9yaWdpbiArIHpPcmlnaW4pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodHJhbnNmb3JtUGVyc3BlY3RpdmUgIT09IF96ZXJvUHgpIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtcyArPSBcInBlcnNwZWN0aXZlKFwiICsgdHJhbnNmb3JtUGVyc3BlY3RpdmUgKyBfZW5kUGFyZW50aGVzaXM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh4UGVyY2VudCB8fCB5UGVyY2VudCkge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm1zICs9IFwidHJhbnNsYXRlKFwiICsgeFBlcmNlbnQgKyBcIiUsIFwiICsgeVBlcmNlbnQgKyBcIiUpIFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodXNlM0QgfHwgeCAhPT0gX3plcm9QeCB8fCB5ICE9PSBfemVyb1B4IHx8IHogIT09IF96ZXJvUHgpIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtcyArPSB6ICE9PSBfemVyb1B4IHx8IHVzZTNEID8gXCJ0cmFuc2xhdGUzZChcIiArIHggKyBcIiwgXCIgKyB5ICsgXCIsIFwiICsgeiArIFwiKSBcIiA6IFwidHJhbnNsYXRlKFwiICsgeCArIFwiLCBcIiArIHkgKyBfZW5kUGFyZW50aGVzaXM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyb3RhdGlvbiAhPT0gX3plcm9EZWcpIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtcyArPSBcInJvdGF0ZShcIiArIHJvdGF0aW9uICsgX2VuZFBhcmVudGhlc2lzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocm90YXRpb25ZICE9PSBfemVyb0RlZykge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm1zICs9IFwicm90YXRlWShcIiArIHJvdGF0aW9uWSArIF9lbmRQYXJlbnRoZXNpcztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHJvdGF0aW9uWCAhPT0gX3plcm9EZWcpIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtcyArPSBcInJvdGF0ZVgoXCIgKyByb3RhdGlvblggKyBfZW5kUGFyZW50aGVzaXM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChza2V3WCAhPT0gX3plcm9EZWcgfHwgc2tld1kgIT09IF96ZXJvRGVnKSB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybXMgKz0gXCJza2V3KFwiICsgc2tld1ggKyBcIiwgXCIgKyBza2V3WSArIF9lbmRQYXJlbnRoZXNpcztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHNjYWxlWCAhPT0gMSB8fCBzY2FsZVkgIT09IDEpIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtcyArPSBcInNjYWxlKFwiICsgc2NhbGVYICsgXCIsIFwiICsgc2NhbGVZICsgX2VuZFBhcmVudGhlc2lzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0YXJnZXQuc3R5bGVbX3RyYW5zZm9ybVByb3BdID0gdHJhbnNmb3JtcyB8fCBcInRyYW5zbGF0ZSgwLCAwKVwiO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgX3JlbmRlclNWR1RyYW5zZm9ybXMgPSBmdW5jdGlvbiBfcmVuZGVyU1ZHVHJhbnNmb3JtcyhyYXRpbywgY2FjaGUpIHtcbiAgICAgICAgICAgIHZhciBfcmVmMiA9IGNhY2hlIHx8IHRoaXMsXG4gICAgICAgICAgICAgIHhQZXJjZW50ID0gX3JlZjIueFBlcmNlbnQsXG4gICAgICAgICAgICAgIHlQZXJjZW50ID0gX3JlZjIueVBlcmNlbnQsXG4gICAgICAgICAgICAgIHggPSBfcmVmMi54LFxuICAgICAgICAgICAgICB5ID0gX3JlZjIueSxcbiAgICAgICAgICAgICAgcm90YXRpb24gPSBfcmVmMi5yb3RhdGlvbixcbiAgICAgICAgICAgICAgc2tld1ggPSBfcmVmMi5za2V3WCxcbiAgICAgICAgICAgICAgc2tld1kgPSBfcmVmMi5za2V3WSxcbiAgICAgICAgICAgICAgc2NhbGVYID0gX3JlZjIuc2NhbGVYLFxuICAgICAgICAgICAgICBzY2FsZVkgPSBfcmVmMi5zY2FsZVksXG4gICAgICAgICAgICAgIHRhcmdldCA9IF9yZWYyLnRhcmdldCxcbiAgICAgICAgICAgICAgeE9yaWdpbiA9IF9yZWYyLnhPcmlnaW4sXG4gICAgICAgICAgICAgIHlPcmlnaW4gPSBfcmVmMi55T3JpZ2luLFxuICAgICAgICAgICAgICB4T2Zmc2V0ID0gX3JlZjIueE9mZnNldCxcbiAgICAgICAgICAgICAgeU9mZnNldCA9IF9yZWYyLnlPZmZzZXQsXG4gICAgICAgICAgICAgIGZvcmNlQ1NTID0gX3JlZjIuZm9yY2VDU1MsXG4gICAgICAgICAgICAgIHR4ID0gcGFyc2VGbG9hdCh4KSxcbiAgICAgICAgICAgICAgdHkgPSBwYXJzZUZsb2F0KHkpLFxuICAgICAgICAgICAgICBhMTEsXG4gICAgICAgICAgICAgIGEyMSxcbiAgICAgICAgICAgICAgYTEyLFxuICAgICAgICAgICAgICBhMjIsXG4gICAgICAgICAgICAgIHRlbXA7XG5cbiAgICAgICAgICAgIHJvdGF0aW9uID0gcGFyc2VGbG9hdChyb3RhdGlvbik7XG4gICAgICAgICAgICBza2V3WCA9IHBhcnNlRmxvYXQoc2tld1gpO1xuICAgICAgICAgICAgc2tld1kgPSBwYXJzZUZsb2F0KHNrZXdZKTtcblxuICAgICAgICAgICAgaWYgKHNrZXdZKSB7XG4gICAgICAgICAgICAgIC8vZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMsIHdlIGNvbWJpbmUgYWxsIHNrZXdpbmcgaW50byB0aGUgc2tld1ggYW5kIHJvdGF0aW9uIHZhbHVlcy4gUmVtZW1iZXIsIGEgc2tld1kgb2YgMTAgZGVncmVlcyBsb29rcyB0aGUgc2FtZSBhcyBhIHJvdGF0aW9uIG9mIDEwIGRlZ3JlZXMgcGx1cyBhIHNrZXdYIG9mIDEwIGRlZ3JlZXMuXG4gICAgICAgICAgICAgIHNrZXdZID0gcGFyc2VGbG9hdChza2V3WSk7XG4gICAgICAgICAgICAgIHNrZXdYICs9IHNrZXdZO1xuICAgICAgICAgICAgICByb3RhdGlvbiArPSBza2V3WTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHJvdGF0aW9uIHx8IHNrZXdYKSB7XG4gICAgICAgICAgICAgIHJvdGF0aW9uICo9IF9ERUcyUkFEO1xuICAgICAgICAgICAgICBza2V3WCAqPSBfREVHMlJBRDtcbiAgICAgICAgICAgICAgYTExID0gTWF0aC5jb3Mocm90YXRpb24pICogc2NhbGVYO1xuICAgICAgICAgICAgICBhMjEgPSBNYXRoLnNpbihyb3RhdGlvbikgKiBzY2FsZVg7XG4gICAgICAgICAgICAgIGExMiA9IE1hdGguc2luKHJvdGF0aW9uIC0gc2tld1gpICogLXNjYWxlWTtcbiAgICAgICAgICAgICAgYTIyID0gTWF0aC5jb3Mocm90YXRpb24gLSBza2V3WCkgKiBzY2FsZVk7XG5cbiAgICAgICAgICAgICAgaWYgKHNrZXdYKSB7XG4gICAgICAgICAgICAgICAgc2tld1kgKj0gX0RFRzJSQUQ7XG4gICAgICAgICAgICAgICAgdGVtcCA9IE1hdGgudGFuKHNrZXdYIC0gc2tld1kpO1xuICAgICAgICAgICAgICAgIHRlbXAgPSBNYXRoLnNxcnQoMSArIHRlbXAgKiB0ZW1wKTtcbiAgICAgICAgICAgICAgICBhMTIgKj0gdGVtcDtcbiAgICAgICAgICAgICAgICBhMjIgKj0gdGVtcDtcblxuICAgICAgICAgICAgICAgIGlmIChza2V3WSkge1xuICAgICAgICAgICAgICAgICAgdGVtcCA9IE1hdGgudGFuKHNrZXdZKTtcbiAgICAgICAgICAgICAgICAgIHRlbXAgPSBNYXRoLnNxcnQoMSArIHRlbXAgKiB0ZW1wKTtcbiAgICAgICAgICAgICAgICAgIGExMSAqPSB0ZW1wO1xuICAgICAgICAgICAgICAgICAgYTIxICo9IHRlbXA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgYTExID0gKDAsIF9nc2FwQ29yZS5fcm91bmQpKGExMSk7XG4gICAgICAgICAgICAgIGEyMSA9ICgwLCBfZ3NhcENvcmUuX3JvdW5kKShhMjEpO1xuICAgICAgICAgICAgICBhMTIgPSAoMCwgX2dzYXBDb3JlLl9yb3VuZCkoYTEyKTtcbiAgICAgICAgICAgICAgYTIyID0gKDAsIF9nc2FwQ29yZS5fcm91bmQpKGEyMik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhMTEgPSBzY2FsZVg7XG4gICAgICAgICAgICAgIGEyMiA9IHNjYWxlWTtcbiAgICAgICAgICAgICAgYTIxID0gYTEyID0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHR4ICYmICF+KHggKyBcIlwiKS5pbmRleE9mKFwicHhcIikgfHwgdHkgJiYgIX4oeSArIFwiXCIpLmluZGV4T2YoXCJweFwiKSkge1xuICAgICAgICAgICAgICB0eCA9IF9jb252ZXJ0VG9Vbml0KHRhcmdldCwgXCJ4XCIsIHgsIFwicHhcIik7XG4gICAgICAgICAgICAgIHR5ID0gX2NvbnZlcnRUb1VuaXQodGFyZ2V0LCBcInlcIiwgeSwgXCJweFwiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHhPcmlnaW4gfHwgeU9yaWdpbiB8fCB4T2Zmc2V0IHx8IHlPZmZzZXQpIHtcbiAgICAgICAgICAgICAgdHggPSAoMCwgX2dzYXBDb3JlLl9yb3VuZCkodHggKyB4T3JpZ2luIC0gKHhPcmlnaW4gKiBhMTEgKyB5T3JpZ2luICogYTEyKSArIHhPZmZzZXQpO1xuICAgICAgICAgICAgICB0eSA9ICgwLCBfZ3NhcENvcmUuX3JvdW5kKSh0eSArIHlPcmlnaW4gLSAoeE9yaWdpbiAqIGEyMSArIHlPcmlnaW4gKiBhMjIpICsgeU9mZnNldCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh4UGVyY2VudCB8fCB5UGVyY2VudCkge1xuICAgICAgICAgICAgICAvL1RoZSBTVkcgc3BlYyBkb2Vzbid0IHN1cHBvcnQgcGVyY2VudGFnZS1iYXNlZCB0cmFuc2xhdGlvbiBpbiB0aGUgXCJ0cmFuc2Zvcm1cIiBhdHRyaWJ1dGUsIHNvIHdlIG1lcmdlIGl0IGludG8gdGhlIHRyYW5zbGF0aW9uIHRvIHNpbXVsYXRlIGl0LlxuICAgICAgICAgICAgICB0ZW1wID0gdGFyZ2V0LmdldEJCb3goKTtcbiAgICAgICAgICAgICAgdHggPSAoMCwgX2dzYXBDb3JlLl9yb3VuZCkodHggKyB4UGVyY2VudCAvIDEwMCAqIHRlbXAud2lkdGgpO1xuICAgICAgICAgICAgICB0eSA9ICgwLCBfZ3NhcENvcmUuX3JvdW5kKSh0eSArIHlQZXJjZW50IC8gMTAwICogdGVtcC5oZWlnaHQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0ZW1wID0gXCJtYXRyaXgoXCIgKyBhMTEgKyBcIixcIiArIGEyMSArIFwiLFwiICsgYTEyICsgXCIsXCIgKyBhMjIgKyBcIixcIiArIHR4ICsgXCIsXCIgKyB0eSArIFwiKVwiO1xuICAgICAgICAgICAgdGFyZ2V0LnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCB0ZW1wKTtcbiAgICAgICAgICAgIGZvcmNlQ1NTICYmICh0YXJnZXQuc3R5bGVbX3RyYW5zZm9ybVByb3BdID0gdGVtcCk7IC8vc29tZSBicm93c2VycyBwcmlvcml0aXplIENTUyB0cmFuc2Zvcm1zIG92ZXIgdGhlIHRyYW5zZm9ybSBhdHRyaWJ1dGUuIFdoZW4gd2Ugc2Vuc2UgdGhhdCB0aGUgdXNlciBoYXMgQ1NTIHRyYW5zZm9ybXMgYXBwbGllZCwgd2UgbXVzdCBvdmVyd3JpdGUgdGhlbSB0aGlzIHdheSAob3RoZXJ3aXNlIHNvbWUgYnJvd3NlciBzaW1wbHkgd29uJ3QgcmVuZGVyIHRoZSAgdHJhbnNmb3JtIGF0dHJpYnV0ZSBjaGFuZ2VzISlcbiAgICAgICAgICB9LFxuICAgICAgICAgIF9hZGRSb3RhdGlvbmFsUHJvcFR3ZWVuID0gZnVuY3Rpb24gX2FkZFJvdGF0aW9uYWxQcm9wVHdlZW4ocGx1Z2luLCB0YXJnZXQsIHByb3BlcnR5LCBzdGFydE51bSwgZW5kVmFsdWUsIHJlbGF0aXZlKSB7XG4gICAgICAgICAgICB2YXIgY2FwID0gMzYwLFxuICAgICAgICAgICAgICBpc1N0cmluZyA9ICgwLCBfZ3NhcENvcmUuX2lzU3RyaW5nKShlbmRWYWx1ZSksXG4gICAgICAgICAgICAgIGVuZE51bSA9IHBhcnNlRmxvYXQoZW5kVmFsdWUpICogKGlzU3RyaW5nICYmIH5lbmRWYWx1ZS5pbmRleE9mKFwicmFkXCIpID8gX1JBRDJERUcgOiAxKSxcbiAgICAgICAgICAgICAgY2hhbmdlID0gcmVsYXRpdmUgPyBlbmROdW0gKiByZWxhdGl2ZSA6IGVuZE51bSAtIHN0YXJ0TnVtLFxuICAgICAgICAgICAgICBmaW5hbFZhbHVlID0gc3RhcnROdW0gKyBjaGFuZ2UgKyBcImRlZ1wiLFxuICAgICAgICAgICAgICBkaXJlY3Rpb24sXG4gICAgICAgICAgICAgIHB0O1xuXG4gICAgICAgICAgICBpZiAoaXNTdHJpbmcpIHtcbiAgICAgICAgICAgICAgZGlyZWN0aW9uID0gZW5kVmFsdWUuc3BsaXQoXCJfXCIpWzFdO1xuXG4gICAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT09IFwic2hvcnRcIikge1xuICAgICAgICAgICAgICAgIGNoYW5nZSAlPSBjYXA7XG5cbiAgICAgICAgICAgICAgICBpZiAoY2hhbmdlICE9PSBjaGFuZ2UgJSAoY2FwIC8gMikpIHtcbiAgICAgICAgICAgICAgICAgIGNoYW5nZSArPSBjaGFuZ2UgPCAwID8gY2FwIDogLWNhcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09PSBcImN3XCIgJiYgY2hhbmdlIDwgMCkge1xuICAgICAgICAgICAgICAgIGNoYW5nZSA9IChjaGFuZ2UgKyBjYXAgKiBfYmlnTnVtKSAlIGNhcCAtIH5+KGNoYW5nZSAvIGNhcCkgKiBjYXA7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSBcImNjd1wiICYmIGNoYW5nZSA+IDApIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2UgPSAoY2hhbmdlIC0gY2FwICogX2JpZ051bSkgJSBjYXAgLSB+fihjaGFuZ2UgLyBjYXApICogY2FwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBsdWdpbi5fcHQgPSBwdCA9IG5ldyBfZ3NhcENvcmUuUHJvcFR3ZWVuKHBsdWdpbi5fcHQsIHRhcmdldCwgcHJvcGVydHksIHN0YXJ0TnVtLCBjaGFuZ2UsIF9yZW5kZXJQcm9wV2l0aEVuZCk7XG4gICAgICAgICAgICBwdC5lID0gZmluYWxWYWx1ZTtcbiAgICAgICAgICAgIHB0LnUgPSBcImRlZ1wiO1xuXG4gICAgICAgICAgICBwbHVnaW4uX3Byb3BzLnB1c2gocHJvcGVydHkpO1xuXG4gICAgICAgICAgICByZXR1cm4gcHQ7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfYWRkUmF3VHJhbnNmb3JtUFRzID0gZnVuY3Rpb24gX2FkZFJhd1RyYW5zZm9ybVBUcyhwbHVnaW4sIHRyYW5zZm9ybXMsIHRhcmdldCkge1xuICAgICAgICAgICAgLy9mb3IgaGFuZGxpbmcgY2FzZXMgd2hlcmUgc29tZW9uZSBwYXNzZXMgaW4gYSB3aG9sZSB0cmFuc2Zvcm0gc3RyaW5nLCBsaWtlIHRyYW5zZm9ybTogXCJzY2FsZSgyLCAzKSByb3RhdGUoMjBkZWcpIHRyYW5zbGF0ZVkoMzBlbSlcIlxuICAgICAgICAgICAgdmFyIHN0eWxlID0gX3RlbXBEaXZTdHlsZXIuc3R5bGUsXG4gICAgICAgICAgICAgIHN0YXJ0Q2FjaGUgPSB0YXJnZXQuX2dzYXAsXG4gICAgICAgICAgICAgIGV4Y2x1ZGUgPSBcInBlcnNwZWN0aXZlLGZvcmNlM0QsdHJhbnNmb3JtT3JpZ2luLHN2Z09yaWdpblwiLFxuICAgICAgICAgICAgICBlbmRDYWNoZSxcbiAgICAgICAgICAgICAgcCxcbiAgICAgICAgICAgICAgc3RhcnRWYWx1ZSxcbiAgICAgICAgICAgICAgZW5kVmFsdWUsXG4gICAgICAgICAgICAgIHN0YXJ0TnVtLFxuICAgICAgICAgICAgICBlbmROdW0sXG4gICAgICAgICAgICAgIHN0YXJ0VW5pdCxcbiAgICAgICAgICAgICAgZW5kVW5pdDtcbiAgICAgICAgICAgIHN0eWxlLmNzc1RleHQgPSBnZXRDb21wdXRlZFN0eWxlKHRhcmdldCkuY3NzVGV4dCArIFwiO3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7XCI7IC8vJS1iYXNlZCB0cmFuc2xhdGlvbnMgd2lsbCBmYWlsIHVubGVzcyB3ZSBzZXQgdGhlIHdpZHRoL2hlaWdodCB0byBtYXRjaCB0aGUgb3JpZ2luYWwgdGFyZ2V0IChhbmQgcGFkZGluZy9ib3JkZXJzIGNhbiBhZmZlY3QgaXQpXG5cbiAgICAgICAgICAgIHN0eWxlW190cmFuc2Zvcm1Qcm9wXSA9IHRyYW5zZm9ybXM7XG5cbiAgICAgICAgICAgIF9kb2MuYm9keS5hcHBlbmRDaGlsZChfdGVtcERpdlN0eWxlcik7XG5cbiAgICAgICAgICAgIGVuZENhY2hlID0gX3BhcnNlVHJhbnNmb3JtKF90ZW1wRGl2U3R5bGVyLCAxKTtcblxuICAgICAgICAgICAgZm9yIChwIGluIF90cmFuc2Zvcm1Qcm9wcykge1xuICAgICAgICAgICAgICBzdGFydFZhbHVlID0gc3RhcnRDYWNoZVtwXTtcbiAgICAgICAgICAgICAgZW5kVmFsdWUgPSBlbmRDYWNoZVtwXTtcblxuICAgICAgICAgICAgICBpZiAoc3RhcnRWYWx1ZSAhPT0gZW5kVmFsdWUgJiYgZXhjbHVkZS5pbmRleE9mKHApIDwgMCkge1xuICAgICAgICAgICAgICAgIC8vdHdlZW5pbmcgdG8gbm8gcGVyc3BlY3RpdmUgZ2l2ZXMgdmVyeSB1bmludHVpdGl2ZSByZXN1bHRzIC0ganVzdCBrZWVwIHRoZSBzYW1lIHBlcnNwZWN0aXZlIGluIHRoYXQgY2FzZS5cbiAgICAgICAgICAgICAgICBzdGFydFVuaXQgPSAoMCwgX2dzYXBDb3JlLmdldFVuaXQpKHN0YXJ0VmFsdWUpO1xuICAgICAgICAgICAgICAgIGVuZFVuaXQgPSAoMCwgX2dzYXBDb3JlLmdldFVuaXQpKGVuZFZhbHVlKTtcbiAgICAgICAgICAgICAgICBzdGFydE51bSA9IHN0YXJ0VW5pdCAhPT0gZW5kVW5pdCA/IF9jb252ZXJ0VG9Vbml0KHRhcmdldCwgcCwgc3RhcnRWYWx1ZSwgZW5kVW5pdCkgOiBwYXJzZUZsb2F0KHN0YXJ0VmFsdWUpO1xuICAgICAgICAgICAgICAgIGVuZE51bSA9IHBhcnNlRmxvYXQoZW5kVmFsdWUpO1xuICAgICAgICAgICAgICAgIHBsdWdpbi5fcHQgPSBuZXcgX2dzYXBDb3JlLlByb3BUd2VlbihwbHVnaW4uX3B0LCBzdGFydENhY2hlLCBwLCBzdGFydE51bSwgZW5kTnVtIC0gc3RhcnROdW0sIF9yZW5kZXJDU1NQcm9wKTtcbiAgICAgICAgICAgICAgICBwbHVnaW4uX3B0LnUgPSBlbmRVbml0IHx8IDA7XG5cbiAgICAgICAgICAgICAgICBwbHVnaW4uX3Byb3BzLnB1c2gocCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX2RvYy5ib2R5LnJlbW92ZUNoaWxkKF90ZW1wRGl2U3R5bGVyKTtcbiAgICAgICAgICB9OyAvLyBoYW5kbGUgc3BsaXR0aW5nIGFwYXJ0IHBhZGRpbmcsIG1hcmdpbiwgYm9yZGVyV2lkdGgsIGFuZCBib3JkZXJSYWRpdXMgaW50byB0aGVpciA0IGNvbXBvbmVudHMuIEZpcmVmb3gsIGZvciBleGFtcGxlLCB3b24ndCByZXBvcnQgYm9yZGVyUmFkaXVzIGNvcnJlY3RseSAtIGl0IHdpbGwgb25seSBkbyBib3JkZXJUb3BMZWZ0UmFkaXVzIGFuZCB0aGUgb3RoZXIgY29ybmVycy4gV2UgYWxzbyB3YW50IHRvIGhhbmRsZSBwYWRkaW5nVG9wLCBtYXJnaW5MZWZ0LCBib3JkZXJSaWdodFdpZHRoLCBldGMuXG5cblxuICAgICAgICBleHBvcnRzLl9nZXRCQm94ID0gX2dldEJCb3g7XG4gICAgICAgIGV4cG9ydHMuY2hlY2tQcmVmaXggPSBfY2hlY2tQcm9wUHJlZml4O1xuICAgICAgICBleHBvcnRzLl9jcmVhdGVFbGVtZW50ID0gX2NyZWF0ZUVsZW1lbnQ7XG4gICAgICAgICgwLCBfZ3NhcENvcmUuX2ZvckVhY2hOYW1lKShcInBhZGRpbmcsbWFyZ2luLFdpZHRoLFJhZGl1c1wiLCBmdW5jdGlvbiAobmFtZSwgaW5kZXgpIHtcbiAgICAgICAgICB2YXIgdCA9IFwiVG9wXCIsXG4gICAgICAgICAgICByID0gXCJSaWdodFwiLFxuICAgICAgICAgICAgYiA9IFwiQm90dG9tXCIsXG4gICAgICAgICAgICBsID0gXCJMZWZ0XCIsXG4gICAgICAgICAgICBwcm9wcyA9IChpbmRleCA8IDMgPyBbdCwgciwgYiwgbF0gOiBbdCArIGwsIHQgKyByLCBiICsgciwgYiArIGxdKS5tYXAoZnVuY3Rpb24gKHNpZGUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGluZGV4IDwgMiA/IG5hbWUgKyBzaWRlIDogXCJib3JkZXJcIiArIHNpZGUgKyBuYW1lO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICBfc3BlY2lhbFByb3BzW2luZGV4ID4gMSA/IFwiYm9yZGVyXCIgKyBuYW1lIDogbmFtZV0gPSBmdW5jdGlvbiAocGx1Z2luLCB0YXJnZXQsIHByb3BlcnR5LCBlbmRWYWx1ZSwgdHdlZW4pIHtcbiAgICAgICAgICAgIHZhciBhLCB2YXJzO1xuXG4gICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDQpIHtcbiAgICAgICAgICAgICAgLy8gZ2V0dGVyLCBwYXNzZWQgdGFyZ2V0LCBwcm9wZXJ0eSwgYW5kIHVuaXQgKGZyb20gX2dldCgpKVxuICAgICAgICAgICAgICBhID0gcHJvcHMubWFwKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9nZXQocGx1Z2luLCBwcm9wLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB2YXJzID0gYS5qb2luKFwiIFwiKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHZhcnMuc3BsaXQoYVswXSkubGVuZ3RoID09PSA1ID8gYVswXSA6IHZhcnM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGEgPSAoZW5kVmFsdWUgKyBcIlwiKS5zcGxpdChcIiBcIik7XG4gICAgICAgICAgICB2YXJzID0ge307XG4gICAgICAgICAgICBwcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wLCBpKSB7XG4gICAgICAgICAgICAgIHJldHVybiB2YXJzW3Byb3BdID0gYVtpXSA9IGFbaV0gfHwgYVsoaSAtIDEpIC8gMiB8IDBdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBwbHVnaW4uaW5pdCh0YXJnZXQsIHZhcnMsIHR3ZWVuKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIENTU1BsdWdpbiA9IHtcbiAgICAgICAgICBuYW1lOiBcImNzc1wiLFxuICAgICAgICAgIHJlZ2lzdGVyOiBfaW5pdENvcmUsXG4gICAgICAgICAgdGFyZ2V0VGVzdDogZnVuY3Rpb24gdGFyZ2V0VGVzdCh0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQuc3R5bGUgJiYgdGFyZ2V0Lm5vZGVUeXBlO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdCh0YXJnZXQsIHZhcnMsIHR3ZWVuLCBpbmRleCwgdGFyZ2V0cykge1xuICAgICAgICAgICAgdmFyIHByb3BzID0gdGhpcy5fcHJvcHMsXG4gICAgICAgICAgICAgIHN0eWxlID0gdGFyZ2V0LnN0eWxlLFxuICAgICAgICAgICAgICBzdGFydEF0ID0gdHdlZW4udmFycy5zdGFydEF0LFxuICAgICAgICAgICAgICBzdGFydFZhbHVlLFxuICAgICAgICAgICAgICBlbmRWYWx1ZSxcbiAgICAgICAgICAgICAgZW5kTnVtLFxuICAgICAgICAgICAgICBzdGFydE51bSxcbiAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgc3BlY2lhbFByb3AsXG4gICAgICAgICAgICAgIHAsXG4gICAgICAgICAgICAgIHN0YXJ0VW5pdCxcbiAgICAgICAgICAgICAgZW5kVW5pdCxcbiAgICAgICAgICAgICAgcmVsYXRpdmUsXG4gICAgICAgICAgICAgIGlzVHJhbnNmb3JtUmVsYXRlZCxcbiAgICAgICAgICAgICAgdHJhbnNmb3JtUHJvcFR3ZWVuLFxuICAgICAgICAgICAgICBjYWNoZSxcbiAgICAgICAgICAgICAgc21vb3RoLFxuICAgICAgICAgICAgICBoYXNQcmlvcml0eTtcbiAgICAgICAgICAgIF9wbHVnaW5Jbml0dGVkIHx8IF9pbml0Q29yZSgpO1xuXG4gICAgICAgICAgICBmb3IgKHAgaW4gdmFycykge1xuICAgICAgICAgICAgICBpZiAocCA9PT0gXCJhdXRvUm91bmRcIikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgZW5kVmFsdWUgPSB2YXJzW3BdO1xuXG4gICAgICAgICAgICAgIGlmIChfZ3NhcENvcmUuX3BsdWdpbnNbcF0gJiYgKDAsIF9nc2FwQ29yZS5fY2hlY2tQbHVnaW4pKHAsIHZhcnMsIHR3ZWVuLCBpbmRleCwgdGFyZ2V0LCB0YXJnZXRzKSkge1xuICAgICAgICAgICAgICAgIC8vIHBsdWdpbnNcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHR5cGUgPSB0eXBlb2YgZW5kVmFsdWU7XG4gICAgICAgICAgICAgIHNwZWNpYWxQcm9wID0gX3NwZWNpYWxQcm9wc1twXTtcblxuICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgZW5kVmFsdWUgPSBlbmRWYWx1ZS5jYWxsKHR3ZWVuLCBpbmRleCwgdGFyZ2V0LCB0YXJnZXRzKTtcbiAgICAgICAgICAgICAgICB0eXBlID0gdHlwZW9mIGVuZFZhbHVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGUgPT09IFwic3RyaW5nXCIgJiYgfmVuZFZhbHVlLmluZGV4T2YoXCJyYW5kb20oXCIpKSB7XG4gICAgICAgICAgICAgICAgZW5kVmFsdWUgPSAoMCwgX2dzYXBDb3JlLl9yZXBsYWNlUmFuZG9tKShlbmRWYWx1ZSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoc3BlY2lhbFByb3ApIHtcbiAgICAgICAgICAgICAgICBzcGVjaWFsUHJvcCh0aGlzLCB0YXJnZXQsIHAsIGVuZFZhbHVlLCB0d2VlbikgJiYgKGhhc1ByaW9yaXR5ID0gMSk7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAocC5zdWJzdHIoMCwgMikgPT09IFwiLS1cIikge1xuICAgICAgICAgICAgICAgIC8vQ1NTIHZhcmlhYmxlXG4gICAgICAgICAgICAgICAgc3RhcnRWYWx1ZSA9IChnZXRDb21wdXRlZFN0eWxlKHRhcmdldCkuZ2V0UHJvcGVydHlWYWx1ZShwKSArIFwiXCIpLnRyaW0oKTtcbiAgICAgICAgICAgICAgICBlbmRWYWx1ZSArPSBcIlwiO1xuICAgICAgICAgICAgICAgIHN0YXJ0VW5pdCA9ICgwLCBfZ3NhcENvcmUuZ2V0VW5pdCkoc3RhcnRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgZW5kVW5pdCA9ICgwLCBfZ3NhcENvcmUuZ2V0VW5pdCkoZW5kVmFsdWUpO1xuICAgICAgICAgICAgICAgIGVuZFVuaXQgPyBzdGFydFVuaXQgIT09IGVuZFVuaXQgJiYgKHN0YXJ0VmFsdWUgPSBfY29udmVydFRvVW5pdCh0YXJnZXQsIHAsIHN0YXJ0VmFsdWUsIGVuZFVuaXQpICsgZW5kVW5pdCkgOiBzdGFydFVuaXQgJiYgKGVuZFZhbHVlICs9IHN0YXJ0VW5pdCk7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGQoc3R5bGUsIFwic2V0UHJvcGVydHlcIiwgc3RhcnRWYWx1ZSwgZW5kVmFsdWUsIGluZGV4LCB0YXJnZXRzLCAwLCAwLCBwKTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0QXQgJiYgcCBpbiBzdGFydEF0KSB7XG4gICAgICAgICAgICAgICAgICAvLyBpbiBjYXNlIHNvbWVvbmUgaGFyZC1jb2RlcyBhIGNvbXBsZXggdmFsdWUgYXMgdGhlIHN0YXJ0LCBsaWtlIHRvcDogXCJjYWxjKDJ2aCAvIDIpXCIuIFdpdGhvdXQgdGhpcywgaXQnZCB1c2UgdGhlIGNvbXB1dGVkIHZhbHVlIChhbHdheXMgaW4gcHgpXG4gICAgICAgICAgICAgICAgICBzdGFydFZhbHVlID0gdHlwZW9mIHN0YXJ0QXRbcF0gPT09IFwiZnVuY3Rpb25cIiA/IHN0YXJ0QXRbcF0uY2FsbCh0d2VlbiwgaW5kZXgsIHRhcmdldCwgdGFyZ2V0cykgOiBzdGFydEF0W3BdO1xuICAgICAgICAgICAgICAgICAgcCBpbiBfZ3NhcENvcmUuX2NvbmZpZy51bml0cyAmJiAhKDAsIF9nc2FwQ29yZS5nZXRVbml0KShzdGFydFZhbHVlKSAmJiAoc3RhcnRWYWx1ZSArPSBfZ3NhcENvcmUuX2NvbmZpZy51bml0c1twXSk7IC8vIGZvciBjYXNlcyB3aGVuIHNvbWVvbmUgcGFzc2VzIGluIGEgdW5pdGxlc3MgdmFsdWUgbGlrZSB7eDogMTAwfTsgaWYgd2UgdHJ5IHNldHRpbmcgdHJhbnNsYXRlKDEwMCwgMHB4KSBpdCB3b24ndCB3b3JrLlxuXG4gICAgICAgICAgICAgICAgICAoc3RhcnRWYWx1ZSArIFwiXCIpLmNoYXJBdCgxKSA9PT0gXCI9XCIgJiYgKHN0YXJ0VmFsdWUgPSBfZ2V0KHRhcmdldCwgcCkpOyAvLyBjYW4ndCB3b3JrIHdpdGggcmVsYXRpdmUgdmFsdWVzXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHN0YXJ0VmFsdWUgPSBfZ2V0KHRhcmdldCwgcCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc3RhcnROdW0gPSBwYXJzZUZsb2F0KHN0YXJ0VmFsdWUpO1xuICAgICAgICAgICAgICAgIHJlbGF0aXZlID0gdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiBlbmRWYWx1ZS5jaGFyQXQoMSkgPT09IFwiPVwiID8gKyhlbmRWYWx1ZS5jaGFyQXQoMCkgKyBcIjFcIikgOiAwO1xuICAgICAgICAgICAgICAgIHJlbGF0aXZlICYmIChlbmRWYWx1ZSA9IGVuZFZhbHVlLnN1YnN0cigyKSk7XG4gICAgICAgICAgICAgICAgZW5kTnVtID0gcGFyc2VGbG9hdChlbmRWYWx1ZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAocCBpbiBfcHJvcGVydHlBbGlhc2VzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAocCA9PT0gXCJhdXRvQWxwaGFcIikge1xuICAgICAgICAgICAgICAgICAgICAvL3NwZWNpYWwgY2FzZSB3aGVyZSB3ZSBjb250cm9sIHRoZSB2aXNpYmlsaXR5IGFsb25nIHdpdGggb3BhY2l0eS4gV2Ugc3RpbGwgYWxsb3cgdGhlIG9wYWNpdHkgdmFsdWUgdG8gcGFzcyB0aHJvdWdoIGFuZCBnZXQgdHdlZW5lZC5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0TnVtID09PSAxICYmIF9nZXQodGFyZ2V0LCBcInZpc2liaWxpdHlcIikgPT09IFwiaGlkZGVuXCIgJiYgZW5kTnVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy9pZiB2aXNpYmlsaXR5IGlzIGluaXRpYWxseSBzZXQgdG8gXCJoaWRkZW5cIiwgd2Ugc2hvdWxkIGludGVycHJldCB0aGF0IGFzIGludGVudCB0byBtYWtlIG9wYWNpdHkgMCAoYSBjb252ZW5pZW5jZSlcbiAgICAgICAgICAgICAgICAgICAgICBzdGFydE51bSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBfYWRkTm9uVHdlZW5pbmdQVCh0aGlzLCBzdHlsZSwgXCJ2aXNpYmlsaXR5XCIsIHN0YXJ0TnVtID8gXCJpbmhlcml0XCIgOiBcImhpZGRlblwiLCBlbmROdW0gPyBcImluaGVyaXRcIiA6IFwiaGlkZGVuXCIsICFlbmROdW0pO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBpZiAocCAhPT0gXCJzY2FsZVwiICYmIHAgIT09IFwidHJhbnNmb3JtXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcCA9IF9wcm9wZXJ0eUFsaWFzZXNbcF07XG4gICAgICAgICAgICAgICAgICAgIH5wLmluZGV4T2YoXCIsXCIpICYmIChwID0gcC5zcGxpdChcIixcIilbMF0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlzVHJhbnNmb3JtUmVsYXRlZCA9IHAgaW4gX3RyYW5zZm9ybVByb3BzOyAvLy0tLSBUUkFOU0ZPUk0tUkVMQVRFRCAtLS1cblxuICAgICAgICAgICAgICAgIGlmIChpc1RyYW5zZm9ybVJlbGF0ZWQpIHtcbiAgICAgICAgICAgICAgICAgIGlmICghdHJhbnNmb3JtUHJvcFR3ZWVuKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlID0gdGFyZ2V0Ll9nc2FwO1xuICAgICAgICAgICAgICAgICAgICBjYWNoZS5yZW5kZXJUcmFuc2Zvcm0gJiYgIXZhcnMucGFyc2VUcmFuc2Zvcm0gfHwgX3BhcnNlVHJhbnNmb3JtKHRhcmdldCwgdmFycy5wYXJzZVRyYW5zZm9ybSk7IC8vIGlmLCBmb3IgZXhhbXBsZSwgZ3NhcC5zZXQoLi4uIHt0cmFuc2Zvcm06XCJ0cmFuc2xhdGVYKDUwdncpXCJ9KSwgdGhlIF9nZXQoKSBjYWxsIGRvZXNuJ3QgcGFyc2UgdGhlIHRyYW5zZm9ybSwgdGh1cyBjYWNoZS5yZW5kZXJUcmFuc2Zvcm0gd29uJ3QgYmUgc2V0IHlldCBzbyBmb3JjZSB0aGUgcGFyc2luZyBvZiB0aGUgdHJhbnNmb3JtIGhlcmUuXG5cbiAgICAgICAgICAgICAgICAgICAgc21vb3RoID0gdmFycy5zbW9vdGhPcmlnaW4gIT09IGZhbHNlICYmIGNhY2hlLnNtb290aDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtUHJvcFR3ZWVuID0gdGhpcy5fcHQgPSBuZXcgX2dzYXBDb3JlLlByb3BUd2Vlbih0aGlzLl9wdCwgc3R5bGUsIF90cmFuc2Zvcm1Qcm9wLCAwLCAxLCBjYWNoZS5yZW5kZXJUcmFuc2Zvcm0sIGNhY2hlLCAwLCAtMSk7IC8vdGhlIGZpcnN0IHRpbWUgdGhyb3VnaCwgY3JlYXRlIHRoZSByZW5kZXJpbmcgUHJvcFR3ZWVuIHNvIHRoYXQgaXQgcnVucyBMQVNUIChpbiB0aGUgbGlua2VkIGxpc3QsIHdlIGtlZXAgYWRkaW5nIHRvIHRoZSBiZWdpbm5pbmcpXG5cbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtUHJvcFR3ZWVuLmRlcCA9IDE7IC8vZmxhZyBpdCBhcyBkZXBlbmRlbnQgc28gdGhhdCBpZiB0aGluZ3MgZ2V0IGtpbGxlZC9vdmVyd3JpdHRlbiBhbmQgdGhpcyBpcyB0aGUgb25seSBQcm9wVHdlZW4gbGVmdCwgd2UgY2FuIHNhZmVseSBraWxsIHRoZSB3aG9sZSB0d2Vlbi5cbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgaWYgKHAgPT09IFwic2NhbGVcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9wdCA9IG5ldyBfZ3NhcENvcmUuUHJvcFR3ZWVuKHRoaXMuX3B0LCBjYWNoZSwgXCJzY2FsZVlcIiwgY2FjaGUuc2NhbGVZLCByZWxhdGl2ZSA/IHJlbGF0aXZlICogZW5kTnVtIDogZW5kTnVtIC0gY2FjaGUuc2NhbGVZKTtcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMucHVzaChcInNjYWxlWVwiLCBwKTtcbiAgICAgICAgICAgICAgICAgICAgcCArPSBcIlhcIjtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocCA9PT0gXCJ0cmFuc2Zvcm1PcmlnaW5cIikge1xuICAgICAgICAgICAgICAgICAgICBlbmRWYWx1ZSA9IF9jb252ZXJ0S2V5d29yZHNUb1BlcmNlbnRhZ2VzKGVuZFZhbHVlKTsgLy9pbiBjYXNlIHNvbWV0aGluZyBsaWtlIFwibGVmdCB0b3BcIiBvciBcImJvdHRvbSByaWdodFwiIGlzIHBhc3NlZCBpbi4gQ29udmVydCB0byBwZXJjZW50YWdlcy5cblxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGUuc3ZnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgX2FwcGx5U1ZHT3JpZ2luKHRhcmdldCwgZW5kVmFsdWUsIDAsIHNtb290aCwgMCwgdGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgZW5kVW5pdCA9IHBhcnNlRmxvYXQoZW5kVmFsdWUuc3BsaXQoXCIgXCIpWzJdKSB8fCAwOyAvL2hhbmRsZSB0aGUgek9yaWdpbiBzZXBhcmF0ZWx5IVxuXG4gICAgICAgICAgICAgICAgICAgICAgZW5kVW5pdCAhPT0gY2FjaGUuek9yaWdpbiAmJiBfYWRkTm9uVHdlZW5pbmdQVCh0aGlzLCBjYWNoZSwgXCJ6T3JpZ2luXCIsIGNhY2hlLnpPcmlnaW4sIGVuZFVuaXQpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgX2FkZE5vblR3ZWVuaW5nUFQodGhpcywgc3R5bGUsIHAsIF9maXJzdFR3b09ubHkoc3RhcnRWYWx1ZSksIF9maXJzdFR3b09ubHkoZW5kVmFsdWUpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwID09PSBcInN2Z09yaWdpblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIF9hcHBseVNWR09yaWdpbih0YXJnZXQsIGVuZFZhbHVlLCAxLCBzbW9vdGgsIDAsIHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwIGluIF9yb3RhdGlvbmFsUHJvcGVydGllcykge1xuICAgICAgICAgICAgICAgICAgICBfYWRkUm90YXRpb25hbFByb3BUd2Vlbih0aGlzLCBjYWNoZSwgcCwgc3RhcnROdW0sIGVuZFZhbHVlLCByZWxhdGl2ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHAgPT09IFwic21vb3RoT3JpZ2luXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgX2FkZE5vblR3ZWVuaW5nUFQodGhpcywgY2FjaGUsIFwic21vb3RoXCIsIGNhY2hlLnNtb290aCwgZW5kVmFsdWUpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwID09PSBcImZvcmNlM0RcIikge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZVtwXSA9IGVuZFZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocCA9PT0gXCJ0cmFuc2Zvcm1cIikge1xuICAgICAgICAgICAgICAgICAgICBfYWRkUmF3VHJhbnNmb3JtUFRzKHRoaXMsIGVuZFZhbHVlLCB0YXJnZXQpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIShwIGluIHN0eWxlKSkge1xuICAgICAgICAgICAgICAgICAgcCA9IF9jaGVja1Byb3BQcmVmaXgocCkgfHwgcDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaXNUcmFuc2Zvcm1SZWxhdGVkIHx8IChlbmROdW0gfHwgZW5kTnVtID09PSAwKSAmJiAoc3RhcnROdW0gfHwgc3RhcnROdW0gPT09IDApICYmICFfY29tcGxleEV4cC50ZXN0KGVuZFZhbHVlKSAmJiBwIGluIHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICBzdGFydFVuaXQgPSAoc3RhcnRWYWx1ZSArIFwiXCIpLnN1YnN0cigoc3RhcnROdW0gKyBcIlwiKS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgZW5kTnVtIHx8IChlbmROdW0gPSAwKTsgLy8gcHJvdGVjdCBhZ2FpbnN0IE5hTlxuXG4gICAgICAgICAgICAgICAgICBlbmRVbml0ID0gKDAsIF9nc2FwQ29yZS5nZXRVbml0KShlbmRWYWx1ZSkgfHwgKHAgaW4gX2dzYXBDb3JlLl9jb25maWcudW5pdHMgPyBfZ3NhcENvcmUuX2NvbmZpZy51bml0c1twXSA6IHN0YXJ0VW5pdCk7XG4gICAgICAgICAgICAgICAgICBzdGFydFVuaXQgIT09IGVuZFVuaXQgJiYgKHN0YXJ0TnVtID0gX2NvbnZlcnRUb1VuaXQodGFyZ2V0LCBwLCBzdGFydFZhbHVlLCBlbmRVbml0KSk7XG4gICAgICAgICAgICAgICAgICB0aGlzLl9wdCA9IG5ldyBfZ3NhcENvcmUuUHJvcFR3ZWVuKHRoaXMuX3B0LCBpc1RyYW5zZm9ybVJlbGF0ZWQgPyBjYWNoZSA6IHN0eWxlLCBwLCBzdGFydE51bSwgcmVsYXRpdmUgPyByZWxhdGl2ZSAqIGVuZE51bSA6IGVuZE51bSAtIHN0YXJ0TnVtLCAhaXNUcmFuc2Zvcm1SZWxhdGVkICYmIChlbmRVbml0ID09PSBcInB4XCIgfHwgcCA9PT0gXCJ6SW5kZXhcIikgJiYgdmFycy5hdXRvUm91bmQgIT09IGZhbHNlID8gX3JlbmRlclJvdW5kZWRDU1NQcm9wIDogX3JlbmRlckNTU1Byb3ApO1xuICAgICAgICAgICAgICAgICAgdGhpcy5fcHQudSA9IGVuZFVuaXQgfHwgMDtcblxuICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0VW5pdCAhPT0gZW5kVW5pdCkge1xuICAgICAgICAgICAgICAgICAgICAvL3doZW4gdGhlIHR3ZWVuIGdvZXMgYWxsIHRoZSB3YXkgYmFjayB0byB0aGUgYmVnaW5uaW5nLCB3ZSBuZWVkIHRvIHJldmVydCBpdCB0byB0aGUgT0xEL09SSUdJTkFMIHZhbHVlICh3aXRoIHRob3NlIHVuaXRzKS4gV2UgcmVjb3JkIHRoYXQgYXMgYSBcImJcIiAoYmVnaW5uaW5nKSBwcm9wZXJ0eSBhbmQgcG9pbnQgdG8gYSByZW5kZXIgbWV0aG9kIHRoYXQgaGFuZGxlcyB0aGF0LiAocGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9wdC5iID0gc3RhcnRWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcHQuciA9IF9yZW5kZXJDU1NQcm9wV2l0aEJlZ2lubmluZztcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCEocCBpbiBzdHlsZSkpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChwIGluIHRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICAvL21heWJlIGl0J3Mgbm90IGEgc3R5bGUgLSBpdCBjb3VsZCBiZSBhIHByb3BlcnR5IGFkZGVkIGRpcmVjdGx5IHRvIGFuIGVsZW1lbnQgaW4gd2hpY2ggY2FzZSB3ZSdsbCB0cnkgdG8gYW5pbWF0ZSB0aGF0LlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZCh0YXJnZXQsIHAsIHRhcmdldFtwXSwgZW5kVmFsdWUsIGluZGV4LCB0YXJnZXRzKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICgwLCBfZ3NhcENvcmUuX21pc3NpbmdQbHVnaW4pKHAsIGVuZFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIF90d2VlbkNvbXBsZXhDU1NTdHJpbmcuY2FsbCh0aGlzLCB0YXJnZXQsIHAsIHN0YXJ0VmFsdWUsIGVuZFZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBwcm9wcy5wdXNoKHApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGhhc1ByaW9yaXR5ICYmICgwLCBfZ3NhcENvcmUuX3NvcnRQcm9wVHdlZW5zQnlQcmlvcml0eSkodGhpcyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQ6IF9nZXQsXG4gICAgICAgICAgYWxpYXNlczogX3Byb3BlcnR5QWxpYXNlcyxcbiAgICAgICAgICBnZXRTZXR0ZXI6IGZ1bmN0aW9uIGdldFNldHRlcih0YXJnZXQsIHByb3BlcnR5LCBwbHVnaW4pIHtcbiAgICAgICAgICAgIC8vcmV0dXJucyBhIHNldHRlciBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgdGFyZ2V0LCBwcm9wZXJ0eSwgdmFsdWUgYW5kIGFwcGxpZXMgaXQgYWNjb3JkaW5nbHkuIFJlbWVtYmVyLCBwcm9wZXJ0aWVzIGxpa2UgXCJ4XCIgYXJlbid0IGFzIHNpbXBsZSBhcyB0YXJnZXQuc3R5bGUucHJvcGVydHkgPSB2YWx1ZSBiZWNhdXNlIHRoZXkndmUgZ290IHRvIGJlIGFwcGxpZWQgdG8gYSBwcm94eSBvYmplY3QgYW5kIHRoZW4gbWVyZ2VkIGludG8gYSB0cmFuc2Zvcm0gc3RyaW5nIGluIGEgcmVuZGVyZXIuXG4gICAgICAgICAgICB2YXIgcCA9IF9wcm9wZXJ0eUFsaWFzZXNbcHJvcGVydHldO1xuICAgICAgICAgICAgcCAmJiBwLmluZGV4T2YoXCIsXCIpIDwgMCAmJiAocHJvcGVydHkgPSBwKTtcbiAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eSBpbiBfdHJhbnNmb3JtUHJvcHMgJiYgcHJvcGVydHkgIT09IF90cmFuc2Zvcm1PcmlnaW5Qcm9wICYmICh0YXJnZXQuX2dzYXAueCB8fCBfZ2V0KHRhcmdldCwgXCJ4XCIpKSA/IHBsdWdpbiAmJiBfcmVjZW50U2V0dGVyUGx1Z2luID09PSBwbHVnaW4gPyBwcm9wZXJ0eSA9PT0gXCJzY2FsZVwiID8gX3NldHRlclNjYWxlIDogX3NldHRlclRyYW5zZm9ybSA6IChfcmVjZW50U2V0dGVyUGx1Z2luID0gcGx1Z2luIHx8IHt9KSAmJiAocHJvcGVydHkgPT09IFwic2NhbGVcIiA/IF9zZXR0ZXJTY2FsZVdpdGhSZW5kZXIgOiBfc2V0dGVyVHJhbnNmb3JtV2l0aFJlbmRlcikgOiB0YXJnZXQuc3R5bGUgJiYgISgwLCBfZ3NhcENvcmUuX2lzVW5kZWZpbmVkKSh0YXJnZXQuc3R5bGVbcHJvcGVydHldKSA/IF9zZXR0ZXJDU1NTdHlsZSA6IH5wcm9wZXJ0eS5pbmRleE9mKFwiLVwiKSA/IF9zZXR0ZXJDU1NQcm9wIDogKDAsIF9nc2FwQ29yZS5fZ2V0U2V0dGVyKSh0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvcmU6IHtcbiAgICAgICAgICAgIF9yZW1vdmVQcm9wZXJ0eTogX3JlbW92ZVByb3BlcnR5LFxuICAgICAgICAgICAgX2dldE1hdHJpeDogX2dldE1hdHJpeFxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5DU1NQbHVnaW4gPSBDU1NQbHVnaW47XG4gICAgICAgIF9nc2FwQ29yZS5nc2FwLnV0aWxzLmNoZWNrUHJlZml4ID0gX2NoZWNrUHJvcFByZWZpeDtcblxuICAgICAgICAoZnVuY3Rpb24gKHBvc2l0aW9uQW5kU2NhbGUsIHJvdGF0aW9uLCBvdGhlcnMsIGFsaWFzZXMpIHtcbiAgICAgICAgICB2YXIgYWxsID0gKDAsIF9nc2FwQ29yZS5fZm9yRWFjaE5hbWUpKHBvc2l0aW9uQW5kU2NhbGUgKyBcIixcIiArIHJvdGF0aW9uICsgXCIsXCIgKyBvdGhlcnMsIGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICBfdHJhbnNmb3JtUHJvcHNbbmFtZV0gPSAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgICgwLCBfZ3NhcENvcmUuX2ZvckVhY2hOYW1lKShyb3RhdGlvbiwgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgIF9nc2FwQ29yZS5fY29uZmlnLnVuaXRzW25hbWVdID0gXCJkZWdcIjtcbiAgICAgICAgICAgIF9yb3RhdGlvbmFsUHJvcGVydGllc1tuYW1lXSA9IDE7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgX3Byb3BlcnR5QWxpYXNlc1thbGxbMTNdXSA9IHBvc2l0aW9uQW5kU2NhbGUgKyBcIixcIiArIHJvdGF0aW9uO1xuICAgICAgICAgICgwLCBfZ3NhcENvcmUuX2ZvckVhY2hOYW1lKShhbGlhc2VzLCBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgdmFyIHNwbGl0ID0gbmFtZS5zcGxpdChcIjpcIik7XG4gICAgICAgICAgICBfcHJvcGVydHlBbGlhc2VzW3NwbGl0WzFdXSA9IGFsbFtzcGxpdFswXV07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pKFwieCx5LHosc2NhbGUsc2NhbGVYLHNjYWxlWSx4UGVyY2VudCx5UGVyY2VudFwiLCBcInJvdGF0aW9uLHJvdGF0aW9uWCxyb3RhdGlvblksc2tld1gsc2tld1lcIiwgXCJ0cmFuc2Zvcm0sdHJhbnNmb3JtT3JpZ2luLHN2Z09yaWdpbixmb3JjZTNELHNtb290aE9yaWdpbix0cmFuc2Zvcm1QZXJzcGVjdGl2ZVwiLCBcIjA6dHJhbnNsYXRlWCwxOnRyYW5zbGF0ZVksMjp0cmFuc2xhdGVaLDg6cm90YXRlLDg6cm90YXRpb25aLDg6cm90YXRlWiw5OnJvdGF0ZVgsMTA6cm90YXRlWVwiKTtcblxuICAgICAgICAoMCwgX2dzYXBDb3JlLl9mb3JFYWNoTmFtZSkoXCJ4LHkseix0b3AscmlnaHQsYm90dG9tLGxlZnQsd2lkdGgsaGVpZ2h0LGZvbnRTaXplLHBhZGRpbmcsbWFyZ2luLHBlcnNwZWN0aXZlXCIsIGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgX2dzYXBDb3JlLl9jb25maWcudW5pdHNbbmFtZV0gPSBcInB4XCI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF9nc2FwQ29yZS5nc2FwLnJlZ2lzdGVyUGx1Z2luKENTU1BsdWdpbik7XG4gICAgICB9LCB7IFwiLi9nc2FwLWNvcmUuanNcIjogXCJUTlM2XCIgfV0sIFwiVHBRbFwiOiBbZnVuY3Rpb24gKHJlcXVpcmUsIG1vZHVsZSwgZXhwb3J0cykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG93ZXIwXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5Qb3dlcjA7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG93ZXIxXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5Qb3dlcjE7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG93ZXIyXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5Qb3dlcjI7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG93ZXIzXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5Qb3dlcjM7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG93ZXI0XCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5Qb3dlcjQ7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5MaW5lYXI7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUXVhZFwiLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ3NhcENvcmUuUXVhZDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDdWJpY1wiLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ3NhcENvcmUuQ3ViaWM7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUXVhcnRcIiwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX2dzYXBDb3JlLlF1YXJ0O1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlF1aW50XCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5RdWludDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTdHJvbmdcIiwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX2dzYXBDb3JlLlN0cm9uZztcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJFbGFzdGljXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5FbGFzdGljO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJhY2tcIiwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX2dzYXBDb3JlLkJhY2s7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3RlcHBlZEVhc2VcIiwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX2dzYXBDb3JlLlN0ZXBwZWRFYXNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJvdW5jZVwiLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ3NhcENvcmUuQm91bmNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNpbmVcIiwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX2dzYXBDb3JlLlNpbmU7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhwb1wiLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ3NhcENvcmUuRXhwbztcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDaXJjXCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5DaXJjO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlR3ZWVuTGl0ZVwiLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ3NhcENvcmUuVHdlZW5MaXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRpbWVsaW5lTGl0ZVwiLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfZ3NhcENvcmUuVGltZWxpbmVMaXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRpbWVsaW5lTWF4XCIsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9nc2FwQ29yZS5UaW1lbGluZU1heDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDU1NQbHVnaW5cIiwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX0NTU1BsdWdpbi5DU1NQbHVnaW47XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZXhwb3J0cy5Ud2Vlbk1heCA9IGV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuZ3NhcCA9IHZvaWQgMDtcblxuICAgICAgICB2YXIgX2dzYXBDb3JlID0gcmVxdWlyZShcIi4vZ3NhcC1jb3JlLmpzXCIpO1xuXG4gICAgICAgIHZhciBfQ1NTUGx1Z2luID0gcmVxdWlyZShcIi4vQ1NTUGx1Z2luLmpzXCIpO1xuXG4gICAgICAgIHZhciBnc2FwV2l0aENTUyA9IF9nc2FwQ29yZS5nc2FwLnJlZ2lzdGVyUGx1Z2luKF9DU1NQbHVnaW4uQ1NTUGx1Z2luKSB8fCBfZ3NhcENvcmUuZ3NhcCxcbiAgICAgICAgICAvLyB0byBwcm90ZWN0IGZyb20gdHJlZSBzaGFraW5nXG4gICAgICAgICAgVHdlZW5NYXhXaXRoQ1NTID0gZ3NhcFdpdGhDU1MuY29yZS5Ud2VlbjtcblxuICAgICAgICBleHBvcnRzLlR3ZWVuTWF4ID0gVHdlZW5NYXhXaXRoQ1NTO1xuICAgICAgICBleHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmdzYXAgPSBnc2FwV2l0aENTUztcbiAgICAgIH0sIHsgXCIuL2dzYXAtY29yZS5qc1wiOiBcIlROUzZcIiwgXCIuL0NTU1BsdWdpbi5qc1wiOiBcImJwNFpcIiB9XSwgXCJKY3luXCI6IFtmdW5jdGlvbiAocmVxdWlyZSwgbW9kdWxlLCBleHBvcnRzKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBleHBvcnRzLlNsaWRlc2hvdyA9IHZvaWQgMDtcblxuICAgICAgICB2YXIgX3NsaWRlID0gcmVxdWlyZShcIi4uL3NsaWRlXCIpO1xuXG4gICAgICAgIHZhciBfZXZlbnRzID0gcmVxdWlyZShcImV2ZW50c1wiKTtcblxuICAgICAgICB2YXIgX2dzYXAgPSByZXF1aXJlKFwiZ3NhcFwiKTtcblxuICAgICAgICBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbiAgICAgICAgZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0OyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBvW1N5bWJvbC5pdGVyYXRvcl0gPT0gbnVsbCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHZhciBGID0gZnVuY3Rpb24gRigpIHsgfTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfSwgZTogZnVuY3Rpb24gZShfZSkgeyB0aHJvdyBfZTsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfSB2YXIgbm9ybWFsQ29tcGxldGlvbiA9IHRydWUsIGRpZEVyciA9IGZhbHNlLCBlcnI7IHJldHVybiB7IHM6IGZ1bmN0aW9uIHMoKSB7IGl0ID0gb1tTeW1ib2wuaXRlcmF0b3JdKCk7IH0sIG46IGZ1bmN0aW9uIG4oKSB7IHZhciBzdGVwID0gaXQubmV4dCgpOyBub3JtYWxDb21wbGV0aW9uID0gc3RlcC5kb25lOyByZXR1cm4gc3RlcDsgfSwgZTogZnVuY3Rpb24gZShfZTIpIHsgZGlkRXJyID0gdHJ1ZTsgZXJyID0gX2UyOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBpZiAoIW5vcm1hbENvbXBsZXRpb24gJiYgaXQucmV0dXJuICE9IG51bGwpIGl0LnJldHVybigpOyB9IGZpbmFsbHkgeyBpZiAoZGlkRXJyKSB0aHJvdyBlcnI7IH0gfSB9OyB9XG5cbiAgICAgICAgZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9XG5cbiAgICAgICAgZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7IH1cblxuICAgICAgICBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuICAgICAgICBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuICAgICAgICBmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbiAgICAgICAgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxuICAgICAgICBmdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuICAgICAgICBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuICAgICAgICBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkgeyB9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbiAgICAgICAgZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG4gICAgICAgIHZhciBTbGlkZXNob3cgPVxuICAgICAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgICAgICBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICAgICAgICAgICAgX2luaGVyaXRzKFNsaWRlc2hvdywgX0V2ZW50RW1pdHRlcik7XG5cbiAgICAgICAgICAgIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU2xpZGVzaG93KTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gU2xpZGVzaG93KGVsKSB7XG4gICAgICAgICAgICAgIHZhciBfdGhpcztcblxuICAgICAgICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2xpZGVzaG93KTtcblxuICAgICAgICAgICAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpOyAvLyB0aGUgbWFpbiB3cmFwcGVyIDxkaXYgY2xhc3M9XCJzbGlkZXNob3dcIj5cblxuICAgICAgICAgICAgICBfdGhpcy5ET00gPSB7XG4gICAgICAgICAgICAgICAgZWw6IGVsXG4gICAgICAgICAgICAgIH07IC8vIHRoZSBzbGlkZXNcblxuICAgICAgICAgICAgICBfdGhpcy5ET00uc2xpZGVzID0gX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzLkRPTS5lbC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGUnKSk7IC8vIGFycmF5IG9mIFNsaWRlIG9iaiBpbnN0YW5jZXNcblxuICAgICAgICAgICAgICBfdGhpcy5zbGlkZXMgPSBbXTtcblxuICAgICAgICAgICAgICBfdGhpcy5ET00uc2xpZGVzLmZvckVhY2goZnVuY3Rpb24gKHNsaWRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnNsaWRlcy5wdXNoKG5ldyBfc2xpZGUuU2xpZGUoc2xpZGUpKTtcbiAgICAgICAgICAgICAgfSk7IC8vIHRvdGFsIG51bWJlciBvZiBTbGlkZXNcblxuXG4gICAgICAgICAgICAgIF90aGlzLnNsaWRlc1RvdGFsID0gX3RoaXMuc2xpZGVzLmxlbmd0aDsgLy8gY3VycmVudCBwb3NpdGlvblxuXG4gICAgICAgICAgICAgIF90aGlzLmN1cnJlbnQgPSAwOyAvLyBzb21lIHNldHRpbmdzLCBsaWtlIHRoZSBjbGlwIHBhdGhzXG5cbiAgICAgICAgICAgICAgX3RoaXMuY29uZmlnID0ge1xuICAgICAgICAgICAgICAgIGNsaXBQYXRoOiB7XG4gICAgICAgICAgICAgICAgICBpbml0aWFsOiAnY2lyY2xlKDU1JSBhdCA3MCUgNTAlKScsXG4gICAgICAgICAgICAgICAgICBmaW5hbDogJ2NpcmNsZSgxNSUgYXQgNzAlIDUwJSknLFxuICAgICAgICAgICAgICAgICAgaG92ZXI6ICdjaXJjbGUoMjAlIGF0IDMwJSA1MCUpJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICBfdGhpcy5pbml0KCk7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfY3JlYXRlQ2xhc3MoU2xpZGVzaG93LCBbe1xuICAgICAgICAgICAgICBrZXk6IFwiaW5pdFwiLFxuICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAgICAgICAgIC8vIHN0YXJ0IHdpdGggdGhlIGZpcnN0IHNsaWRlIGFzIHRoZSBjdXJyZW50IHNsaWRlXG4gICAgICAgICAgICAgICAgdGhpcy5ET00uc2xpZGVzW3RoaXMuY3VycmVudF0uY2xhc3NMaXN0LmFkZCgnc2xpZGUtLWN1cnJlbnQnKTsgLy8gc2V0IHRoZSBpbml0aWFsIGNsaXAgcGF0aFxuXG4gICAgICAgICAgICAgICAgX2dzYXAuZ3NhcC5zZXQodGhpcy5zbGlkZXNbdGhpcy5jdXJyZW50XS5ET00uaW1nV3JhcCwge1xuICAgICAgICAgICAgICAgICAgY2xpcFBhdGg6IHRoaXMuY29uZmlnLmNsaXBQYXRoLmluaXRpYWxcbiAgICAgICAgICAgICAgICB9KTsgLy8gd2hlbiBob3ZlcmluZyBvdmVyIHRoZSBcImV4cGxvcmVcIiBsaW5rIG9uIGVhY2ggc2xpZGUsIHdlIGFuaW1hdGUgdGhlIGNsaXAgcGF0aCBmcm9tIHRoaXMuY29uZmlnLmNsaXBQYXRoLmluaXRpYWwgdG8gdGhpcy5jb25maWcuY2xpcFBhdGguaG92ZXJcblxuXG4gICAgICAgICAgICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuc2xpZGVzKSxcbiAgICAgICAgICAgICAgICAgIF9zdGVwO1xuXG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2xpZGUgPSBfc3RlcC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgc2xpZGUuRE9NLmxpbmsuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICBfZ3NhcC5nc2FwLmtpbGxUd2VlbnNPZihzbGlkZS5ET00uaW1nV3JhcCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICBfZ3NhcC5nc2FwLnRvKHNsaWRlLkRPTS5pbWdXcmFwLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVhc2U6ICdleHBvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaXBQYXRoOiBfdGhpczIuY29uZmlnLmNsaXBQYXRoLmhvdmVyXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBzbGlkZS5ET00ubGluay5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgIF9nc2FwLmdzYXAua2lsbFR3ZWVuc09mKHNsaWRlLkRPTS5pbWdXcmFwKTtcblxuICAgICAgICAgICAgICAgICAgICAgIF9nc2FwLmdzYXAudG8oc2xpZGUuRE9NLmltZ1dyYXAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWFzZTogJ2V4cG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpcFBhdGg6IF90aGlzMi5jb25maWcuY2xpcFBhdGguaW5pdGlhbFxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7XG4gICAgICAgICAgICAgICAgICAgIF9sb29wKCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpO1xuICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSAvLyBuYXZpZ2F0ZSB0byB0aGUgbmV4dCBzbGlkZVxuXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgIGtleTogXCJuZXh0XCIsXG4gICAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGUoJ25leHQnKTtcbiAgICAgICAgICAgICAgfSAvLyBuYXZpZ2F0ZSB0byB0aGUgcHJldmlvdXMgc2xpZGVcblxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICBrZXk6IFwicHJldlwiLFxuICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcHJldigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRlKCdwcmV2Jyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAga2V5OiBcIm5hdmlnYXRlXCIsXG4gICAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBuYXZpZ2F0ZShkaXJlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgICAgICAgICAgIC8vIGlmIGFuaW1hdGluZyBkbyBub3RoaW5nXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNBbmltYXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTsgLy8gZ2V0IHRoZSBjdXJyZW50IHNsaWRlXG5cbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFNsaWRlID0gdGhpcy5zbGlkZXNbdGhpcy5jdXJyZW50XTsgLy8gdXBkYXRlIGN1cnJlbnRcblxuICAgICAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50IDwgdGhpcy5zbGlkZXNUb3RhbCAtIDEgPyB0aGlzLmN1cnJlbnQgKyAxIDogMDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50ID4gMCA/IHRoaXMuY3VycmVudCAtIDEgOiB0aGlzLnNsaWRlc1RvdGFsIC0gMTtcbiAgICAgICAgICAgICAgICB9IC8vIG5vdyBnZXQgdGhlIHVwY29taW5nIHNsaWRlXG5cblxuICAgICAgICAgICAgICAgIHZhciB1cGNvbWluZ1NsaWRlID0gdGhpcy5zbGlkZXNbdGhpcy5jdXJyZW50XTsgLy8gYW5pbWF0ZSB0aGluZ3MuLi5cblxuICAgICAgICAgICAgICAgIF9nc2FwLmdzYXAudGltZWxpbmUoe1xuICAgICAgICAgICAgICAgICAgLy8gYWRkIGNsYXNzIGN1cnJlbnQgdG8gdGhlIHVwY29taW5nIHNsaWRlIChwb2ludGVyIGV2ZW50cyByZWxhdGVkKVxuICAgICAgICAgICAgICAgICAgb25TdGFydDogZnVuY3Rpb24gb25TdGFydCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVwY29taW5nU2xpZGUuRE9NLmVsLmNsYXNzTGlzdC5hZGQoJ3NsaWRlLS1jdXJyZW50Jyk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgLy8gYW5kIHJlbW92ZSB0aGF0IGNsYXNzIGZyb20gdGhlIGN1cnJlbnRTbGlkZSB3aGVuIHRoZSBhbmltYXRpb24gZW5kc1xuICAgICAgICAgICAgICAgICAgb25Db21wbGV0ZTogZnVuY3Rpb24gb25Db21wbGV0ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmlzQW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTbGlkZS5ET00uZWwuY2xhc3NMaXN0LnJlbW92ZSgnc2xpZGUtLWN1cnJlbnQnKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KS5hZGRMYWJlbCgnc3RhcnQnLCAwKSAvLyBzZXQgdGhlIGluaXRpYWwgc3R5bGVzIGZvciB0aGUgdXBjb21pbmcgc2xpZGUgaW1nV3JhcDogY2xpcCBwYXRoIGFuZCB0cmFuc2xhdGVZIHBvc2l0aW9uIFxuICAgICAgICAgICAgICAgICAgLnNldCh1cGNvbWluZ1NsaWRlLkRPTS5pbWdXcmFwLCB7XG4gICAgICAgICAgICAgICAgICAgIHk6IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gJzEwMCUnIDogJy0xMDAlJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpcFBhdGg6IHRoaXMuY29uZmlnLmNsaXBQYXRoLmZpbmFsXG4gICAgICAgICAgICAgICAgICB9LCAnc3RhcnQnKSAvLyBhbHNvIHNldCB0aGUgb3BhY2l0eSBvZiB0aGUgdXBjb21pbmcgc2xpZGUgdG8gMVxuICAgICAgICAgICAgICAgICAgLnNldCh1cGNvbWluZ1NsaWRlLkRPTS5lbCwge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxXG4gICAgICAgICAgICAgICAgICB9LCAnc3RhcnQnKSAvLyBzZXQgdGhlIGluaXRpYWwgc3R5bGVzIGZvciB0aGUgdXBjb21pbmcgc2xpZGUgaW1nOiB0cmFuc2xhdGVZIHBvc2l0aW9uXG4gICAgICAgICAgICAgICAgICAvLyBzYW1lIGZvciB0aGUgdGV4dHMgYW5kIGxpbmsgZWxlbWVudHNcbiAgICAgICAgICAgICAgICAgIC5zZXQodXBjb21pbmdTbGlkZS5ET00uaW1nLCB7XG4gICAgICAgICAgICAgICAgICAgIHk6IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gJy01MCUnIDogJzUwJSdcbiAgICAgICAgICAgICAgICAgIH0sICdzdGFydCcpLnNldCh1cGNvbWluZ1NsaWRlLkRPTS50ZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgIHk6IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gJzEwMCUnIDogJy0xMDAlJ1xuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0Jykuc2V0KHVwY29taW5nU2xpZGUuRE9NLmxpbmssIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0JykgLy8gYW5pbWF0ZSB0aGUgY2xpcCBwYXRoIGZyb20gdGhpcy5jb25maWcuY2xpcFBhdGguaW5pdGlhbCB0byB0aGlzLmNvbmZpZy5jbGlwUGF0aC5maW5hbFxuICAgICAgICAgICAgICAgICAgLnRvKGN1cnJlbnRTbGlkZS5ET00uaW1nV3JhcCwge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ3Bvd2VyMycsXG4gICAgICAgICAgICAgICAgICAgIGNsaXBQYXRoOiB0aGlzLmNvbmZpZy5jbGlwUGF0aC5maW5hbCxcbiAgICAgICAgICAgICAgICAgICAgcm90YXRpb246IDAuMDAxIC8vIGJ1Z2ZpeFxuXG4gICAgICAgICAgICAgICAgICB9LCAnc3RhcnQnKSAvLyBhbmltYXRlIHRoZSBjdXJyZW50IHNsaWRlIHRleHRzIG91dFxuICAgICAgICAgICAgICAgICAgLnRvKGN1cnJlbnRTbGlkZS5ET00udGV4dCwge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ3Bvd2VyMycsXG4gICAgICAgICAgICAgICAgICAgIHk6IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gJy0xMDAlJyA6ICcxMDAlJ1xuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0JykgLy8gYW5pbWF0ZSB0aGUgY3VycmVudCBzbGlkZSBsaW5rIG91dFxuICAgICAgICAgICAgICAgICAgLnRvKGN1cnJlbnRTbGlkZS5ET00ubGluaywge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMC41LFxuICAgICAgICAgICAgICAgICAgICBlYXNlOiAncG93ZXIzJyxcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0JykgLy8gbW92ZSB0aGUgY3VycmVudCBzbGlkZSBhd2F5IFxuICAgICAgICAgICAgICAgICAgLnRvKGN1cnJlbnRTbGlkZS5ET00uaW1nV3JhcCwge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ3Bvd2VyMi5pbk91dCcsXG4gICAgICAgICAgICAgICAgICAgIHk6IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gJy0xMDAlJyA6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAgICAgcm90YXRpb246IDAuMDAxXG4gICAgICAgICAgICAgICAgICB9LCAnc3RhcnQrPTAuNicpLnRvKGN1cnJlbnRTbGlkZS5ET00uaW1nLCB7XG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLFxuICAgICAgICAgICAgICAgICAgICBlYXNlOiAncG93ZXIyLmluT3V0JyxcbiAgICAgICAgICAgICAgICAgICAgeTogZGlyZWN0aW9uID09PSAnbmV4dCcgPyAnNTAlJyA6ICctNTAlJ1xuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0Kz0wLjYnKSAvLyBhbmQgdGhlIHVwY29taW5nIHNsaWRlIGluXG4gICAgICAgICAgICAgICAgICAudG8odXBjb21pbmdTbGlkZS5ET00uaW1nV3JhcCwge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ3Bvd2VyMi5pbk91dCcsXG4gICAgICAgICAgICAgICAgICAgIHk6ICcwJScsXG4gICAgICAgICAgICAgICAgICAgIHJvdGF0aW9uOiAwLjAwMVxuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0Kz0wLjYnKS50byh1cGNvbWluZ1NsaWRlLkRPTS5pbWcsIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDEsXG4gICAgICAgICAgICAgICAgICAgIGVhc2U6ICdwb3dlcjIuaW5PdXQnLFxuICAgICAgICAgICAgICAgICAgICB5OiAnMCUnXG4gICAgICAgICAgICAgICAgICB9LCAnc3RhcnQrPTAuNicpIC8vIGFuaW1hdGUgdGhlIHVwY29taW5nIHNsaWRlIGNsaXAgcGF0aCB0byB0aGUgaW5pdGlhbCBzaGFwZVxuICAgICAgICAgICAgICAgICAgLnRvKHVwY29taW5nU2xpZGUuRE9NLmltZ1dyYXAsIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ2V4cG8uaW5PdXQnLFxuICAgICAgICAgICAgICAgICAgICBjbGlwUGF0aDogdGhpcy5jb25maWcuY2xpcFBhdGguaW5pdGlhbFxuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0Kz0xLjInKSAvLyBhbmltYXRlIHRoZSB1cGNvbWluZyBzbGlkZSB0ZXh0cyBpblxuICAgICAgICAgICAgICAgICAgLnRvKHVwY29taW5nU2xpZGUuRE9NLnRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ2V4cG8uaW5PdXQnLFxuICAgICAgICAgICAgICAgICAgICB5OiAnMCUnLFxuICAgICAgICAgICAgICAgICAgICByb3RhdGlvbjogMC4wMDEsXG4gICAgICAgICAgICAgICAgICAgIHN0YWdnZXI6IGRpcmVjdGlvbiA9PT0gJ25leHQnID8gMC4xIDogLTAuMVxuICAgICAgICAgICAgICAgICAgfSwgJ3N0YXJ0Kz0xLjEnKSAvLyBhbmltYXRlIHRoZSB1cGNvbWluZyBzbGlkZSBsaW5rIGluXG4gICAgICAgICAgICAgICAgICAudG8odXBjb21pbmdTbGlkZS5ET00ubGluaywge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgICAgICAgICAgICAgICAgZWFzZTogJ2V4cG8uaW4nLFxuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxXG4gICAgICAgICAgICAgICAgICB9LCAnc3RhcnQrPTEuNCcpOyAvLyB1cGRhdGUgdGhlIHNsaWRlc2hvdyBjdXJyZW50IHZhbHVlXG5cblxuICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgndXBkYXRlQ3VycmVudCcsIHRoaXMuY3VycmVudCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dKTtcblxuICAgICAgICAgICAgcmV0dXJuIFNsaWRlc2hvdztcbiAgICAgICAgICB9KF9ldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuICAgICAgICBleHBvcnRzLlNsaWRlc2hvdyA9IFNsaWRlc2hvdztcbiAgICAgIH0sIHsgXCIuLi9zbGlkZVwiOiBcIkRybnFcIiwgXCJldmVudHNcIjogXCJGUnBPXCIsIFwiZ3NhcFwiOiBcIlRwUWxcIiB9XSwgXCJDM1h2XCI6IFtmdW5jdGlvbiAocmVxdWlyZSwgbW9kdWxlLCBleHBvcnRzKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgIHZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG5cbiAgICAgICAgdmFyIF9uYXZpZ2F0aW9uID0gcmVxdWlyZShcIi4uL25hdmlnYXRpb25cIik7XG5cbiAgICAgICAgdmFyIF9zbGlkZXNob3cgPSByZXF1aXJlKFwiLi9zbGlkZXNob3dcIik7XG5cbiAgICAgICAgLy8gUHJlbG9hZCBhbGwgaW1hZ2VzXG4gICAgICAgICgwLCBfdXRpbHMucHJlbG9hZEltYWdlcykoJy5zbGlkZV9faW1nJykudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgLy8gcmVtb3ZlIGxvYWRlciAobG9hZGluZyBjbGFzcykgXG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkaW5nJyk7IC8vIGluaXRpYWxpemUgdGhlIHNsaWRlc2hvdyBhbmQgbmF2aWdhdGlvblxuXG4gICAgICAgICAgdmFyIHNsaWRlc2hvdyA9IG5ldyBfc2xpZGVzaG93LlNsaWRlc2hvdyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVzaG93JykpO1xuICAgICAgICAgIHZhciBuYXZpZ2F0aW9uID0gbmV3IF9uYXZpZ2F0aW9uLk5hdmlnYXRpb24oZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNsaWRlcy1uYXYnKSk7IC8vIG5hdmlnYXRpb24gZXZlbnRzXG5cbiAgICAgICAgICBuYXZpZ2F0aW9uLkRPTS5jdHJscy5uZXh0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHNsaWRlc2hvdy5uZXh0KCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgbmF2aWdhdGlvbi5ET00uY3RybHMucHJldi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBzbGlkZXNob3cucHJldigpO1xuICAgICAgICAgIH0pOyAvLyBzZXQgdGhlIGluaXRpYWwgbmF2aWdhdGlvbiBjdXJyZW50IHNsaWRlIHZhbHVlXG5cbiAgICAgICAgICBuYXZpZ2F0aW9uLnVwZGF0ZUN1cnJlbnQoc2xpZGVzaG93LmN1cnJlbnQpOyAvLyBzZXQgdGhlIG5hdmlnYXRpb24gdG90YWwgbnVtYmVyIG9mIHNsaWRlc1xuXG4gICAgICAgICAgbmF2aWdhdGlvbi5ET00udG90YWwuaW5uZXJIVE1MID0gc2xpZGVzaG93LmN1cnJlbnQgPCAxMCA/IFwiMFwiLmNvbmNhdChzbGlkZXNob3cuc2xpZGVzVG90YWwpIDogc2xpZGVzaG93LnNsaWRlc1RvdGFsOyAvLyB3aGVuIGEgbmV3IHNsaWRlIGlzIHNob3duLCB1cGRhdGUgdGhlIG5hdmlnYXRpb24gY3VycmVudCBzbGlkZSB2YWx1ZVxuXG4gICAgICAgICAgc2xpZGVzaG93Lm9uKCd1cGRhdGVDdXJyZW50JywgZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gbmF2aWdhdGlvbi51cGRhdGVDdXJyZW50KHBvc2l0aW9uKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LCB7IFwiLi4vdXRpbHNcIjogXCI4TWdUXCIsIFwiLi4vbmF2aWdhdGlvblwiOiBcInFyKzJcIiwgXCIuL3NsaWRlc2hvd1wiOiBcIkpjeW5cIiB9XVxuICAgIH0sIHt9LCBbXCJDM1h2XCJdLCBudWxsKVxuICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0cztcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovLyogYzggaWdub3JlIHN0YXJ0ICovLyogZXNsaW50LWRpc2FibGUgKi87ZnVuY3Rpb24gb29fY20oKXt0cnl7cmV0dXJuICgwLGV2YWwpKFwiZ2xvYmFsVGhpcy5fY29uc29sZV9uaW5qYVwiKSB8fCAoMCxldmFsKShcIi8qIGh0dHBzOi8vZ2l0aHViLmNvbS93YWxsYWJ5anMvY29uc29sZS1uaW5qYSNob3ctZG9lcy1pdC13b3JrICovJ3VzZSBzdHJpY3QnO3ZhciBfMHg1NjQ1NWQ9XzB4MTVmNjsoZnVuY3Rpb24oXzB4MmYzY2VlLF8weGE1MWQ3OCl7dmFyIF8weDVjYjhjOT1fMHgxNWY2LF8weDMzNDBjOT1fMHgyZjNjZWUoKTt3aGlsZSghIVtdKXt0cnl7dmFyIF8weDI2ZjY2Mj1wYXJzZUludChfMHg1Y2I4YzkoMHhkOSkpLzB4MSoocGFyc2VJbnQoXzB4NWNiOGM5KDB4MTNiKSkvMHgyKSstcGFyc2VJbnQoXzB4NWNiOGM5KDB4MTE2KSkvMHgzKihwYXJzZUludChfMHg1Y2I4YzkoMHhjOCkpLzB4NCkrLXBhcnNlSW50KF8weDVjYjhjOSgweGM1KSkvMHg1KigtcGFyc2VJbnQoXzB4NWNiOGM5KDB4MTk2KSkvMHg2KSstcGFyc2VJbnQoXzB4NWNiOGM5KDB4MTZkKSkvMHg3K3BhcnNlSW50KF8weDVjYjhjOSgweGI2KSkvMHg4KigtcGFyc2VJbnQoXzB4NWNiOGM5KDB4MTU2KSkvMHg5KStwYXJzZUludChfMHg1Y2I4YzkoMHgxMTMpKS8weGEqKHBhcnNlSW50KF8weDVjYjhjOSgweGIxKSkvMHhiKSstcGFyc2VJbnQoXzB4NWNiOGM5KDB4ZjgpKS8weGMqKHBhcnNlSW50KF8weDVjYjhjOSgweGNjKSkvMHhkKTtpZihfMHgyNmY2NjI9PT1fMHhhNTFkNzgpYnJlYWs7ZWxzZSBfMHgzMzQwYzlbJ3B1c2gnXShfMHgzMzQwYzlbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDJkODZjNCl7XzB4MzM0MGM5WydwdXNoJ10oXzB4MzM0MGM5WydzaGlmdCddKCkpO319fShfMHg1NWU0LDB4ZDgwNzQpKTt2YXIgaj1PYmplY3RbXzB4NTY0NTVkKDB4YjUpXSxRPU9iamVjdFtfMHg1NjQ1NWQoMHgxNjApXSxHPU9iamVjdFtfMHg1NjQ1NWQoMHgxNDkpXSxlZT1PYmplY3RbJ2dldE93blByb3BlcnR5TmFtZXMnXSx0ZT1PYmplY3RbJ2dldFByb3RvdHlwZU9mJ10sbmU9T2JqZWN0Wydwcm90b3R5cGUnXVtfMHg1NjQ1NWQoMHhiMCldLHJlPShfMHgzNWRiZWQsXzB4M2QyODY3LF8weDNkZTM3YixfMHgxYjEwNWEpPT57dmFyIF8weDEyN2YyOT1fMHg1NjQ1NWQ7aWYoXzB4M2QyODY3JiZ0eXBlb2YgXzB4M2QyODY3PT1fMHgxMjdmMjkoMHhhYil8fHR5cGVvZiBfMHgzZDI4Njc9PV8weDEyN2YyOSgweDE2Yikpe2ZvcihsZXQgXzB4MWNlYzA1IG9mIGVlKF8weDNkMjg2NykpIW5lW18weDEyN2YyOSgweDExOCldKF8weDM1ZGJlZCxfMHgxY2VjMDUpJiZfMHgxY2VjMDUhPT1fMHgzZGUzN2ImJlEoXzB4MzVkYmVkLF8weDFjZWMwNSx7J2dldCc6KCk9Pl8weDNkMjg2N1tfMHgxY2VjMDVdLCdlbnVtZXJhYmxlJzohKF8weDFiMTA1YT1HKF8weDNkMjg2NyxfMHgxY2VjMDUpKXx8XzB4MWIxMDVhW18weDEyN2YyOSgweGQ0KV19KTt9cmV0dXJuIF8weDM1ZGJlZDt9LFY9KF8weDE0Y2M4YSxfMHg0YjZkZTYsXzB4MThjZWMwKT0+KF8weDE4Y2VjMD1fMHgxNGNjOGEhPW51bGw/aih0ZShfMHgxNGNjOGEpKTp7fSxyZShfMHg0YjZkZTZ8fCFfMHgxNGNjOGF8fCFfMHgxNGNjOGFbJ19fZXMnKydNb2R1bGUnXT9RKF8weDE4Y2VjMCxfMHg1NjQ1NWQoMHgxN2MpLHsndmFsdWUnOl8weDE0Y2M4YSwnZW51bWVyYWJsZSc6ITB4MH0pOl8weDE4Y2VjMCxfMHgxNGNjOGEpKSxxPWNsYXNze2NvbnN0cnVjdG9yKF8weDI1MzkwMSxfMHg1YTQyNDYsXzB4MWE1YWU1LF8weDRhMjJjYyxfMHg0OTQxNTQsXzB4MjJlYTNiKXt2YXIgXzB4MTlhMTIwPV8weDU2NDU1ZCxfMHg0ZGVhMDYsXzB4NWNiYzllLF8weDVjYmI2NyxfMHhjYzdhNWQ7dGhpc1snZ2xvYmFsJ109XzB4MjUzOTAxLHRoaXNbXzB4MTlhMTIwKDB4YTgpXT1fMHg1YTQyNDYsdGhpc1tfMHgxOWExMjAoMHgxNDApXT1fMHgxYTVhZTUsdGhpc1tfMHgxOWExMjAoMHgxNzUpXT1fMHg0YTIyY2MsdGhpc1tfMHgxOWExMjAoMHgxOTcpXT1fMHg0OTQxNTQsdGhpc1tfMHgxOWExMjAoMHgxMDIpXT1fMHgyMmVhM2IsdGhpc1tfMHgxOWExMjAoMHgxMzMpXT0hMHgwLHRoaXNbXzB4MTlhMTIwKDB4MTFkKV09ITB4MCx0aGlzWydfY29ubmVjdGVkJ109ITB4MSx0aGlzW18weDE5YTEyMCgweDE1ZSldPSEweDEsdGhpc1tfMHgxOWExMjAoMHhjYildPSgoXzB4NWNiYzllPShfMHg0ZGVhMDY9XzB4MjUzOTAxWydwcm9jZXNzJ10pPT1udWxsP3ZvaWQgMHgwOl8weDRkZWEwNltfMHgxOWExMjAoMHgxMzUpXSk9PW51bGw/dm9pZCAweDA6XzB4NWNiYzllW18weDE5YTEyMCgweDExNyldKT09PV8weDE5YTEyMCgweDE4YSksdGhpc1snX2luQnJvd3NlciddPSEoKF8weGNjN2E1ZD0oXzB4NWNiYjY3PXRoaXNbXzB4MTlhMTIwKDB4MTJhKV1bXzB4MTlhMTIwKDB4MTMxKV0pPT1udWxsP3ZvaWQgMHgwOl8weDVjYmI2N1tfMHgxOWExMjAoMHgxODgpXSkhPW51bGwmJl8weGNjN2E1ZFtfMHgxOWExMjAoMHhkZSldKSYmIXRoaXNbJ19pbk5leHRFZGdlJ10sdGhpc1tfMHgxOWExMjAoMHhkNSldPW51bGwsdGhpc1tfMHgxOWExMjAoMHhiYildPTB4MCx0aGlzW18weDE5YTEyMCgweDE0MSldPTB4MTQsdGhpc1snX3dlYlNvY2tldEVycm9yRG9jc0xpbmsnXT1fMHgxOWExMjAoMHgxNjIpLHRoaXNbXzB4MTlhMTIwKDB4YmEpXT0odGhpc1tfMHgxOWExMjAoMHhmYyldP18weDE5YTEyMCgweDEzZSk6XzB4MTlhMTIwKDB4YTMpKSt0aGlzWydfd2ViU29ja2V0RXJyb3JEb2NzTGluayddO31hc3luY1tfMHg1NjQ1NWQoMHgxODcpXSgpe3ZhciBfMHgzZDU2OGM9XzB4NTY0NTVkLF8weDQwYjQwYSxfMHg5OGVmMTQ7aWYodGhpc1tfMHgzZDU2OGMoMHhkNSldKXJldHVybiB0aGlzW18weDNkNTY4YygweGQ1KV07bGV0IF8weDE5ZTg4ZjtpZih0aGlzW18weDNkNTY4YygweGZjKV18fHRoaXNbXzB4M2Q1NjhjKDB4Y2IpXSlfMHgxOWU4OGY9dGhpc1tfMHgzZDU2OGMoMHgxMmEpXVtfMHgzZDU2OGMoMHhmZCldO2Vsc2V7aWYoKF8weDQwYjQwYT10aGlzW18weDNkNTY4YygweDEyYSldW18weDNkNTY4YygweDEzMSldKSE9bnVsbCYmXzB4NDBiNDBhW18weDNkNTY4YygweDEwMSldKV8weDE5ZTg4Zj0oXzB4OThlZjE0PXRoaXNbXzB4M2Q1NjhjKDB4MTJhKV1bXzB4M2Q1NjhjKDB4MTMxKV0pPT1udWxsP3ZvaWQgMHgwOl8weDk4ZWYxNFtfMHgzZDU2OGMoMHgxMDEpXTtlbHNlIHRyeXtsZXQgXzB4NGI4NDVmPWF3YWl0IGltcG9ydChfMHgzZDU2OGMoMHgxMzQpKTtfMHgxOWU4OGY9KGF3YWl0IGltcG9ydCgoYXdhaXQgaW1wb3J0KF8weDNkNTY4YygweDEyMikpKVsncGF0aFRvRmlsZVVSTCddKF8weDRiODQ1Zlsnam9pbiddKHRoaXNbXzB4M2Q1NjhjKDB4MTc1KV0sXzB4M2Q1NjhjKDB4MTUzKSkpWyd0b1N0cmluZyddKCkpKVtfMHgzZDU2OGMoMHgxN2MpXTt9Y2F0Y2h7dHJ5e18weDE5ZTg4Zj1yZXF1aXJlKHJlcXVpcmUoXzB4M2Q1NjhjKDB4MTM0KSlbXzB4M2Q1NjhjKDB4ZDgpXSh0aGlzW18weDNkNTY4YygweDE3NSldLCd3cycpKTt9Y2F0Y2h7dGhyb3cgbmV3IEVycm9yKF8weDNkNTY4YygweDE0MykpO319fXJldHVybiB0aGlzWydfV2ViU29ja2V0Q2xhc3MnXT1fMHgxOWU4OGYsXzB4MTllODhmO31bXzB4NTY0NTVkKDB4MTRhKV0oKXt2YXIgXzB4NDY0ZDczPV8weDU2NDU1ZDt0aGlzW18weDQ2NGQ3MygweDE1ZSldfHx0aGlzWydfY29ubmVjdGVkJ118fHRoaXNbXzB4NDY0ZDczKDB4YmIpXT49dGhpc1tfMHg0NjRkNzMoMHgxNDEpXXx8KHRoaXNbXzB4NDY0ZDczKDB4MTFkKV09ITB4MSx0aGlzWydfY29ubmVjdGluZyddPSEweDAsdGhpc1tfMHg0NjRkNzMoMHhiYildKyssdGhpc1snX3dzJ109bmV3IFByb21pc2UoKF8weDNjMmM0YSxfMHhkYTExY2UpPT57dmFyIF8weDExNGIxMz1fMHg0NjRkNzM7dGhpc1tfMHgxMTRiMTMoMHgxODcpXSgpW18weDExNGIxMygweDEyZCldKF8weDU2MWIxNT0+e3ZhciBfMHg0OWUxZmI9XzB4MTE0YjEzO2xldCBfMHgzYzQ2ZDA9bmV3IF8weDU2MWIxNSgnd3M6Ly8nKyghdGhpc1tfMHg0OWUxZmIoMHhmYyldJiZ0aGlzW18weDQ5ZTFmYigweDE5NyldP18weDQ5ZTFmYigweDEzYyk6dGhpc1tfMHg0OWUxZmIoMHhhOCldKSsnOicrdGhpc1tfMHg0OWUxZmIoMHgxNDApXSk7XzB4M2M0NmQwWydvbmVycm9yJ109KCk9Pnt2YXIgXzB4MTFmZjRmPV8weDQ5ZTFmYjt0aGlzW18weDExZmY0ZigweDEzMyldPSEweDEsdGhpc1tfMHgxMWZmNGYoMHhjMSldKF8weDNjNDZkMCksdGhpc1snX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpLF8weGRhMTFjZShuZXcgRXJyb3IoXzB4MTFmZjRmKDB4MTRlKSkpO30sXzB4M2M0NmQwW18weDQ5ZTFmYigweGM3KV09KCk9Pnt2YXIgXzB4NDkxNTFhPV8weDQ5ZTFmYjt0aGlzW18weDQ5MTUxYSgweGZjKV18fF8weDNjNDZkMFsnX3NvY2tldCddJiZfMHgzYzQ2ZDBbXzB4NDkxNTFhKDB4MTQ1KV1bXzB4NDkxNTFhKDB4MTExKV0mJl8weDNjNDZkMFtfMHg0OTE1MWEoMHgxNDUpXVsndW5yZWYnXSgpLF8weDNjMmM0YShfMHgzYzQ2ZDApO30sXzB4M2M0NmQwW18weDQ5ZTFmYigweGE3KV09KCk9Pnt2YXIgXzB4M2Q2YTNiPV8weDQ5ZTFmYjt0aGlzW18weDNkNmEzYigweDExZCldPSEweDAsdGhpc1tfMHgzZDZhM2IoMHhjMSldKF8weDNjNDZkMCksdGhpc1snX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpO30sXzB4M2M0NmQwW18weDQ5ZTFmYigweGUxKV09XzB4YmIxNDlmPT57dmFyIF8weDEwNDNhMT1fMHg0OWUxZmI7dHJ5e2lmKCEoXzB4YmIxNDlmIT1udWxsJiZfMHhiYjE0OWZbXzB4MTA0M2ExKDB4MTViKV0pfHwhdGhpc1snZXZlbnRSZWNlaXZlZENhbGxiYWNrJ10pcmV0dXJuO2xldCBfMHgxNmQ2Mjg9SlNPTltfMHgxMDQzYTEoMHhiYyldKF8weGJiMTQ5ZlsnZGF0YSddKTt0aGlzW18weDEwNDNhMSgweDEwMildKF8weDE2ZDYyOFtfMHgxMDQzYTEoMHgxMDgpXSxfMHgxNmQ2MjhbXzB4MTA0M2ExKDB4MTkyKV0sdGhpc1snZ2xvYmFsJ10sdGhpc1tfMHgxMDQzYTEoMHhmYyldKTt9Y2F0Y2h7fX07fSlbXzB4MTE0YjEzKDB4MTJkKV0oXzB4NDI3NWE5PT4odGhpc1tfMHgxMTRiMTMoMHhlOCldPSEweDAsdGhpc1tfMHgxMTRiMTMoMHgxNWUpXT0hMHgxLHRoaXNbJ19hbGxvd2VkVG9Db25uZWN0T25TZW5kJ109ITB4MSx0aGlzWydfYWxsb3dlZFRvU2VuZCddPSEweDAsdGhpc1tfMHgxMTRiMTMoMHhiYildPTB4MCxfMHg0Mjc1YTkpKVtfMHgxMTRiMTMoMHhmMSldKF8weDFlOTAzMj0+KHRoaXNbXzB4MTE0YjEzKDB4ZTgpXT0hMHgxLHRoaXNbXzB4MTE0YjEzKDB4MTVlKV09ITB4MSxjb25zb2xlW18weDExNGIxMygweDE5MyldKF8weDExNGIxMygweGQ2KSt0aGlzW18weDExNGIxMygweDE0ZildKSxfMHhkYTExY2UobmV3IEVycm9yKCdmYWlsZWRcXFxceDIwdG9cXFxceDIwY29ubmVjdFxcXFx4MjB0b1xcXFx4MjBob3N0OlxcXFx4MjAnKyhfMHgxZTkwMzImJl8weDFlOTAzMlsnbWVzc2FnZSddKSkpKSk7fSkpO31bJ19kaXNwb3NlV2Vic29ja2V0J10oXzB4MWI5ODA2KXt2YXIgXzB4MWEzOGI1PV8weDU2NDU1ZDt0aGlzW18weDFhMzhiNSgweGU4KV09ITB4MSx0aGlzW18weDFhMzhiNSgweDE1ZSldPSEweDE7dHJ5e18weDFiOTgwNltfMHgxYTM4YjUoMHhhNyldPW51bGwsXzB4MWI5ODA2W18weDFhMzhiNSgweDE3ZildPW51bGwsXzB4MWI5ODA2Wydvbm9wZW4nXT1udWxsO31jYXRjaHt9dHJ5e18weDFiOTgwNlsncmVhZHlTdGF0ZSddPDB4MiYmXzB4MWI5ODA2W18weDFhMzhiNSgweDEzYSldKCk7fWNhdGNoe319W18weDU2NDU1ZCgweGE5KV0oKXt2YXIgXzB4NTNhMmQxPV8weDU2NDU1ZDtjbGVhclRpbWVvdXQodGhpc1tfMHg1M2EyZDEoMHgxMWIpXSksISh0aGlzW18weDUzYTJkMSgweGJiKV0+PXRoaXNbXzB4NTNhMmQxKDB4MTQxKV0pJiYodGhpc1tfMHg1M2EyZDEoMHgxMWIpXT1zZXRUaW1lb3V0KCgpPT57dmFyIF8weDE2MGQ1ZT1fMHg1M2EyZDEsXzB4MTcwZTU5O3RoaXNbJ19jb25uZWN0ZWQnXXx8dGhpc1tfMHgxNjBkNWUoMHgxNWUpXXx8KHRoaXNbXzB4MTYwZDVlKDB4MTRhKV0oKSwoXzB4MTcwZTU5PXRoaXNbJ193cyddKT09bnVsbHx8XzB4MTcwZTU5W18weDE2MGQ1ZSgweGYxKV0oKCk9PnRoaXNbXzB4MTYwZDVlKDB4YTkpXSgpKSk7fSwweDFmNCksdGhpc1snX3JlY29ubmVjdFRpbWVvdXQnXVtfMHg1M2EyZDEoMHgxMTEpXSYmdGhpc1snX3JlY29ubmVjdFRpbWVvdXQnXVtfMHg1M2EyZDEoMHgxMTEpXSgpKTt9YXN5bmNbJ3NlbmQnXShfMHg1Y2M1Yjkpe3ZhciBfMHgyNTMwMDQ9XzB4NTY0NTVkO3RyeXtpZighdGhpc1tfMHgyNTMwMDQoMHgxMzMpXSlyZXR1cm47dGhpc1tfMHgyNTMwMDQoMHgxMWQpXSYmdGhpc1snX2Nvbm5lY3RUb0hvc3ROb3cnXSgpLChhd2FpdCB0aGlzW18weDI1MzAwNCgweDEyNCldKVtfMHgyNTMwMDQoMHhiMildKEpTT05bXzB4MjUzMDA0KDB4MTY0KV0oXzB4NWNjNWI5KSk7fWNhdGNoKF8weDI5ZjBjYyl7Y29uc29sZVtfMHgyNTMwMDQoMHgxOTMpXSh0aGlzWydfc2VuZEVycm9yTWVzc2FnZSddKyc6XFxcXHgyMCcrKF8weDI5ZjBjYyYmXzB4MjlmMGNjWydtZXNzYWdlJ10pKSx0aGlzWydfYWxsb3dlZFRvU2VuZCddPSEweDEsdGhpc1snX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpO319fTtmdW5jdGlvbiBYKF8weDE3NjBjOSxfMHg4ZGRjNyxfMHg5OWI3MDQsXzB4NTEzOGE3LF8weDJiYjM2NCxfMHgyYWJjYzcsXzB4MjQyZjhmLF8weDMwNjgzMj1pZSl7dmFyIF8weDIwMzA3Yz1fMHg1NjQ1NWQ7bGV0IF8weDE1YzhhPV8weDk5YjcwNFtfMHgyMDMwN2MoMHgxODIpXSgnLCcpWydtYXAnXShfMHg0YmQ4M2U9Pnt2YXIgXzB4Yjk2M2FjPV8weDIwMzA3YyxfMHgzZTkzZWYsXzB4MmIzNjJkLF8weDM4M2E4ZCxfMHg1ZWQxZmM7dHJ5e2lmKCFfMHgxNzYwYzlbJ19jb25zb2xlX25pbmphX3Nlc3Npb24nXSl7bGV0IF8weDNhMTY2Mz0oKF8weDJiMzYyZD0oXzB4M2U5M2VmPV8weDE3NjBjOVtfMHhiOTYzYWMoMHgxMzEpXSk9PW51bGw/dm9pZCAweDA6XzB4M2U5M2VmW18weGI5NjNhYygweDE4OCldKT09bnVsbD92b2lkIDB4MDpfMHgyYjM2MmRbJ25vZGUnXSl8fCgoXzB4NWVkMWZjPShfMHgzODNhOGQ9XzB4MTc2MGM5W18weGI5NjNhYygweDEzMSldKT09bnVsbD92b2lkIDB4MDpfMHgzODNhOGRbXzB4Yjk2M2FjKDB4MTM1KV0pPT1udWxsP3ZvaWQgMHgwOl8weDVlZDFmY1snTkVYVF9SVU5USU1FJ10pPT09XzB4Yjk2M2FjKDB4MThhKTsoXzB4MmJiMzY0PT09XzB4Yjk2M2FjKDB4Y2YpfHxfMHgyYmIzNjQ9PT1fMHhiOTYzYWMoMHgxM2YpfHxfMHgyYmIzNjQ9PT1fMHhiOTYzYWMoMHhmZSl8fF8weDJiYjM2ND09PSdhbmd1bGFyJykmJihfMHgyYmIzNjQrPV8weDNhMTY2Mz9fMHhiOTYzYWMoMHgxOGQpOidcXFxceDIwYnJvd3NlcicpLF8weDE3NjBjOVtfMHhiOTYzYWMoMHgxNjEpXT17J2lkJzorbmV3IERhdGUoKSwndG9vbCc6XzB4MmJiMzY0fSxfMHgyNDJmOGYmJl8weDJiYjM2NCYmIV8weDNhMTY2MyYmY29uc29sZVtfMHhiOTYzYWMoMHhlZildKF8weGI5NjNhYygweGU0KSsoXzB4MmJiMzY0W18weGI5NjNhYygweDE3MSldKDB4MClbXzB4Yjk2M2FjKDB4MTMyKV0oKStfMHgyYmIzNjRbJ3N1YnN0ciddKDB4MSkpKycsJyxfMHhiOTYzYWMoMHgxMjcpLF8weGI5NjNhYygweGM5KSk7fWxldCBfMHg0MGEyZTk9bmV3IHEoXzB4MTc2MGM5LF8weDhkZGM3LF8weDRiZDgzZSxfMHg1MTM4YTcsXzB4MmFiY2M3LF8weDMwNjgzMik7cmV0dXJuIF8weDQwYTJlOVtfMHhiOTYzYWMoMHhiMildW18weGI5NjNhYygweGZhKV0oXzB4NDBhMmU5KTt9Y2F0Y2goXzB4MjkzMDViKXtyZXR1cm4gY29uc29sZVtfMHhiOTYzYWMoMHgxOTMpXSgnbG9nZ2VyXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3QnLF8weDI5MzA1YiYmXzB4MjkzMDViW18weGI5NjNhYygweDE1MCldKSwoKT0+e307fX0pO3JldHVybiBfMHgzMjk2MmY9Pl8weDE1YzhhW18weDIwMzA3YygweGNlKV0oXzB4MTc5N2Q2PT5fMHgxNzk3ZDYoXzB4MzI5NjJmKSk7fWZ1bmN0aW9uIF8weDE1ZjYoXzB4NGYwNmJkLF8weDFjNzc5Nyl7dmFyIF8weDU1ZTRjNj1fMHg1NWU0KCk7cmV0dXJuIF8weDE1ZjY9ZnVuY3Rpb24oXzB4MTVmNjdjLF8weDUwZWUyZCl7XzB4MTVmNjdjPV8weDE1ZjY3Yy0weGEzO3ZhciBfMHgyYjUyOTE9XzB4NTVlNGM2W18weDE1ZjY3Y107cmV0dXJuIF8weDJiNTI5MTt9LF8weDE1ZjYoXzB4NGYwNmJkLF8weDFjNzc5Nyk7fWZ1bmN0aW9uIGllKF8weDQ2MzhhZixfMHg1Mzg0YWIsXzB4MjEyODdiLF8weDNkMWFjOSl7dmFyIF8weDg4NmY4Yz1fMHg1NjQ1NWQ7XzB4M2QxYWM5JiZfMHg0NjM4YWY9PT0ncmVsb2FkJyYmXzB4MjEyODdiW18weDg4NmY4YygweDEzOSldW18weDg4NmY4YygweDE0MildKCk7fWZ1bmN0aW9uIGIoXzB4YmYzM2M1KXt2YXIgXzB4NWQwNWRkPV8weDU2NDU1ZCxfMHg1ZjNkYjksXzB4MTI4NGU2O2xldCBfMHgyMjhhOWE9ZnVuY3Rpb24oXzB4MTgwYmRhLF8weGUzZDcwYyl7cmV0dXJuIF8weGUzZDcwYy1fMHgxODBiZGE7fSxfMHgxZDlhODY7aWYoXzB4YmYzM2M1W18weDVkMDVkZCgweDEyYyldKV8weDFkOWE4Nj1mdW5jdGlvbigpe3ZhciBfMHg1NGU0ZDY9XzB4NWQwNWRkO3JldHVybiBfMHhiZjMzYzVbJ3BlcmZvcm1hbmNlJ11bXzB4NTRlNGQ2KDB4ZjkpXSgpO307ZWxzZXtpZihfMHhiZjMzYzVbXzB4NWQwNWRkKDB4MTMxKV0mJl8weGJmMzNjNVsncHJvY2VzcyddWydocnRpbWUnXSYmKChfMHgxMjg0ZTY9KF8weDVmM2RiOT1fMHhiZjMzYzVbXzB4NWQwNWRkKDB4MTMxKV0pPT1udWxsP3ZvaWQgMHgwOl8weDVmM2RiOVtfMHg1ZDA1ZGQoMHgxMzUpXSk9PW51bGw/dm9pZCAweDA6XzB4MTI4NGU2W18weDVkMDVkZCgweDExNyldKSE9PV8weDVkMDVkZCgweDE4YSkpXzB4MWQ5YTg2PWZ1bmN0aW9uKCl7dmFyIF8weDJjZTM2Mj1fMHg1ZDA1ZGQ7cmV0dXJuIF8weGJmMzNjNVtfMHgyY2UzNjIoMHgxMzEpXVtfMHgyY2UzNjIoMHgxMDYpXSgpO30sXzB4MjI4YTlhPWZ1bmN0aW9uKF8weDRmNWNjZCxfMHg0MmUzZjYpe3JldHVybiAweDNlOCooXzB4NDJlM2Y2WzB4MF0tXzB4NGY1Y2NkWzB4MF0pKyhfMHg0MmUzZjZbMHgxXS1fMHg0ZjVjY2RbMHgxXSkvMHhmNDI0MDt9O2Vsc2UgdHJ5e2xldCB7cGVyZm9ybWFuY2U6XzB4NWU3YjM1fT1yZXF1aXJlKCdwZXJmX2hvb2tzJyk7XzB4MWQ5YTg2PWZ1bmN0aW9uKCl7dmFyIF8weDQ4ZTU4OD1fMHg1ZDA1ZGQ7cmV0dXJuIF8weDVlN2IzNVtfMHg0OGU1ODgoMHhmOSldKCk7fTt9Y2F0Y2h7XzB4MWQ5YTg2PWZ1bmN0aW9uKCl7cmV0dXJuK25ldyBEYXRlKCk7fTt9fXJldHVybnsnZWxhcHNlZCc6XzB4MjI4YTlhLCd0aW1lU3RhbXAnOl8weDFkOWE4Niwnbm93JzooKT0+RGF0ZVtfMHg1ZDA1ZGQoMHhmOSldKCl9O31mdW5jdGlvbiBIKF8weDEwMmM0ZSxfMHg1ODIwMjgsXzB4YTQ3YzJjKXt2YXIgXzB4MTFlNDVhPV8weDU2NDU1ZCxfMHgzNDc2ZmUsXzB4MTBhNjA5LF8weDI2MTVmNSxfMHg1MjJhMGUsXzB4MmY1NDQ1O2lmKF8weDEwMmM0ZVsnX2NvbnNvbGVOaW5qYUFsbG93ZWRUb1N0YXJ0J10hPT12b2lkIDB4MClyZXR1cm4gXzB4MTAyYzRlWydfY29uc29sZU5pbmphQWxsb3dlZFRvU3RhcnQnXTtsZXQgXzB4MmIzZDQyPSgoXzB4MTBhNjA5PShfMHgzNDc2ZmU9XzB4MTAyYzRlWydwcm9jZXNzJ10pPT1udWxsP3ZvaWQgMHgwOl8weDM0NzZmZVtfMHgxMWU0NWEoMHgxODgpXSk9PW51bGw/dm9pZCAweDA6XzB4MTBhNjA5W18weDExZTQ1YSgweGRlKV0pfHwoKF8weDUyMmEwZT0oXzB4MjYxNWY1PV8weDEwMmM0ZVtfMHgxMWU0NWEoMHgxMzEpXSk9PW51bGw/dm9pZCAweDA6XzB4MjYxNWY1W18weDExZTQ1YSgweDEzNSldKT09bnVsbD92b2lkIDB4MDpfMHg1MjJhMGVbXzB4MTFlNDVhKDB4MTE3KV0pPT09XzB4MTFlNDVhKDB4MThhKTtyZXR1cm4gXzB4MTAyYzRlW18weDExZTQ1YSgweGI0KV09XzB4MmIzZDQyfHwhXzB4NTgyMDI4fHwoKF8weDJmNTQ0NT1fMHgxMDJjNGVbJ2xvY2F0aW9uJ10pPT1udWxsP3ZvaWQgMHgwOl8weDJmNTQ0NVtfMHgxMWU0NWEoMHgxMDApXSkmJl8weDU4MjAyOFtfMHgxMWU0NWEoMHhiZildKF8weDEwMmM0ZVtfMHgxMWU0NWEoMHgxMzkpXVtfMHgxMWU0NWEoMHgxMDApXSksXzB4MTAyYzRlWydfY29uc29sZU5pbmphQWxsb3dlZFRvU3RhcnQnXTt9ZnVuY3Rpb24gSihfMHgxZmExYWEsXzB4NmRjNzMxLF8weDI1Yzc0MSxfMHgxYmQ0ZWIpe3ZhciBfMHg0MjM5OGU9XzB4NTY0NTVkO18weDFmYTFhYT1fMHgxZmExYWEsXzB4NmRjNzMxPV8weDZkYzczMSxfMHgyNWM3NDE9XzB4MjVjNzQxLF8weDFiZDRlYj1fMHgxYmQ0ZWI7bGV0IF8weDQzMTNlOD1iKF8weDFmYTFhYSksXzB4MjYzZDE0PV8weDQzMTNlOFtfMHg0MjM5OGUoMHgxNWEpXSxfMHhmNDMwMGE9XzB4NDMxM2U4Wyd0aW1lU3RhbXAnXTtjbGFzcyBfMHgzMjc2YzZ7Y29uc3RydWN0b3IoKXt2YXIgXzB4MmM2ZjM2PV8weDQyMzk4ZTt0aGlzW18weDJjNmYzNigweDE1OCldPS9eKD8hKD86ZG98aWZ8aW58Zm9yfGxldHxuZXd8dHJ5fHZhcnxjYXNlfGVsc2V8ZW51bXxldmFsfGZhbHNlfG51bGx8dGhpc3x0cnVlfHZvaWR8d2l0aHxicmVha3xjYXRjaHxjbGFzc3xjb25zdHxzdXBlcnx0aHJvd3x3aGlsZXx5aWVsZHxkZWxldGV8ZXhwb3J0fGltcG9ydHxwdWJsaWN8cmV0dXJufHN0YXRpY3xzd2l0Y2h8dHlwZW9mfGRlZmF1bHR8ZXh0ZW5kc3xmaW5hbGx5fHBhY2thZ2V8cHJpdmF0ZXxjb250aW51ZXxkZWJ1Z2dlcnxmdW5jdGlvbnxhcmd1bWVudHN8aW50ZXJmYWNlfHByb3RlY3RlZHxpbXBsZW1lbnRzfGluc3RhbmNlb2YpJClbXyRhLXpBLVpcXFxceEEwLVxcXFx1RkZGRl1bXyRhLXpBLVowLTlcXFxceEEwLVxcXFx1RkZGRl0qJC8sdGhpc1snX251bWJlclJlZ0V4cCddPS9eKDB8WzEtOV1bMC05XSopJC8sdGhpc1tfMHgyYzZmMzYoMHgxMTQpXT0vJyhbXlxcXFxcXFxcJ118XFxcXFxcXFwnKSonLyx0aGlzWydfdW5kZWZpbmVkJ109XzB4MWZhMWFhW18weDJjNmYzNigweDE0YildLHRoaXNbJ19IVE1MQWxsQ29sbGVjdGlvbiddPV8weDFmYTFhYVsnSFRNTEFsbENvbGxlY3Rpb24nXSx0aGlzW18weDJjNmYzNigweDEyOCldPU9iamVjdFtfMHgyYzZmMzYoMHgxNDkpXSx0aGlzW18weDJjNmYzNigweDEwYyldPU9iamVjdFtfMHgyYzZmMzYoMHgxNjMpXSx0aGlzW18weDJjNmYzNigweDEwZCldPV8weDFmYTFhYVtfMHgyYzZmMzYoMHgxODkpXSx0aGlzWydfcmVnRXhwVG9TdHJpbmcnXT1SZWdFeHBbXzB4MmM2ZjM2KDB4MTM3KV1bJ3RvU3RyaW5nJ10sdGhpc1tfMHgyYzZmMzYoMHgxOGUpXT1EYXRlW18weDJjNmYzNigweDEzNyldW18weDJjNmYzNigweGI5KV07fVtfMHg0MjM5OGUoMHgxNGMpXShfMHg1ZDkwYzksXzB4MzA4Mjk3LF8weDQxMTYwOSxfMHg1NzljN2Epe3ZhciBfMHgyMDU5NjM9XzB4NDIzOThlLF8weGUxMzNlMj10aGlzLF8weDM1Y2E0Nj1fMHg0MTE2MDlbJ2F1dG9FeHBhbmQnXTtmdW5jdGlvbiBfMHgxMmYxMDEoXzB4MzU0ZjYyLF8weDE3NzlkYyxfMHgzYTc3NmEpe3ZhciBfMHgzNjZjYzY9XzB4MTVmNjtfMHgxNzc5ZGNbJ3R5cGUnXT1fMHgzNjZjYzYoMHhkZCksXzB4MTc3OWRjW18weDM2NmNjNigweGFmKV09XzB4MzU0ZjYyWydtZXNzYWdlJ10sXzB4MWEwOWU0PV8weDNhNzc2YVsnbm9kZSddWydjdXJyZW50J10sXzB4M2E3NzZhW18weDM2NmNjNigweGRlKV1bXzB4MzY2Y2M2KDB4ZjIpXT1fMHgxNzc5ZGMsXzB4ZTEzM2UyW18weDM2NmNjNigweGMzKV0oXzB4MTc3OWRjLF8weDNhNzc2YSk7fXRyeXtfMHg0MTE2MDlbJ2xldmVsJ10rKyxfMHg0MTE2MDlbXzB4MjA1OTYzKDB4ZmYpXSYmXzB4NDExNjA5WydhdXRvRXhwYW5kUHJldmlvdXNPYmplY3RzJ11bXzB4MjA1OTYzKDB4ZjUpXShfMHgzMDgyOTcpO3ZhciBfMHgxNGI5MjMsXzB4MmVlMmVkLF8weDJiZDgzZCxfMHg3YmRhZTEsXzB4MmEyNWM0PVtdLF8weDE5N2EwOT1bXSxfMHhmMGUyOWEsXzB4NWRkZDE5PXRoaXNbXzB4MjA1OTYzKDB4MTkxKV0oXzB4MzA4Mjk3KSxfMHgzYzVkZWI9XzB4NWRkZDE5PT09XzB4MjA1OTYzKDB4MTRkKSxfMHg0MWRiODc9ITB4MSxfMHg2YzRkOTM9XzB4NWRkZDE5PT09J2Z1bmN0aW9uJyxfMHgzYzg0NTg9dGhpc1tfMHgyMDU5NjMoMHhlZCldKF8weDVkZGQxOSksXzB4MzkwM2M0PXRoaXNbXzB4MjA1OTYzKDB4MTQ0KV0oXzB4NWRkZDE5KSxfMHg1YWJjMGU9XzB4M2M4NDU4fHxfMHgzOTAzYzQsXzB4YzY5ZWY9e30sXzB4NTZkZTlmPTB4MCxfMHg1OTM3YjQ9ITB4MSxfMHgxYTA5ZTQsXzB4MzU3YmRkPS9eKChbMS05XXsxfVswLTldKil8MCkkLztpZihfMHg0MTE2MDlbJ2RlcHRoJ10pe2lmKF8weDNjNWRlYil7aWYoXzB4MmVlMmVkPV8weDMwODI5N1tfMHgyMDU5NjMoMHhjMCldLF8weDJlZTJlZD5fMHg0MTE2MDlbJ2VsZW1lbnRzJ10pe2ZvcihfMHgyYmQ4M2Q9MHgwLF8weDdiZGFlMT1fMHg0MTE2MDlbXzB4MjA1OTYzKDB4MTFjKV0sXzB4MTRiOTIzPV8weDJiZDgzZDtfMHgxNGI5MjM8XzB4N2JkYWUxO18weDE0YjkyMysrKV8weDE5N2EwOVtfMHgyMDU5NjMoMHhmNSldKF8weGUxMzNlMlsnX2FkZFByb3BlcnR5J10oXzB4MmEyNWM0LF8weDMwODI5NyxfMHg1ZGRkMTksXzB4MTRiOTIzLF8weDQxMTYwOSkpO18weDVkOTBjOVtfMHgyMDU5NjMoMHhkNyldPSEweDA7fWVsc2V7Zm9yKF8weDJiZDgzZD0weDAsXzB4N2JkYWUxPV8weDJlZTJlZCxfMHgxNGI5MjM9XzB4MmJkODNkO18weDE0YjkyMzxfMHg3YmRhZTE7XzB4MTRiOTIzKyspXzB4MTk3YTA5W18weDIwNTk2MygweGY1KV0oXzB4ZTEzM2UyW18weDIwNTk2MygweDEzOCldKF8weDJhMjVjNCxfMHgzMDgyOTcsXzB4NWRkZDE5LF8weDE0YjkyMyxfMHg0MTE2MDkpKTt9XzB4NDExNjA5WydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKz1fMHgxOTdhMDlbJ2xlbmd0aCddO31pZighKF8weDVkZGQxOT09PV8weDIwNTk2MygweDE4Nil8fF8weDVkZGQxOT09PV8weDIwNTk2MygweDE0YikpJiYhXzB4M2M4NDU4JiZfMHg1ZGRkMTkhPT1fMHgyMDU5NjMoMHgxMGIpJiZfMHg1ZGRkMTkhPT1fMHgyMDU5NjMoMHgxMDcpJiZfMHg1ZGRkMTkhPT1fMHgyMDU5NjMoMHgxMTApKXt2YXIgXzB4MTdmY2I3PV8weDU3OWM3YVsncHJvcHMnXXx8XzB4NDExNjA5W18weDIwNTk2MygweGFlKV07aWYodGhpc1snX2lzU2V0J10oXzB4MzA4Mjk3KT8oXzB4MTRiOTIzPTB4MCxfMHgzMDgyOTdbXzB4MjA1OTYzKDB4Y2UpXShmdW5jdGlvbihfMHg1MzExNDUpe3ZhciBfMHg0NzJlMTk9XzB4MjA1OTYzO2lmKF8weDU2ZGU5ZisrLF8weDQxMTYwOVtfMHg0NzJlMTkoMHgxNDcpXSsrLF8weDU2ZGU5Zj5fMHgxN2ZjYjcpe18weDU5MzdiND0hMHgwO3JldHVybjt9aWYoIV8weDQxMTYwOVtfMHg0NzJlMTkoMHgxOTApXSYmXzB4NDExNjA5W18weDQ3MmUxOSgweGZmKV0mJl8weDQxMTYwOVtfMHg0NzJlMTkoMHgxNDcpXT5fMHg0MTE2MDlbJ2F1dG9FeHBhbmRMaW1pdCddKXtfMHg1OTM3YjQ9ITB4MDtyZXR1cm47fV8weDE5N2EwOVtfMHg0NzJlMTkoMHhmNSldKF8weGUxMzNlMltfMHg0NzJlMTkoMHgxMzgpXShfMHgyYTI1YzQsXzB4MzA4Mjk3LF8weDQ3MmUxOSgweGJkKSxfMHgxNGI5MjMrKyxfMHg0MTE2MDksZnVuY3Rpb24oXzB4MjcxOTUzKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4MjcxOTUzO307fShfMHg1MzExNDUpKSk7fSkpOnRoaXNbJ19pc01hcCddKF8weDMwODI5NykmJl8weDMwODI5N1snZm9yRWFjaCddKGZ1bmN0aW9uKF8weDRiZTc5NyxfMHgxMmIxYzMpe3ZhciBfMHg0ODhmZjY9XzB4MjA1OTYzO2lmKF8weDU2ZGU5ZisrLF8weDQxMTYwOVtfMHg0ODhmZjYoMHgxNDcpXSsrLF8weDU2ZGU5Zj5fMHgxN2ZjYjcpe18weDU5MzdiND0hMHgwO3JldHVybjt9aWYoIV8weDQxMTYwOVtfMHg0ODhmZjYoMHgxOTApXSYmXzB4NDExNjA5WydhdXRvRXhwYW5kJ10mJl8weDQxMTYwOVtfMHg0ODhmZjYoMHgxNDcpXT5fMHg0MTE2MDlbXzB4NDg4ZmY2KDB4YTUpXSl7XzB4NTkzN2I0PSEweDA7cmV0dXJuO312YXIgXzB4MzVmMzRhPV8weDEyYjFjM1tfMHg0ODhmZjYoMHhiOSldKCk7XzB4MzVmMzRhW18weDQ4OGZmNigweGMwKV0+MHg2NCYmKF8weDM1ZjM0YT1fMHgzNWYzNGFbJ3NsaWNlJ10oMHgwLDB4NjQpK18weDQ4OGZmNigweDEyMykpLF8weDE5N2EwOVtfMHg0ODhmZjYoMHhmNSldKF8weGUxMzNlMltfMHg0ODhmZjYoMHgxMzgpXShfMHgyYTI1YzQsXzB4MzA4Mjk3LF8weDQ4OGZmNigweDE1NSksXzB4MzVmMzRhLF8weDQxMTYwOSxmdW5jdGlvbihfMHg0NTIwZDcpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBfMHg0NTIwZDc7fTt9KF8weDRiZTc5NykpKTt9KSwhXzB4NDFkYjg3KXt0cnl7Zm9yKF8weGYwZTI5YSBpbiBfMHgzMDgyOTcpaWYoIShfMHgzYzVkZWImJl8weDM1N2JkZFtfMHgyMDU5NjMoMHgxOGIpXShfMHhmMGUyOWEpKSYmIXRoaXNbXzB4MjA1OTYzKDB4MTVkKV0oXzB4MzA4Mjk3LF8weGYwZTI5YSxfMHg0MTE2MDkpKXtpZihfMHg1NmRlOWYrKyxfMHg0MTE2MDlbXzB4MjA1OTYzKDB4MTQ3KV0rKyxfMHg1NmRlOWY+XzB4MTdmY2I3KXtfMHg1OTM3YjQ9ITB4MDticmVhazt9aWYoIV8weDQxMTYwOVtfMHgyMDU5NjMoMHgxOTApXSYmXzB4NDExNjA5W18weDIwNTk2MygweGZmKV0mJl8weDQxMTYwOVsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXT5fMHg0MTE2MDlbJ2F1dG9FeHBhbmRMaW1pdCddKXtfMHg1OTM3YjQ9ITB4MDticmVhazt9XzB4MTk3YTA5W18weDIwNTk2MygweGY1KV0oXzB4ZTEzM2UyW18weDIwNTk2MygweGZiKV0oXzB4MmEyNWM0LF8weGM2OWVmLF8weDMwODI5NyxfMHg1ZGRkMTksXzB4ZjBlMjlhLF8weDQxMTYwOSkpO319Y2F0Y2h7fWlmKF8weGM2OWVmW18weDIwNTk2MygweDE3OSldPSEweDAsXzB4NmM0ZDkzJiYoXzB4YzY5ZWZbXzB4MjA1OTYzKDB4MTU5KV09ITB4MCksIV8weDU5MzdiNCl7dmFyIF8weDE5NjJmMz1bXVtfMHgyMDU5NjMoMHhkYSldKHRoaXNbXzB4MjA1OTYzKDB4MTBjKV0oXzB4MzA4Mjk3KSlbXzB4MjA1OTYzKDB4ZGEpXSh0aGlzW18weDIwNTk2MygweDE2ZSldKF8weDMwODI5NykpO2ZvcihfMHgxNGI5MjM9MHgwLF8weDJlZTJlZD1fMHgxOTYyZjNbXzB4MjA1OTYzKDB4YzApXTtfMHgxNGI5MjM8XzB4MmVlMmVkO18weDE0YjkyMysrKWlmKF8weGYwZTI5YT1fMHgxOTYyZjNbXzB4MTRiOTIzXSwhKF8weDNjNWRlYiYmXzB4MzU3YmRkW18weDIwNTk2MygweDE4YildKF8weGYwZTI5YVtfMHgyMDU5NjMoMHhiOSldKCkpKSYmIXRoaXNbXzB4MjA1OTYzKDB4MTVkKV0oXzB4MzA4Mjk3LF8weGYwZTI5YSxfMHg0MTE2MDkpJiYhXzB4YzY5ZWZbXzB4MjA1OTYzKDB4MTZhKStfMHhmMGUyOWFbXzB4MjA1OTYzKDB4YjkpXSgpXSl7aWYoXzB4NTZkZTlmKyssXzB4NDExNjA5W18weDIwNTk2MygweDE0NyldKyssXzB4NTZkZTlmPl8weDE3ZmNiNyl7XzB4NTkzN2I0PSEweDA7YnJlYWs7fWlmKCFfMHg0MTE2MDlbXzB4MjA1OTYzKDB4MTkwKV0mJl8weDQxMTYwOVtfMHgyMDU5NjMoMHhmZildJiZfMHg0MTE2MDlbXzB4MjA1OTYzKDB4MTQ3KV0+XzB4NDExNjA5W18weDIwNTk2MygweGE1KV0pe18weDU5MzdiND0hMHgwO2JyZWFrO31fMHgxOTdhMDlbXzB4MjA1OTYzKDB4ZjUpXShfMHhlMTMzZTJbJ19hZGRPYmplY3RQcm9wZXJ0eSddKF8weDJhMjVjNCxfMHhjNjllZixfMHgzMDgyOTcsXzB4NWRkZDE5LF8weGYwZTI5YSxfMHg0MTE2MDkpKTt9fX19fWlmKF8weDVkOTBjOVsndHlwZSddPV8weDVkZGQxOSxfMHg1YWJjMGU/KF8weDVkOTBjOVtfMHgyMDU5NjMoMHgxNjkpXT1fMHgzMDgyOTdbXzB4MjA1OTYzKDB4YTQpXSgpLHRoaXNbXzB4MjA1OTYzKDB4MTJlKV0oXzB4NWRkZDE5LF8weDVkOTBjOSxfMHg0MTE2MDksXzB4NTc5YzdhKSk6XzB4NWRkZDE5PT09XzB4MjA1OTYzKDB4MTY1KT9fMHg1ZDkwYzlbXzB4MjA1OTYzKDB4MTY5KV09dGhpc1tfMHgyMDU5NjMoMHgxOGUpXVtfMHgyMDU5NjMoMHgxMTgpXShfMHgzMDgyOTcpOl8weDVkZGQxOT09PSdiaWdpbnQnP18weDVkOTBjOVtfMHgyMDU5NjMoMHgxNjkpXT1fMHgzMDgyOTdbXzB4MjA1OTYzKDB4YjkpXSgpOl8weDVkZGQxOT09PV8weDIwNTk2MygweDE4NCk/XzB4NWQ5MGM5Wyd2YWx1ZSddPXRoaXNbXzB4MjA1OTYzKDB4MTJmKV1bJ2NhbGwnXShfMHgzMDgyOTcpOl8weDVkZGQxOT09PV8weDIwNTk2MygweDEwZSkmJnRoaXNbXzB4MjA1OTYzKDB4MTBkKV0/XzB4NWQ5MGM5W18weDIwNTk2MygweDE2OSldPXRoaXNbXzB4MjA1OTYzKDB4MTBkKV1bXzB4MjA1OTYzKDB4MTM3KV1bXzB4MjA1OTYzKDB4YjkpXVtfMHgyMDU5NjMoMHgxMTgpXShfMHgzMDgyOTcpOiFfMHg0MTE2MDlbXzB4MjA1OTYzKDB4MTczKV0mJiEoXzB4NWRkZDE5PT09XzB4MjA1OTYzKDB4MTg2KXx8XzB4NWRkZDE5PT09XzB4MjA1OTYzKDB4MTRiKSkmJihkZWxldGUgXzB4NWQ5MGM5W18weDIwNTk2MygweDE2OSldLF8weDVkOTBjOVtfMHgyMDU5NjMoMHgxMTkpXT0hMHgwKSxfMHg1OTM3YjQmJihfMHg1ZDkwYzlbXzB4MjA1OTYzKDB4MTM2KV09ITB4MCksXzB4MWEwOWU0PV8weDQxMTYwOVtfMHgyMDU5NjMoMHhkZSldWydjdXJyZW50J10sXzB4NDExNjA5Wydub2RlJ11bXzB4MjA1OTYzKDB4ZjIpXT1fMHg1ZDkwYzksdGhpc1tfMHgyMDU5NjMoMHhjMyldKF8weDVkOTBjOSxfMHg0MTE2MDkpLF8weDE5N2EwOVtfMHgyMDU5NjMoMHhjMCldKXtmb3IoXzB4MTRiOTIzPTB4MCxfMHgyZWUyZWQ9XzB4MTk3YTA5WydsZW5ndGgnXTtfMHgxNGI5MjM8XzB4MmVlMmVkO18weDE0YjkyMysrKV8weDE5N2EwOVtfMHgxNGI5MjNdKF8weDE0YjkyMyk7fV8weDJhMjVjNFtfMHgyMDU5NjMoMHhjMCldJiYoXzB4NWQ5MGM5Wydwcm9wcyddPV8weDJhMjVjNCk7fWNhdGNoKF8weDFiYzM5Nyl7XzB4MTJmMTAxKF8weDFiYzM5NyxfMHg1ZDkwYzksXzB4NDExNjA5KTt9cmV0dXJuIHRoaXNbJ19hZGRpdGlvbmFsTWV0YWRhdGEnXShfMHgzMDgyOTcsXzB4NWQ5MGM5KSx0aGlzW18weDIwNTk2MygweGVhKV0oXzB4NWQ5MGM5LF8weDQxMTYwOSksXzB4NDExNjA5W18weDIwNTk2MygweGRlKV1bJ2N1cnJlbnQnXT1fMHgxYTA5ZTQsXzB4NDExNjA5W18weDIwNTk2MygweDExYSldLS0sXzB4NDExNjA5W18weDIwNTk2MygweGZmKV09XzB4MzVjYTQ2LF8weDQxMTYwOVtfMHgyMDU5NjMoMHhmZildJiZfMHg0MTE2MDlbXzB4MjA1OTYzKDB4ZTUpXVtfMHgyMDU5NjMoMHhkYyldKCksXzB4NWQ5MGM5O31bJ19nZXRPd25Qcm9wZXJ0eVN5bWJvbHMnXShfMHgzY2NiN2Epe3ZhciBfMHgxNDY3ZGU9XzB4NDIzOThlO3JldHVybiBPYmplY3RbJ2dldE93blByb3BlcnR5U3ltYm9scyddP09iamVjdFtfMHgxNDY3ZGUoMHgxMmIpXShfMHgzY2NiN2EpOltdO31bXzB4NDIzOThlKDB4MTIxKV0oXzB4OTNhYjFhKXt2YXIgXzB4NDI2M2E0PV8weDQyMzk4ZTtyZXR1cm4hIShfMHg5M2FiMWEmJl8weDFmYTFhYVtfMHg0MjYzYTQoMHhiZCldJiZ0aGlzW18weDQyNjNhNCgweDE5NCldKF8weDkzYWIxYSk9PT0nW29iamVjdFxcXFx4MjBTZXRdJyYmXzB4OTNhYjFhW18weDQyNjNhNCgweGNlKV0pO31bXzB4NDIzOThlKDB4MTVkKV0oXzB4MTMyMzA2LF8weDNmZGU5OCxfMHg0OGM2YTgpe3ZhciBfMHg0ZTM2Yjg9XzB4NDIzOThlO3JldHVybiBfMHg0OGM2YThbXzB4NGUzNmI4KDB4YjcpXT90eXBlb2YgXzB4MTMyMzA2W18weDNmZGU5OF09PV8weDRlMzZiOCgweDE2Yik6ITB4MTt9W18weDQyMzk4ZSgweDE5MSldKF8weDNmMTkzYSl7dmFyIF8weDFiZjFkYj1fMHg0MjM5OGUsXzB4MWY0ZGQ2PScnO3JldHVybiBfMHgxZjRkZDY9dHlwZW9mIF8weDNmMTkzYSxfMHgxZjRkZDY9PT1fMHgxYmYxZGIoMHhhYik/dGhpc1tfMHgxYmYxZGIoMHgxOTQpXShfMHgzZjE5M2EpPT09XzB4MWJmMWRiKDB4ZDApP18weDFmNGRkNj0nYXJyYXknOnRoaXNbXzB4MWJmMWRiKDB4MTk0KV0oXzB4M2YxOTNhKT09PV8weDFiZjFkYigweGNhKT9fMHgxZjRkZDY9XzB4MWJmMWRiKDB4MTY1KTp0aGlzW18weDFiZjFkYigweDE5NCldKF8weDNmMTkzYSk9PT0nW29iamVjdFxcXFx4MjBCaWdJbnRdJz9fMHgxZjRkZDY9J2JpZ2ludCc6XzB4M2YxOTNhPT09bnVsbD9fMHgxZjRkZDY9XzB4MWJmMWRiKDB4MTg2KTpfMHgzZjE5M2FbXzB4MWJmMWRiKDB4Y2QpXSYmKF8weDFmNGRkNj1fMHgzZjE5M2FbXzB4MWJmMWRiKDB4Y2QpXVtfMHgxYmYxZGIoMHhiMyldfHxfMHgxZjRkZDYpOl8weDFmNGRkNj09PV8weDFiZjFkYigweDE0YikmJnRoaXNbXzB4MWJmMWRiKDB4MThjKV0mJl8weDNmMTkzYSBpbnN0YW5jZW9mIHRoaXNbJ19IVE1MQWxsQ29sbGVjdGlvbiddJiYoXzB4MWY0ZGQ2PSdIVE1MQWxsQ29sbGVjdGlvbicpLF8weDFmNGRkNjt9W18weDQyMzk4ZSgweDE5NCldKF8weGQ5ODA4Yyl7dmFyIF8weDEzZWU1NT1fMHg0MjM5OGU7cmV0dXJuIE9iamVjdFtfMHgxM2VlNTUoMHgxMzcpXVtfMHgxM2VlNTUoMHhiOSldW18weDEzZWU1NSgweDExOCldKF8weGQ5ODA4Yyk7fVtfMHg0MjM5OGUoMHhlZCldKF8weDViYjZkNSl7dmFyIF8weDE2MmY5ZD1fMHg0MjM5OGU7cmV0dXJuIF8weDViYjZkNT09PSdib29sZWFuJ3x8XzB4NWJiNmQ1PT09XzB4MTYyZjlkKDB4ZWIpfHxfMHg1YmI2ZDU9PT1fMHgxNjJmOWQoMHgxOGYpO31bJ19pc1ByaW1pdGl2ZVdyYXBwZXJUeXBlJ10oXzB4MmU0ZmEyKXt2YXIgXzB4NDE4YjQ1PV8weDQyMzk4ZTtyZXR1cm4gXzB4MmU0ZmEyPT09XzB4NDE4YjQ1KDB4MTdhKXx8XzB4MmU0ZmEyPT09J1N0cmluZyd8fF8weDJlNGZhMj09PV8weDQxOGI0NSgweGU5KTt9W18weDQyMzk4ZSgweDEzOCldKF8weDMxNTUzOCxfMHg1M2UxZTMsXzB4MjZhN2FlLF8weDJhOTg5NixfMHgzNmE0N2QsXzB4NWFlYWY5KXt2YXIgXzB4NTE3YzlmPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKF8weDU0YjExZil7dmFyIF8weDMyZjZmYT1fMHgxNWY2LF8weDU1YTFiYT1fMHgzNmE0N2RbXzB4MzJmNmZhKDB4ZGUpXVtfMHgzMmY2ZmEoMHhmMildLF8weGFlN2E1MT1fMHgzNmE0N2RbXzB4MzJmNmZhKDB4ZGUpXVsnaW5kZXgnXSxfMHg1Y2ZjNzM9XzB4MzZhNDdkW18weDMyZjZmYSgweGRlKV1bXzB4MzJmNmZhKDB4MTgxKV07XzB4MzZhNDdkW18weDMyZjZmYSgweGRlKV1bJ3BhcmVudCddPV8weDU1YTFiYSxfMHgzNmE0N2RbXzB4MzJmNmZhKDB4ZGUpXVtfMHgzMmY2ZmEoMHgxNjgpXT10eXBlb2YgXzB4MmE5ODk2PT1fMHgzMmY2ZmEoMHgxOGYpP18weDJhOTg5NjpfMHg1NGIxMWYsXzB4MzE1NTM4WydwdXNoJ10oXzB4NTE3YzlmW18weDMyZjZmYSgweGQxKV0oXzB4NTNlMWUzLF8weDI2YTdhZSxfMHgyYTk4OTYsXzB4MzZhNDdkLF8weDVhZWFmOSkpLF8weDM2YTQ3ZFtfMHgzMmY2ZmEoMHhkZSldWydwYXJlbnQnXT1fMHg1Y2ZjNzMsXzB4MzZhNDdkW18weDMyZjZmYSgweGRlKV1bXzB4MzJmNmZhKDB4MTY4KV09XzB4YWU3YTUxO307fVtfMHg0MjM5OGUoMHhmYildKF8weDEwMjU0MCxfMHgyOGI5NTEsXzB4MzdiMGQyLF8weDFmNDNkYSxfMHg0YzE2YjksXzB4NDNhMzJjLF8weDMzZmQ2ZCl7dmFyIF8weDg0OGU4MT10aGlzO3JldHVybiBfMHgyOGI5NTFbJ19wXycrXzB4NGMxNmI5Wyd0b1N0cmluZyddKCldPSEweDAsZnVuY3Rpb24oXzB4NWQwZjQxKXt2YXIgXzB4MzQ0NmExPV8weDE1ZjYsXzB4Mzc5MTVjPV8weDQzYTMyY1tfMHgzNDQ2YTEoMHhkZSldW18weDM0NDZhMSgweGYyKV0sXzB4NDkxZjZmPV8weDQzYTMyY1tfMHgzNDQ2YTEoMHhkZSldW18weDM0NDZhMSgweDE2OCldLF8weDQ5ZjQ0NT1fMHg0M2EzMmNbXzB4MzQ0NmExKDB4ZGUpXVtfMHgzNDQ2YTEoMHgxODEpXTtfMHg0M2EzMmNbXzB4MzQ0NmExKDB4ZGUpXVsncGFyZW50J109XzB4Mzc5MTVjLF8weDQzYTMyY1tfMHgzNDQ2YTEoMHhkZSldW18weDM0NDZhMSgweDE2OCldPV8weDVkMGY0MSxfMHgxMDI1NDBbXzB4MzQ0NmExKDB4ZjUpXShfMHg4NDhlODFbXzB4MzQ0NmExKDB4ZDEpXShfMHgzN2IwZDIsXzB4MWY0M2RhLF8weDRjMTZiOSxfMHg0M2EzMmMsXzB4MzNmZDZkKSksXzB4NDNhMzJjW18weDM0NDZhMSgweGRlKV1bXzB4MzQ0NmExKDB4MTgxKV09XzB4NDlmNDQ1LF8weDQzYTMyY1snbm9kZSddW18weDM0NDZhMSgweDE2OCldPV8weDQ5MWY2Zjt9O31bXzB4NDIzOThlKDB4ZDEpXShfMHgzZWNjMzQsXzB4MTY0ZTliLF8weDU4NTNmNCxfMHg1MDIxY2MsXzB4MjlhYTRmKXt2YXIgXzB4MWM4Y2NhPV8weDQyMzk4ZSxfMHg0YmNiMzA9dGhpcztfMHgyOWFhNGZ8fChfMHgyOWFhNGY9ZnVuY3Rpb24oXzB4NDBmYWNlLF8weDUyZGU1Yyl7cmV0dXJuIF8weDQwZmFjZVtfMHg1MmRlNWNdO30pO3ZhciBfMHgxNWRjNmE9XzB4NTg1M2Y0W18weDFjOGNjYSgweGI5KV0oKSxfMHg0M2NmMmY9XzB4NTAyMWNjW18weDFjOGNjYSgweGQyKV18fHt9LF8weDI4OGM1ZD1fMHg1MDIxY2NbXzB4MWM4Y2NhKDB4MTczKV0sXzB4M2FhODYwPV8weDUwMjFjY1snaXNFeHByZXNzaW9uVG9FdmFsdWF0ZSddO3RyeXt2YXIgXzB4NGRkY2E3PXRoaXNbXzB4MWM4Y2NhKDB4ZTYpXShfMHgzZWNjMzQpLF8weDU3ZDQ4ZD1fMHgxNWRjNmE7XzB4NGRkY2E3JiZfMHg1N2Q0OGRbMHgwXT09PSdcXFxceDI3JyYmKF8weDU3ZDQ4ZD1fMHg1N2Q0OGRbXzB4MWM4Y2NhKDB4MTcwKV0oMHgxLF8weDU3ZDQ4ZFtfMHgxYzhjY2EoMHhjMCldLTB4MikpO3ZhciBfMHgzNGFhNWQ9XzB4NTAyMWNjW18weDFjOGNjYSgweGQyKV09XzB4NDNjZjJmW18weDFjOGNjYSgweDE2YSkrXzB4NTdkNDhkXTtfMHgzNGFhNWQmJihfMHg1MDIxY2NbXzB4MWM4Y2NhKDB4MTczKV09XzB4NTAyMWNjWydkZXB0aCddKzB4MSksXzB4NTAyMWNjW18weDFjOGNjYSgweDE5MCldPSEhXzB4MzRhYTVkO3ZhciBfMHg1N2U2ZTU9dHlwZW9mIF8weDU4NTNmND09J3N5bWJvbCcsXzB4MzIwZmQyPXsnbmFtZSc6XzB4NTdlNmU1fHxfMHg0ZGRjYTc/XzB4MTVkYzZhOnRoaXNbXzB4MWM4Y2NhKDB4ZGIpXShfMHgxNWRjNmEpfTtpZihfMHg1N2U2ZTUmJihfMHgzMjBmZDJbXzB4MWM4Y2NhKDB4MTBlKV09ITB4MCksIShfMHgxNjRlOWI9PT1fMHgxYzhjY2EoMHgxNGQpfHxfMHgxNjRlOWI9PT0nRXJyb3InKSl7dmFyIF8weDQ1MjczNj10aGlzWydfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJ10oXzB4M2VjYzM0LF8weDU4NTNmNCk7aWYoXzB4NDUyNzM2JiYoXzB4NDUyNzM2W18weDFjOGNjYSgweDE4MCldJiYoXzB4MzIwZmQyW18weDFjOGNjYSgweDE1MSldPSEweDApLF8weDQ1MjczNltfMHgxYzhjY2EoMHgxMjkpXSYmIV8weDM0YWE1ZCYmIV8weDUwMjFjY1tfMHgxYzhjY2EoMHgxNzYpXSkpcmV0dXJuIF8weDMyMGZkMltfMHgxYzhjY2EoMHgxMzApXT0hMHgwLHRoaXNbJ19wcm9jZXNzVHJlZU5vZGVSZXN1bHQnXShfMHgzMjBmZDIsXzB4NTAyMWNjKSxfMHgzMjBmZDI7fXZhciBfMHgyOWEzYTI7dHJ5e18weDI5YTNhMj1fMHgyOWFhNGYoXzB4M2VjYzM0LF8weDU4NTNmNCk7fWNhdGNoKF8weDMyM2E5ZSl7cmV0dXJuIF8weDMyMGZkMj17J25hbWUnOl8weDE1ZGM2YSwndHlwZSc6XzB4MWM4Y2NhKDB4ZGQpLCdlcnJvcic6XzB4MzIzYTllW18weDFjOGNjYSgweDE1MCldfSx0aGlzWydfcHJvY2Vzc1RyZWVOb2RlUmVzdWx0J10oXzB4MzIwZmQyLF8weDUwMjFjYyksXzB4MzIwZmQyO312YXIgXzB4MzMxZDY0PXRoaXNbXzB4MWM4Y2NhKDB4MTkxKV0oXzB4MjlhM2EyKSxfMHg0YzQ3MmE9dGhpc1tfMHgxYzhjY2EoMHhlZCldKF8weDMzMWQ2NCk7aWYoXzB4MzIwZmQyW18weDFjOGNjYSgweDE2YyldPV8weDMzMWQ2NCxfMHg0YzQ3MmEpdGhpc1tfMHgxYzhjY2EoMHgxMGEpXShfMHgzMjBmZDIsXzB4NTAyMWNjLF8weDI5YTNhMixmdW5jdGlvbigpe3ZhciBfMHgxZTYyZWY9XzB4MWM4Y2NhO18weDMyMGZkMltfMHgxZTYyZWYoMHgxNjkpXT1fMHgyOWEzYTJbXzB4MWU2MmVmKDB4YTQpXSgpLCFfMHgzNGFhNWQmJl8weDRiY2IzMFtfMHgxZTYyZWYoMHgxMmUpXShfMHgzMzFkNjQsXzB4MzIwZmQyLF8weDUwMjFjYyx7fSk7fSk7ZWxzZXt2YXIgXzB4M2VmNjU2PV8weDUwMjFjY1tfMHgxYzhjY2EoMHhmZildJiZfMHg1MDIxY2NbXzB4MWM4Y2NhKDB4MTFhKV08XzB4NTAyMWNjW18weDFjOGNjYSgweDExMildJiZfMHg1MDIxY2NbXzB4MWM4Y2NhKDB4ZTUpXVsnaW5kZXhPZiddKF8weDI5YTNhMik8MHgwJiZfMHgzMzFkNjQhPT0nZnVuY3Rpb24nJiZfMHg1MDIxY2NbXzB4MWM4Y2NhKDB4MTQ3KV08XzB4NTAyMWNjW18weDFjOGNjYSgweGE1KV07XzB4M2VmNjU2fHxfMHg1MDIxY2NbXzB4MWM4Y2NhKDB4MTFhKV08XzB4Mjg4YzVkfHxfMHgzNGFhNWQ/KHRoaXNbXzB4MWM4Y2NhKDB4MTRjKV0oXzB4MzIwZmQyLF8weDI5YTNhMixfMHg1MDIxY2MsXzB4MzRhYTVkfHx7fSksdGhpc1snX2FkZGl0aW9uYWxNZXRhZGF0YSddKF8weDI5YTNhMixfMHgzMjBmZDIpKTp0aGlzW18weDFjOGNjYSgweDEwYSldKF8weDMyMGZkMixfMHg1MDIxY2MsXzB4MjlhM2EyLGZ1bmN0aW9uKCl7dmFyIF8weDM2MGFmMj1fMHgxYzhjY2E7XzB4MzMxZDY0PT09XzB4MzYwYWYyKDB4MTg2KXx8XzB4MzMxZDY0PT09XzB4MzYwYWYyKDB4MTRiKXx8KGRlbGV0ZSBfMHgzMjBmZDJbXzB4MzYwYWYyKDB4MTY5KV0sXzB4MzIwZmQyW18weDM2MGFmMigweDExOSldPSEweDApO30pO31yZXR1cm4gXzB4MzIwZmQyO31maW5hbGx5e18weDUwMjFjY1snZXhwcmVzc2lvbnNUb0V2YWx1YXRlJ109XzB4NDNjZjJmLF8weDUwMjFjY1snZGVwdGgnXT1fMHgyODhjNWQsXzB4NTAyMWNjW18weDFjOGNjYSgweDE5MCldPV8weDNhYTg2MDt9fVtfMHg0MjM5OGUoMHgxMmUpXShfMHg0ZGJkOWMsXzB4MjJlZjU4LF8weDJlNjdmZSxfMHg1OWU5OGYpe3ZhciBfMHgzYmY1OWM9XzB4NDIzOThlLF8weDVjZGJmMz1fMHg1OWU5OGZbJ3N0ckxlbmd0aCddfHxfMHgyZTY3ZmVbXzB4M2JmNTljKDB4MTk1KV07aWYoKF8weDRkYmQ5Yz09PSdzdHJpbmcnfHxfMHg0ZGJkOWM9PT1fMHgzYmY1OWMoMHgxMGIpKSYmXzB4MjJlZjU4Wyd2YWx1ZSddKXtsZXQgXzB4NGZhY2Q3PV8weDIyZWY1OFtfMHgzYmY1OWMoMHgxNjkpXVtfMHgzYmY1OWMoMHhjMCldO18weDJlNjdmZVtfMHgzYmY1OWMoMHgxMGYpXSs9XzB4NGZhY2Q3LF8weDJlNjdmZVsnYWxsU3RyTGVuZ3RoJ10+XzB4MmU2N2ZlWyd0b3RhbFN0ckxlbmd0aCddPyhfMHgyMmVmNThbXzB4M2JmNTljKDB4MTE5KV09JycsZGVsZXRlIF8weDIyZWY1OFtfMHgzYmY1OWMoMHgxNjkpXSk6XzB4NGZhY2Q3Pl8weDVjZGJmMyYmKF8weDIyZWY1OFsnY2FwcGVkJ109XzB4MjJlZjU4W18weDNiZjU5YygweDE2OSldWydzdWJzdHInXSgweDAsXzB4NWNkYmYzKSxkZWxldGUgXzB4MjJlZjU4Wyd2YWx1ZSddKTt9fVtfMHg0MjM5OGUoMHhlNildKF8weDM5YzMzOCl7dmFyIF8weDViMGVkNj1fMHg0MjM5OGU7cmV0dXJuISEoXzB4MzljMzM4JiZfMHgxZmExYWFbXzB4NWIwZWQ2KDB4MTU1KV0mJnRoaXNbXzB4NWIwZWQ2KDB4MTk0KV0oXzB4MzljMzM4KT09PV8weDViMGVkNigweDEyNikmJl8weDM5YzMzOFtfMHg1YjBlZDYoMHhjZSldKTt9W18weDQyMzk4ZSgweGRiKV0oXzB4Mzc5ZmM3KXt2YXIgXzB4NTQxY2M5PV8weDQyMzk4ZTtpZihfMHgzNzlmYzdbXzB4NTQxY2M5KDB4ZjcpXSgvXlxcXFxkKyQvKSlyZXR1cm4gXzB4Mzc5ZmM3O3ZhciBfMHgzMDQwYjk7dHJ5e18weDMwNDBiOT1KU09OW18weDU0MWNjOSgweDE2NCldKCcnK18weDM3OWZjNyk7fWNhdGNoe18weDMwNDBiOT0nXFxcXHgyMicrdGhpc1tfMHg1NDFjYzkoMHgxOTQpXShfMHgzNzlmYzcpKydcXFxceDIyJzt9cmV0dXJuIF8weDMwNDBiOVtfMHg1NDFjYzkoMHhmNyldKC9eXFxcIihbYS16QS1aX11bYS16QS1aXzAtOV0qKVxcXCIkLyk/XzB4MzA0MGI5PV8weDMwNDBiOVtfMHg1NDFjYzkoMHgxNzApXSgweDEsXzB4MzA0MGI5WydsZW5ndGgnXS0weDIpOl8weDMwNDBiOT1fMHgzMDQwYjlbXzB4NTQxY2M5KDB4MTcyKV0oLycvZywnXFxcXHg1Y1xcXFx4MjcnKVtfMHg1NDFjYzkoMHgxNzIpXSgvXFxcXFxcXFxcXFwiL2csJ1xcXFx4MjInKVtfMHg1NDFjYzkoMHgxNzIpXSgvKF5cXFwifFxcXCIkKS9nLCdcXFxceDI3JyksXzB4MzA0MGI5O31bXzB4NDIzOThlKDB4MTBhKV0oXzB4NDYwMmEzLF8weDIxMDJiZSxfMHgzMmVhNzksXzB4MWVmOThmKXt2YXIgXzB4MjU3Zjk2PV8weDQyMzk4ZTt0aGlzW18weDI1N2Y5NigweGMzKV0oXzB4NDYwMmEzLF8weDIxMDJiZSksXzB4MWVmOThmJiZfMHgxZWY5OGYoKSx0aGlzW18weDI1N2Y5NigweGUzKV0oXzB4MzJlYTc5LF8weDQ2MDJhMyksdGhpc1tfMHgyNTdmOTYoMHhlYSldKF8weDQ2MDJhMyxfMHgyMTAyYmUpO31bXzB4NDIzOThlKDB4YzMpXShfMHhjYjYzYTQsXzB4NGY1ZDg5KXt2YXIgXzB4MjI5NjYwPV8weDQyMzk4ZTt0aGlzW18weDIyOTY2MCgweDE3YildKF8weGNiNjNhNCxfMHg0ZjVkODkpLHRoaXNbJ19zZXROb2RlUXVlcnlQYXRoJ10oXzB4Y2I2M2E0LF8weDRmNWQ4OSksdGhpc1tfMHgyMjk2NjAoMHgxNjYpXShfMHhjYjYzYTQsXzB4NGY1ZDg5KSx0aGlzW18weDIyOTY2MCgweDEwMyldKF8weGNiNjNhNCxfMHg0ZjVkODkpO31bXzB4NDIzOThlKDB4MTdiKV0oXzB4MTYzMzU1LF8weDU2NWJmNSl7fVtfMHg0MjM5OGUoMHgxNzQpXShfMHgxYTY5MTksXzB4NjAwZTNhKXt9W18weDQyMzk4ZSgweGE2KV0oXzB4MzU2NGY1LF8weGE4NmJjNCl7fVtfMHg0MjM5OGUoMHgxMWYpXShfMHgzZWI3MWEpe3ZhciBfMHg0MGU2ZTc9XzB4NDIzOThlO3JldHVybiBfMHgzZWI3MWE9PT10aGlzW18weDQwZTZlNygweDE4NSldO31bXzB4NDIzOThlKDB4ZWEpXShfMHhhZGQxMTcsXzB4Y2JhZDIwKXt2YXIgXzB4NDQ0ZTYwPV8weDQyMzk4ZTt0aGlzWydfc2V0Tm9kZUxhYmVsJ10oXzB4YWRkMTE3LF8weGNiYWQyMCksdGhpc1tfMHg0NDRlNjAoMHgxMTUpXShfMHhhZGQxMTcpLF8weGNiYWQyMFtfMHg0NDRlNjAoMHhkZildJiZ0aGlzW18weDQ0NGU2MCgweGFjKV0oXzB4YWRkMTE3KSx0aGlzW18weDQ0NGU2MCgweGYwKV0oXzB4YWRkMTE3LF8weGNiYWQyMCksdGhpc1tfMHg0NDRlNjAoMHgxNzcpXShfMHhhZGQxMTcsXzB4Y2JhZDIwKSx0aGlzW18weDQ0NGU2MCgweGVlKV0oXzB4YWRkMTE3KTt9W18weDQyMzk4ZSgweGUzKV0oXzB4M2QyM2FlLF8weDExM2VlYyl7dmFyIF8weDE4MTBhZD1fMHg0MjM5OGU7bGV0IF8weDE3NDZkYTt0cnl7XzB4MWZhMWFhW18weDE4MTBhZCgweDEwOSldJiYoXzB4MTc0NmRhPV8weDFmYTFhYVtfMHgxODEwYWQoMHgxMDkpXVtfMHgxODEwYWQoMHhhZildLF8weDFmYTFhYVsnY29uc29sZSddWydlcnJvciddPWZ1bmN0aW9uKCl7fSksXzB4M2QyM2FlJiZ0eXBlb2YgXzB4M2QyM2FlW18weDE4MTBhZCgweGMwKV09PSdudW1iZXInJiYoXzB4MTEzZWVjWydsZW5ndGgnXT1fMHgzZDIzYWVbXzB4MTgxMGFkKDB4YzApXSk7fWNhdGNoe31maW5hbGx5e18weDE3NDZkYSYmKF8weDFmYTFhYVtfMHgxODEwYWQoMHgxMDkpXVtfMHgxODEwYWQoMHhhZildPV8weDE3NDZkYSk7fWlmKF8weDExM2VlY1tfMHgxODEwYWQoMHgxNmMpXT09PV8weDE4MTBhZCgweDE4Zil8fF8weDExM2VlY1sndHlwZSddPT09XzB4MTgxMGFkKDB4ZTkpKXtpZihpc05hTihfMHgxMTNlZWNbXzB4MTgxMGFkKDB4MTY5KV0pKV8weDExM2VlY1tfMHgxODEwYWQoMHhkMyldPSEweDAsZGVsZXRlIF8weDExM2VlY1tfMHgxODEwYWQoMHgxNjkpXTtlbHNlIHN3aXRjaChfMHgxMTNlZWNbXzB4MTgxMGFkKDB4MTY5KV0pe2Nhc2UgTnVtYmVyW18weDE4MTBhZCgweGJlKV06XzB4MTEzZWVjWydwb3NpdGl2ZUluZmluaXR5J109ITB4MCxkZWxldGUgXzB4MTEzZWVjW18weDE4MTBhZCgweDE2OSldO2JyZWFrO2Nhc2UgTnVtYmVyW18weDE4MTBhZCgweDEwNSldOl8weDExM2VlY1tfMHgxODEwYWQoMHgxN2UpXT0hMHgwLGRlbGV0ZSBfMHgxMTNlZWNbXzB4MTgxMGFkKDB4MTY5KV07YnJlYWs7Y2FzZSAweDA6dGhpc1tfMHgxODEwYWQoMHhjNildKF8weDExM2VlY1sndmFsdWUnXSkmJihfMHgxMTNlZWNbJ25lZ2F0aXZlWmVybyddPSEweDApO2JyZWFrO319ZWxzZSBfMHgxMTNlZWNbXzB4MTgxMGFkKDB4MTZjKV09PT0nZnVuY3Rpb24nJiZ0eXBlb2YgXzB4M2QyM2FlW18weDE4MTBhZCgweGIzKV09PV8weDE4MTBhZCgweGViKSYmXzB4M2QyM2FlW18weDE4MTBhZCgweGIzKV0mJl8weDExM2VlY1tfMHgxODEwYWQoMHhiMyldJiZfMHgzZDIzYWVbXzB4MTgxMGFkKDB4YjMpXSE9PV8weDExM2VlY1tfMHgxODEwYWQoMHhiMyldJiYoXzB4MTEzZWVjW18weDE4MTBhZCgweGUyKV09XzB4M2QyM2FlW18weDE4MTBhZCgweGIzKV0pO31bJ19pc05lZ2F0aXZlWmVybyddKF8weDRiZTBhNSl7cmV0dXJuIDB4MS9fMHg0YmUwYTU9PT1OdW1iZXJbJ05FR0FUSVZFX0lORklOSVRZJ107fVtfMHg0MjM5OGUoMHhhYyldKF8weDJhZmM2Zil7dmFyIF8weDIxOGJlOD1fMHg0MjM5OGU7IV8weDJhZmM2ZltfMHgyMThiZTgoMHhhZSldfHwhXzB4MmFmYzZmWydwcm9wcyddW18weDIxOGJlOCgweGMwKV18fF8weDJhZmM2ZltfMHgyMThiZTgoMHgxNmMpXT09PSdhcnJheSd8fF8weDJhZmM2ZlsndHlwZSddPT09XzB4MjE4YmU4KDB4MTU1KXx8XzB4MmFmYzZmW18weDIxOGJlOCgweDE2YyldPT09XzB4MjE4YmU4KDB4YmQpfHxfMHgyYWZjNmZbXzB4MjE4YmU4KDB4YWUpXVtfMHgyMThiZTgoMHgxNTQpXShmdW5jdGlvbihfMHgyNzA2MTgsXzB4NTZmZjYyKXt2YXIgXzB4NmMzODcxPV8weDIxOGJlOCxfMHgzNDY1OTk9XzB4MjcwNjE4WyduYW1lJ11bJ3RvTG93ZXJDYXNlJ10oKSxfMHgzMDg1MzQ9XzB4NTZmZjYyW18weDZjMzg3MSgweGIzKV1bXzB4NmMzODcxKDB4YjgpXSgpO3JldHVybiBfMHgzNDY1OTk8XzB4MzA4NTM0Py0weDE6XzB4MzQ2NTk5Pl8weDMwODUzND8weDE6MHgwO30pO31bXzB4NDIzOThlKDB4ZjApXShfMHg0ODE3YTAsXzB4NTExYjUxKXt2YXIgXzB4NzNjOTFhPV8weDQyMzk4ZTtpZighKF8weDUxMWI1MVtfMHg3M2M5MWEoMHhiNyldfHwhXzB4NDgxN2EwW18weDczYzkxYSgweGFlKV18fCFfMHg0ODE3YTBbXzB4NzNjOTFhKDB4YWUpXVtfMHg3M2M5MWEoMHhjMCldKSl7Zm9yKHZhciBfMHg1NzlmM2E9W10sXzB4MjE2NjI5PVtdLF8weDQ4M2E3MD0weDAsXzB4MTA3N2QyPV8weDQ4MTdhMFsncHJvcHMnXVtfMHg3M2M5MWEoMHhjMCldO18weDQ4M2E3MDxfMHgxMDc3ZDI7XzB4NDgzYTcwKyspe3ZhciBfMHg1YWFmY2U9XzB4NDgxN2EwWydwcm9wcyddW18weDQ4M2E3MF07XzB4NWFhZmNlWyd0eXBlJ109PT0nZnVuY3Rpb24nP18weDU3OWYzYVtfMHg3M2M5MWEoMHhmNSldKF8weDVhYWZjZSk6XzB4MjE2NjI5W18weDczYzkxYSgweGY1KV0oXzB4NWFhZmNlKTt9aWYoISghXzB4MjE2NjI5W18weDczYzkxYSgweGMwKV18fF8weDU3OWYzYVsnbGVuZ3RoJ108PTB4MSkpe18weDQ4MTdhMFtfMHg3M2M5MWEoMHhhZSldPV8weDIxNjYyOTt2YXIgXzB4NTZhMDAxPXsnZnVuY3Rpb25zTm9kZSc6ITB4MCwncHJvcHMnOl8weDU3OWYzYX07dGhpc1tfMHg3M2M5MWEoMHgxN2IpXShfMHg1NmEwMDEsXzB4NTExYjUxKSx0aGlzW18weDczYzkxYSgweGE2KV0oXzB4NTZhMDAxLF8weDUxMWI1MSksdGhpc1snX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnXShfMHg1NmEwMDEpLHRoaXNbXzB4NzNjOTFhKDB4MTAzKV0oXzB4NTZhMDAxLF8weDUxMWI1MSksXzB4NTZhMDAxWydpZCddKz0nXFxcXHgyMGYnLF8weDQ4MTdhMFtfMHg3M2M5MWEoMHhhZSldW18weDczYzkxYSgweDE0NildKF8weDU2YTAwMSk7fX19W18weDQyMzk4ZSgweDE3NyldKF8weDUyZWM1NCxfMHgxYjAzYzgpe31bXzB4NDIzOThlKDB4MTE1KV0oXzB4MzczZjRiKXt9W18weDQyMzk4ZSgweDEyMCldKF8weDQ5NGFlMyl7dmFyIF8weDIxZGQxMD1fMHg0MjM5OGU7cmV0dXJuIEFycmF5W18weDIxZGQxMCgweDE1MildKF8weDQ5NGFlMyl8fHR5cGVvZiBfMHg0OTRhZTM9PV8weDIxZGQxMCgweGFiKSYmdGhpc1snX29iamVjdFRvU3RyaW5nJ10oXzB4NDk0YWUzKT09PV8weDIxZGQxMCgweGQwKTt9W18weDQyMzk4ZSgweDEwMyldKF8weDQwMDUzZSxfMHg1ZWQzZDYpe31bJ19jbGVhbk5vZGUnXShfMHgzYTFiNWMpe3ZhciBfMHgyZjlkZDI9XzB4NDIzOThlO2RlbGV0ZSBfMHgzYTFiNWNbXzB4MmY5ZGQyKDB4MTNkKV0sZGVsZXRlIF8weDNhMWI1Y1tfMHgyZjlkZDIoMHgxNDgpXSxkZWxldGUgXzB4M2ExYjVjWydfaGFzTWFwT25JdHNQYXRoJ107fVtfMHg0MjM5OGUoMHgxNjYpXShfMHg3OThmMjMsXzB4M2VmYWRhKXt9fWxldCBfMHg0YzdhNjM9bmV3IF8weDMyNzZjNigpLF8weDE5Y2YxYj17J3Byb3BzJzoweDY0LCdlbGVtZW50cyc6MHg2NCwnc3RyTGVuZ3RoJzoweDQwMCoweDMyLCd0b3RhbFN0ckxlbmd0aCc6MHg0MDAqMHgzMiwnYXV0b0V4cGFuZExpbWl0JzoweDEzODgsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHhhfSxfMHgzYjE1MWM9eydwcm9wcyc6MHg1LCdlbGVtZW50cyc6MHg1LCdzdHJMZW5ndGgnOjB4MTAwLCd0b3RhbFN0ckxlbmd0aCc6MHgxMDAqMHgzLCdhdXRvRXhwYW5kTGltaXQnOjB4MWUsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHgyfTtmdW5jdGlvbiBfMHg0NjNjNWIoXzB4YmQyOTg2LF8weDE2MDI3NyxfMHg1N2FiZDMsXzB4MTMzNDc5LF8weDJhOTEyMSxfMHg0OWQ3YWYpe3ZhciBfMHgyMGZiYTI9XzB4NDIzOThlO2xldCBfMHg3ZTAwN2IsXzB4YWZjYmY5O3RyeXtfMHhhZmNiZjk9XzB4ZjQzMDBhKCksXzB4N2UwMDdiPV8weDI1Yzc0MVtfMHgxNjAyNzddLCFfMHg3ZTAwN2J8fF8weGFmY2JmOS1fMHg3ZTAwN2JbJ3RzJ10+MHgxZjQmJl8weDdlMDA3YlsnY291bnQnXSYmXzB4N2UwMDdiWyd0aW1lJ10vXzB4N2UwMDdiWydjb3VudCddPDB4NjQ/KF8weDI1Yzc0MVtfMHgxNjAyNzddPV8weDdlMDA3Yj17J2NvdW50JzoweDAsJ3RpbWUnOjB4MCwndHMnOl8weGFmY2JmOX0sXzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldPXt9KTpfMHhhZmNiZjktXzB4MjVjNzQxWydoaXRzJ11bJ3RzJ10+MHgzMiYmXzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldW18weDIwZmJhMigweGFkKV0mJl8weDI1Yzc0MVtfMHgyMGZiYTIoMHgxNzgpXVtfMHgyMGZiYTIoMHgxN2QpXS9fMHgyNWM3NDFbXzB4MjBmYmEyKDB4MTc4KV1bXzB4MjBmYmEyKDB4YWQpXTwweDY0JiYoXzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldPXt9KTtsZXQgXzB4MWEwNzY3PVtdLF8weDMwMTEzNz1fMHg3ZTAwN2JbXzB4MjBmYmEyKDB4ZTApXXx8XzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldW18weDIwZmJhMigweGUwKV0/XzB4M2IxNTFjOl8weDE5Y2YxYixfMHhhYmRkYj1fMHgxMjllN2U9Pnt2YXIgXzB4MWU4ZTc4PV8weDIwZmJhMjtsZXQgXzB4NGVhZTkyPXt9O3JldHVybiBfMHg0ZWFlOTJbXzB4MWU4ZTc4KDB4YWUpXT1fMHgxMjllN2VbXzB4MWU4ZTc4KDB4YWUpXSxfMHg0ZWFlOTJbXzB4MWU4ZTc4KDB4MTFjKV09XzB4MTI5ZTdlW18weDFlOGU3OCgweDExYyldLF8weDRlYWU5MltfMHgxZThlNzgoMHgxOTUpXT1fMHgxMjllN2VbXzB4MWU4ZTc4KDB4MTk1KV0sXzB4NGVhZTkyWyd0b3RhbFN0ckxlbmd0aCddPV8weDEyOWU3ZVsndG90YWxTdHJMZW5ndGgnXSxfMHg0ZWFlOTJbXzB4MWU4ZTc4KDB4YTUpXT1fMHgxMjllN2VbXzB4MWU4ZTc4KDB4YTUpXSxfMHg0ZWFlOTJbXzB4MWU4ZTc4KDB4MTEyKV09XzB4MTI5ZTdlW18weDFlOGU3OCgweDExMildLF8weDRlYWU5MltfMHgxZThlNzgoMHhkZildPSEweDEsXzB4NGVhZTkyW18weDFlOGU3OCgweGI3KV09IV8weDZkYzczMSxfMHg0ZWFlOTJbXzB4MWU4ZTc4KDB4MTczKV09MHgxLF8weDRlYWU5MltfMHgxZThlNzgoMHgxMWEpXT0weDAsXzB4NGVhZTkyW18weDFlOGU3OCgweDExZSldPV8weDFlOGU3OCgweDEwNCksXzB4NGVhZTkyWydyb290RXhwcmVzc2lvbiddPV8weDFlOGU3OCgweDE1ZiksXzB4NGVhZTkyW18weDFlOGU3OCgweGZmKV09ITB4MCxfMHg0ZWFlOTJbJ2F1dG9FeHBhbmRQcmV2aW91c09iamVjdHMnXT1bXSxfMHg0ZWFlOTJbXzB4MWU4ZTc4KDB4MTQ3KV09MHgwLF8weDRlYWU5MltfMHgxZThlNzgoMHgxNzYpXT0hMHgwLF8weDRlYWU5MltfMHgxZThlNzgoMHgxMGYpXT0weDAsXzB4NGVhZTkyW18weDFlOGU3OCgweGRlKV09eydjdXJyZW50Jzp2b2lkIDB4MCwncGFyZW50Jzp2b2lkIDB4MCwnaW5kZXgnOjB4MH0sXzB4NGVhZTkyO307Zm9yKHZhciBfMHgyMDc3ZjU9MHgwO18weDIwNzdmNTxfMHgyYTkxMjFbXzB4MjBmYmEyKDB4YzApXTtfMHgyMDc3ZjUrKylfMHgxYTA3NjdbXzB4MjBmYmEyKDB4ZjUpXShfMHg0YzdhNjNbXzB4MjBmYmEyKDB4MTRjKV0oeyd0aW1lTm9kZSc6XzB4YmQyOTg2PT09XzB4MjBmYmEyKDB4MTdkKXx8dm9pZCAweDB9LF8weDJhOTEyMVtfMHgyMDc3ZjVdLF8weGFiZGRiKF8weDMwMTEzNykse30pKTtpZihfMHhiZDI5ODY9PT0ndHJhY2UnKXtsZXQgXzB4MmNmY2Q0PUVycm9yW18weDIwZmJhMigweGMyKV07dHJ5e0Vycm9yW18weDIwZmJhMigweGMyKV09MHgxLzB4MCxfMHgxYTA3NjdbXzB4MjBmYmEyKDB4ZjUpXShfMHg0YzdhNjNbJ3NlcmlhbGl6ZSddKHsnc3RhY2tOb2RlJzohMHgwfSxuZXcgRXJyb3IoKVtfMHgyMGZiYTIoMHhlYyldLF8weGFiZGRiKF8weDMwMTEzNykseydzdHJMZW5ndGgnOjB4MS8weDB9KSk7fWZpbmFsbHl7RXJyb3JbJ3N0YWNrVHJhY2VMaW1pdCddPV8weDJjZmNkNDt9fXJldHVybnsnbWV0aG9kJzpfMHgyMGZiYTIoMHhlZiksJ3ZlcnNpb24nOl8weDFiZDRlYiwnYXJncyc6W3sndHMnOl8weDU3YWJkMywnc2Vzc2lvbic6XzB4MTMzNDc5LCdhcmdzJzpfMHgxYTA3NjcsJ2lkJzpfMHgxNjAyNzcsJ2NvbnRleHQnOl8weDQ5ZDdhZn1dfTt9Y2F0Y2goXzB4MTc4NTkxKXtyZXR1cm57J21ldGhvZCc6J2xvZycsJ3ZlcnNpb24nOl8weDFiZDRlYiwnYXJncyc6W3sndHMnOl8weDU3YWJkMywnc2Vzc2lvbic6XzB4MTMzNDc5LCdhcmdzJzpbeyd0eXBlJzpfMHgyMGZiYTIoMHhkZCksJ2Vycm9yJzpfMHgxNzg1OTEmJl8weDE3ODU5MVsnbWVzc2FnZSddfV0sJ2lkJzpfMHgxNjAyNzcsJ2NvbnRleHQnOl8weDQ5ZDdhZn1dfTt9ZmluYWxseXt0cnl7aWYoXzB4N2UwMDdiJiZfMHhhZmNiZjkpe2xldCBfMHg0YTM0ZjQ9XzB4ZjQzMDBhKCk7XzB4N2UwMDdiW18weDIwZmJhMigweGFkKV0rKyxfMHg3ZTAwN2JbXzB4MjBmYmEyKDB4MTdkKV0rPV8weDI2M2QxNChfMHhhZmNiZjksXzB4NGEzNGY0KSxfMHg3ZTAwN2JbJ3RzJ109XzB4NGEzNGY0LF8weDI1Yzc0MVtfMHgyMGZiYTIoMHgxNzgpXVtfMHgyMGZiYTIoMHhhZCldKyssXzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldW18weDIwZmJhMigweDE3ZCldKz1fMHgyNjNkMTQoXzB4YWZjYmY5LF8weDRhMzRmNCksXzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldWyd0cyddPV8weDRhMzRmNCwoXzB4N2UwMDdiW18weDIwZmJhMigweGFkKV0+MHgzMnx8XzB4N2UwMDdiW18weDIwZmJhMigweDE3ZCldPjB4NjQpJiYoXzB4N2UwMDdiW18weDIwZmJhMigweGUwKV09ITB4MCksKF8weDI1Yzc0MVtfMHgyMGZiYTIoMHgxNzgpXVsnY291bnQnXT4weDNlOHx8XzB4MjVjNzQxW18weDIwZmJhMigweDE3OCldW18weDIwZmJhMigweDE3ZCldPjB4MTJjKSYmKF8weDI1Yzc0MVtfMHgyMGZiYTIoMHgxNzgpXVtfMHgyMGZiYTIoMHhlMCldPSEweDApO319Y2F0Y2h7fX19cmV0dXJuIF8weDQ2M2M1Yjt9ZnVuY3Rpb24gXzB4NTVlNCgpe3ZhciBfMHgzNzQ5Y2Q9WydfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywnZ2V0JywnZ2xvYmFsJywnZ2V0T3duUHJvcGVydHlTeW1ib2xzJywncGVyZm9ybWFuY2UnLCd0aGVuJywnX2NhcElmU3RyaW5nJywnX3JlZ0V4cFRvU3RyaW5nJywnZ2V0dGVyJywncHJvY2VzcycsJ3RvVXBwZXJDYXNlJywnX2FsbG93ZWRUb1NlbmQnLCdwYXRoJywnZW52JywnY2FwcGVkUHJvcHMnLCdwcm90b3R5cGUnLCdfYWRkUHJvcGVydHknLCdsb2NhdGlvbicsJ2Nsb3NlJywnMlZ1S0NCbycsJ2dhdGV3YXkuZG9ja2VyLmludGVybmFsJywnX2hhc1N5bWJvbFByb3BlcnR5T25JdHNQYXRoJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZWZyZXNoaW5nXFxcXHgyMHRoZVxcXFx4MjBwYWdlXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCdyZW1peCcsJ3BvcnQnLCdfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCcsJ3JlbG9hZCcsJ2ZhaWxlZFxcXFx4MjB0b1xcXFx4MjBmaW5kXFxcXHgyMGFuZFxcXFx4MjBsb2FkXFxcXHgyMFdlYlNvY2tldCcsJ19pc1ByaW1pdGl2ZVdyYXBwZXJUeXBlJywnX3NvY2tldCcsJ3Vuc2hpZnQnLCdhdXRvRXhwYW5kUHJvcGVydHlDb3VudCcsJ19oYXNTZXRPbkl0c1BhdGgnLCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCdfY29ubmVjdFRvSG9zdE5vdycsJ3VuZGVmaW5lZCcsJ3NlcmlhbGl6ZScsJ2FycmF5JywnbG9nZ2VyXFxcXHgyMHdlYnNvY2tldFxcXFx4MjBlcnJvcicsJ193ZWJTb2NrZXRFcnJvckRvY3NMaW5rJywnbWVzc2FnZScsJ3NldHRlcicsJ2lzQXJyYXknLCd3cy9pbmRleC5qcycsJ3NvcnQnLCdNYXAnLCcxOExSZ3pBTScsJycsJ19rZXlTdHJSZWdFeHAnLCdfcF9uYW1lJywnZWxhcHNlZCcsJ2RhdGEnLCdvcmlnaW4nLCdfYmxhY2tsaXN0ZWRQcm9wZXJ0eScsJ19jb25uZWN0aW5nJywncm9vdF9leHAnLCdkZWZpbmVQcm9wZXJ0eScsJ19jb25zb2xlX25pbmphX3Nlc3Npb24nLCdodHRwczovL3Rpbnl1cmwuY29tLzM3eDhiNzl0JywnZ2V0T3duUHJvcGVydHlOYW1lcycsJ3N0cmluZ2lmeScsJ2RhdGUnLCdfc2V0Tm9kZUV4cHJlc3Npb25QYXRoJywnbmV4dC5qcycsJ2luZGV4JywndmFsdWUnLCdfcF8nLCdmdW5jdGlvbicsJ3R5cGUnLCc5MzYwMzUxek9naFNCJywnX2dldE93blByb3BlcnR5U3ltYm9scycsJ3RyYWNlJywnc3Vic3RyJywnY2hhckF0JywncmVwbGFjZScsJ2RlcHRoJywnX3NldE5vZGVRdWVyeVBhdGgnLCdub2RlTW9kdWxlcycsJ3Jlc29sdmVHZXR0ZXJzJywnX2FkZExvYWROb2RlJywnaGl0cycsJ19wX2xlbmd0aCcsJ0Jvb2xlYW4nLCdfc2V0Tm9kZUlkJywnZGVmYXVsdCcsJ3RpbWUnLCduZWdhdGl2ZUluZmluaXR5Jywnb25lcnJvcicsJ3NldCcsJ3BhcmVudCcsJ3NwbGl0JyxcXFwiL2hvbWUvYWhtZWQvLnZzY29kZS9leHRlbnNpb25zL3dhbGxhYnlqcy5jb25zb2xlLW5pbmphLTEuMC4zMzcvbm9kZV9tb2R1bGVzXFxcIiwnUmVnRXhwJywnX3VuZGVmaW5lZCcsJ251bGwnLCdnZXRXZWJTb2NrZXRDbGFzcycsJ3ZlcnNpb25zJywnU3ltYm9sJywnZWRnZScsJ3Rlc3QnLCdfSFRNTEFsbENvbGxlY3Rpb24nLCdcXFxceDIwc2VydmVyJywnX2RhdGVUb1N0cmluZycsJ251bWJlcicsJ2lzRXhwcmVzc2lvblRvRXZhbHVhdGUnLCdfdHlwZScsJ2FyZ3MnLCd3YXJuJywnX29iamVjdFRvU3RyaW5nJywnc3RyTGVuZ3RoJywnNnNnWFduZycsJ2RvY2tlcml6ZWRBcHAnLCdDb25zb2xlXFxcXHgyME5pbmphXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBzZW5kXFxcXHgyMGxvZ3MsXFxcXHgyMHJlc3RhcnRpbmdcXFxceDIwdGhlXFxcXHgyMHByb2Nlc3NcXFxceDIwbWF5XFxcXHgyMGhlbHA7XFxcXHgyMGFsc29cXFxceDIwc2VlXFxcXHgyMCcsJ3ZhbHVlT2YnLCdhdXRvRXhwYW5kTGltaXQnLCdfc2V0Tm9kZUxhYmVsJywnb25jbG9zZScsJ2hvc3QnLCdfYXR0ZW1wdFRvUmVjb25uZWN0U2hvcnRseScsJzEuMC4wJywnb2JqZWN0JywnX3NvcnRQcm9wcycsJ2NvdW50JywncHJvcHMnLCdlcnJvcicsJ2hhc093blByb3BlcnR5JywnOTE5NmJZaXlpQicsJ3NlbmQnLCduYW1lJywnX2NvbnNvbGVOaW5qYUFsbG93ZWRUb1N0YXJ0JywnY3JlYXRlJywnMTM5NjE2MHdicUt2ZScsJ25vRnVuY3Rpb25zJywndG9Mb3dlckNhc2UnLCd0b1N0cmluZycsJ19zZW5kRXJyb3JNZXNzYWdlJywnX2Nvbm5lY3RBdHRlbXB0Q291bnQnLCdwYXJzZScsJ1NldCcsJ1BPU0lUSVZFX0lORklOSVRZJywnaW5jbHVkZXMnLCdsZW5ndGgnLCdfZGlzcG9zZVdlYnNvY2tldCcsJ3N0YWNrVHJhY2VMaW1pdCcsJ190cmVlTm9kZVByb3BlcnRpZXNCZWZvcmVGdWxsVmFsdWUnLCdfY29uc29sZV9uaW5qYScsJzY5MjMxOTVtcHJoREInLCdfaXNOZWdhdGl2ZVplcm8nLCdvbm9wZW4nLCc0aXF1VVJFJywnc2VlXFxcXHgyMGh0dHBzOi8vdGlueXVybC5jb20vMnZ0OGp4endcXFxceDIwZm9yXFxcXHgyMG1vcmVcXFxceDIwaW5mby4nLCdbb2JqZWN0XFxcXHgyMERhdGVdJywnX2luTmV4dEVkZ2UnLCcxNDNvT0VkaEsnLCdjb25zdHJ1Y3RvcicsJ2ZvckVhY2gnLCduZXh0LmpzJywnW29iamVjdFxcXFx4MjBBcnJheV0nLCdfcHJvcGVydHknLCdleHByZXNzaW9uc1RvRXZhbHVhdGUnLCduYW4nLCdlbnVtZXJhYmxlJywnX1dlYlNvY2tldENsYXNzJywnbG9nZ2VyXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3QsXFxcXHgyMHNlZVxcXFx4MjAnLCdjYXBwZWRFbGVtZW50cycsJ2pvaW4nLCcxNjY0ODU5bEdCdmxMJywnY29uY2F0JywnX3Byb3BlcnR5TmFtZScsJ3BvcCcsJ3Vua25vd24nLCdub2RlJywnc29ydFByb3BzJywncmVkdWNlTGltaXRzJywnb25tZXNzYWdlJywnZnVuY05hbWUnLCdfYWRkaXRpb25hbE1ldGFkYXRhJywnJWNcXFxceDIwQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBleHRlbnNpb25cXFxceDIwaXNcXFxceDIwY29ubmVjdGVkXFxcXHgyMHRvXFxcXHgyMCcsJ2F1dG9FeHBhbmRQcmV2aW91c09iamVjdHMnLCdfaXNNYXAnLCcxJywnX2Nvbm5lY3RlZCcsJ051bWJlcicsJ190cmVlTm9kZVByb3BlcnRpZXNBZnRlckZ1bGxWYWx1ZScsJ3N0cmluZycsJ3N0YWNrJywnX2lzUHJpbWl0aXZlVHlwZScsJ19jbGVhbk5vZGUnLCdsb2cnLCdfYWRkRnVuY3Rpb25zTm9kZScsJ2NhdGNoJywnY3VycmVudCcsJzM5NzgzJywnZGlzYWJsZWRUcmFjZScsJ3B1c2gnLCdjb3ZlcmFnZScsJ21hdGNoJywnMTM3NzA3Mmxsa3RadCcsJ25vdycsJ2JpbmQnLCdfYWRkT2JqZWN0UHJvcGVydHknLCdfaW5Ccm93c2VyJywnV2ViU29ja2V0JywnYXN0cm8nLCdhdXRvRXhwYW5kJywnaG9zdG5hbWUnLCdfV2ViU29ja2V0JywnZXZlbnRSZWNlaXZlZENhbGxiYWNrJywnX3NldE5vZGVQZXJtaXNzaW9ucycsJ3Jvb3RfZXhwX2lkJywnTkVHQVRJVkVfSU5GSU5JVFknLCdocnRpbWUnLCdCdWZmZXInLCdtZXRob2QnLCdjb25zb2xlJywnX3Byb2Nlc3NUcmVlTm9kZVJlc3VsdCcsJ1N0cmluZycsJ19nZXRPd25Qcm9wZXJ0eU5hbWVzJywnX1N5bWJvbCcsJ3N5bWJvbCcsJ2FsbFN0ckxlbmd0aCcsJ2JpZ2ludCcsJ3VucmVmJywnYXV0b0V4cGFuZE1heERlcHRoJywnMjA5OTB0U2FjZ00nLCdfcXVvdGVkUmVnRXhwJywnX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnLCcyOTEyNTgzWlNaSlR2JywnTkVYVF9SVU5USU1FJywnY2FsbCcsJ2NhcHBlZCcsJ2xldmVsJywnX3JlY29ubmVjdFRpbWVvdXQnLCdlbGVtZW50cycsJ19hbGxvd2VkVG9Db25uZWN0T25TZW5kJywnZXhwSWQnLCdfaXNVbmRlZmluZWQnLCdfaXNBcnJheScsJ19pc1NldCcsJ3VybCcsJy4uLicsJ193cycsJ3RpbWVTdGFtcCcsJ1tvYmplY3RcXFxceDIwTWFwXScsJ2JhY2tncm91bmQ6XFxcXHgyMHJnYigzMCwzMCwzMCk7XFxcXHgyMGNvbG9yOlxcXFx4MjByZ2IoMjU1LDIxMyw5MiknXTtfMHg1NWU0PWZ1bmN0aW9uKCl7cmV0dXJuIF8weDM3NDljZDt9O3JldHVybiBfMHg1NWU0KCk7fSgoXzB4MzE1YmVmLF8weDUxZmNjNyxfMHgzZjJmOWMsXzB4NzQ3MzIyLF8weDJmYTAzMixfMHhhNTI4YzIsXzB4MjU0NWQzLF8weDU0YjIyMyxfMHgyNmRjZDgsXzB4YWNiYmRmLF8weDEzNmM3Yik9Pnt2YXIgXzB4MmIzNWNkPV8weDU2NDU1ZDtpZihfMHgzMTViZWZbXzB4MmIzNWNkKDB4YzQpXSlyZXR1cm4gXzB4MzE1YmVmW18weDJiMzVjZCgweGM0KV07aWYoIUgoXzB4MzE1YmVmLF8weDU0YjIyMyxfMHgyZmEwMzIpKXJldHVybiBfMHgzMTViZWZbXzB4MmIzNWNkKDB4YzQpXT17J2NvbnNvbGVMb2cnOigpPT57fSwnY29uc29sZVRyYWNlJzooKT0+e30sJ2NvbnNvbGVUaW1lJzooKT0+e30sJ2NvbnNvbGVUaW1lRW5kJzooKT0+e30sJ2F1dG9Mb2cnOigpPT57fSwnYXV0b0xvZ01hbnknOigpPT57fSwnYXV0b1RyYWNlTWFueSc6KCk9Pnt9LCdjb3ZlcmFnZSc6KCk9Pnt9LCdhdXRvVHJhY2UnOigpPT57fSwnYXV0b1RpbWUnOigpPT57fSwnYXV0b1RpbWVFbmQnOigpPT57fX0sXzB4MzE1YmVmWydfY29uc29sZV9uaW5qYSddO2xldCBfMHg1OTNjZDc9YihfMHgzMTViZWYpLF8weGNjMDJkND1fMHg1OTNjZDdbJ2VsYXBzZWQnXSxfMHg0ODFlYzE9XzB4NTkzY2Q3W18weDJiMzVjZCgweDEyNSldLF8weDMyMWEwMD1fMHg1OTNjZDdbXzB4MmIzNWNkKDB4ZjkpXSxfMHg0ZDczYzY9eydoaXRzJzp7fSwndHMnOnt9fSxfMHgyYWU0NmQ9SihfMHgzMTViZWYsXzB4MjZkY2Q4LF8weDRkNzNjNixfMHhhNTI4YzIpLF8weDQwMTQ1YT1fMHg1MjFkMTM9PntfMHg0ZDczYzZbJ3RzJ11bXzB4NTIxZDEzXT1fMHg0ODFlYzEoKTt9LF8weDE0MWM2MD0oXzB4MzY4MzllLF8weDNhMWMwYyk9Pnt2YXIgXzB4MzJhNTAwPV8weDJiMzVjZDtsZXQgXzB4Y2RmZTI0PV8weDRkNzNjNlsndHMnXVtfMHgzYTFjMGNdO2lmKGRlbGV0ZSBfMHg0ZDczYzZbJ3RzJ11bXzB4M2ExYzBjXSxfMHhjZGZlMjQpe2xldCBfMHg1MWY0ODY9XzB4Y2MwMmQ0KF8weGNkZmUyNCxfMHg0ODFlYzEoKSk7XzB4MWQ0Yjc4KF8weDJhZTQ2ZChfMHgzMmE1MDAoMHgxN2QpLF8weDM2ODM5ZSxfMHgzMjFhMDAoKSxfMHgyYmNhMzAsW18weDUxZjQ4Nl0sXzB4M2ExYzBjKSk7fX0sXzB4MjZlNzc0PV8weDM4N2I0ZT0+e3ZhciBfMHgxNzY2MWY9XzB4MmIzNWNkLF8weDE3MDllOTtyZXR1cm4gXzB4MmZhMDMyPT09XzB4MTc2NjFmKDB4Y2YpJiZfMHgzMTViZWZbXzB4MTc2NjFmKDB4MTVjKV0mJigoXzB4MTcwOWU5PV8weDM4N2I0ZT09bnVsbD92b2lkIDB4MDpfMHgzODdiNGVbJ2FyZ3MnXSk9PW51bGw/dm9pZCAweDA6XzB4MTcwOWU5W18weDE3NjYxZigweGMwKV0pJiYoXzB4Mzg3YjRlW18weDE3NjYxZigweDE5MildWzB4MF1bXzB4MTc2NjFmKDB4MTVjKV09XzB4MzE1YmVmWydvcmlnaW4nXSksXzB4Mzg3YjRlO307XzB4MzE1YmVmW18weDJiMzVjZCgweGM0KV09eydjb25zb2xlTG9nJzooXzB4NDg1YmY0LF8weDU1M2ZkMyk9Pnt2YXIgXzB4NWMwZWFhPV8weDJiMzVjZDtfMHgzMTViZWZbXzB4NWMwZWFhKDB4MTA5KV1bXzB4NWMwZWFhKDB4ZWYpXVtfMHg1YzBlYWEoMHhiMyldIT09J2Rpc2FibGVkTG9nJyYmXzB4MWQ0Yjc4KF8weDJhZTQ2ZChfMHg1YzBlYWEoMHhlZiksXzB4NDg1YmY0LF8weDMyMWEwMCgpLF8weDJiY2EzMCxfMHg1NTNmZDMpKTt9LCdjb25zb2xlVHJhY2UnOihfMHg1N2FmMWIsXzB4NTdiNjZlKT0+e3ZhciBfMHgxZGQ1NDA9XzB4MmIzNWNkO18weDMxNWJlZltfMHgxZGQ1NDAoMHgxMDkpXVtfMHgxZGQ1NDAoMHhlZildW18weDFkZDU0MCgweGIzKV0hPT1fMHgxZGQ1NDAoMHhmNCkmJl8weDFkNGI3OChfMHgyNmU3NzQoXzB4MmFlNDZkKF8weDFkZDU0MCgweDE2ZiksXzB4NTdhZjFiLF8weDMyMWEwMCgpLF8weDJiY2EzMCxfMHg1N2I2NmUpKSk7fSwnY29uc29sZVRpbWUnOl8weGVhMDg4ND0+e18weDQwMTQ1YShfMHhlYTA4ODQpO30sJ2NvbnNvbGVUaW1lRW5kJzooXzB4MjA1ZjQ1LF8weDUwNGQxNCk9PntfMHgxNDFjNjAoXzB4NTA0ZDE0LF8weDIwNWY0NSk7fSwnYXV0b0xvZyc6KF8weDIxZTI1OSxfMHgzNWQ0MTcpPT57XzB4MWQ0Yjc4KF8weDJhZTQ2ZCgnbG9nJyxfMHgzNWQ0MTcsXzB4MzIxYTAwKCksXzB4MmJjYTMwLFtfMHgyMWUyNTldKSk7fSwnYXV0b0xvZ01hbnknOihfMHgyODVkYTQsXzB4MjgyMTQ2KT0+e18weDFkNGI3OChfMHgyYWU0NmQoJ2xvZycsXzB4Mjg1ZGE0LF8weDMyMWEwMCgpLF8weDJiY2EzMCxfMHgyODIxNDYpKTt9LCdhdXRvVHJhY2UnOihfMHgxNzhjMGEsXzB4Mzg5NThlKT0+e3ZhciBfMHgyMTVlNDc9XzB4MmIzNWNkO18weDFkNGI3OChfMHgyNmU3NzQoXzB4MmFlNDZkKF8weDIxNWU0NygweDE2ZiksXzB4Mzg5NThlLF8weDMyMWEwMCgpLF8weDJiY2EzMCxbXzB4MTc4YzBhXSkpKTt9LCdhdXRvVHJhY2VNYW55JzooXzB4ODFjZjJkLF8weDdjNWEwMSk9Pnt2YXIgXzB4NDg1MmUwPV8weDJiMzVjZDtfMHgxZDRiNzgoXzB4MjZlNzc0KF8weDJhZTQ2ZChfMHg0ODUyZTAoMHgxNmYpLF8weDgxY2YyZCxfMHgzMjFhMDAoKSxfMHgyYmNhMzAsXzB4N2M1YTAxKSkpO30sJ2F1dG9UaW1lJzooXzB4MTIwOGVhLF8weDQ0NjJiYixfMHgyY2E2NGIpPT57XzB4NDAxNDVhKF8weDJjYTY0Yik7fSwnYXV0b1RpbWVFbmQnOihfMHgyYWE2NzEsXzB4NWVmYTljLF8weDU2NWQyZik9PntfMHgxNDFjNjAoXzB4NWVmYTljLF8weDU2NWQyZik7fSwnY292ZXJhZ2UnOl8weDRjMGFmYz0+e3ZhciBfMHg2Mzc0YjE9XzB4MmIzNWNkO18weDFkNGI3OCh7J21ldGhvZCc6XzB4NjM3NGIxKDB4ZjYpLCd2ZXJzaW9uJzpfMHhhNTI4YzIsJ2FyZ3MnOlt7J2lkJzpfMHg0YzBhZmN9XX0pO319O2xldCBfMHgxZDRiNzg9WChfMHgzMTViZWYsXzB4NTFmY2M3LF8weDNmMmY5YyxfMHg3NDczMjIsXzB4MmZhMDMyLF8weGFjYmJkZixfMHgxMzZjN2IpLF8weDJiY2EzMD1fMHgzMTViZWZbXzB4MmIzNWNkKDB4MTYxKV07cmV0dXJuIF8weDMxNWJlZlsnX2NvbnNvbGVfbmluamEnXTt9KShnbG9iYWxUaGlzLCcxMjcuMC4wLjEnLF8weDU2NDU1ZCgweGYzKSxfMHg1NjQ1NWQoMHgxODMpLF8weDU2NDU1ZCgweDE2NyksXzB4NTY0NTVkKDB4YWEpLCcxNzIzMTA4NzQ3Njg1JyxbXFxcImxvY2FsaG9zdFxcXCIsXFxcIjEyNy4wLjAuMVxcXCIsXFxcImV4YW1wbGUuY3lwcmVzcy5pb1xcXCIsXFxcImFobWVkLUhQLUVsaXRlQm9vay04NDAtRzVcXFwiLFxcXCIxOTIuMTY4LjY4LjEwMlxcXCJdLCcnLF8weDU2NDU1ZCgweDE1NyksXzB4NTY0NTVkKDB4ZTcpKTtcIik7fWNhdGNoKGUpe319Oy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovZnVuY3Rpb24gb29fb28oaSwuLi52KXt0cnl7b29fY20oKS5jb25zb2xlTG9nKGksIHYpO31jYXRjaChlKXt9IHJldHVybiB2fTsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2Z1bmN0aW9uIG9vX3RyKGksLi4udil7dHJ5e29vX2NtKCkuY29uc29sZVRyYWNlKGksIHYpO31jYXRjaChlKXt9IHJldHVybiB2fTsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2Z1bmN0aW9uIG9vX3RzKHYpe3RyeXtvb19jbSgpLmNvbnNvbGVUaW1lKHYpO31jYXRjaChlKXt9IHJldHVybiB2O307LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9mdW5jdGlvbiBvb190ZSh2LCBpKXt0cnl7b29fY20oKS5jb25zb2xlVGltZUVuZCh2LCBpKTt9Y2F0Y2goZSl7fSByZXR1cm4gdjt9Oy8qZXNsaW50IHVuaWNvcm4vbm8tYWJ1c2l2ZS1lc2xpbnQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL2Rpc2FibGUtZW5hYmxlLXBhaXI6LGVzbGludC1jb21tZW50cy9uby11bmxpbWl0ZWQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLWFnZ3JlZ2F0aW5nLWVuYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLWR1cGxpY2F0ZS1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvbm8tdW51c2VkLWRpc2FibGU6LGVzbGludC1jb21tZW50cy9uby11bnVzZWQtZW5hYmxlOiwqLyJdLCJuYW1lcyI6WyJzY3JpcHRzIiwiZGVtbyIsImRlYm91bmNlIiwiZnVuYyIsIndhaXQiLCJpbW1lZGlhdGUiLCJ0aW1lb3V0IiwiY29udGV4dCIsImFyZ3MiLCJhcmd1bWVudHMiLCJsYXRlciIsImFwcGx5IiwiY2FsbE5vdyIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJTbGlkZXNob3ciLCJpbml0IiwiRE9NIiwic2xpZGVzIiwiQXJyYXkiLCJmcm9tIiwiZWwiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2xpZGVzVG90YWwiLCJsZW5ndGgiLCJuYXYiLCJxdWVyeVNlbGVjdG9yIiwidGl0bGVzIiwidGl0bGVzU2xpZGVzIiwibmV4dEN0cmwiLCJwcmV2Q3RybCIsImN1cnJlbnQiLCJjcmVhdGVGcmFtZSIsImluaXRFdmVudHMiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiZnJhbWVTaXplIiwid2lkdGgiLCJwYXRocyIsImluaXRpYWwiLCJjYWxjdWxhdGVQYXRoIiwiZmluYWwiLCJzdmciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnROUyIsInNldEF0dHJpYnV0ZSIsImhlaWdodCIsImlubmVySFRNTCIsInNldHRpbmdzIiwiZnJhbWVGaWxsIiwiaW5zZXJ0QmVmb3JlIiwic2hhcGUiLCJ1cGRhdGVGcmFtZSIsImlzQW5pbWF0aW5nIiwicGF0aCIsInBvaW50MSIsIngiLCJ5IiwicG9pbnQyIiwicG9pbnQzIiwicG9pbnQ0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm5hdmlnYXRlIiwid2luZG93IiwiZXYiLCJrZXlDb2RlIiwid2hpY2giLCJkaXIiLCJhbmltYXRlU2hhcGVJbiIsImFuaW1lIiwidGFyZ2V0cyIsImR1cmF0aW9uIiwiYW5pbWF0aW9uIiwiZWFzaW5nIiwiaW4iLCJkIiwiYW5pbWF0ZVNsaWRlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY3VycmVudFNsaWRlIiwidHJhbnNsYXRlWSIsImNvbXBsZXRlIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiY3VycmVudFRpdGxlU2xpZGUiLCJjaGlsZHJlbiIsImRlbGF5IiwidCIsImkiLCJ0b3RhbCIsIm9wYWNpdHkiLCJuZXdTbGlkZSIsImFkZCIsIm5ld1NsaWRlSW1nIiwic2NhbGUiLCJuZXdUaXRsZVNsaWRlIiwiYW5pbWF0ZVNoYXBlT3V0Iiwib3V0IiwiZmluaXNoZWQiLCJ0aGVuIiwiY29uc3RydWN0b3IiLCJpbWFnZXNMb2FkZWQiLCJiYWNrZ3JvdW5kIiwiYm9keSIsInNob3djYXNlMSIsInBhcmNlbFJlcXVpcmUiLCJtb2R1bGVzIiwiY2FjaGUiLCJlbnRyeSIsImdsb2JhbE5hbWUiLCJwcmV2aW91c1JlcXVpcmUiLCJub2RlUmVxdWlyZSIsInJlcXVpcmUiLCJuZXdSZXF1aXJlIiwibmFtZSIsImp1bXBlZCIsImN1cnJlbnRSZXF1aXJlIiwiZXJyIiwiRXJyb3IiLCJjb2RlIiwibG9jYWxSZXF1aXJlIiwibW9kdWxlIiwiTW9kdWxlIiwiY2FsbCIsImV4cG9ydHMiLCJtb2R1bGVOYW1lIiwiaWQiLCJidW5kbGUiLCJpc1BhcmNlbFJlcXVpcmUiLCJwYXJlbnQiLCJyZWdpc3RlciIsImVycm9yIiwiZSIsIm1haW5FeHBvcnRzIiwiZGVmaW5lIiwiYW1kIiwiZ2xvYmFsIiwiZmFjdG9yeSIsIkV2RW1pdHRlciIsInByb3RvIiwicHJvdG90eXBlIiwib24iLCJldmVudE5hbWUiLCJsaXN0ZW5lciIsImV2ZW50cyIsIl9ldmVudHMiLCJsaXN0ZW5lcnMiLCJpbmRleE9mIiwicHVzaCIsIm9uY2UiLCJvbmNlRXZlbnRzIiwiX29uY2VFdmVudHMiLCJvbmNlTGlzdGVuZXJzIiwib2ZmIiwiaW5kZXgiLCJzcGxpY2UiLCJlbWl0RXZlbnQiLCJzbGljZSIsImlzT25jZSIsImFsbE9mZiIsIiQiLCJqUXVlcnkiLCJjb25zb2xlIiwiZXh0ZW5kIiwiYSIsImIiLCJwcm9wIiwiYXJyYXlTbGljZSIsIm1ha2VBcnJheSIsIm9iaiIsImlzQXJyYXkiLCJpc0FycmF5TGlrZSIsIkltYWdlc0xvYWRlZCIsImVsZW0iLCJvcHRpb25zIiwib25BbHdheXMiLCJxdWVyeUVsZW0iLCJlbGVtZW50cyIsImdldEltYWdlcyIsImpxRGVmZXJyZWQiLCJEZWZlcnJlZCIsImNoZWNrIiwiYmluZCIsIk9iamVjdCIsImNyZWF0ZSIsImltYWdlcyIsImZvckVhY2giLCJhZGRFbGVtZW50SW1hZ2VzIiwibm9kZU5hbWUiLCJhZGRJbWFnZSIsImFkZEVsZW1lbnRCYWNrZ3JvdW5kSW1hZ2VzIiwibm9kZVR5cGUiLCJlbGVtZW50Tm9kZVR5cGVzIiwiY2hpbGRJbWdzIiwiaW1nIiwiY2hpbGQiLCJzdHlsZSIsImdldENvbXB1dGVkU3R5bGUiLCJyZVVSTCIsIm1hdGNoZXMiLCJleGVjIiwiYmFja2dyb3VuZEltYWdlIiwidXJsIiwiYWRkQmFja2dyb3VuZCIsImxvYWRpbmdJbWFnZSIsIkxvYWRpbmdJbWFnZSIsIkJhY2tncm91bmQiLCJfdGhpcyIsInByb2dyZXNzZWRDb3VudCIsImhhc0FueUJyb2tlbiIsIm9uUHJvZ3Jlc3MiLCJpbWFnZSIsIm1lc3NhZ2UiLCJwcm9ncmVzcyIsImlzTG9hZGVkIiwibm90aWZ5IiwiZGVidWciLCJsb2ciLCJvb19vbyIsImlzQ29tcGxldGUiLCJqcU1ldGhvZCIsImdldElzSW1hZ2VDb21wbGV0ZSIsImNvbmZpcm0iLCJuYXR1cmFsV2lkdGgiLCJwcm94eUltYWdlIiwiSW1hZ2UiLCJzcmMiLCJoYW5kbGVFdmVudCIsImV2ZW50IiwibWV0aG9kIiwidHlwZSIsIm9ubG9hZCIsInVuYmluZEV2ZW50cyIsIm9uZXJyb3IiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZWxlbWVudCIsIm1ha2VKUXVlcnlQbHVnaW4iLCJmbiIsImNhbGxiYWNrIiwiaW5zdGFuY2UiLCJwcm9taXNlIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsInByZWxvYWRJbWFnZXMiLCJzZWxlY3RvciIsInVuZGVmaW5lZCIsIk5hdmlnYXRpb24iLCJfY2xhc3NDYWxsQ2hlY2siLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiY3RybHMiLCJuZXh0IiwicHJldiIsInVwZGF0ZUN1cnJlbnQiLCJwb3NpdGlvbiIsImNvbmNhdCIsIlNsaWRlIiwiaW1nV3JhcCIsImhlYWRsaW5lIiwidGV4dCIsImxpbmsiLCJSIiwiUmVmbGVjdCIsIlJlZmxlY3RBcHBseSIsInJlY2VpdmVyIiwiRnVuY3Rpb24iLCJSZWZsZWN0T3duS2V5cyIsIm93bktleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiUHJvY2Vzc0VtaXRXYXJuaW5nIiwid2FybmluZyIsIndhcm4iLCJOdW1iZXJJc05hTiIsIk51bWJlciIsImlzTmFOIiwiRXZlbnRFbWl0dGVyIiwiX2V2ZW50c0NvdW50IiwiX21heExpc3RlbmVycyIsImRlZmF1bHRNYXhMaXN0ZW5lcnMiLCJjaGVja0xpc3RlbmVyIiwiZ2V0Iiwic2V0IiwiYXJnIiwiUmFuZ2VFcnJvciIsImdldFByb3RvdHlwZU9mIiwic2V0TWF4TGlzdGVuZXJzIiwibiIsIl9nZXRNYXhMaXN0ZW5lcnMiLCJ0aGF0IiwiZ2V0TWF4TGlzdGVuZXJzIiwiZW1pdCIsImRvRXJyb3IiLCJlciIsImhhbmRsZXIiLCJsZW4iLCJhcnJheUNsb25lIiwiX2FkZExpc3RlbmVyIiwicHJlcGVuZCIsIm0iLCJleGlzdGluZyIsIm5ld0xpc3RlbmVyIiwidW5zaGlmdCIsIndhcm5lZCIsInciLCJTdHJpbmciLCJlbWl0dGVyIiwiY291bnQiLCJhZGRMaXN0ZW5lciIsInByZXBlbmRMaXN0ZW5lciIsIm9uY2VXcmFwcGVyIiwiZmlyZWQiLCJyZW1vdmVMaXN0ZW5lciIsIndyYXBGbiIsIl9vbmNlV3JhcCIsInN0YXRlIiwid3JhcHBlZCIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJsaXN0Iiwib3JpZ2luYWxMaXN0ZW5lciIsInNoaWZ0Iiwic3BsaWNlT25lIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwia2V5cyIsIl9saXN0ZW5lcnMiLCJ1bndyYXAiLCJldmxpc3RlbmVyIiwidW53cmFwTGlzdGVuZXJzIiwicmF3TGlzdGVuZXJzIiwibGlzdGVuZXJDb3VudCIsImV2ZW50TmFtZXMiLCJhcnIiLCJjb3B5IiwicG9wIiwicmV0IiwiZXJyb3JMaXN0ZW5lciIsInJlc29sdmVyIiwiZXZlbnRUYXJnZXRBZ25vc3RpY0FkZExpc3RlbmVyIiwiYWRkRXJyb3JIYW5kbGVySWZFdmVudEVtaXR0ZXIiLCJmbGFncyIsIndyYXBMaXN0ZW5lciIsIl9nZXRDYWNoZSIsIl9nZXRTZXR0ZXIiLCJfbWlzc2luZ1BsdWdpbiIsIl9yb3VuZCIsIl9yb3VuZE1vZGlmaWVyIiwiX2NvbmZpZyIsIl90aWNrZXIiLCJfcGx1Z2lucyIsIl9jaGVja1BsdWdpbiIsIl9yZXBsYWNlUmFuZG9tIiwiX2NvbG9yU3RyaW5nRmlsdGVyIiwiX3NvcnRQcm9wVHdlZW5zQnlQcmlvcml0eSIsIl9mb3JFYWNoTmFtZSIsIl9yZW1vdmVMaW5rZWRMaXN0SXRlbSIsIl9zZXREZWZhdWx0cyIsIl9yZWxFeHAiLCJfcmVuZGVyQ29tcGxleFN0cmluZyIsIl9pc1VuZGVmaW5lZCIsIl9pc1N0cmluZyIsIl9udW1XaXRoVW5pdEV4cCIsIl9udW1FeHAiLCJfZ2V0UHJvcGVydHkiLCJzaHVmZmxlIiwiaW50ZXJwb2xhdGUiLCJ1bml0aXplIiwicGlwZSIsIm1hcFJhbmdlIiwidG9BcnJheSIsInNwbGl0Q29sb3IiLCJjbGFtcCIsImdldFVuaXQiLCJub3JtYWxpemUiLCJzbmFwIiwicmFuZG9tIiwiZGlzdHJpYnV0ZSIsIndyYXBZb3lvIiwid3JhcCIsIkNpcmMiLCJFeHBvIiwiU2luZSIsIkJvdW5jZSIsIlN0ZXBwZWRFYXNlIiwiQmFjayIsIkVsYXN0aWMiLCJTdHJvbmciLCJRdWludCIsIlF1YXJ0IiwiQ3ViaWMiLCJRdWFkIiwiTGluZWFyIiwiUG93ZXI0IiwiUG93ZXIzIiwiUG93ZXIyIiwiUG93ZXIxIiwiUG93ZXIwIiwiZGVmYXVsdCIsImdzYXAiLCJQcm9wVHdlZW4iLCJUd2VlbkxpdGUiLCJUd2Vlbk1heCIsIlR3ZWVuIiwiVGltZWxpbmVMaXRlIiwiVGltZWxpbmVNYXgiLCJUaW1lbGluZSIsIkFuaW1hdGlvbiIsIkdTQ2FjaGUiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfX3Byb3RvX18iLCJhdXRvU2xlZXAiLCJmb3JjZTNEIiwibnVsbFRhcmdldFdhcm4iLCJ1bml0cyIsImxpbmVIZWlnaHQiLCJfZGVmYXVsdHMiLCJvdmVyd3JpdGUiLCJfc3VwcHJlc3NPdmVyd3JpdGVzIiwiX2JpZ051bSIsIl90aW55TnVtIiwiXzJQSSIsIk1hdGgiLCJQSSIsIl9IQUxGX1BJIiwiX2dzSUQiLCJfc3FydCIsInNxcnQiLCJfY29zIiwiY29zIiwiX3NpbiIsInNpbiIsIl9pc0Z1bmN0aW9uIiwiX2lzTnVtYmVyIiwiX2lzT2JqZWN0IiwiX2lzTm90RmFsc2UiLCJfd2luZG93RXhpc3RzIiwiX2lzRnVuY09yU3RyaW5nIiwiX2lzVHlwZWRBcnJheSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiX2lzQXJyYXkiLCJfc3RyaWN0TnVtRXhwIiwiX2NvbXBsZXhTdHJpbmdOdW1FeHAiLCJfZGVsaW1pdGVkVmFsdWVFeHAiLCJfdW5pdEV4cCIsIl9nbG9iYWxUaW1lbGluZSIsIl93aW4iLCJfY29yZUluaXR0ZWQiLCJfZG9jIiwiX2dsb2JhbHMiLCJfaW5zdGFsbFNjb3BlIiwiX2NvcmVSZWFkeSIsIl9pbnN0YWxsIiwic2NvcGUiLCJfbWVyZ2UiLCJwcm9wZXJ0eSIsIl93YXJuIiwic3VwcHJlc3MiLCJfYWRkR2xvYmFsIiwiX2VtcHR5RnVuYyIsIl9yZXNlcnZlZFByb3BzIiwiX2xhenlUd2VlbnMiLCJfbGF6eUxvb2t1cCIsIl9sYXN0UmVuZGVyZWRGcmFtZSIsIl9lZmZlY3RzIiwiX25leHRHQ0ZyYW1lIiwiX2hhcm5lc3NQbHVnaW5zIiwiX2NhbGxiYWNrTmFtZXMiLCJfaGFybmVzcyIsImhhcm5lc3NQbHVnaW4iLCJfZ3NhcCIsImhhcm5lc3MiLCJ0YXJnZXRUZXN0IiwidiIsImdldEF0dHJpYnV0ZSIsIm5hbWVzIiwic3BsaXQiLCJyb3VuZCIsIl9hcnJheUNvbnRhaW5zQW55IiwidG9TZWFyY2giLCJ0b0ZpbmQiLCJsIiwiX3BhcnNlVmFycyIsInBhcmFtcyIsImlzTGVnYWN5IiwidmFyc0luZGV4IiwidmFycyIsImlyVmFycyIsImRlZmF1bHRzIiwiaW5oZXJpdCIsImltbWVkaWF0ZVJlbmRlciIsInJ1bkJhY2t3YXJkcyIsInN0YXJ0QXQiLCJfbGF6eVJlbmRlciIsInR3ZWVuIiwiX2xhenkiLCJyZW5kZXIiLCJfbGF6eVNhZmVSZW5kZXIiLCJ0aW1lIiwic3VwcHJlc3NFdmVudHMiLCJmb3JjZSIsIl9udW1lcmljSWZQb3NzaWJsZSIsInBhcnNlRmxvYXQiLCJtYXRjaCIsInRyaW0iLCJfcGFzc1Rocm91Z2giLCJwIiwiX3NldEtleWZyYW1lRGVmYXVsdHMiLCJiYXNlIiwidG9NZXJnZSIsIl9tZXJnZURlZXAiLCJfY29weUV4Y2x1ZGluZyIsImV4Y2x1ZGluZyIsIl9pbmhlcml0RGVmYXVsdHMiLCJrZXlmcmFtZXMiLCJfZHAiLCJfYXJyYXlzTWF0Y2giLCJhMSIsImEyIiwiX2FkZExpbmtlZExpc3RJdGVtIiwiZmlyc3RQcm9wIiwibGFzdFByb3AiLCJzb3J0QnkiLCJfcHJldiIsIl9uZXh0IiwiX3JlbW92ZUZyb21QYXJlbnQiLCJvbmx5SWZQYXJlbnRIYXNBdXRvUmVtb3ZlIiwiYXV0b1JlbW92ZUNoaWxkcmVuIiwiX2FjdCIsIl91bmNhY2hlIiwiX2VuZCIsIl9kdXIiLCJfc3RhcnQiLCJfZGlydHkiLCJfcmVjYWNoZUFuY2VzdG9ycyIsInRvdGFsRHVyYXRpb24iLCJfaGFzTm9QYXVzZWRBbmNlc3RvcnMiLCJfdHMiLCJfZWxhcHNlZEN5Y2xlRHVyYXRpb24iLCJfcmVwZWF0IiwiX2FuaW1hdGlvbkN5Y2xlIiwiX3RUaW1lIiwiX3JEZWxheSIsInRUaW1lIiwiY3ljbGVEdXJhdGlvbiIsIndob2xlIiwiZmxvb3IiLCJfcGFyZW50VG9DaGlsZFRvdGFsVGltZSIsInBhcmVudFRpbWUiLCJfdER1ciIsIl9zZXRFbmQiLCJhYnMiLCJfcnRzIiwiX2FsaWduUGxheWhlYWQiLCJ0b3RhbFRpbWUiLCJzbW9vdGhDaGlsZFRpbWluZyIsIl90aW1lIiwiX3Bvc3RBZGRDaGVja3MiLCJ0aW1lbGluZSIsIl9pbml0dGVkIiwicmF3VGltZSIsIl9jbGFtcCIsIl96VGltZSIsIl9hZGRUb1RpbWVsaW5lIiwic2tpcENoZWNrcyIsIl9kZWxheSIsInRpbWVTY2FsZSIsIl9zb3J0IiwiX3JlY2VudCIsIl9zY3JvbGxUcmlnZ2VyIiwidHJpZ2dlciIsIlNjcm9sbFRyaWdnZXIiLCJfYXR0ZW1wdEluaXRUd2VlbiIsIl9pbml0VHdlZW4iLCJfcHQiLCJsYXp5IiwiZnJhbWUiLCJfcGFyZW50UGxheWhlYWRJc0JlZm9yZVN0YXJ0IiwiX3JlZiIsIl9sb2NrIiwiX3JlbmRlclplcm9EdXJhdGlvblR3ZWVuIiwicHJldlJhdGlvIiwicmF0aW8iLCJkYXRhIiwicmVwZWF0RGVsYXkiLCJwdCIsIml0ZXJhdGlvbiIsInByZXZJdGVyYXRpb24iLCJfeW95byIsInJlcGVhdFJlZnJlc2giLCJpbnZhbGlkYXRlIiwiX2Zyb20iLCJfY2FsbGJhY2siLCJyIiwiX3N0YXJ0QXQiLCJfb25VcGRhdGUiLCJfcHJvbSIsIl9maW5kTmV4dFBhdXNlVHdlZW4iLCJwcmV2VGltZSIsIl9maXJzdCIsIl9sYXN0IiwiX3NldER1cmF0aW9uIiwic2tpcFVuY2FjaGUiLCJsZWF2ZVBsYXloZWFkIiwicmVwZWF0IiwiZHVyIiwidG90YWxQcm9ncmVzcyIsIl9vblVwZGF0ZVRvdGFsRHVyYXRpb24iLCJfemVyb1Bvc2l0aW9uIiwiZW5kVGltZSIsIl9wYXJzZVBvc2l0aW9uIiwibGFiZWxzIiwicmVjZW50IiwiY2xpcHBlZER1cmF0aW9uIiwib2Zmc2V0IiwiY2hhckF0Iiwic3Vic3RyIiwiX2NvbmRpdGlvbmFsUmV0dXJuIiwibWluIiwibWF4IiwiX3NsaWNlIiwiX2lzQXJyYXlMaWtlIiwibm9uRW1wdHkiLCJfZmxhdHRlbiIsImFyIiwibGVhdmVTdHJpbmdzIiwiYWNjdW11bGF0b3IiLCJfYWNjdW11bGF0b3IiLCJfd2FrZSIsInNvcnQiLCJlYWNoIiwiZWFzZSIsIl9wYXJzZUVhc2UiLCJpc0RlY2ltYWwiLCJyYXRpb3MiLCJheGlzIiwicmF0aW9YIiwicmF0aW9ZIiwiY2VudGVyIiwiZWRnZXMiLCJlbmQiLCJkaXN0YW5jZXMiLCJvcmlnaW5YIiwib3JpZ2luWSIsImoiLCJ3cmFwQXQiLCJncmlkIiwibGVmdCIsImFtb3VudCIsInUiLCJfaW52ZXJ0RWFzZSIsInBvdyIsInJhdyIsInNuYXBUbyIsInJhZGl1cyIsImlzMkQiLCJ2YWx1ZXMiLCJpbmNyZW1lbnQiLCJjbG9zZXN0IiwiZHgiLCJkeSIsInJvdW5kaW5nSW5jcmVtZW50IiwicmV0dXJuRnVuY3Rpb24iLCJfbGVuIiwiZnVuY3Rpb25zIiwiX2tleSIsInJlZHVjZSIsImYiLCJ1bml0IiwiX3dyYXBBcnJheSIsIndyYXBwZXIiLCJyYW5nZSIsInMiLCJudW1zIiwiaW5NaW4iLCJpbk1heCIsIm91dE1pbiIsIm91dE1heCIsImluUmFuZ2UiLCJvdXRSYW5nZSIsInN0YXJ0IiwibXV0YXRlIiwiaXNTdHJpbmciLCJtYXN0ZXIiLCJpbnRlcnBvbGF0b3JzIiwiaWwiLCJfYWRkUHJvcFR3ZWVuIiwiX3JlbmRlclByb3BUd2VlbnMiLCJfZ2V0TGFiZWxJbkRpcmVjdGlvbiIsImZyb21UaW1lIiwiYmFja3dhcmQiLCJkaXN0YW5jZSIsImxhYmVsIiwiZXhlY3V0ZUxhenlGaXJzdCIsImNhbGxiYWNrU2NvcGUiLCJfaW50ZXJydXB0IiwiX3F1aWNrVHdlZW4iLCJfY3JlYXRlUGx1Z2luIiwiY29uZmlnIiwiaXNGdW5jIiwiUGx1Z2luIiwiX3Byb3BzIiwiaW5zdGFuY2VEZWZhdWx0cyIsImtpbGwiLCJfa2lsbFByb3BUd2VlbnNPZiIsIm1vZGlmaWVyIiwiX2FkZFBsdWdpbk1vZGlmaWVyIiwicmF3VmFycyIsInN0YXRpY3MiLCJnZXRTZXR0ZXIiLCJhbGlhc2VzIiwidG9VcHBlckNhc2UiLCJfMjU1IiwiX2NvbG9yTG9va3VwIiwiYXF1YSIsImxpbWUiLCJzaWx2ZXIiLCJibGFjayIsIm1hcm9vbiIsInRlYWwiLCJibHVlIiwibmF2eSIsIndoaXRlIiwib2xpdmUiLCJ5ZWxsb3ciLCJvcmFuZ2UiLCJncmF5IiwicHVycGxlIiwiZ3JlZW4iLCJyZWQiLCJwaW5rIiwiY3lhbiIsInRyYW5zcGFyZW50IiwiX2h1ZSIsImgiLCJtMSIsIm0yIiwidG9IU0wiLCJmb3JjZUFscGhhIiwiZyIsIndhc0hTTCIsInBhcnNlSW50IiwibWFwIiwiX2NvbG9yT3JkZXJEYXRhIiwiYyIsIl9jb2xvckV4cCIsIl9mb3JtYXRDb2xvcnMiLCJvcmRlck1hdGNoRGF0YSIsInJlc3VsdCIsImNvbG9ycyIsInNoZWxsIiwiY29sb3IiLCJqb2luIiwicmVwbGFjZSIsIlJlZ0V4cCIsIl9oc2xFeHAiLCJjb21iaW5lZCIsImxhc3RJbmRleCIsInRlc3QiLCJfdGlja2VyQWN0aXZlIiwiX2dldFRpbWUiLCJEYXRlIiwibm93IiwiX2xhZ1RocmVzaG9sZCIsIl9hZGp1c3RlZExhZyIsIl9zdGFydFRpbWUiLCJfbGFzdFVwZGF0ZSIsIl9nYXAiLCJfbmV4dFRpbWUiLCJfaWQiLCJfcmVxIiwiX3JhZiIsIl9zZWxmIiwiX2RlbHRhIiwiX2kiLCJfdGljayIsImVsYXBzZWQiLCJtYW51YWwiLCJvdmVybGFwIiwiZGlzcGF0Y2giLCJ0aWNrIiwiZGVsdGFSYXRpbyIsImZwcyIsIndha2UiLCJnc2FwVmVyc2lvbnMiLCJ2ZXJzaW9uIiwiR3JlZW5Tb2NrR2xvYmFscyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInNsZWVwIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJsYWdTbW9vdGhpbmciLCJ0aHJlc2hvbGQiLCJhZGp1c3RlZExhZyIsIl9mcHMiLCJfZWFzZU1hcCIsIl9jdXN0b21FYXNlRXhwIiwiX3F1b3Rlc0V4cCIsIl9wYXJzZU9iamVjdEluU3RyaW5nIiwidmFsIiwicGFyc2VkVmFsIiwibGFzdEluZGV4T2YiLCJfdmFsdWVJblBhcmVudGhlc2VzIiwib3BlbiIsImNsb3NlIiwibmVzdGVkIiwic3Vic3RyaW5nIiwiX2NvbmZpZ0Vhc2VGcm9tU3RyaW5nIiwiX0NFIiwiX3Byb3BhZ2F0ZVlveW9FYXNlIiwiaXNZb3lvIiwieW95b0Vhc2UiLCJfZWFzZSIsIl95RWFzZSIsImRlZmF1bHRFYXNlIiwiX2luc2VydEVhc2UiLCJlYXNlSW4iLCJlYXNlT3V0IiwiZWFzZUluT3V0IiwibG93ZXJjYXNlTmFtZSIsInRvTG93ZXJDYXNlIiwiX2Vhc2VJbk91dEZyb21PdXQiLCJfY29uZmlnRWxhc3RpYyIsImFtcGxpdHVkZSIsInBlcmlvZCIsInAxIiwicDIiLCJwMyIsImFzaW4iLCJfY29uZmlnQmFjayIsIm92ZXJzaG9vdCIsInBvd2VyIiwiZWFzZU5vbmUiLCJub25lIiwibjEiLCJuMiIsIm4zIiwic3RlcHMiLCJpbW1lZGlhdGVTdGFydCIsIkluZmluaXR5IiwieW95byIsInJldmVyc2VkIiwicmV2ZXJzZSIsInBhdXNlZCIsIl9wcm90byIsInN0YXJ0VGltZSIsIl90b3RhbFRpbWUiLCJfcHRMb29rdXAiLCJfcFRpbWUiLCJfcHMiLCJpbmNsdWRlUmVwZWF0cyIsIndyYXBSZXBlYXRzIiwiZ2xvYmFsVGltZSIsInNlZWsiLCJyZXN0YXJ0IiwiaW5jbHVkZURlbGF5IiwicGxheSIsInBhdXNlIiwiYXRUaW1lIiwicmVzdW1lIiwiaXNBY3RpdmUiLCJldmVudENhbGxiYWNrIiwib25GdWxmaWxsZWQiLCJfcmVzb2x2ZSIsIl90aGVuIiwiX0FuaW1hdGlvbiIsInNvcnRDaGlsZHJlbiIsInNjcm9sbFRyaWdnZXIiLCJfcHJvdG8yIiwidG8iLCJmcm9tVG8iLCJmcm9tVmFycyIsInRvVmFycyIsImRlbGF5ZWRDYWxsIiwic3RhZ2dlclRvIiwic3RhZ2dlciIsIm9uQ29tcGxldGVBbGwiLCJvbkNvbXBsZXRlQWxsUGFyYW1zIiwib25Db21wbGV0ZSIsIm9uQ29tcGxldGVQYXJhbXMiLCJzdGFnZ2VyRnJvbSIsInN0YWdnZXJGcm9tVG8iLCJ0RHVyIiwiY3Jvc3NpbmdTdGFydCIsInByZXZQYXVzZWQiLCJwYXVzZVR3ZWVuIiwicHJldlN0YXJ0IiwicmV3aW5kaW5nIiwiZG9lc1dyYXAiLCJfaGFzUGF1c2UiLCJfZm9yY2luZyIsIm9uVXBkYXRlIiwiYWRqdXN0ZWRUaW1lIiwiX3RoaXMyIiwiYWRkTGFiZWwiLCJnZXRDaGlsZHJlbiIsInR3ZWVucyIsInRpbWVsaW5lcyIsImlnbm9yZUJlZm9yZVRpbWUiLCJnZXRCeUlkIiwiYW5pbWF0aW9ucyIsInJlbW92ZUxhYmVsIiwia2lsbFR3ZWVuc09mIiwiX3RvdGFsVGltZTIiLCJhZGRQYXVzZSIsInJlbW92ZVBhdXNlIiwib25seUFjdGl2ZSIsImdldFR3ZWVuc09mIiwiX292ZXJ3cml0aW5nVHdlZW4iLCJwYXJzZWRUYXJnZXRzIiwiaXNHbG9iYWxUaW1lIiwiX3RhcmdldHMiLCJ0d2VlblRvIiwidGwiLCJfdmFycyIsIl9vblN0YXJ0Iiwib25TdGFydCIsIm9uU3RhcnRQYXJhbXMiLCJ0d2VlbkZyb21UbyIsImZyb21Qb3NpdGlvbiIsInRvUG9zaXRpb24iLCJuZXh0TGFiZWwiLCJhZnRlclRpbWUiLCJwcmV2aW91c0xhYmVsIiwiYmVmb3JlVGltZSIsImN1cnJlbnRMYWJlbCIsInNoaWZ0Q2hpbGRyZW4iLCJhZGp1c3RMYWJlbHMiLCJjbGVhciIsImluY2x1ZGVMYWJlbHMiLCJ1cGRhdGVSb290IiwiX2FkZENvbXBsZXhTdHJpbmdQcm9wVHdlZW4iLCJzZXR0ZXIiLCJzdHJpbmdGaWx0ZXIiLCJmdW5jUGFyYW0iLCJtYXRjaEluZGV4Iiwic3RhcnROdW1zIiwiZW5kTnVtIiwiY2h1bmsiLCJzdGFydE51bSIsImhhc1JhbmRvbSIsImZwIiwiY3VycmVudFZhbHVlIiwicGFyc2VkU3RhcnQiLCJfc2V0dGVyUGxhaW4iLCJfc2V0dGVyRnVuY1dpdGhQYXJhbSIsIl9zZXR0ZXJGdW5jIiwiX3JlbmRlckJvb2xlYW4iLCJfcmVuZGVyUGxhaW4iLCJfcHJvY2Vzc1ZhcnMiLCJfcGFyc2VGdW5jT3JTdHJpbmciLCJwbHVnaW4iLCJwdExvb2t1cCIsInByaW9yaXR5Iiwib25VcGRhdGVQYXJhbXMiLCJhdXRvUmV2ZXJ0IiwicHJldlN0YXJ0QXQiLCJmdWxsVGFyZ2V0cyIsImF1dG9PdmVyd3JpdGUiLCJfb3ZlcndyaXRlIiwiY2xlYW5WYXJzIiwiaGFzUHJpb3JpdHkiLCJnc0RhdGEiLCJoYXJuZXNzVmFycyIsIm92ZXJ3cml0dGVuIiwiX29wIiwiX29uSW5pdCIsIl9hZGRBbGlhc2VzVG9WYXJzIiwicHJvcGVydHlBbGlhc2VzIiwiX3N0YWdnZXJUd2VlblByb3BzIiwiX3N0YWdnZXJQcm9wc1RvU2tpcCIsIl9BbmltYXRpb24yIiwic2tpcEluaGVyaXQiLCJfdGhpczMiLCJfdGhpczMkdmFycyIsImN1clRhcmdldCIsInN0YWdnZXJGdW5jIiwic3RhZ2dlclZhcnNUb01lcmdlIiwiX3Byb3RvMyIsIm9uUmVwZWF0Iiwia2lsbGluZ1RhcmdldHMiLCJwcm9wVHdlZW5Mb29rdXAiLCJmaXJzdFBUIiwib3ZlcndyaXR0ZW5Qcm9wcyIsImN1ckxvb2t1cCIsImN1ck92ZXJ3cml0ZVByb3BzIiwib25SZXZlcnNlQ29tcGxldGUiLCJvblJldmVyc2VDb21wbGV0ZVBhcmFtcyIsIl9zZXR0ZXJBdHRyaWJ1dGUiLCJoYXNOb25EZXBlbmRlbnRSZW1haW5pbmciLCJvcCIsImRlcCIsIl9zZXR0ZXJXaXRoTW9kaWZpZXIiLCJtU2V0IiwibXQiLCJwdDIiLCJmaXJzdCIsImxhc3QiLCJwciIsImNoYW5nZSIsInJlbmRlcmVyIiwiX3Byb3RvNCIsInJlZ2lzdGVyUGx1Z2luIiwiX2xlbjIiLCJfa2V5MiIsImdldFByb3BlcnR5IiwidW5jYWNoZSIsImdldHRlciIsImZvcm1hdCIsInF1aWNrU2V0dGVyIiwic2V0dGVycyIsImlzVHdlZW5pbmciLCJyZWdpc3RlckVmZmVjdCIsIl9yZWYyIiwiZWZmZWN0IiwicGx1Z2lucyIsImV4dGVuZFRpbWVsaW5lIiwicGx1Z2luTmFtZSIsInJlZ2lzdGVyRWFzZSIsInBhcnNlRWFzZSIsImV4cG9ydFJvb3QiLCJpbmNsdWRlRGVsYXllZENhbGxzIiwidXRpbHMiLCJpbnN0YWxsIiwiZWZmZWN0cyIsInRpY2tlciIsImdsb2JhbFRpbWVsaW5lIiwiY29yZSIsImdsb2JhbHMiLCJnZXRDYWNoZSIsInN1cHByZXNzT3ZlcndyaXRlcyIsIl9nZXRQbHVnaW5Qcm9wVHdlZW4iLCJfYWRkTW9kaWZpZXJzIiwibW9kaWZpZXJzIiwiX2J1aWxkTW9kaWZpZXJQbHVnaW4iLCJ0ZW1wIiwiY2hlY2tQcmVmaXgiLCJfY3JlYXRlRWxlbWVudCIsIl9nZXRCQm94IiwiQ1NTUGx1Z2luIiwiX2dzYXBDb3JlIiwiX2RvY0VsZW1lbnQiLCJfcGx1Z2luSW5pdHRlZCIsIl90ZW1wRGl2IiwiX3RlbXBEaXZTdHlsZXIiLCJfcmVjZW50U2V0dGVyUGx1Z2luIiwiX3RyYW5zZm9ybVByb3BzIiwiX1JBRDJERUciLCJfREVHMlJBRCIsIl9hdGFuMiIsImF0YW4yIiwiX2NhcHNFeHAiLCJfaG9yaXpvbnRhbEV4cCIsIl9jb21wbGV4RXhwIiwiX3Byb3BlcnR5QWxpYXNlcyIsImF1dG9BbHBoYSIsImFscGhhIiwiX3JlbmRlckNTU1Byb3AiLCJfcmVuZGVyUHJvcFdpdGhFbmQiLCJfcmVuZGVyQ1NTUHJvcFdpdGhCZWdpbm5pbmciLCJfcmVuZGVyUm91bmRlZENTU1Byb3AiLCJfcmVuZGVyTm9uVHdlZW5pbmdWYWx1ZSIsIl9yZW5kZXJOb25Ud2VlbmluZ1ZhbHVlT25seUF0RW5kIiwiX3NldHRlckNTU1N0eWxlIiwiX3NldHRlckNTU1Byb3AiLCJzZXRQcm9wZXJ0eSIsIl9zZXR0ZXJUcmFuc2Zvcm0iLCJfc2V0dGVyU2NhbGUiLCJzY2FsZVgiLCJzY2FsZVkiLCJfc2V0dGVyU2NhbGVXaXRoUmVuZGVyIiwicmVuZGVyVHJhbnNmb3JtIiwiX3NldHRlclRyYW5zZm9ybVdpdGhSZW5kZXIiLCJfdHJhbnNmb3JtUHJvcCIsIl90cmFuc2Zvcm1PcmlnaW5Qcm9wIiwiX3N1cHBvcnRzM0QiLCJucyIsImNyZWF0ZUVsZW1lbnQiLCJfZ2V0Q29tcHV0ZWRQcm9wZXJ0eSIsInNraXBQcmVmaXhGYWxsYmFjayIsImNzIiwiZ2V0UHJvcGVydHlWYWx1ZSIsIl9jaGVja1Byb3BQcmVmaXgiLCJfcHJlZml4ZXMiLCJwcmVmZXJQcmVmaXgiLCJfaW5pdENvcmUiLCJkb2N1bWVudEVsZW1lbnQiLCJjc3NUZXh0IiwiX2dldEJCb3hIYWNrIiwic3dhcElmUG9zc2libGUiLCJvd25lclNWR0VsZW1lbnQiLCJvbGRQYXJlbnQiLCJwYXJlbnROb2RlIiwib2xkU2libGluZyIsIm5leHRTaWJsaW5nIiwib2xkQ1NTIiwiYmJveCIsImFwcGVuZENoaWxkIiwiZGlzcGxheSIsImdldEJCb3giLCJfZ3NhcEJCb3giLCJyZW1vdmVDaGlsZCIsIl9nZXRBdHRyaWJ1dGVGYWxsYmFja3MiLCJhdHRyaWJ1dGVzQXJyYXkiLCJoYXNBdHRyaWJ1dGUiLCJib3VuZHMiLCJfaXNTVkciLCJnZXRDVE0iLCJfcmVtb3ZlUHJvcGVydHkiLCJyZW1vdmVQcm9wZXJ0eSIsInJlbW92ZUF0dHJpYnV0ZSIsIl9hZGROb25Ud2VlbmluZ1BUIiwiYmVnaW5uaW5nIiwib25seVNldEF0RW5kIiwiX25vbkNvbnZlcnRpYmxlVW5pdHMiLCJkZWciLCJyYWQiLCJ0dXJuIiwiX2NvbnZlcnRUb1VuaXQiLCJjdXJWYWx1ZSIsImN1clVuaXQiLCJob3Jpem9udGFsIiwiaXNSb290U1ZHIiwidGFnTmFtZSIsIm1lYXN1cmVQcm9wZXJ0eSIsInRvUGl4ZWxzIiwidG9QZXJjZW50IiwicHgiLCJpc1NWRyIsIl9nZXQiLCJfcGFyc2VUcmFuc2Zvcm0iLCJfZmlyc3RUd29Pbmx5Iiwiek9yaWdpbiIsIl9zcGVjaWFsUHJvcHMiLCJfdHdlZW5Db21wbGV4Q1NTU3RyaW5nIiwic3RhcnRWYWx1ZXMiLCJzdGFydFZhbHVlIiwiZW5kVmFsdWUiLCJlbmRVbml0Iiwic3RhcnRVbml0IiwicmVsYXRpdmUiLCJlbmRWYWx1ZXMiLCJfa2V5d29yZFRvUGVyY2VudCIsInRvcCIsImJvdHRvbSIsInJpZ2h0IiwiX2NvbnZlcnRLZXl3b3Jkc1RvUGVyY2VudGFnZXMiLCJfcmVuZGVyQ2xlYXJQcm9wcyIsImNsZWFyVHJhbnNmb3JtcyIsImNsZWFyUHJvcHMiLCJfaWRlbnRpdHkyRE1hdHJpeCIsIl9yb3RhdGlvbmFsUHJvcGVydGllcyIsIl9pc051bGxUcmFuc2Zvcm0iLCJfZ2V0Q29tcHV0ZWRUcmFuc2Zvcm1NYXRyaXhBc0FycmF5IiwibWF0cml4U3RyaW5nIiwiX2dldE1hdHJpeCIsImZvcmNlMkQiLCJtYXRyaXgiLCJhZGRlZFRvRE9NIiwidHJhbnNmb3JtIiwiYmFzZVZhbCIsImNvbnNvbGlkYXRlIiwib2Zmc2V0UGFyZW50IiwiX2FwcGx5U1ZHT3JpZ2luIiwib3JpZ2luIiwib3JpZ2luSXNBYnNvbHV0ZSIsInNtb290aCIsIm1hdHJpeEFycmF5IiwicGx1Z2luVG9BZGRQcm9wVHdlZW5zVG8iLCJ4T3JpZ2luT2xkIiwieE9yaWdpbiIsInlPcmlnaW5PbGQiLCJ5T3JpZ2luIiwieE9mZnNldE9sZCIsInhPZmZzZXQiLCJ5T2Zmc2V0T2xkIiwieU9mZnNldCIsInR4IiwidHkiLCJvcmlnaW5TcGxpdCIsImRldGVybWluYW50IiwiaW52ZXJ0ZWRTY2FsZVgiLCJ6Iiwicm90YXRpb24iLCJyb3RhdGlvblgiLCJyb3RhdGlvblkiLCJza2V3WCIsInNrZXdZIiwicGVyc3BlY3RpdmUiLCJhbmdsZSIsImExMiIsImEyMiIsInQxIiwidDIiLCJ0MyIsImExMyIsImEyMyIsImEzMyIsImE0MiIsImE0MyIsImEzMiIsImZvcmNlQ1NTIiwieFBlcmNlbnQiLCJvZmZzZXRXaWR0aCIsInlQZXJjZW50Iiwib2Zmc2V0SGVpZ2h0IiwidHJhbnNmb3JtUGVyc3BlY3RpdmUiLCJfcmVuZGVyU1ZHVHJhbnNmb3JtcyIsIl9yZW5kZXJDU1NUcmFuc2Zvcm1zIiwiX3JlbmRlck5vbjNEVHJhbnNmb3JtcyIsIl9hZGRQeFRyYW5zbGF0ZSIsIl96ZXJvRGVnIiwiX3plcm9QeCIsIl9lbmRQYXJlbnRoZXNpcyIsInRyYW5zZm9ybXMiLCJ1c2UzRCIsImExMSIsImEyMSIsInRhbiIsIl9hZGRSb3RhdGlvbmFsUHJvcFR3ZWVuIiwiY2FwIiwiZmluYWxWYWx1ZSIsImRpcmVjdGlvbiIsIl9hZGRSYXdUcmFuc2Zvcm1QVHMiLCJzdGFydENhY2hlIiwiZXhjbHVkZSIsImVuZENhY2hlIiwic2lkZSIsInNwZWNpYWxQcm9wIiwiaXNUcmFuc2Zvcm1SZWxhdGVkIiwidHJhbnNmb3JtUHJvcFR3ZWVuIiwicGFyc2VUcmFuc2Zvcm0iLCJzbW9vdGhPcmlnaW4iLCJhdXRvUm91bmQiLCJwb3NpdGlvbkFuZFNjYWxlIiwib3RoZXJzIiwiYWxsIiwiX0NTU1BsdWdpbiIsImdzYXBXaXRoQ1NTIiwiVHdlZW5NYXhXaXRoQ1NTIiwiX3NsaWRlIiwiX3R5cGVvZiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJvIiwiYWxsb3dBcnJheUxpa2UiLCJpdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIkYiLCJkb25lIiwiX2UiLCJub3JtYWxDb21wbGV0aW9uIiwiZGlkRXJyIiwic3RlcCIsIl9lMiIsInJldHVybiIsIl90b0NvbnN1bWFibGVBcnJheSIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJtaW5MZW4iLCJfYXJyYXlMaWtlVG9BcnJheSIsInRvU3RyaW5nIiwiaXRlciIsImFycjIiLCJfaW5oZXJpdHMiLCJfc2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9jcmVhdGVTdXBlckludGVybmFsIiwiU3VwZXIiLCJfZ2V0UHJvdG90eXBlT2YiLCJOZXdUYXJnZXQiLCJjb25zdHJ1Y3QiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNoYW0iLCJQcm94eSIsIkJvb2xlYW4iLCJ2YWx1ZU9mIiwiX0V2ZW50RW1pdHRlciIsIl9zdXBlciIsInNsaWRlIiwiY2xpcFBhdGgiLCJob3ZlciIsIl9pdGVyYXRvciIsIl9zdGVwIiwiX2xvb3AiLCJ1cGNvbWluZ1NsaWRlIiwiX3V0aWxzIiwiX25hdmlnYXRpb24iLCJfc2xpZGVzaG93Iiwic2xpZGVzaG93IiwibmF2aWdhdGlvbiIsIm9vX2NtIiwiZXZhbCIsImNvbnNvbGVMb2ciLCJvb190ciIsImNvbnNvbGVUcmFjZSIsIm9vX3RzIiwiY29uc29sZVRpbWUiLCJvb190ZSIsImNvbnNvbGVUaW1lRW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/common/showcase-script.js\n"));

/***/ }),

/***/ "./src/components/Common/Cursor.jsx":
/*!******************************************!*\
  !*** ./src/components/Common/Cursor.jsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction Cursor() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const link = document.querySelectorAll(\".hover-this\");\n        const cursor = document.querySelector(\".cursor\");\n        const animateit = function(e) {\n            const hoverAnim = this.querySelector(\".hover-anim\");\n            const { offsetX: x , offsetY: y  } = e;\n            const { offsetWidth: width , offsetHeight: height  } = this;\n            const move = 25;\n            const xMove = x / width * (move * 2) - move;\n            const yMove = y / height * (move * 2) - move;\n            hoverAnim.style.transform = \"translate(\".concat(xMove, \"px, \").concat(yMove, \"px)\");\n            if (e.type === \"mouseleave\") hoverAnim.style.transform = \"\";\n        };\n        const editCursor = (e)=>{\n            const { clientX: x , clientY: y  } = e;\n            cursor.style.left = x + \"px\";\n            cursor.style.top = y + \"px\";\n        };\n        link.forEach((b)=>b.addEventListener(\"mousemove\", animateit));\n        link.forEach((b)=>b.addEventListener(\"mouseleave\", animateit));\n        window.addEventListener(\"mousemove\", editCursor);\n        document.querySelectorAll(\"a, .cursor-pointer\").forEach((el)=>{\n            el.addEventListener(\"mousemove\", ()=>{\n                cursor.classList.add(\"cursor-active\");\n            });\n            el.addEventListener(\"mouseleave\", ()=>{\n                cursor.classList.remove(\"cursor-active\");\n            });\n        });\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"cursor\"\n    }, void 0, false, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Cursor.jsx\",\n        lineNumber: 40,\n        columnNumber: 5\n    }, this);\n}\n_s(Cursor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Cursor;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Cursor);\nvar _c;\n$RefreshReg$(_c, \"Cursor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db21tb24vQ3Vyc29yLmpzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBRXpDLFNBQVNFLFNBQVM7O0lBQ2hCRCxnREFBU0EsQ0FBQyxJQUFNO1FBQ2QsTUFBTUUsT0FBT0MsU0FBU0MsZ0JBQWdCLENBQUM7UUFDdkMsTUFBTUMsU0FBU0YsU0FBU0csYUFBYSxDQUFDO1FBRXRDLE1BQU1DLFlBQVksU0FBVUMsQ0FBQyxFQUFFO1lBQzdCLE1BQU1DLFlBQVksSUFBSSxDQUFDSCxhQUFhLENBQUM7WUFDckMsTUFBTSxFQUFFSSxTQUFTQyxFQUFDLEVBQUVDLFNBQVNDLEVBQUMsRUFBRSxHQUFHTDtZQUNuQyxNQUFNLEVBQUVNLGFBQWFDLE1BQUssRUFBRUMsY0FBY0MsT0FBTSxFQUFFLEdBQUcsSUFBSTtZQUN6RCxNQUFNQyxPQUFPO1lBQ2IsTUFBTUMsUUFBUVIsSUFBSUksUUFBU0csQ0FBQUEsT0FBTyxLQUFLQTtZQUN2QyxNQUFNRSxRQUFRUCxJQUFJSSxTQUFVQyxDQUFBQSxPQUFPLEtBQUtBO1lBRXhDVCxVQUFVWSxLQUFLLENBQUNDLFNBQVMsR0FBRyxhQUF5QkYsT0FBWkQsT0FBTSxRQUFZLE9BQU5DLE9BQU07WUFDM0QsSUFBSVosRUFBRWUsSUFBSSxLQUFLLGNBQWNkLFVBQVVZLEtBQUssQ0FBQ0MsU0FBUyxHQUFHO1FBQzNEO1FBRUEsTUFBTUUsYUFBYWhCLENBQUFBLElBQUs7WUFDdEIsTUFBTSxFQUFFaUIsU0FBU2QsRUFBQyxFQUFFZSxTQUFTYixFQUFDLEVBQUUsR0FBR0w7WUFDbkNILE9BQU9nQixLQUFLLENBQUNNLElBQUksR0FBR2hCLElBQUk7WUFDeEJOLE9BQU9nQixLQUFLLENBQUNPLEdBQUcsR0FBR2YsSUFBSTtRQUN6QjtRQUNBWCxLQUFLMkIsT0FBTyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxnQkFBZ0IsQ0FBQyxhQUFheEI7UUFDbERMLEtBQUsyQixPQUFPLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLGdCQUFnQixDQUFDLGNBQWN4QjtRQUNuRHlCLE9BQU9ELGdCQUFnQixDQUFDLGFBQWFQO1FBRXJDckIsU0FBU0MsZ0JBQWdCLENBQUMsc0JBQXNCeUIsT0FBTyxDQUFDSSxDQUFBQSxLQUFNO1lBQzVEQSxHQUFHRixnQkFBZ0IsQ0FBQyxhQUFhLElBQU07Z0JBQ3JDMUIsT0FBTzZCLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDO1lBQ3ZCO1lBQ0FGLEdBQUdGLGdCQUFnQixDQUFDLGNBQWMsSUFBTTtnQkFDdEMxQixPQUFPNkIsU0FBUyxDQUFDRSxNQUFNLENBQUM7WUFDMUI7UUFDRjtJQUNGLEdBQUcsRUFBRTtJQUVMLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFVOzs7Ozs7QUFFbkI7R0F2Q1NyQztLQUFBQTtBQXlDVCwrREFBZUEsTUFBTUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9Db21tb24vQ3Vyc29yLmpzeD81MWU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIEN1cnNvcigpIHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmhvdmVyLXRoaXMnKTtcbiAgICBjb25zdCBjdXJzb3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3Vyc29yJyk7XG5cbiAgICBjb25zdCBhbmltYXRlaXQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgY29uc3QgaG92ZXJBbmltID0gdGhpcy5xdWVyeVNlbGVjdG9yKCcuaG92ZXItYW5pbScpO1xuICAgICAgY29uc3QgeyBvZmZzZXRYOiB4LCBvZmZzZXRZOiB5IH0gPSBlO1xuICAgICAgY29uc3QgeyBvZmZzZXRXaWR0aDogd2lkdGgsIG9mZnNldEhlaWdodDogaGVpZ2h0IH0gPSB0aGlzO1xuICAgICAgY29uc3QgbW92ZSA9IDI1O1xuICAgICAgY29uc3QgeE1vdmUgPSB4IC8gd2lkdGggKiAobW92ZSAqIDIpIC0gbW92ZTtcbiAgICAgIGNvbnN0IHlNb3ZlID0geSAvIGhlaWdodCAqIChtb3ZlICogMikgLSBtb3ZlO1xuXG4gICAgICBob3ZlckFuaW0uc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke3hNb3ZlfXB4LCAke3lNb3ZlfXB4KWA7XG4gICAgICBpZiAoZS50eXBlID09PSAnbW91c2VsZWF2ZScpIGhvdmVyQW5pbS5zdHlsZS50cmFuc2Zvcm0gPSAnJztcbiAgICB9O1xuXG4gICAgY29uc3QgZWRpdEN1cnNvciA9IGUgPT4ge1xuICAgICAgY29uc3QgeyBjbGllbnRYOiB4LCBjbGllbnRZOiB5IH0gPSBlO1xuICAgICAgY3Vyc29yLnN0eWxlLmxlZnQgPSB4ICsgJ3B4JztcbiAgICAgIGN1cnNvci5zdHlsZS50b3AgPSB5ICsgJ3B4JztcbiAgICB9O1xuICAgIGxpbmsuZm9yRWFjaChiID0+IGIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgYW5pbWF0ZWl0KSk7XG4gICAgbGluay5mb3JFYWNoKGIgPT4gYi5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgYW5pbWF0ZWl0KSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGVkaXRDdXJzb3IpO1xuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImEsIC5jdXJzb3ItcG9pbnRlclwiKS5mb3JFYWNoKGVsID0+IHtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsICgpID0+IHtcbiAgICAgICAgY3Vyc29yLmNsYXNzTGlzdC5hZGQoJ2N1cnNvci1hY3RpdmUnKVxuICAgICAgfSk7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKCkgPT4ge1xuICAgICAgICBjdXJzb3IuY2xhc3NMaXN0LnJlbW92ZSgnY3Vyc29yLWFjdGl2ZScpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjdXJzb3JcIj48L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDdXJzb3IiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJDdXJzb3IiLCJsaW5rIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY3Vyc29yIiwicXVlcnlTZWxlY3RvciIsImFuaW1hdGVpdCIsImUiLCJob3ZlckFuaW0iLCJvZmZzZXRYIiwieCIsIm9mZnNldFkiLCJ5Iiwib2Zmc2V0V2lkdGgiLCJ3aWR0aCIsIm9mZnNldEhlaWdodCIsImhlaWdodCIsIm1vdmUiLCJ4TW92ZSIsInlNb3ZlIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJ0eXBlIiwiZWRpdEN1cnNvciIsImNsaWVudFgiLCJjbGllbnRZIiwibGVmdCIsInRvcCIsImZvckVhY2giLCJiIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsImVsIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiZGl2IiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Common/Cursor.jsx\n"));

/***/ }),

/***/ "./src/components/Common/Loader.jsx":
/*!******************************************!*\
  !*** ./src/components/Common/Loader.jsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction Loader() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const svg = document.getElementById(\"svg\");\n        const tl = gsap.timeline();\n        const curve = \"M0 502S175 272 500 272s500 230 500 230V0H0Z\";\n        const flat = \"M0 2S175 1 500 1s500 1 500 1V0H0Z\";\n        tl.to(\".loader-wrap-heading .load-text , .loader-wrap-heading .cont\", {\n            delay: 1.5,\n            y: -100,\n            opacity: 0\n        });\n        tl.to(svg, {\n            duration: 0.5,\n            attr: {\n                d: curve\n            },\n            ease: \"power2.easeIn\"\n        }).to(svg, {\n            duration: 0.5,\n            attr: {\n                d: flat\n            },\n            ease: \"power2.easeOut\"\n        });\n        tl.to(\".loader-wrap\", {\n            y: -1500\n        });\n        tl.to(\".loader-wrap\", {\n            zIndex: -1,\n            display: \"none\"\n        });\n        tl.from(\"header\", {\n            y: 200\n        }, \"-=1.5\");\n        tl.from(\"header .container\", {\n            y: 40,\n            opacity: 0,\n            delay: 0.3\n        }, \"-=1.5\");\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"loader-wrap\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                viewBox: \"0 0 1000 1000\",\n                preserveAspectRatio: \"none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    id: \"svg\",\n                    d: \"M0,1005S175,995,500,995s500,5,500,5V0H0Z\"\n                }, void 0, false, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                    lineNumber: 21,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"loader-wrap-heading\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"load-text\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"L\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 27,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"o\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 28,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"a\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 29,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"d\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 30,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"i\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 31,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"n\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 32,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"g\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                                lineNumber: 33,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                        lineNumber: 26,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                    lineNumber: 25,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/Loader.jsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n_s(Loader, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Loader;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Loader);\nvar _c;\n$RefreshReg$(_c, \"Loader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db21tb24vTG9hZGVyLmpzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBRXpDLFNBQVNFLFNBQVM7O0lBQ2hCRCxnREFBU0EsQ0FBQyxJQUFNO1FBQ2QsTUFBTUUsTUFBTUMsU0FBU0MsY0FBYyxDQUFDO1FBQ3BDLE1BQU1DLEtBQUtDLEtBQUtDLFFBQVE7UUFDeEIsTUFBTUMsUUFBUTtRQUNkLE1BQU1DLE9BQU87UUFFYkosR0FBR0ssRUFBRSxDQUFDLGdFQUFnRTtZQUFFQyxPQUFPO1lBQUtDLEdBQUcsQ0FBQztZQUFLQyxTQUFTO1FBQUc7UUFDekdSLEdBQUdLLEVBQUUsQ0FBQ1IsS0FBSztZQUFFWSxVQUFVO1lBQUtDLE1BQU07Z0JBQUVDLEdBQUdSO1lBQU07WUFBR1MsTUFBTTtRQUFpQixHQUFHUCxFQUFFLENBQUNSLEtBQUs7WUFBRVksVUFBVTtZQUFLQyxNQUFNO2dCQUFFQyxHQUFHUDtZQUFLO1lBQUdRLE1BQU07UUFBa0I7UUFDOUlaLEdBQUdLLEVBQUUsQ0FBQyxnQkFBZ0I7WUFBRUUsR0FBRyxDQUFDO1FBQU07UUFDbENQLEdBQUdLLEVBQUUsQ0FBQyxnQkFBZ0I7WUFBRVEsUUFBUSxDQUFDO1lBQUdDLFNBQVM7UUFBUTtRQUNyRGQsR0FBR2UsSUFBSSxDQUFDLFVBQVU7WUFBRVIsR0FBRztRQUFJLEdBQUc7UUFDOUJQLEdBQUdlLElBQUksQ0FBQyxxQkFBcUI7WUFBRVIsR0FBRztZQUFJQyxTQUFTO1lBQUdGLE9BQU87UUFBSSxHQUFHO0lBQ2xFLEdBQUcsRUFBRTtJQUVMLHFCQUNFLDhEQUFDVTtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ3BCO2dCQUFJcUIsU0FBUTtnQkFBZ0JDLHFCQUFvQjswQkFDL0MsNEVBQUNDO29CQUFLQyxJQUFHO29CQUFNVixHQUFFOzs7Ozs7Ozs7OzswQkFHbkIsOERBQUNLO2dCQUFJQyxXQUFVOzBCQUNiLDRFQUFDSzs4QkFDQyw0RUFBQ0M7d0JBQUdOLFdBQVU7OzBDQUNaLDhEQUFDSzswQ0FBSzs7Ozs7OzBDQUNOLDhEQUFDQTswQ0FBSzs7Ozs7OzBDQUNOLDhEQUFDQTswQ0FBSzs7Ozs7OzBDQUNOLDhEQUFDQTswQ0FBSzs7Ozs7OzBDQUNOLDhEQUFDQTswQ0FBSzs7Ozs7OzBDQUNOLDhEQUFDQTswQ0FBSzs7Ozs7OzBDQUNOLDhEQUFDQTswQ0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1sQjtHQXBDUzFCO0tBQUFBO0FBc0NULCtEQUFlQSxNQUFNQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NvbW1vbi9Mb2FkZXIuanN4P2Q3MmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gTG9hZGVyKCkge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHN2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3ZnXCIpO1xuICAgIGNvbnN0IHRsID0gZ3NhcC50aW1lbGluZSgpO1xuICAgIGNvbnN0IGN1cnZlID0gXCJNMCA1MDJTMTc1IDI3MiA1MDAgMjcyczUwMCAyMzAgNTAwIDIzMFYwSDBaXCI7XG4gICAgY29uc3QgZmxhdCA9IFwiTTAgMlMxNzUgMSA1MDAgMXM1MDAgMSA1MDAgMVYwSDBaXCI7XG5cbiAgICB0bC50byhcIi5sb2FkZXItd3JhcC1oZWFkaW5nIC5sb2FkLXRleHQgLCAubG9hZGVyLXdyYXAtaGVhZGluZyAuY29udFwiLCB7IGRlbGF5OiAxLjUsIHk6IC0xMDAsIG9wYWNpdHk6IDAsIH0pO1xuICAgIHRsLnRvKHN2ZywgeyBkdXJhdGlvbjogMC41LCBhdHRyOiB7IGQ6IGN1cnZlIH0sIGVhc2U6IFwicG93ZXIyLmVhc2VJblwiLCB9KS50byhzdmcsIHsgZHVyYXRpb246IDAuNSwgYXR0cjogeyBkOiBmbGF0IH0sIGVhc2U6IFwicG93ZXIyLmVhc2VPdXRcIiwgfSk7XG4gICAgdGwudG8oXCIubG9hZGVyLXdyYXBcIiwgeyB5OiAtMTUwMCwgfSk7XG4gICAgdGwudG8oXCIubG9hZGVyLXdyYXBcIiwgeyB6SW5kZXg6IC0xLCBkaXNwbGF5OiBcIm5vbmVcIiwgfSk7XG4gICAgdGwuZnJvbShcImhlYWRlclwiLCB7IHk6IDIwMCB9LCBcIi09MS41XCIpO1xuICAgIHRsLmZyb20oXCJoZWFkZXIgLmNvbnRhaW5lclwiLCB7IHk6IDQwLCBvcGFjaXR5OiAwLCBkZWxheTogMC4zIH0sIFwiLT0xLjVcIik7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibG9hZGVyLXdyYXBcIj5cbiAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAxMDAwIDEwMDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwibm9uZVwiPlxuICAgICAgICA8cGF0aCBpZD1cInN2Z1wiIGQ9XCJNMCwxMDA1UzE3NSw5OTUsNTAwLDk5NXM1MDAsNSw1MDAsNVYwSDBaXCI+PC9wYXRoPlxuICAgICAgPC9zdmc+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibG9hZGVyLXdyYXAtaGVhZGluZ1wiPlxuICAgICAgICA8c3Bhbj5cbiAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwibG9hZC10ZXh0XCI+XG4gICAgICAgICAgICA8c3Bhbj5MPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4+bzwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPmE8L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj5kPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4+aTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPm48L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj5nPC9zcGFuPlxuICAgICAgICAgIDwvaDI+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IExvYWRlciJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsIkxvYWRlciIsInN2ZyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ0bCIsImdzYXAiLCJ0aW1lbGluZSIsImN1cnZlIiwiZmxhdCIsInRvIiwiZGVsYXkiLCJ5Iiwib3BhY2l0eSIsImR1cmF0aW9uIiwiYXR0ciIsImQiLCJlYXNlIiwiekluZGV4IiwiZGlzcGxheSIsImZyb20iLCJkaXYiLCJjbGFzc05hbWUiLCJ2aWV3Qm94IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsInBhdGgiLCJpZCIsInNwYW4iLCJoMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Common/Loader.jsx\n"));

/***/ }),

/***/ "./src/components/Common/ProgressScroll.jsx":
/*!**************************************************!*\
  !*** ./src/components/Common/ProgressScroll.jsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _common_scrollToTop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/common/scrollToTop */ \"./src/common/scrollToTop.js\");\n\nvar _s = $RefreshSig$();\n\n//= Scripts\n\nconst ProgressScroll = ()=>{\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (0,_common_scrollToTop__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"progress-wrap cursor-pointer\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            className: \"progress-circle svg-content\",\n            width: \"100%\",\n            height: \"100%\",\n            viewBox: \"-1 -1 102 102\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98\"\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/ProgressScroll.jsx\",\n                lineNumber: 13,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/ProgressScroll.jsx\",\n            lineNumber: 12,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Common/ProgressScroll.jsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ProgressScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProgressScroll;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProgressScroll);\nvar _c;\n$RefreshReg$(_c, \"ProgressScroll\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db21tb24vUHJvZ3Jlc3NTY3JvbGwuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlDO0FBQ3pDLFdBQVc7QUFDb0M7QUFFL0MsTUFBTUcsaUJBQWlCLElBQU07O0lBQzNCRixnREFBU0EsQ0FBQyxJQUFNO1FBQ2RDLCtEQUFXQTtJQUNiLEdBQUcsRUFBRTtJQUVMLHFCQUNFLDhEQUFDRTtRQUFJQyxXQUFVO2tCQUNiLDRFQUFDQztZQUFJRCxXQUFVO1lBQThCRSxPQUFNO1lBQU9DLFFBQU87WUFBT0MsU0FBUTtzQkFDOUUsNEVBQUNDO2dCQUFLQyxHQUFFOzs7Ozs7Ozs7Ozs7Ozs7O0FBSWhCO0dBWk1SO0tBQUFBO0FBY04sK0RBQWVBLGNBQWNBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQ29tbW9uL1Byb2dyZXNzU2Nyb2xsLmpzeD82YzZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG4vLz0gU2NyaXB0c1xuaW1wb3J0IHNjcm9sbFRvVG9wIGZyb20gJ0AvY29tbW9uL3Njcm9sbFRvVG9wJztcblxuY29uc3QgUHJvZ3Jlc3NTY3JvbGwgPSAoKSA9PiB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2Nyb2xsVG9Ub3AoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy13cmFwIGN1cnNvci1wb2ludGVyXCIgPlxuICAgICAgPHN2ZyBjbGFzc05hbWU9XCJwcm9ncmVzcy1jaXJjbGUgc3ZnLWNvbnRlbnRcIiB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgdmlld0JveD1cIi0xIC0xIDEwMiAxMDJcIj5cbiAgICAgICAgPHBhdGggZD1cIk01MCwxIGE0OSw0OSAwIDAsMSAwLDk4IGE0OSw0OSAwIDAsMSAwLC05OFwiIC8+XG4gICAgICA8L3N2Zz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBQcm9ncmVzc1Njcm9sbCJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInNjcm9sbFRvVG9wIiwiUHJvZ3Jlc3NTY3JvbGwiLCJkaXYiLCJjbGFzc05hbWUiLCJzdmciLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJwYXRoIiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Common/ProgressScroll.jsx\n"));

/***/ }),

/***/ "./src/components/Showcases/CircleSlider/index.jsx":
/*!*********************************************************!*\
  !*** ./src/components/Showcases/CircleSlider/index.jsx ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _common_loadBackgroudImages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/common/loadBackgroudImages */ \"./src/common/loadBackgroudImages.js\");\n/* harmony import */ var _data_Showcases_circle_slider_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/data/Showcases/circle-slider.json */ \"./src/data/Showcases/circle-slider.json\");\n\nvar _s = $RefreshSig$();\n\n\n//= Scripts\n\n//= Data\n\nfunction FrameSlider(param) {\n    let { lightMode  } = param;\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (0,_common_loadBackgroudImages__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n        className: \"position-re \".concat(lightMode ? \"bg-dark\" : \"\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"frame\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                    className: \"slides-nav\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"slide-nav-butn\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"slides-nav__button slides-nav__button--prev\",\n                                    \"aria-label\": \"Previous slide\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M1.176 11.532a.5.5 0 00-.352.936c5.228 1.96 9.475 5.555 12.752 10.797a.5.5 0 00.848-.53c-3.39-5.424-7.81-9.163-13.248-11.203z\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 20,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M1.176 12.468a.5.5 0 01-.352-.936C6.052 9.572 10.3 5.978 13.576.735a.5.5 0 01.848.53c-3.39 5.424-7.81 9.163-13.248 11.203z\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 22,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M1 12.5a.5.5 0 110-1h53a.5.5 0 110 1H1z\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 24,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                        lineNumber: 19,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                    lineNumber: 18,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"slides-nav__button slides-nav__button--next\",\n                                    \"aria-label\": \"Next slide\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M53.824 11.532a.5.5 0 01.352.936c-5.228 1.96-9.475 5.555-12.752 10.797a.5.5 0 01-.848-.53c3.39-5.424 7.81-9.163 13.248-11.203z\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 29,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M53.824 12.468a.5.5 0 00.352-.936C48.948 9.572 44.7 5.978 41.424.735a.5.5 0 00-.848.53c3.39 5.424 7.81 9.163 13.248 11.203z\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 31,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: \"M54 12.5a.5.5 0 100-1H1a.5.5 0 100 1h53z\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 33,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                        lineNumber: 28,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                    lineNumber: 27,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                            lineNumber: 17,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"slides-nav__index\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"slides-nav__index-current\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"1\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                        lineNumber: 38,\n                                        columnNumber: 57\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                    lineNumber: 38,\n                                    columnNumber: 13\n                                }, this),\n                                \"—\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"slides-nav__index-total\",\n                                    children: \"5\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                    lineNumber: 40,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                            lineNumber: 37,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                    lineNumber: 16,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                lineNumber: 15,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"slideshow\",\n                children: _data_Showcases_circle_slider_json__WEBPACK_IMPORTED_MODULE_4__.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"figure\", {\n                        className: \"slide \".concat(index === 0 ? \"slide--current\" : \"\"),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"slide__img-wrap\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"slide__img bg-img\",\n                                    \"data-background\": item.background\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                    lineNumber: 49,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                lineNumber: 48,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"figcaption\", {\n                                className: \"slide__caption\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                        className: \"slides__caption-headline\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-row sub-title mb-15\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: [\n                                                        \"\\xa9 \",\n                                                        item.year,\n                                                        \" \",\n                                                        item.type\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                    lineNumber: 53,\n                                                    columnNumber: 62\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 53,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-row\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: item.title\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                    lineNumber: 54,\n                                                    columnNumber: 46\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                                lineNumber: 54,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                        lineNumber: 52,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        className: \"slides__caption-link sub-title mt-30\",\n                                        href: \"/dark/project-details1\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"Explore\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                            lineNumber: 56,\n                                            columnNumber: 102\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                        lineNumber: 56,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                                lineNumber: 51,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, item.id, true, {\n                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                        lineNumber: 47,\n                        columnNumber: 13\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/CircleSlider/index.jsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n_s(FrameSlider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FrameSlider;\n/* harmony default export */ __webpack_exports__[\"default\"] = (FrameSlider);\nvar _c;\n$RefreshReg$(_c, \"FrameSlider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9TaG93Y2FzZXMvQ2lyY2xlU2xpZGVyL2luZGV4LmpzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF5QztBQUNaO0FBQzdCLFdBQVc7QUFDb0Q7QUFDL0QsUUFBUTtBQUMrQztBQUV2RCxTQUFTSyxZQUFZLEtBQWEsRUFBRTtRQUFmLEVBQUVDLFVBQVMsRUFBRSxHQUFiOztJQUNuQkwsZ0RBQVNBLENBQUMsSUFBTTtRQUNkRSx1RUFBbUJBO0lBQ3JCLEdBQUcsRUFBRTtJQUVMLHFCQUNFLDhEQUFDSTtRQUFRQyxXQUFXLGVBQTBDLE9BQTNCRixZQUFZLFlBQVksRUFBRTs7MEJBQzNELDhEQUFDRztnQkFBSUQsV0FBVTswQkFDYiw0RUFBQ0U7b0JBQUlGLFdBQVU7O3NDQUNiLDhEQUFDQzs0QkFBSUQsV0FBVTs7OENBQ2IsOERBQUNHO29DQUFPSCxXQUFVO29DQUE4Q0ksY0FBVzs4Q0FDekUsNEVBQUNDOzswREFDQyw4REFBQ0M7Z0RBQUtDLEdBQUU7Ozs7OzswREFFUiw4REFBQ0Q7Z0RBQUtDLEdBQUU7Ozs7OzswREFFUiw4REFBQ0Q7Z0RBQUtDLEdBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQUdaLDhEQUFDSjtvQ0FBT0gsV0FBVTtvQ0FBOENJLGNBQVc7OENBQ3pFLDRFQUFDQzs7MERBQ0MsOERBQUNDO2dEQUFLQyxHQUFFOzs7Ozs7MERBRVIsOERBQUNEO2dEQUFLQyxHQUFFOzs7Ozs7MERBRVIsOERBQUNEO2dEQUFLQyxHQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0FJZCw4REFBQ047NEJBQUlELFdBQVU7OzhDQUNiLDhEQUFDUTtvQ0FBS1IsV0FBVTs4Q0FBNEIsNEVBQUNRO2tEQUFLOzs7Ozs7Ozs7OztnQ0FBZTs4Q0FFakUsOERBQUNBO29DQUFLUixXQUFVOzhDQUEwQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBSWhELDhEQUFDQztnQkFBSUQsV0FBVTswQkFFWEosbUVBQVEsQ0FBQyxDQUFDYyxNQUFNQyxzQkFDZCw4REFBQ0M7d0JBQU9aLFdBQVcsU0FBNkMsT0FBcENXLFVBQVUsSUFBSSxtQkFBbUIsRUFBRTs7MENBQzdELDhEQUFDVjtnQ0FBSUQsV0FBVTswQ0FDYiw0RUFBQ0M7b0NBQUlELFdBQVU7b0NBQW9CYSxtQkFBaUJILEtBQUtJLFVBQVU7Ozs7Ozs7Ozs7OzBDQUVyRSw4REFBQ0M7Z0NBQVdmLFdBQVU7O2tEQUNwQiw4REFBQ2dCO3dDQUFHaEIsV0FBVTs7MERBQ1osOERBQUNRO2dEQUFLUixXQUFVOzBEQUEyQiw0RUFBQ1E7O3dEQUFLO3dEQUFHRSxLQUFLTyxJQUFJO3dEQUFDO3dEQUFFUCxLQUFLUSxJQUFJOzs7Ozs7Ozs7Ozs7MERBQ3pFLDhEQUFDVjtnREFBS1IsV0FBVTswREFBVyw0RUFBQ1E7OERBQU1FLEtBQUtTLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tEQUU5Qyw4REFBQ3pCLGtEQUFJQTt3Q0FBQ00sV0FBVTt3Q0FBdUNvQixNQUFLO2tEQUF5Qiw0RUFBQ1o7c0RBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1QkFUdkJFLEtBQUtXLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQjNGO0dBeERTeEI7S0FBQUE7QUEwRFQsK0RBQWVBLFdBQVdBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvU2hvd2Nhc2VzL0NpcmNsZVNsaWRlci9pbmRleC5qc3g/YWY1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbi8vPSBTY3JpcHRzXG5pbXBvcnQgbG9hZEJhY2tncm91ZEltYWdlcyBmcm9tICdAL2NvbW1vbi9sb2FkQmFja2dyb3VkSW1hZ2VzJztcbi8vPSBEYXRhXG5pbXBvcnQgZGF0YSBmcm9tICdAL2RhdGEvU2hvd2Nhc2VzL2NpcmNsZS1zbGlkZXIuanNvbic7XG5cbmZ1bmN0aW9uIEZyYW1lU2xpZGVyKHsgbGlnaHRNb2RlIH0pIHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsb2FkQmFja2dyb3VkSW1hZ2VzKCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17YHBvc2l0aW9uLXJlICR7bGlnaHRNb2RlID8gJ2JnLWRhcmsnIDogJyd9YH0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZyYW1lXCI+XG4gICAgICAgIDxuYXYgY2xhc3NOYW1lPVwic2xpZGVzLW5hdlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2xpZGUtbmF2LWJ1dG5cIj5cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic2xpZGVzLW5hdl9fYnV0dG9uIHNsaWRlcy1uYXZfX2J1dHRvbi0tcHJldlwiIGFyaWEtbGFiZWw9XCJQcmV2aW91cyBzbGlkZVwiPlxuICAgICAgICAgICAgICA8c3ZnPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMS4xNzYgMTEuNTMyYS41LjUgMCAwMC0uMzUyLjkzNmM1LjIyOCAxLjk2IDkuNDc1IDUuNTU1IDEyLjc1MiAxMC43OTdhLjUuNSAwIDAwLjg0OC0uNTNjLTMuMzktNS40MjQtNy44MS05LjE2My0xMy4yNDgtMTEuMjAzelwiPlxuICAgICAgICAgICAgICAgIDwvcGF0aD5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTEuMTc2IDEyLjQ2OGEuNS41IDAgMDEtLjM1Mi0uOTM2QzYuMDUyIDkuNTcyIDEwLjMgNS45NzggMTMuNTc2LjczNWEuNS41IDAgMDEuODQ4LjUzYy0zLjM5IDUuNDI0LTcuODEgOS4xNjMtMTMuMjQ4IDExLjIwM3pcIj5cbiAgICAgICAgICAgICAgICA8L3BhdGg+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xIDEyLjVhLjUuNSAwIDExMC0xaDUzYS41LjUgMCAxMTAgMUgxelwiPjwvcGF0aD5cbiAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic2xpZGVzLW5hdl9fYnV0dG9uIHNsaWRlcy1uYXZfX2J1dHRvbi0tbmV4dFwiIGFyaWEtbGFiZWw9XCJOZXh0IHNsaWRlXCI+XG4gICAgICAgICAgICAgIDxzdmc+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk01My44MjQgMTEuNTMyYS41LjUgMCAwMS4zNTIuOTM2Yy01LjIyOCAxLjk2LTkuNDc1IDUuNTU1LTEyLjc1MiAxMC43OTdhLjUuNSAwIDAxLS44NDgtLjUzYzMuMzktNS40MjQgNy44MS05LjE2MyAxMy4yNDgtMTEuMjAzelwiPlxuICAgICAgICAgICAgICAgIDwvcGF0aD5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTUzLjgyNCAxMi40NjhhLjUuNSAwIDAwLjM1Mi0uOTM2QzQ4Ljk0OCA5LjU3MiA0NC43IDUuOTc4IDQxLjQyNC43MzVhLjUuNSAwIDAwLS44NDguNTNjMy4zOSA1LjQyNCA3LjgxIDkuMTYzIDEzLjI0OCAxMS4yMDN6XCI+XG4gICAgICAgICAgICAgICAgPC9wYXRoPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNNTQgMTIuNWEuNS41IDAgMTAwLTFIMWEuNS41IDAgMTAwIDFoNTN6XCI+PC9wYXRoPlxuICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2xpZGVzLW5hdl9faW5kZXhcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNsaWRlcy1uYXZfX2luZGV4LWN1cnJlbnRcIj48c3Bhbj4xPC9zcGFuPjwvc3Bhbj5cbiAgICAgICAgICAgICZtZGFzaDtcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNsaWRlcy1uYXZfX2luZGV4LXRvdGFsXCI+NTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uYXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2xpZGVzaG93XCI+XG4gICAgICAgIHtcbiAgICAgICAgICBkYXRhLm1hcCgoaXRlbSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxmaWd1cmUgY2xhc3NOYW1lPXtgc2xpZGUgJHtpbmRleCA9PT0gMCA/ICdzbGlkZS0tY3VycmVudCcgOiAnJ31gfSBrZXk9e2l0ZW0uaWR9PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNsaWRlX19pbWctd3JhcFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2xpZGVfX2ltZyBiZy1pbWdcIiBkYXRhLWJhY2tncm91bmQ9e2l0ZW0uYmFja2dyb3VuZH0+PC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZmlnY2FwdGlvbiBjbGFzc05hbWU9XCJzbGlkZV9fY2FwdGlvblwiPlxuICAgICAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJzbGlkZXNfX2NhcHRpb24taGVhZGxpbmVcIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtcm93IHN1Yi10aXRsZSBtYi0xNVwiPjxzcGFuPsKpIHtpdGVtLnllYXJ9IHtpdGVtLnR5cGV9PC9zcGFuPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtcm93XCI+PHNwYW4+e2l0ZW0udGl0bGV9PC9zcGFuPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAgICAgIDxMaW5rIGNsYXNzTmFtZT1cInNsaWRlc19fY2FwdGlvbi1saW5rIHN1Yi10aXRsZSBtdC0zMFwiIGhyZWY9XCIvZGFyay9wcm9qZWN0LWRldGFpbHMxXCI+PHNwYW4+RXhwbG9yZTwvc3Bhbj48L0xpbms+XG4gICAgICAgICAgICAgIDwvZmlnY2FwdGlvbj5cbiAgICAgICAgICAgIDwvZmlndXJlPlxuICAgICAgICAgICkpXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgIDwvc2VjdGlvbj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBGcmFtZVNsaWRlciJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsIkxpbmsiLCJsb2FkQmFja2dyb3VkSW1hZ2VzIiwiZGF0YSIsIkZyYW1lU2xpZGVyIiwibGlnaHRNb2RlIiwic2VjdGlvbiIsImNsYXNzTmFtZSIsImRpdiIsIm5hdiIsImJ1dHRvbiIsImFyaWEtbGFiZWwiLCJzdmciLCJwYXRoIiwiZCIsInNwYW4iLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJmaWd1cmUiLCJkYXRhLWJhY2tncm91bmQiLCJiYWNrZ3JvdW5kIiwiZmlnY2FwdGlvbiIsImgxIiwieWVhciIsInR5cGUiLCJ0aXRsZSIsImhyZWYiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Showcases/CircleSlider/index.jsx\n"));

/***/ }),

/***/ "./src/components/Showcases/Menu.jsx":
/*!*******************************************!*\
  !*** ./src/components/Showcases/Menu.jsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction Menu(param) {\n    let { lightMode  } = param;\n    function handleMouseEnter(event) {\n        document.querySelectorAll(\"ul.main-menu li\").forEach((item)=>{\n            item.classList.add(\"hoverd\");\n        });\n        event.currentTarget.classList.remove(\"hoverd\");\n    }\n    function handleMouseLeave() {\n        document.querySelectorAll(\"ul.main-menu li\").forEach((item)=>item.classList.remove(\"hoverd\"));\n    }\n    function toggleSubMenu(event) {\n        const subMenu = event.currentTarget.querySelector(\".sub-menu\");\n        if (subMenu) {\n            if (subMenu.classList.contains(\"sub-open\")) {\n                document.querySelectorAll(\".sub-menu\").forEach((item)=>{\n                    item.classList.remove(\"sub-open\");\n                    item.style.maxHeight = \"0\";\n                    item.previousElementSibling.children[0].classList.remove(\"dopen\");\n                });\n                subMenu.classList.remove(\"sub-open\");\n                subMenu.style.maxHeight = \"0\";\n                subMenu.previousElementSibling.children[0].classList.remove(\"dopen\");\n            } else if (!subMenu.classList.contains(\"sub-open\")) {\n                document.querySelectorAll(\".sub-menu\").forEach((item)=>{\n                    item.classList.remove(\"sub-open\");\n                    item.style.maxHeight = \"0\";\n                    item.previousElementSibling.children[0].classList.remove(\"dopen\");\n                });\n                subMenu.classList.add(\"sub-open\");\n                subMenu.style.maxHeight = \"400px\";\n                subMenu.previousElementSibling.children[0].classList.add(\"dopen\");\n            }\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"hamenu\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"row\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-lg-2\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"menu-text\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    children: \"Menu\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                    lineNumber: 48,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                lineNumber: 47,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                            lineNumber: 46,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                        lineNumber: 45,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-lg-7\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"menu-links\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: \"main-menu rest\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        onClick: toggleSubMenu,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"o-hidden\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"link cursor-pointer dmenu\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"fill-text\",\n                                                            \"data-text\": \"Home\",\n                                                            children: \"Home\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 57,\n                                                            columnNumber: 64\n                                                        }, this),\n                                                        \" \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 57,\n                                                            columnNumber: 121\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 57,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 56,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"sub-menu\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-corporate\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Home Corporate\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 62,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 61,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-onepage\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Home One page\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 65,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 64,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-digital-agency\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Digital Agency\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 68,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 67,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-freelancer\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Freelancer\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 71,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 70,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-marketing-agency\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Marketing Agency\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 74,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 73,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-creative-agency\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Creative Agency\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 77,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 76,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-startup\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Startup Bussines\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 80,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 79,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/home-architecture\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Architecture\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 83,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 82,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 60,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 59,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 55,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"o-hidden\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/page-about\"),\n                                                className: \"link\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"fill-text\",\n                                                    \"data-text\": \"About Us\",\n                                                    children: \"About Us\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 90,\n                                                    columnNumber: 97\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 90,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 89,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 88,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        onClick: toggleSubMenu,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"o-hidden\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"link cursor-pointer dmenu\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"fill-text\",\n                                                            \"data-text\": \"Pages\",\n                                                            children: \"Pages\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 95,\n                                                            columnNumber: 64\n                                                        }, this),\n                                                        \" \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 95,\n                                                            columnNumber: 123\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 95,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 94,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"sub-menu\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/page-services\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Services\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 101,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 100,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/page-team\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Our Team\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 104,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 103,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/page-contact\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Contact Us\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 107,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 106,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 99,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 98,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 93,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        onClick: toggleSubMenu,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"o-hidden\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"link cursor-pointer dmenu\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"fill-text\",\n                                                            \"data-text\": \"Showcases\",\n                                                            children: \"Showcases\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 114,\n                                                            columnNumber: 64\n                                                        }, this),\n                                                        \" \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 114,\n                                                            columnNumber: 131\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 114,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 113,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"sub-menu\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-parallax-slider\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Parallax Slider\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 120,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 119,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-frame-slider\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Frame Slider\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 123,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 122,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-circle-slider\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Circle Slider\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 126,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 125,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-carousel\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Showcase Carousel\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 129,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 128,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-interactive-center-horizontal\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Interactive Links1\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 132,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 131,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-interactive-center\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Interactive Links2\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 135,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 134,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/showcase-parallax\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Vertical Parallax\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 138,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 137,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 118,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 117,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 112,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        onClick: toggleSubMenu,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"o-hidden\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"link cursor-pointer dmenu\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"fill-text\",\n                                                            \"data-text\": \"Portfolio\",\n                                                            children: \"Portfolio\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 145,\n                                                            columnNumber: 64\n                                                        }, this),\n                                                        \" \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 145,\n                                                            columnNumber: 131\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 145,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 144,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"sub-menu\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/portfolio-classic-grid\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Classic Grid\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 151,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 150,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/portfolio-grid\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Modern Grid\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 154,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 153,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/portfolio-metro\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Portfolio Metro\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 157,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 156,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/project-details1\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Project Details 1\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 160,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 159,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/project-details2\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Project Details 2\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 163,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 162,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 149,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 148,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 143,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        onClick: toggleSubMenu,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"o-hidden\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"link cursor-pointer dmenu\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"fill-text\",\n                                                            \"data-text\": \"Blogs\",\n                                                            children: \"Blogs\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 170,\n                                                            columnNumber: 64\n                                                        }, this),\n                                                        \" \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 170,\n                                                            columnNumber: 123\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 170,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 169,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"sub-menu\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/blog-classic\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Blog Standerd\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 176,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 175,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/blog-list\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Blog List\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 179,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 178,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/blog-half-img\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Image Out Frame\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 182,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 181,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/blog-details\"),\n                                                                className: \"sub-link\",\n                                                                children: \"Blog Details\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                                lineNumber: 185,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                            lineNumber: 184,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 174,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 173,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 168,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        onMouseEnter: handleMouseEnter,\n                                        onMouseLeave: handleMouseLeave,\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"o-hidden\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                href: \"/\".concat(lightMode ? \"light\" : \"dark\", \"/page-contact\"),\n                                                className: \"link\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"fill-text\",\n                                                    \"data-text\": \"Contact\",\n                                                    children: \"Contact\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 192,\n                                                    columnNumber: 99\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 192,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 191,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 190,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                lineNumber: 54,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                            lineNumber: 53,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                        lineNumber: 52,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-lg-3 d-flex align-items-end\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"cont-info full-width\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"item\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                            className: \"mb-15\",\n                                            children: \"Get In Touch\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 201,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: \"541 Melville Geek, Palo Alto, CA 94301\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 202,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"underline main-color mt-5 mb-5\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                href: \"#0\",\n                                                children: \"+1 840 841 25 69\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 203,\n                                                columnNumber: 63\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 203,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                href: \"#0\",\n                                                children: \"GeekFolio_website@gmail.com\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 204,\n                                                columnNumber: 20\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 204,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                    lineNumber: 200,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"search-form\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"form-group\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"text\",\n                                                name: \"search\",\n                                                placeholder: \"Search\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 208,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"pe-7s-search\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 209,\n                                                    columnNumber: 27\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 209,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                        lineNumber: 207,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                    lineNumber: 206,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                    className: \"rest social-text d-flex mt-50 fz-13\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            className: \"mr-20\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                href: \"#0\",\n                                                className: \"hover-this\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"hover-anim\",\n                                                    children: \"Facebook\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 214,\n                                                    columnNumber: 55\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 214,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 213,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            className: \"mr-20\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                href: \"#0\",\n                                                className: \"hover-this\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"hover-anim\",\n                                                    children: \"Twitter\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 217,\n                                                    columnNumber: 55\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 217,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 216,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            className: \"mr-20\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                href: \"#0\",\n                                                className: \"hover-this\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"hover-anim\",\n                                                    children: \"LinkedIn\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 220,\n                                                    columnNumber: 55\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 220,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 219,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                href: \"#0\",\n                                                className: \"hover-this\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"hover-anim\",\n                                                    children: \"Instagram\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                    lineNumber: 223,\n                                                    columnNumber: 55\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                                lineNumber: 223,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                            lineNumber: 222,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                                    lineNumber: 212,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                            lineNumber: 199,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                        lineNumber: 198,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n                lineNumber: 44,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n            lineNumber: 43,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Menu.jsx\",\n        lineNumber: 42,\n        columnNumber: 5\n    }, this);\n}\n_c = Menu;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Menu);\nvar _c;\n$RefreshReg$(_c, \"Menu\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Showcases/Menu.jsx\n"));

/***/ }),

/***/ "./src/components/Showcases/Navigation.jsx":
/*!*************************************************!*\
  !*** ./src/components/Showcases/Navigation.jsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction Navigation(param) {\n    let { lightMode , alwaysDark , darkOnScroll  } = param;\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (darkOnScroll) {\n            let nav = document.querySelector(\"#navi\");\n            window.addEventListener(\"scroll\", ()=>{\n                if (window.scrollY > 500) {\n                    nav.className = \"topnav dark change nav-scroll\";\n                    nav.querySelector(\"img\").src = \"/dark/assets/imgs/logo-dark.png\";\n                } else {\n                    nav.className = \"topnav\";\n                    nav.querySelector(\"img\").src = \"/dark/assets/imgs/logo-light.png\";\n                }\n            });\n        }\n    }, [\n        darkOnScroll\n    ]);\n    function toggleMenu(event) {\n        let menu = document.querySelector(\".hamenu\");\n        let nav = document.querySelector(\"#navi\");\n        if (event.currentTarget.classList.contains(\"open\")) {\n            event.currentTarget.classList.remove(\"open\");\n            menu === null || menu === void 0 ? void 0 : menu.classList.remove(\"open\");\n            menu.style.left = \"-100%\";\n            if (lightMode && !alwaysDark) {\n                nav.classList.remove(\"navlit\");\n                nav.querySelector(\"img\").src = \"/dark/assets/imgs/logo-light.png\";\n            }\n        } else {\n            event.currentTarget.classList.add(\"open\");\n            menu === null || menu === void 0 ? void 0 : menu.classList.add(\"open\");\n            menu.style.left = 0;\n            if (lightMode && !alwaysDark) {\n                nav.classList.add(\"navlit\");\n                nav.querySelector(\"img\").src = \"/dark/assets/imgs/logo-dark.png\";\n            }\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"navi\",\n        className: \"topnav \".concat(alwaysDark && \"navlit\"),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"logo icon-img-120\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                        href: \"#\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            src: \"/dark/assets/imgs/logo-\".concat(alwaysDark ? \"dark\" : \"light\", \".png\"),\n                            alt: \"\"\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                            lineNumber: 46,\n                            columnNumber: 23\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                        lineNumber: 46,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                    lineNumber: 45,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"menu-icon cursor-pointer\",\n                    onClick: toggleMenu,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"icon\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                                    lineNumber: 49,\n                                    columnNumber: 34\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {}, void 0, false, {\n                                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                                    lineNumber: 49,\n                                    columnNumber: 41\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                            lineNumber: 49,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"word\",\n                                children: \"Menu\"\n                            }, void 0, false, {\n                                fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                                lineNumber: 50,\n                                columnNumber: 34\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                            lineNumber: 50,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n                    lineNumber: 48,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n            lineNumber: 44,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/components/Showcases/Navigation.jsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, this);\n}\n_s(Navigation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Navigation;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Navigation);\nvar _c;\n$RefreshReg$(_c, \"Navigation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9TaG93Y2FzZXMvTmF2aWdhdGlvbi5qc3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUV6QyxTQUFTRSxXQUFXLEtBQXVDLEVBQUU7UUFBekMsRUFBRUMsVUFBUyxFQUFFQyxXQUFVLEVBQUVDLGFBQVksRUFBRSxHQUF2Qzs7SUFDbEJKLGdEQUFTQSxDQUFDLElBQU07UUFDZCxJQUFJSSxjQUFjO1lBQ2hCLElBQUlDLE1BQU1DLFNBQVNDLGFBQWEsQ0FBQztZQUNqQ0MsT0FBT0MsZ0JBQWdCLENBQUMsVUFBVSxJQUFNO2dCQUN0QyxJQUFJRCxPQUFPRSxPQUFPLEdBQUcsS0FBSztvQkFDeEJMLElBQUlNLFNBQVMsR0FBRztvQkFDaEJOLElBQUlFLGFBQWEsQ0FBQyxPQUFPSyxHQUFHLEdBQUc7Z0JBQ2pDLE9BQU87b0JBQ0xQLElBQUlNLFNBQVMsR0FBRztvQkFDaEJOLElBQUlFLGFBQWEsQ0FBQyxPQUFPSyxHQUFHLEdBQUc7Z0JBQ2pDLENBQUM7WUFDSDtRQUNGLENBQUM7SUFDSCxHQUFHO1FBQUNSO0tBQWE7SUFFakIsU0FBU1MsV0FBV0MsS0FBSyxFQUFFO1FBQ3pCLElBQUlDLE9BQU9ULFNBQVNDLGFBQWEsQ0FBQztRQUNsQyxJQUFJRixNQUFNQyxTQUFTQyxhQUFhLENBQUM7UUFFakMsSUFBSU8sTUFBTUUsYUFBYSxDQUFDQyxTQUFTLENBQUNDLFFBQVEsQ0FBQyxTQUFTO1lBQ2xESixNQUFNRSxhQUFhLENBQUNDLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDO1lBQ3JDSixpQkFBQUEsa0JBQUFBLEtBQUFBLElBQUFBLEtBQU1FLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLE9BQU87WUFDOUJKLEtBQUtLLEtBQUssQ0FBQ0MsSUFBSSxHQUFJO1lBQ25CLElBQUluQixhQUFhLENBQUNDLFlBQVk7Z0JBQzVCRSxJQUFJWSxTQUFTLENBQUNFLE1BQU0sQ0FBQztnQkFDckJkLElBQUlFLGFBQWEsQ0FBQyxPQUFPSyxHQUFHLEdBQUc7WUFDakMsQ0FBQztRQUNILE9BQU87WUFDTEUsTUFBTUUsYUFBYSxDQUFDQyxTQUFTLENBQUNLLEdBQUcsQ0FBQztZQUNsQ1AsaUJBQUFBLGtCQUFBQSxLQUFBQSxJQUFBQSxLQUFNRSxTQUFTLENBQUNLLEdBQUcsQ0FBQyxPQUFPO1lBQzNCUCxLQUFLSyxLQUFLLENBQUNDLElBQUksR0FBRztZQUNsQixJQUFJbkIsYUFBYSxDQUFDQyxZQUFZO2dCQUM1QkUsSUFBSVksU0FBUyxDQUFDSyxHQUFHLENBQUM7Z0JBQ2xCakIsSUFBSUUsYUFBYSxDQUFDLE9BQU9LLEdBQUcsR0FBRztZQUNqQyxDQUFDO1FBQ0gsQ0FBQztJQUNIO0lBRUEscUJBQ0UsOERBQUNXO1FBQUlDLElBQUc7UUFBT2IsV0FBVyxVQUFpQyxPQUF2QlIsY0FBYztrQkFDaEQsNEVBQUNvQjtZQUFJWixXQUFVOzs4QkFDYiw4REFBQ1k7b0JBQUlaLFdBQVU7OEJBQ2IsNEVBQUNjO3dCQUFFQyxNQUFLO2tDQUFJLDRFQUFDQzs0QkFBSWYsS0FBSywwQkFBd0QsT0FBOUJULGFBQWEsU0FBUyxPQUFPLEVBQUM7NEJBQU95QixLQUFJOzs7Ozs7Ozs7Ozs7Ozs7OzhCQUUzRiw4REFBQ0w7b0JBQUlaLFdBQVU7b0JBQTJCa0IsU0FBU2hCOztzQ0FDakQsOERBQUNpQjs0QkFBS25CLFdBQVU7OzhDQUFPLDhEQUFDb0I7Ozs7OzhDQUFNLDhEQUFDQTs7Ozs7Ozs7Ozs7c0NBQy9CLDhEQUFDRDs0QkFBS25CLFdBQVU7c0NBQU8sNEVBQUNtQjtnQ0FBS25CLFdBQVU7MENBQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLeEQ7R0FwRFNWO0tBQUFBO0FBc0RULCtEQUFlQSxVQUFVQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL1Nob3djYXNlcy9OYXZpZ2F0aW9uLmpzeD9iY2VmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIE5hdmlnYXRpb24oeyBsaWdodE1vZGUsIGFsd2F5c0RhcmssIGRhcmtPblNjcm9sbCB9KSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGRhcmtPblNjcm9sbCkge1xuICAgICAgbGV0IG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYXZpJyk7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICBpZiAod2luZG93LnNjcm9sbFkgPiA1MDApIHtcbiAgICAgICAgICBuYXYuY2xhc3NOYW1lID0gXCJ0b3BuYXYgZGFyayBjaGFuZ2UgbmF2LXNjcm9sbFwiO1xuICAgICAgICAgIG5hdi5xdWVyeVNlbGVjdG9yKCdpbWcnKS5zcmMgPSBcIi9kYXJrL2Fzc2V0cy9pbWdzL2xvZ28tZGFyay5wbmdcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuYXYuY2xhc3NOYW1lID0gXCJ0b3BuYXZcIjtcbiAgICAgICAgICBuYXYucXVlcnlTZWxlY3RvcignaW1nJykuc3JjID0gXCIvZGFyay9hc3NldHMvaW1ncy9sb2dvLWxpZ2h0LnBuZ1wiO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfSwgW2RhcmtPblNjcm9sbF0pO1xuXG4gIGZ1bmN0aW9uIHRvZ2dsZU1lbnUoZXZlbnQpIHtcbiAgICBsZXQgbWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oYW1lbnUnKTtcbiAgICBsZXQgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25hdmknKTtcblxuICAgIGlmIChldmVudC5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnb3BlbicpKSB7XG4gICAgICBldmVudC5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ29wZW4nKVxuICAgICAgbWVudT8uY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpO1xuICAgICAgbWVudS5zdHlsZS5sZWZ0ID0gYC0xMDAlYDtcbiAgICAgIGlmIChsaWdodE1vZGUgJiYgIWFsd2F5c0RhcmspIHtcbiAgICAgICAgbmF2LmNsYXNzTGlzdC5yZW1vdmUoJ25hdmxpdCcpO1xuICAgICAgICBuYXYucXVlcnlTZWxlY3RvcignaW1nJykuc3JjID0gXCIvZGFyay9hc3NldHMvaW1ncy9sb2dvLWxpZ2h0LnBuZ1wiO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBldmVudC5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ29wZW4nKVxuICAgICAgbWVudT8uY2xhc3NMaXN0LmFkZCgnb3BlbicpO1xuICAgICAgbWVudS5zdHlsZS5sZWZ0ID0gMDtcbiAgICAgIGlmIChsaWdodE1vZGUgJiYgIWFsd2F5c0RhcmspIHtcbiAgICAgICAgbmF2LmNsYXNzTGlzdC5hZGQoJ25hdmxpdCcpO1xuICAgICAgICBuYXYucXVlcnlTZWxlY3RvcignaW1nJykuc3JjID0gXCIvZGFyay9hc3NldHMvaW1ncy9sb2dvLWRhcmsucG5nXCI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGlkPVwibmF2aVwiIGNsYXNzTmFtZT17YHRvcG5hdiAke2Fsd2F5c0RhcmsgJiYgJ25hdmxpdCd9YH0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvZ28gaWNvbi1pbWctMTIwXCI+XG4gICAgICAgICAgPGEgaHJlZj1cIiNcIj48aW1nIHNyYz17YC9kYXJrL2Fzc2V0cy9pbWdzL2xvZ28tJHthbHdheXNEYXJrID8gJ2RhcmsnIDogJ2xpZ2h0J30ucG5nYH0gYWx0PVwiXCIgLz48L2E+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnUtaWNvbiBjdXJzb3ItcG9pbnRlclwiIG9uQ2xpY2s9e3RvZ2dsZU1lbnV9PlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIj48aT48L2k+PGk+PC9pPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0XCI+PHNwYW4gY2xhc3NOYW1lPVwid29yZFwiPk1lbnU8L3NwYW4+PC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IE5hdmlnYXRpb24iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJOYXZpZ2F0aW9uIiwibGlnaHRNb2RlIiwiYWx3YXlzRGFyayIsImRhcmtPblNjcm9sbCIsIm5hdiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJzY3JvbGxZIiwiY2xhc3NOYW1lIiwic3JjIiwidG9nZ2xlTWVudSIsImV2ZW50IiwibWVudSIsImN1cnJlbnRUYXJnZXQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInJlbW92ZSIsInN0eWxlIiwibGVmdCIsImFkZCIsImRpdiIsImlkIiwiYSIsImhyZWYiLCJpbWciLCJhbHQiLCJvbkNsaWNrIiwic3BhbiIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Showcases/Navigation.jsx\n"));

/***/ }),

/***/ "./src/layouts/showcases.jsx":
/*!***********************************!*\
  !*** ./src/layouts/showcases.jsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _common_correctStylesheetsOrder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/common/correctStylesheetsOrder */ \"./src/common/correctStylesheetsOrder.js\");\n/* harmony import */ var _components_Common_Loader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/Common/Loader */ \"./src/components/Common/Loader.jsx\");\n/* harmony import */ var _components_Common_Cursor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/Common/Cursor */ \"./src/components/Common/Cursor.jsx\");\n/* harmony import */ var _components_Common_ProgressScroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/Common/ProgressScroll */ \"./src/components/Common/ProgressScroll.jsx\");\n\nvar _s = $RefreshSig$();\n\n//= Packages\n\n//= Scripts\n\n//= Components\n\n\n\nconst DefaultLayout = (param)=>{\n    let { children , lightMode  } = param;\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (0,_common_correctStylesheetsOrder__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            lightMode\n        });\n    }, [\n        lightMode\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: lightMode ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"stylesheet\",\n                            href: \"/light/assets/css/plugins.css\"\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                            lineNumber: 22,\n                            columnNumber: 15\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"stylesheet\",\n                            href: \"/light/assets/css/style.css\"\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                            lineNumber: 23,\n                            columnNumber: 15\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"stylesheet\",\n                            href: \"/light/showcase/assets/css/showcases.css\"\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                            lineNumber: 24,\n                            columnNumber: 15\n                        }, undefined)\n                    ]\n                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"stylesheet\",\n                            href: \"/dark/assets/css/base.css\"\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                            lineNumber: 28,\n                            columnNumber: 15\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"stylesheet\",\n                            href: \"/dark/showcase/assets/css/showcases.css\"\n                        }, void 0, false, {\n                            fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                            lineNumber: 29,\n                            columnNumber: 15\n                        }, undefined)\n                    ]\n                }, void 0, true)\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Common_Loader__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                lineNumber: 34,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Common_Cursor__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                lineNumber: 35,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Common_ProgressScroll__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/layouts/showcases.jsx\",\n                lineNumber: 36,\n                columnNumber: 7\n            }, undefined),\n            children\n        ]\n    }, void 0, true);\n};\n_s(DefaultLayout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DefaultLayout;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DefaultLayout);\nvar _c;\n$RefreshReg$(_c, \"DefaultLayout\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGF5b3V0cy9zaG93Y2FzZXMuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBeUM7QUFDekMsWUFBWTtBQUNpQjtBQUM3QixXQUFXO0FBQzREO0FBQ3ZFLGNBQWM7QUFDa0M7QUFDQTtBQUNnQjtBQUVoRSxNQUFNTyxnQkFBZ0IsU0FBNkI7UUFBNUIsRUFBRUMsU0FBUSxFQUFFQyxVQUFTLEVBQUU7O0lBQzVDUixnREFBU0EsQ0FBQyxJQUFNO1FBQ2RFLDJFQUF1QkEsQ0FBQztZQUFFTTtRQUFVO0lBQ3RDLEdBQUc7UUFBQ0E7S0FBVTtJQUVkLHFCQUNFOzswQkFDRSw4REFBQ1Asa0RBQUlBOzBCQUVETywwQkFDRTs7c0NBQ0UsOERBQUNDOzRCQUFLQyxLQUFJOzRCQUFhQyxNQUFLOzs7Ozs7c0NBQzVCLDhEQUFDRjs0QkFBS0MsS0FBSTs0QkFBYUMsTUFBSzs7Ozs7O3NDQUM1Qiw4REFBQ0Y7NEJBQUtDLEtBQUk7NEJBQWFDLE1BQUs7Ozs7Ozs7aURBRzlCOztzQ0FDRSw4REFBQ0Y7NEJBQUtDLEtBQUk7NEJBQWFDLE1BQUs7Ozs7OztzQ0FDNUIsOERBQUNGOzRCQUFLQyxLQUFJOzRCQUFhQyxNQUFLOzs7Ozs7O2dDQUMzQjs7Ozs7OzBCQUlULDhEQUFDUixpRUFBTUE7Ozs7OzBCQUNQLDhEQUFDQyxpRUFBTUE7Ozs7OzBCQUNQLDhEQUFDQyx5RUFBY0E7Ozs7O1lBQ2RFOzs7QUFHUDtHQTdCTUQ7S0FBQUE7QUErQk4sK0RBQWVBLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xheW91dHMvc2hvd2Nhc2VzLmpzeD8yNDYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG4vLz0gUGFja2FnZXNcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbi8vPSBTY3JpcHRzXG5pbXBvcnQgY29ycmVjdFN0eWxlc2hlZXRzT3JkZXIgZnJvbSAnQC9jb21tb24vY29ycmVjdFN0eWxlc2hlZXRzT3JkZXInO1xuLy89IENvbXBvbmVudHNcbmltcG9ydCBMb2FkZXIgZnJvbSAnQC9jb21wb25lbnRzL0NvbW1vbi9Mb2FkZXInO1xuaW1wb3J0IEN1cnNvciBmcm9tICdAL2NvbXBvbmVudHMvQ29tbW9uL0N1cnNvcic7XG5pbXBvcnQgUHJvZ3Jlc3NTY3JvbGwgZnJvbSAnQC9jb21wb25lbnRzL0NvbW1vbi9Qcm9ncmVzc1Njcm9sbCc7XG5cbmNvbnN0IERlZmF1bHRMYXlvdXQgPSAoeyBjaGlsZHJlbiwgbGlnaHRNb2RlIH0pID0+IHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb3JyZWN0U3R5bGVzaGVldHNPcmRlcih7IGxpZ2h0TW9kZSB9KTtcbiAgfSwgW2xpZ2h0TW9kZV0pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICB7XG4gICAgICAgICAgbGlnaHRNb2RlID9cbiAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiL2xpZ2h0L2Fzc2V0cy9jc3MvcGx1Z2lucy5jc3NcIiAvPlxuICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cIi9saWdodC9hc3NldHMvY3NzL3N0eWxlLmNzc1wiIC8+XG4gICAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiL2xpZ2h0L3Nob3djYXNlL2Fzc2V0cy9jc3Mvc2hvd2Nhc2VzLmNzc1wiIC8+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIDpcbiAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiL2RhcmsvYXNzZXRzL2Nzcy9iYXNlLmNzc1wiIC8+XG4gICAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiL2Rhcmsvc2hvd2Nhc2UvYXNzZXRzL2Nzcy9zaG93Y2FzZXMuY3NzXCIgLz5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICB9XG4gICAgICA8L0hlYWQ+XG5cbiAgICAgIDxMb2FkZXIgLz5cbiAgICAgIDxDdXJzb3IgLz5cbiAgICAgIDxQcm9ncmVzc1Njcm9sbCAvPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRGVmYXVsdExheW91dDtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsIkhlYWQiLCJjb3JyZWN0U3R5bGVzaGVldHNPcmRlciIsIkxvYWRlciIsIkN1cnNvciIsIlByb2dyZXNzU2Nyb2xsIiwiRGVmYXVsdExheW91dCIsImNoaWxkcmVuIiwibGlnaHRNb2RlIiwibGluayIsInJlbCIsImhyZWYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/layouts/showcases.jsx\n"));

/***/ }),

/***/ "./src/pages/dark/showcase-circle-slider/index.jsx":
/*!*********************************************************!*\
  !*** ./src/pages/dark/showcase-circle-slider/index.jsx ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _layouts_showcases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/layouts/showcases */ \"./src/layouts/showcases.jsx\");\n/* harmony import */ var _common_marketing_agency_customjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/common/marketing-agency-customjs */ \"./src/common/marketing-agency-customjs.js\");\n/* harmony import */ var _common_showcase_script__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/common/showcase-script */ \"./src/common/showcase-script.js\");\n/* harmony import */ var _common_showcase_script__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_common_showcase_script__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_Common_Loader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/Common/Loader */ \"./src/components/Common/Loader.jsx\");\n/* harmony import */ var _components_Showcases_Navigation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/Showcases/Navigation */ \"./src/components/Showcases/Navigation.jsx\");\n/* harmony import */ var _components_Showcases_Menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/Showcases/Menu */ \"./src/components/Showcases/Menu.jsx\");\n/* harmony import */ var _components_Showcases_CircleSlider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/Showcases/CircleSlider */ \"./src/components/Showcases/CircleSlider/index.jsx\");\n\nvar _s = $RefreshSig$();\n\n//= Packages\n\n//= Layout\n\n//= Scripts\n\n\n//= Components\n\n\n\n\nfunction ShowcaseCircleSlider() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (0,_common_marketing_agency_customjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n        _common_showcase_script__WEBPACK_IMPORTED_MODULE_5___default().showcase1();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                    children: \"Geekfolio - Circle Slider\"\n                }, void 0, false, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                    lineNumber: 25,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Common_Loader__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                lineNumber: 28,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Showcases_Navigation__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                lineNumber: 29,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Showcases_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {}, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                lineNumber: 30,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Showcases_CircleSlider__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                    lineNumber: 32,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(ShowcaseCircleSlider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ShowcaseCircleSlider;\nShowcaseCircleSlider.getLayout = (page)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_layouts_showcases__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        children: page\n    }, void 0, false, {\n        fileName: \"/home/ahmed/Others/Pledge-Grow/src/pages/dark/showcase-circle-slider/index.jsx\",\n        lineNumber: 38,\n        columnNumber: 42\n    }, undefined);\n/* harmony default export */ __webpack_exports__[\"default\"] = (ShowcaseCircleSlider);\nvar _c;\n$RefreshReg$(_c, \"ShowcaseCircleSlider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvZGFyay9zaG93Y2FzZS1jaXJjbGUtc2xpZGVyL2luZGV4LmpzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUN6QyxZQUFZO0FBQ2lCO0FBQzdCLFVBQVU7QUFDK0I7QUFDekMsV0FBVztBQUNtRDtBQUNSO0FBQ3RELGNBQWM7QUFDa0M7QUFDVztBQUNaO0FBQ2dCO0FBRy9ELFNBQVNVLHVCQUF1Qjs7SUFDOUJULGdEQUFTQSxDQUFDLElBQU07UUFDZEcsNkVBQVlBO1FBQ1pDLHdFQUF3QjtJQUMxQixHQUFHLEVBQUU7SUFFTCxxQkFDRTs7MEJBQ0UsOERBQUNILGtEQUFJQTswQkFDSCw0RUFBQ1U7OEJBQU07Ozs7Ozs7Ozs7OzBCQUdULDhEQUFDTixpRUFBTUE7Ozs7OzBCQUNQLDhEQUFDQyx3RUFBVUE7Ozs7OzBCQUNYLDhEQUFDQyxrRUFBSUE7Ozs7OzBCQUNMLDhEQUFDSzswQkFDQyw0RUFBQ0osMEVBQVlBOzs7Ozs7Ozs7Ozs7QUFJckI7R0FwQlNDO0tBQUFBO0FBc0JUQSxxQkFBcUJJLFNBQVMsR0FBR0MsQ0FBQUEscUJBQVEsOERBQUNaLDBEQUFNQTtrQkFBRVk7Ozs7OztBQUVsRCwrREFBZUwsb0JBQW9CQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9kYXJrL3Nob3djYXNlLWNpcmNsZS1zbGlkZXIvaW5kZXguanN4PzBlZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0Jztcbi8vPSBQYWNrYWdlc1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbi8vPSBMYXlvdXRcbmltcG9ydCBMYXlvdXQgZnJvbSAnQC9sYXlvdXRzL3Nob3djYXNlcyc7XG4vLz0gU2NyaXB0c1xuaW1wb3J0IGN1c3RvbVNjcmlwdCBmcm9tICdAL2NvbW1vbi9tYXJrZXRpbmctYWdlbmN5LWN1c3RvbWpzJztcbmltcG9ydCBzaG93Y2FzZVNjcmlwdCBmcm9tICdAL2NvbW1vbi9zaG93Y2FzZS1zY3JpcHQnO1xuLy89IENvbXBvbmVudHNcbmltcG9ydCBMb2FkZXIgZnJvbSAnQC9jb21wb25lbnRzL0NvbW1vbi9Mb2FkZXInO1xuaW1wb3J0IE5hdmlnYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1Nob3djYXNlcy9OYXZpZ2F0aW9uJztcbmltcG9ydCBNZW51IGZyb20gJ0AvY29tcG9uZW50cy9TaG93Y2FzZXMvTWVudSc7XG5pbXBvcnQgQ2lyY2xlU2xpZGVyIGZyb20gJ0AvY29tcG9uZW50cy9TaG93Y2FzZXMvQ2lyY2xlU2xpZGVyJztcblxuXG5mdW5jdGlvbiBTaG93Y2FzZUNpcmNsZVNsaWRlcigpIHtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjdXN0b21TY3JpcHQoKTtcbiAgICBzaG93Y2FzZVNjcmlwdC5zaG93Y2FzZTEoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+R2Vla2ZvbGlvIC0gQ2lyY2xlIFNsaWRlcjwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG5cbiAgICAgIDxMb2FkZXIgLz5cbiAgICAgIDxOYXZpZ2F0aW9uIC8+XG4gICAgICA8TWVudSAvPlxuICAgICAgPG1haW4+XG4gICAgICAgIDxDaXJjbGVTbGlkZXIgLz5cbiAgICAgIDwvbWFpbj5cbiAgICA8Lz5cbiAgKVxufVxuXG5TaG93Y2FzZUNpcmNsZVNsaWRlci5nZXRMYXlvdXQgPSBwYWdlID0+IDxMYXlvdXQ+e3BhZ2V9PC9MYXlvdXQ+XG5cbmV4cG9ydCBkZWZhdWx0IFNob3djYXNlQ2lyY2xlU2xpZGVyOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsIkhlYWQiLCJMYXlvdXQiLCJjdXN0b21TY3JpcHQiLCJzaG93Y2FzZVNjcmlwdCIsIkxvYWRlciIsIk5hdmlnYXRpb24iLCJNZW51IiwiQ2lyY2xlU2xpZGVyIiwiU2hvd2Nhc2VDaXJjbGVTbGlkZXIiLCJzaG93Y2FzZTEiLCJ0aXRsZSIsIm1haW4iLCJnZXRMYXlvdXQiLCJwYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/dark/showcase-circle-slider/index.jsx\n"));

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n"));

/***/ }),

/***/ "./src/common sync recursive":
/*!**************************!*\
  !*** ./src/common/ sync ***!
  \**************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./src/common sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./src/data/Showcases/circle-slider.json":
/*!***********************************************!*\
  !*** ./src/data/Showcases/circle-slider.json ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = JSON.parse('[{"id":1,"background":"/dark/assets/imgs/works/full/1.jpg","year":"2023","type":"Branding","title":"Basket Lamp"},{"id":2,"background":"/dark/assets/imgs/works/full/2.jpg","year":"2023","type":"Branding","title":"Moon Light"},{"id":3,"background":"/dark/assets/imgs/works/full/3.jpg","year":"2023","type":"Branding","title":"Red Glasses"},{"id":4,"background":"/dark/assets/imgs/works/full/4.jpg","year":"2023","type":"Branding","title":"Waffile Maker"},{"id":5,"background":"/dark/assets/imgs/works/full/5.jpg","year":"2023","type":"Branding","title":"Headphone"}]');

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fahmed%2FOthers%2FPledge-Grow%2Fsrc%2Fpages%2Fdark%2Fshowcase-circle-slider%2Findex.jsx&page=%2Fdark%2Fshowcase-circle-slider!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);